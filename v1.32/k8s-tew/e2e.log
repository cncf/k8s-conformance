  I0423 16:08:00.768685      24 e2e.go:109] Starting e2e run "54b79d95-ad8f-4129-9cf0-a3d53b9e2041" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1745424479 - will randomize all specs

Will run 411 of 6625 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0423 16:08:01.044204 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:08:01.045633 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0423 16:08:01.072199 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0423 16:08:01.076544 24 e2e.go:245] e2e test version: v1.32.4
  I0423 16:08:01.078731 24 e2e.go:254] kube-apiserver version: v1.32.4
  I0423 16:08:01.078948 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:08:01.085963 24 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.042 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/23/25 16:08:01.296
  I0423 16:08:01.296950 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename tables @ 04/23/25 16:08:01.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:01.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:01.326
  I0423 16:08:01.337018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8475" for this suite. @ 04/23/25 16:08:01.343
• [0.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/23/25 16:08:01.353
  I0423 16:08:01.353604 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 16:08:01.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:01.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:01.38
  STEP: creating pod @ 04/23/25 16:08:01.387
  I0423 16:08:05.436545 24 pods.go:83] Pod pod-hostip-2d7c0221-ba10-451a-bea2-d2b2360605f6 has hostIP: 192.168.58.100
  I0423 16:08:05.436770 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9461" for this suite. @ 04/23/25 16:08:05.442
• [4.098 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/23/25 16:08:05.452
  I0423 16:08:05.452347 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 16:08:05.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:05.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:05.479
  STEP: getting /apis @ 04/23/25 16:08:05.483
  STEP: getting /apis/discovery.k8s.io @ 04/23/25 16:08:05.491
  STEP: getting /apis/discovery.k8s.iov1 @ 04/23/25 16:08:05.493
  STEP: creating @ 04/23/25 16:08:05.494
  STEP: getting @ 04/23/25 16:08:05.519
  STEP: listing @ 04/23/25 16:08:05.525
  STEP: watching @ 04/23/25 16:08:05.529
  I0423 16:08:05.529203 24 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/23/25 16:08:05.531
  STEP: cluster-wide watching @ 04/23/25 16:08:05.537
  I0423 16:08:05.538029 24 endpointslice.go:459] starting watch
  STEP: patching @ 04/23/25 16:08:05.539
  STEP: updating @ 04/23/25 16:08:05.55
  I0423 16:08:05.568046 24 endpointslice.go:482] waiting for watch events with expected annotations
  I0423 16:08:05.569147 24 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/23/25 16:08:05.57
  STEP: deleting a collection @ 04/23/25 16:08:05.602
  I0423 16:08:05.653142 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8301" for this suite. @ 04/23/25 16:08:05.665
• [0.229 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 04/23/25 16:08:05.681
  I0423 16:08:05.681734 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:08:05.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:05.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:05.727
  I0423 16:08:05.734068 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 create -f -'
  I0423 16:08:05.917312 24 builder.go:146] stderr: ""
  I0423 16:08:05.917467 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0423 16:08:05.917767 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 create -f -'
  I0423 16:08:06.085070 24 builder.go:146] stderr: ""
  I0423 16:08:06.085180 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 16:08:06.085
  I0423 16:08:07.094706 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:07.094767 24 framework.go:733] Found 0 / 1
  I0423 16:08:08.092584 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:08.092656 24 framework.go:733] Found 0 / 1
  I0423 16:08:09.095271 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:09.095362 24 framework.go:733] Found 0 / 1
  I0423 16:08:10.094599 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:10.094637 24 framework.go:733] Found 0 / 1
  I0423 16:08:11.159843 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:11.159941 24 framework.go:733] Found 0 / 1
  I0423 16:08:12.092959 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:12.093040 24 framework.go:733] Found 0 / 1
  I0423 16:08:13.091001 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:13.091061 24 framework.go:733] Found 0 / 1
  I0423 16:08:14.089706 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:14.089757 24 framework.go:733] Found 0 / 1
  I0423 16:08:15.093667 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:15.093721 24 framework.go:733] Found 0 / 1
  I0423 16:08:16.093039 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:16.093101 24 framework.go:733] Found 1 / 1
  I0423 16:08:16.093148 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0423 16:08:16.096544 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:08:16.096595 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 16:08:16.096701 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 describe pod agnhost-primary-qgfcp'
  I0423 16:08:16.300519 24 builder.go:146] stderr: ""
  I0423 16:08:16.300603 24 builder.go:147] stdout: "Name:             agnhost-primary-qgfcp\nNamespace:        kubectl-2892\nPriority:         0\nService Account:  default\nNode:             worker00/192.168.58.100\nStart Time:       Wed, 23 Apr 2025 16:08:05 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 417f81a9e929ace7d10c9b1f18ec1aade1a05af55e1207e37b2472cabf4e3371\n                  cni.projectcalico.org/podIP: 10.200.131.137/32\n                  cni.projectcalico.org/podIPs: 10.200.131.137/32\nStatus:           Running\nIP:               10.200.131.137\nIPs:\n  IP:           10.200.131.137\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4b177b9bfc8bde1e7748fb00e1bcde269ba823adbf3568ae17f452b3ccd464d3\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 23 Apr 2025 16:08:14 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-vx9hq (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-vx9hq:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  11s   default-scheduler  Successfully assigned kubectl-2892/agnhost-primary-qgfcp to worker00\n  Normal  Pulling    10s   kubelet            Pulling image \"registry.k8s.io/e2e-test-images/agnhost:2.53\"\n  Normal  Pulled     2s    kubelet            Successfully pulled image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" in 8.225s (8.225s including waiting). Image size: 54468442 bytes.\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0423 16:08:16.300706 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 describe rc agnhost-primary'
  I0423 16:08:16.434145 24 builder.go:146] stderr: ""
  I0423 16:08:16.434997 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2892\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  11s   replication-controller  Created pod: agnhost-primary-qgfcp\n"
  I0423 16:08:16.435488 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 describe service agnhost-primary'
  I0423 16:08:16.575323 24 builder.go:146] stderr: ""
  I0423 16:08:16.575539 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2892\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.32.0.166\nIPs:                      10.32.0.166\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                10.200.131.137:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0423 16:08:16.581087 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 describe node worker00'
  I0423 16:08:16.921353 24 builder.go:146] stderr: ""
  I0423 16:08:16.922027 24 builder.go:147] stdout: "Name:               worker00\nRoles:              controller,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=worker00\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controller=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        csi.volume.kubernetes.io/nodeid: {\"cephfs.csi.ceph.com\":\"worker00\",\"rbd.csi.ceph.com\":\"worker00\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.58.100/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.200.131.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 23 Apr 2025 16:02:37 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  worker00\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 23 Apr 2025 16:08:10 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 23 Apr 2025 16:05:15 +0000   Wed, 23 Apr 2025 16:05:15 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 23 Apr 2025 16:07:55 +0000   Wed, 23 Apr 2025 16:02:37 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 23 Apr 2025 16:07:55 +0000   Wed, 23 Apr 2025 16:02:37 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 23 Apr 2025 16:07:55 +0000   Wed, 23 Apr 2025 16:02:37 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 23 Apr 2025 16:07:55 +0000   Wed, 23 Apr 2025 16:03:19 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.58.100\n  Hostname:    worker00\nCapacity:\n  cpu:                4\n  ephemeral-storage:  31811408Ki\n  hugepages-2Mi:      0\n  memory:             4007324Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  29317393565\n  hugepages-2Mi:      0\n  memory:             3904924Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 e08faf2d79a54d7fb02ee0bf4d8adf79\n  System UUID:                8e693be2-bd47-f545-a1a2-df7881c98386\n  Boot ID:                    f2ff0604-6cb0-4a7c-88b5-bdbef06c1c4f\n  Kernel Version:             6.8.0-53-generic\n  OS Image:                   Ubuntu 24.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.16\n  Kubelet Version:            v1.30.0\n  Kube-Proxy Version:         v1.30.0\nPodCIDR:                      10.200.0.0/24\nPodCIDRs:                     10.200.0.0/24\nNon-terminated Pods:          (20 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 etcd-worker00                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         4m29s\n  kube-system                 gobetween-worker00                                         100m (2%)     0 (0%)      0 (0%)           0 (0%)         4m58s\n  kube-system                 kube-apiserver-worker00                                    250m (6%)     0 (0%)      0 (0%)           0 (0%)         4m31s\n  kube-system                 kube-controller-manager-worker00                           200m (5%)     0 (0%)      0 (0%)           0 (0%)         4m30s\n  kube-system                 kube-proxy-worker00                                        200m (5%)     0 (0%)      0 (0%)           0 (0%)         5m2s\n  kube-system                 kube-scheduler-worker00                                    100m (2%)     0 (0%)      0 (0%)           0 (0%)         4m46s\n  kube-system                 kubernetes-dashboard-api-75c8cc87b5-4fxwg                  100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    2m19s\n  kube-system                 kubernetes-dashboard-auth-84fdc98ddb-zx76h                 100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    2m19s\n  kube-system                 kubernetes-dashboard-kong-78b4d69466-kqjw2                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m19s\n  kube-system                 kubernetes-dashboard-metrics-scraper-7c444f8fcc-4q8kx      100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    2m19s\n  kube-system                 kubernetes-dashboard-web-79499dd8c4-k6nsh                  100m (2%)     250m (6%)   200Mi (5%)       400Mi (10%)    2m19s\n  kubectl-2892                agnhost-primary-qgfcp                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         11s\n  networking                  calico-node-8wc69                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         5m34s\n  networking                  metallb-speaker-kh5ws                                      100m (2%)     100m (2%)   100Mi (2%)       100Mi (2%)     4m57s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         59s\n  sonobuoy                    sonobuoy-e2e-job-b8c81cda7ba2451f                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         52s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-v6sf4    0 (0%)        0 (0%)      0 (0%)           0 (0%)         52s\n  storage                     ceph-csi-cephfs-nodeplugin-77gpr                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         5m34s\n  storage                     ceph-csi-rbd-nodeplugin-j9g5b                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         5m34s\n  storage                     ceph-mon-worker00-5b7bb47bf6-l8kgc                         0 (0%)        0 (0%)      0 (0%)           0 (0%)         5m34s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1600m (40%)  1100m (27%)\n  memory             900Mi (23%)  1700Mi (44%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type     Reason                   Age                    From             Message\n  ----     ------                   ----                   ----             -------\n  Normal   Starting                 5m26s                  kube-proxy       \n  Warning  InvalidDiskCapacity      6m22s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  6m22s (x8 over 6m22s)  kubelet          Node worker00 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    6m22s (x7 over 6m22s)  kubelet          Node worker00 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     6m22s (x7 over 6m22s)  kubelet          Node worker00 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  6m22s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   RegisteredNode           5m35s                  node-controller  Node worker00 event: Registered Node worker00 in Controller\n"
  I0423 16:08:16.922297 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2892 describe namespace kubectl-2892'
  I0423 16:08:17.056558 24 builder.go:146] stderr: ""
  I0423 16:08:17.056636 24 builder.go:147] stdout: "Name:         kubectl-2892\nLabels:       e2e-framework=kubectl\n              e2e-run=54b79d95-ad8f-4129-9cf0-a3d53b9e2041\n              kubernetes.io/metadata.name=kubectl-2892\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0423 16:08:17.056815 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2892" for this suite. @ 04/23/25 16:08:17.064
• [11.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/23/25 16:08:17.075
  I0423 16:08:17.075376 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:08:17.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:17.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:17.108
  STEP: Creating configMap with name configmap-test-volume-2a608728-7c05-4ff0-a3e7-ff173258d33a @ 04/23/25 16:08:17.112
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:08:17.119
  STEP: Saw pod success @ 04/23/25 16:08:21.187
  I0423 16:08:21.191703 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-425123da-e1ff-4685-a6ac-5c6bb50918ff container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:08:21.227
  I0423 16:08:21.259089 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4" for this suite. @ 04/23/25 16:08:21.269
• [4.210 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/23/25 16:08:21.287
  I0423 16:08:21.287083 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 16:08:21.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:21.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:21.316
  STEP: creating the pod @ 04/23/25 16:08:21.322
  STEP: submitting the pod to kubernetes @ 04/23/25 16:08:21.323
  STEP: verifying QOS class is set on the pod @ 04/23/25 16:08:21.339
  I0423 16:08:21.362461 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8760" for this suite. @ 04/23/25 16:08:21.376
• [0.127 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/23/25 16:08:21.414
  I0423 16:08:21.414684 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:08:21.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:21.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:21.453
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/23/25 16:08:21.463
  STEP: Saw pod success @ 04/23/25 16:08:25.5
  I0423 16:08:25.504599 24 output.go:207] Trying to get logs from node worker00 pod pod-e26f7199-81be-48f2-9f2b-75f43d29de91 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:08:25.513
  I0423 16:08:25.550428 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8031" for this suite. @ 04/23/25 16:08:25.557
• [4.153 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/23/25 16:08:25.567
  I0423 16:08:25.567776 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:08:25.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:25.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:25.598
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/23/25 16:08:25.604
  STEP: Saw pod success @ 04/23/25 16:08:29.645
  I0423 16:08:29.651614 24 output.go:207] Trying to get logs from node worker00 pod pod-4d87f736-c13a-46c0-8726-28932af4f973 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:08:29.659
  I0423 16:08:29.694740 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9965" for this suite. @ 04/23/25 16:08:29.702
• [4.149 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 04/23/25 16:08:29.716
  I0423 16:08:29.716964 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 16:08:29.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:29.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:29.767
  I0423 16:08:29.779217 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 16:08:31.455
  I0423 16:08:31.455802 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-4557 --namespace=crd-publish-openapi-4557 create -f -'
  I0423 16:08:31.654961 24 builder.go:146] stderr: ""
  I0423 16:08:31.655081 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9690-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0423 16:08:31.655220 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-4557 --namespace=crd-publish-openapi-4557 delete e2e-test-crd-publish-openapi-9690-crds test-cr'
  I0423 16:08:31.759401 24 builder.go:146] stderr: ""
  I0423 16:08:31.759488 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9690-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0423 16:08:31.759538 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-4557 --namespace=crd-publish-openapi-4557 apply -f -'
  I0423 16:08:31.849583 24 builder.go:146] stderr: ""
  I0423 16:08:31.849669 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9690-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0423 16:08:31.849738 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-4557 --namespace=crd-publish-openapi-4557 delete e2e-test-crd-publish-openapi-9690-crds test-cr'
  I0423 16:08:31.991607 24 builder.go:146] stderr: ""
  I0423 16:08:31.991690 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9690-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/23/25 16:08:31.991
  I0423 16:08:31.992020 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-4557 explain e2e-test-crd-publish-openapi-9690-crds'
  I0423 16:08:32.121363 24 builder.go:146] stderr: ""
  I0423 16:08:32.122580 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9690-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0423 16:08:33.567522 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4557" for this suite. @ 04/23/25 16:08:33.577
• [3.879 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/23/25 16:08:33.597
  I0423 16:08:33.597550 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 16:08:33.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:33.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:33.638
  I0423 16:08:39.693668 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7333" for this suite. @ 04/23/25 16:08:39.699
• [6.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/23/25 16:08:39.716
  I0423 16:08:39.716608 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 16:08:39.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:39.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:39.759
  STEP: Creating a pod to test substitution in volume subpath @ 04/23/25 16:08:39.767
  STEP: Saw pod success @ 04/23/25 16:08:45.827
  I0423 16:08:45.832592 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-23ab2f24-65b1-4cbe-9015-14f2ee1dbc1b container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 16:08:45.84
  I0423 16:08:45.865406 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9893" for this suite. @ 04/23/25 16:08:45.871
• [6.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/23/25 16:08:45.885
  I0423 16:08:45.885397 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename watch @ 04/23/25 16:08:45.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:45.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:45.922
  STEP: creating a new configmap @ 04/23/25 16:08:45.93
  STEP: modifying the configmap once @ 04/23/25 16:08:45.94
  STEP: modifying the configmap a second time @ 04/23/25 16:08:45.952
  STEP: deleting the configmap @ 04/23/25 16:08:45.963
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/23/25 16:08:45.973
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/23/25 16:08:45.975
  I0423 16:08:45.976805 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1503  1f8d3aec-f483-4ffc-bf9f-3656361d8186 2969 0 2025-04-23 16:08:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-23 16:08:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 16:08:45.977415 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-1503  1f8d3aec-f483-4ffc-bf9f-3656361d8186 2970 0 2025-04-23 16:08:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-23 16:08:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 16:08:45.978591 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1503" for this suite. @ 04/23/25 16:08:45.987
• [0.111 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/23/25 16:08:45.996
  I0423 16:08:45.996329 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename limitrange @ 04/23/25 16:08:45.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:46.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:46.027
  STEP: Creating a LimitRange @ 04/23/25 16:08:46.03
  STEP: Setting up watch @ 04/23/25 16:08:46.03
  STEP: Submitting a LimitRange @ 04/23/25 16:08:46.135
  STEP: Verifying LimitRange creation was observed @ 04/23/25 16:08:46.148
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/23/25 16:08:46.148
  I0423 16:08:46.153294 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0423 16:08:46.153384 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/23/25 16:08:46.153
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/23/25 16:08:46.163
  I0423 16:08:46.174110 24 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0423 16:08:46.174330 24 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/23/25 16:08:46.174
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/23/25 16:08:46.192
  I0423 16:08:46.203297 24 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0423 16:08:46.204159 24 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/23/25 16:08:46.204
  STEP: Failing to create a Pod with more than max resources @ 04/23/25 16:08:46.22
  STEP: Updating a LimitRange @ 04/23/25 16:08:46.226
  STEP: Verifying LimitRange updating is effective @ 04/23/25 16:08:46.239
  STEP: Creating a Pod with less than former min resources @ 04/23/25 16:08:48.249
  STEP: Failing to create a Pod with more than max resources @ 04/23/25 16:08:48.261
  STEP: Deleting a LimitRange @ 04/23/25 16:08:48.266
  STEP: Verifying the LimitRange was deleted @ 04/23/25 16:08:48.282
  I0423 16:08:53.290635 24 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/23/25 16:08:53.29
  I0423 16:08:53.317101 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6033" for this suite. @ 04/23/25 16:08:53.326
• [7.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/23/25 16:08:53.338
  I0423 16:08:53.339025 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:08:53.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:53.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:53.368
  STEP: Creating configMap with name configmap-test-volume-7928516b-1d49-4319-80d2-2ca63973b8cd @ 04/23/25 16:08:53.375
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:08:53.381
  STEP: Saw pod success @ 04/23/25 16:08:57.416
  I0423 16:08:57.421434 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-89fbaee0-f629-49e1-9d91-9103fb66a237 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:08:57.432
  I0423 16:08:57.461873 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1983" for this suite. @ 04/23/25 16:08:57.469
• [4.141 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/23/25 16:08:57.48
  I0423 16:08:57.480098 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:08:57.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:08:57.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:08:57.518
  STEP: Creating projection with secret that has name projected-secret-test-map-f773cd12-a5ba-401a-b112-70796e9e590a @ 04/23/25 16:08:57.525
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:08:57.536
  STEP: Saw pod success @ 04/23/25 16:09:01.566
  I0423 16:09:01.571286 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-610b7c61-23a5-4db5-aa61-04e2a3e09791 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:09:01.582
  I0423 16:09:01.604104 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4416" for this suite. @ 04/23/25 16:09:01.61
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 04/23/25 16:09:01.621
  I0423 16:09:01.621809 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 16:09:01.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:09:01.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:09:01.656
  STEP: Creating a ResourceQuota with terminating scope @ 04/23/25 16:09:01.663
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 16:09:01.671
  STEP: Creating a ResourceQuota with not terminating scope @ 04/23/25 16:09:03.681
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 16:09:03.698
  STEP: Creating a long running pod @ 04/23/25 16:09:05.704
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/23/25 16:09:05.739
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/23/25 16:09:07.745
  STEP: Deleting the pod @ 04/23/25 16:09:09.757
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 16:09:09.802
  STEP: Creating a terminating pod @ 04/23/25 16:09:11.808
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/23/25 16:09:11.831
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/23/25 16:09:13.839
  STEP: Deleting the pod @ 04/23/25 16:09:15.844
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 16:09:15.88
  I0423 16:09:17.888813 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7" for this suite. @ 04/23/25 16:09:17.894
• [16.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/23/25 16:09:17.905
  I0423 16:09:17.906062 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 16:09:17.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:09:17.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:09:17.939
  STEP: Waiting for pod completion @ 04/23/25 16:09:17.964
  I0423 16:09:21.992946 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4432" for this suite. @ 04/23/25 16:09:22
• [4.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/23/25 16:09:22.011
  I0423 16:09:22.011905 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 16:09:22.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:09:22.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:09:22.048
  STEP: Creating a cronjob @ 04/23/25 16:09:22.055
  STEP: Ensuring more than one job is running at a time @ 04/23/25 16:09:22.063
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/23/25 16:11:02.069
  STEP: Removing cronjob @ 04/23/25 16:11:02.076
  I0423 16:11:02.088657 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6964" for this suite. @ 04/23/25 16:11:02.096
• [100.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 04/23/25 16:11:02.107
  I0423 16:11:02.107729 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:11:02.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:11:02.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:11:02.169
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9734 @ 04/23/25 16:11:02.185
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/23/25 16:11:02.205
  STEP: creating service externalsvc in namespace services-9734 @ 04/23/25 16:11:02.206
  STEP: creating replication controller externalsvc in namespace services-9734 @ 04/23/25 16:11:02.248
  I0423 16:11:02.274143      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-9734, replica count: 2
  I0423 16:11:05.326748      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:11:08.327214      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:11:11.328246      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:11:14.330052      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/23/25 16:11:14.337
  I0423 16:11:14.371350 24 resource.go:361] Creating new exec pod
  I0423 16:11:16.417336 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9734 exec execpod8rxkw -- /bin/sh -x -c nslookup nodeport-service.services-9734.svc.cluster.local'
  I0423 16:11:16.673184 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-9734.svc.cluster.local\n"
  I0423 16:11:16.673298 24 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nnodeport-service.services-9734.svc.cluster.local\tcanonical name = externalsvc.services-9734.svc.cluster.local.\nName:\texternalsvc.services-9734.svc.cluster.local\nAddress: 10.32.0.60\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9734, will wait for the garbage collector to delete the pods @ 04/23/25 16:11:16.673
  I0423 16:11:16.737791 24 resources.go:139] Deleting ReplicationController externalsvc took: 7.80922ms
  I0423 16:11:16.839174 24 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.372132ms
  I0423 16:11:20.467967 24 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0423 16:11:20.484935 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9734" for this suite. @ 04/23/25 16:11:20.492
• [18.390 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/23/25 16:11:20.497
  I0423 16:11:20.498002 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 16:11:20.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:11:20.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:11:20.517
  I0423 16:11:20.551160 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2253" for this suite. @ 04/23/25 16:11:20.594
• [0.106 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/23/25 16:11:20.604
  I0423 16:11:20.605000 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 16:11:20.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:11:20.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:11:20.632
  I0423 16:11:20.639342 24 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0423 16:11:20.657439 24 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0423 16:11:25.663994 24 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 16:11:25.664
  I0423 16:11:29.683234 24 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0423 16:11:29.703377 24 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0423 16:11:29.713286 24 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0423 16:11:31.726953 24 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0423 16:11:31.731843 24 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0423 16:11:31.751343 24 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da310d22-f034-4262-9132-d1040f9f0511",
      ResourceVersion: (string) (len=4) "3969",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881021489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021491,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 16:11:31.770534 24 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a06d556e-3324-496b-8db2-cabf6a913983",
      ResourceVersion: (string) (len=4) "3959",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881021489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "da310d22-f034-4262-9132-d1040f9f0511",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 61 33 31 30 64  32 32 2d 66 30 33 34 2d  |\"da310d22-f034-|
              00000120  34 32 36 32 2d 39 31 33  32 2d 64 31 30 34 30 66  |4262-9132-d1040f|
              00000130  39 66 30 35 31 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9f0511\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:11:31.777656 24 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0423 16:11:31.778189 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a18a361d-c9d4-4523-a5cd-f7f2cc34338f",
      ResourceVersion: (string) (len=4) "3968",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881021480,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "da310d22-f034-4262-9132-d1040f9f0511",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 61 33 31 30 64 32  |"uid\":\"da310d2|
              000000b0  32 2d 66 30 33 34 2d 34  32 36 32 2d 39 31 33 32  |2-f034-4262-9132|
              000000c0  2d 64 31 30 34 30 66 39  66 30 35 31 31 5c 22 7d  |-d1040f9f0511\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:11:31.792460 24 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-2jg5t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-2jg5t",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=14) "deployment-661",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4149d5dc-1f8b-41a8-9881-28edc1117f5d",
      ResourceVersion: (string) (len=4) "3958",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881021489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "50607068f42fefd52be575f26c6e5c4afd470f444830b8c5eaa1ee8c92275ec3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.151/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.151/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "a06d556e-3324-496b-8db2-cabf6a913983",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 30  36 64 35 35 36 65 2d 33  |d\":\"a06d556e-3|
              00000090  33 32 34 2d 34 39 36 62  2d 38 64 62 32 2d 63 61  |324-496b-8db2-ca|
              000000a0  62 66 36 61 39 31 33 39  38 33 5c 22 7d 22 3a 7b  |bf6a913983\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 31 5c 22 7d 22  |.200.131.151\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l24mv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l24mv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881021489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881021489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881021490,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://b595793f2705f28347bf3e320c7a0848a6c8fe300fca242097103b4407beb42d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 16:11:31.804752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-661" for this suite. @ 04/23/25 16:11:31.808
• [11.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 04/23/25 16:11:31.824
  I0423 16:11:31.824920 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 16:11:31.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:11:31.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:11:31.873
  STEP: Creating service test in namespace statefulset-5903 @ 04/23/25 16:11:31.878
  STEP: Looking for a node to schedule stateful set and pod @ 04/23/25 16:11:31.897
  STEP: Creating pod with conflicting port in namespace statefulset-5903 @ 04/23/25 16:11:31.912
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5903 @ 04/23/25 16:11:31.924
  STEP: Creating statefulset with conflicting port in namespace statefulset-5903 @ 04/23/25 16:11:35.941
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5903 @ 04/23/25 16:11:35.952
  I0423 16:11:35.993420 24 statefulset.go:872] Observed stateful pod in namespace: statefulset-5903, name: ss-0, uid: 8fdefe54-3e80-4466-a7f5-c9182ce2015d, status phase: Pending. Waiting for statefulset controller to delete.
  I0423 16:11:36.021284 24 statefulset.go:872] Observed stateful pod in namespace: statefulset-5903, name: ss-0, uid: 8fdefe54-3e80-4466-a7f5-c9182ce2015d, status phase: Failed. Waiting for statefulset controller to delete.
  I0423 16:11:36.059572 24 statefulset.go:872] Observed stateful pod in namespace: statefulset-5903, name: ss-0, uid: 8fdefe54-3e80-4466-a7f5-c9182ce2015d, status phase: Failed. Waiting for statefulset controller to delete.
  I0423 16:11:36.073846 24 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-5903
  STEP: Removing pod with conflicting port in namespace statefulset-5903 @ 04/23/25 16:11:36.073
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5903 and will be in running state @ 04/23/25 16:11:36.101
  I0423 16:11:38.116535 24 statefulset.go:138] Deleting all statefulset in ns statefulset-5903
  I0423 16:11:38.122299 24 rest.go:152] Scaling statefulset ss to 0
  I0423 16:11:48.148861 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 16:11:48.155544 24 rest.go:90] Deleting statefulset ss
  I0423 16:11:48.175580 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5903" for this suite. @ 04/23/25 16:11:48.184
• [16.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/23/25 16:11:48.202
  I0423 16:11:48.202574 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 16:11:48.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:11:48.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:11:48.234
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 16:11:48.285
  STEP: create the pod with lifecycle hook @ 04/23/25 16:11:50.328
  STEP: delete the pod with lifecycle hook @ 04/23/25 16:11:52.363
  STEP: check prestop hook @ 04/23/25 16:11:56.406
  I0423 16:11:56.416552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5180" for this suite. @ 04/23/25 16:11:56.429
• [8.242 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/23/25 16:11:56.445
  I0423 16:11:56.446891 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename proxy @ 04/23/25 16:11:56.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:11:56.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:11:56.485
  STEP: starting an echo server on multiple ports @ 04/23/25 16:11:56.514
  STEP: creating replication controller proxy-service-mqbq5 in namespace proxy-5885 @ 04/23/25 16:11:56.514
  I0423 16:11:56.535470      24 runners.go:193] Created replication controller with name: proxy-service-mqbq5, namespace: proxy-5885, replica count: 1
  I0423 16:11:57.589186      24 runners.go:193] proxy-service-mqbq5 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:11:58.589605      24 runners.go:193] proxy-service-mqbq5 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:11:58.600677 24 proxy.go:230] setup took 2.1074207s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/23/25 16:11:58.601
  I0423 16:11:58.620782 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 18.558581ms)
  I0423 16:11:58.620990 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 18.914242ms)
  I0423 16:11:58.627941 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 25.9984ms)
  I0423 16:11:58.623506 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 21.323068ms)
  I0423 16:11:58.634552 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 32.878877ms)
  I0423 16:11:58.634719 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 33.357864ms)
  I0423 16:11:58.634794 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 32.593174ms)
  I0423 16:11:58.634819 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 33.003824ms)
  I0423 16:11:58.634843 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 32.722907ms)
  I0423 16:11:58.634854 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 33.070356ms)
  I0423 16:11:58.642870 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 40.639591ms)
  I0423 16:11:58.642506 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 40.515088ms)
  I0423 16:11:58.643718 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 41.990818ms)
  I0423 16:11:58.643752 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 42.361933ms)
  I0423 16:11:58.645252 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 42.979726ms)
  I0423 16:11:58.645311 24 proxy.go:558] (0) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 43.075121ms)
  I0423 16:11:58.655393 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 9.328533ms)
  I0423 16:11:58.660229 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 12.087756ms)
  I0423 16:11:58.661192 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 13.872067ms)
  I0423 16:11:58.661307 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 13.23154ms)
  I0423 16:11:58.662263 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 14.43989ms)
  I0423 16:11:58.662327 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 14.146693ms)
  I0423 16:11:58.662332 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 14.05667ms)
  I0423 16:11:58.662346 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 14.122226ms)
  I0423 16:11:58.662387 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 16.182166ms)
  I0423 16:11:58.664269 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 15.941668ms)
  I0423 16:11:58.665961 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 19.898435ms)
  I0423 16:11:58.666005 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 18.685001ms)
  I0423 16:11:58.667399 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 20.982159ms)
  I0423 16:11:58.667418 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 19.849499ms)
  I0423 16:11:58.667472 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 20.319746ms)
  I0423 16:11:58.667693 24 proxy.go:558] (1) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 21.271807ms)
  I0423 16:11:58.678829 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 10.718433ms)
  I0423 16:11:58.678894 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 10.692608ms)
  I0423 16:11:58.678921 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 11.086649ms)
  I0423 16:11:58.678939 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 10.878308ms)
  I0423 16:11:58.678960 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 10.976591ms)
  I0423 16:11:58.678980 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 10.800056ms)
  I0423 16:11:58.678999 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 11.054ms)
  I0423 16:11:58.679200 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 11.42418ms)
  I0423 16:11:58.679253 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 11.246478ms)
  I0423 16:11:58.679293 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 11.211231ms)
  I0423 16:11:58.679427 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 11.393042ms)
  I0423 16:11:58.679451 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 11.207415ms)
  I0423 16:11:58.688991 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 21.104508ms)
  I0423 16:11:58.689010 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 20.781698ms)
  I0423 16:11:58.689069 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 20.939619ms)
  I0423 16:11:58.689684 24 proxy.go:558] (2) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 21.538372ms)
  I0423 16:11:58.697801 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 7.635375ms)
  I0423 16:11:58.697800 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 8.069299ms)
  I0423 16:11:58.697860 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 7.870907ms)
  I0423 16:11:58.697989 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 8.225468ms)
  I0423 16:11:58.700118 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 9.736067ms)
  I0423 16:11:58.701175 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 10.72711ms)
  I0423 16:11:58.701220 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 10.863042ms)
  I0423 16:11:58.701287 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 11.078903ms)
  I0423 16:11:58.701303 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 11.370529ms)
  I0423 16:11:58.701469 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 11.384043ms)
  I0423 16:11:58.702693 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 12.856886ms)
  I0423 16:11:58.702734 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 12.429063ms)
  I0423 16:11:58.702590 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 12.332665ms)
  I0423 16:11:58.702658 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 12.258042ms)
  I0423 16:11:58.702790 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 12.821115ms)
  I0423 16:11:58.703658 24 proxy.go:558] (3) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 13.222739ms)
  I0423 16:11:58.710327 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 6.165677ms)
  I0423 16:11:58.712079 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 7.541813ms)
  I0423 16:11:58.712115 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 7.786917ms)
  I0423 16:11:58.712145 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 7.677004ms)
  I0423 16:11:58.713665 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 8.773308ms)
  I0423 16:11:58.715019 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 10.249292ms)
  I0423 16:11:58.715059 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 10.207721ms)
  I0423 16:11:58.715074 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 10.142574ms)
  I0423 16:11:58.715088 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 11.377186ms)
  I0423 16:11:58.715092 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 10.072609ms)
  I0423 16:11:58.715108 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 10.707814ms)
  I0423 16:11:58.715115 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 10.854075ms)
  I0423 16:11:58.715127 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 10.039313ms)
  I0423 16:11:58.715133 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 10.475734ms)
  I0423 16:11:58.715147 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 10.426494ms)
  I0423 16:11:58.715164 24 proxy.go:558] (4) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 10.358036ms)
  I0423 16:11:58.722845 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 7.437294ms)
  I0423 16:11:58.722880 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 7.640551ms)
  I0423 16:11:58.722898 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 7.508568ms)
  I0423 16:11:58.722930 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 7.165101ms)
  I0423 16:11:58.725673 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 9.611721ms)
  I0423 16:11:58.725721 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 9.637527ms)
  I0423 16:11:58.725738 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 9.651547ms)
  I0423 16:11:58.725761 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 9.978497ms)
  I0423 16:11:58.725797 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 10.26994ms)
  I0423 16:11:58.725889 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 9.997317ms)
  I0423 16:11:58.725981 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 10.67295ms)
  I0423 16:11:58.726005 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 10.262622ms)
  I0423 16:11:58.726016 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 9.909423ms)
  I0423 16:11:58.727075 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 11.525595ms)
  I0423 16:11:58.727169 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 11.349289ms)
  I0423 16:11:58.727229 24 proxy.go:558] (5) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 11.43065ms)
  I0423 16:11:58.730912 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 3.216788ms)
  I0423 16:11:58.733871 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 6.092148ms)
  I0423 16:11:58.734054 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 5.206834ms)
  I0423 16:11:58.738476 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 10.655401ms)
  I0423 16:11:58.738543 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 9.78452ms)
  I0423 16:11:58.738597 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 9.789795ms)
  I0423 16:11:58.738650 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 10.068536ms)
  I0423 16:11:58.738916 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 10.113353ms)
  I0423 16:11:58.738941 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 11.421092ms)
  I0423 16:11:58.738550 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 9.999405ms)
  I0423 16:11:58.742535 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 13.791619ms)
  I0423 16:11:58.742589 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 14.856027ms)
  I0423 16:11:58.742610 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 13.833438ms)
  I0423 16:11:58.742715 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 13.996771ms)
  I0423 16:11:58.742922 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 15.293528ms)
  I0423 16:11:58.743148 24 proxy.go:558] (6) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 13.80873ms)
  I0423 16:11:58.749579 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 5.686154ms)
  I0423 16:11:58.749598 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 5.95838ms)
  I0423 16:11:58.754913 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 10.948939ms)
  I0423 16:11:58.756570 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 12.399824ms)
  I0423 16:11:58.756613 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 12.630377ms)
  I0423 16:11:58.756709 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 12.509059ms)
  I0423 16:11:58.756734 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 12.477778ms)
  I0423 16:11:58.756756 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 12.477773ms)
  I0423 16:11:58.756754 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 12.607822ms)
  I0423 16:11:58.759824 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 15.94451ms)
  I0423 16:11:58.763015 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 19.217491ms)
  I0423 16:11:58.763340 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 19.03371ms)
  I0423 16:11:58.763577 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 19.349989ms)
  I0423 16:11:58.763699 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 19.696066ms)
  I0423 16:11:58.763806 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 19.508443ms)
  I0423 16:11:58.764842 24 proxy.go:558] (7) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 20.658486ms)
  I0423 16:11:58.774710 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 8.273261ms)
  I0423 16:11:58.774761 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 9.178562ms)
  I0423 16:11:58.774789 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 8.289238ms)
  I0423 16:11:58.774832 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 8.289402ms)
  I0423 16:11:58.774936 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 8.597172ms)
  I0423 16:11:58.779304 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 14.333718ms)
  I0423 16:11:58.779530 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 12.948006ms)
  I0423 16:11:58.779572 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 12.931943ms)
  I0423 16:11:58.779606 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 12.894075ms)
  I0423 16:11:58.779627 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 13.149404ms)
  I0423 16:11:58.779702 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 12.800084ms)
  I0423 16:11:58.785627 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 18.889891ms)
  I0423 16:11:58.785907 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 19.203595ms)
  I0423 16:11:58.785953 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 19.34957ms)
  I0423 16:11:58.785459 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 18.779666ms)
  I0423 16:11:58.785982 24 proxy.go:558] (8) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 19.361423ms)
  I0423 16:11:58.791506 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 5.350846ms)
  I0423 16:11:58.792826 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 5.935612ms)
  I0423 16:11:58.796102 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 9.766452ms)
  I0423 16:11:58.800145 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 12.983297ms)
  I0423 16:11:58.802485 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 14.86968ms)
  I0423 16:11:58.802536 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 15.315972ms)
  I0423 16:11:58.802557 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 15.623207ms)
  I0423 16:11:58.802572 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 14.602407ms)
  I0423 16:11:58.802590 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 15.085773ms)
  I0423 16:11:58.804272 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 16.451758ms)
  I0423 16:11:58.804313 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 18.111549ms)
  I0423 16:11:58.804738 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 17.157907ms)
  I0423 16:11:58.804776 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 17.318772ms)
  I0423 16:11:58.804770 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 17.998943ms)
  I0423 16:11:58.807397 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 19.49258ms)
  I0423 16:11:58.807614 24 proxy.go:558] (9) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 20.069278ms)
  I0423 16:11:58.818711 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 10.302259ms)
  I0423 16:11:58.818768 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 9.91773ms)
  I0423 16:11:58.818797 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 10.812697ms)
  I0423 16:11:58.818813 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 10.760654ms)
  I0423 16:11:58.818836 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 11.060885ms)
  I0423 16:11:58.818856 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 10.961826ms)
  I0423 16:11:58.818877 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 10.780802ms)
  I0423 16:11:58.818905 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 10.730529ms)
  I0423 16:11:58.818925 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 10.845612ms)
  I0423 16:11:58.818951 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 10.606257ms)
  I0423 16:11:58.818970 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 10.779973ms)
  I0423 16:11:58.821232 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 13.311463ms)
  I0423 16:11:58.821294 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 12.871924ms)
  I0423 16:11:58.821334 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 12.51383ms)
  I0423 16:11:58.821365 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 13.217348ms)
  I0423 16:11:58.822036 24 proxy.go:558] (10) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 13.33166ms)
  I0423 16:11:58.830959 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 8.575272ms)
  I0423 16:11:58.831151 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 8.76115ms)
  I0423 16:11:58.831196 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 8.92744ms)
  I0423 16:11:58.831398 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 9.32136ms)
  I0423 16:11:58.831417 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 9.1957ms)
  I0423 16:11:58.831341 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 9.026982ms)
  I0423 16:11:58.831493 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 9.100595ms)
  I0423 16:11:58.831442 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 9.033305ms)
  I0423 16:11:58.831558 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 9.305012ms)
  I0423 16:11:58.831886 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 9.528588ms)
  I0423 16:11:58.833910 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 11.560293ms)
  I0423 16:11:58.833986 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 11.565258ms)
  I0423 16:11:58.834084 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 11.72199ms)
  I0423 16:11:58.834347 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 11.944147ms)
  I0423 16:11:58.835068 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 12.735634ms)
  I0423 16:11:58.836897 24 proxy.go:558] (11) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 14.603028ms)
  I0423 16:11:58.844523 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 7.197723ms)
  I0423 16:11:58.845648 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 8.367016ms)
  I0423 16:11:58.845652 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 8.5453ms)
  I0423 16:11:58.845721 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 8.372524ms)
  I0423 16:11:58.845739 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 8.799553ms)
  I0423 16:11:58.845867 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 8.676034ms)
  I0423 16:11:58.846947 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 9.872481ms)
  I0423 16:11:58.847061 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 9.833249ms)
  I0423 16:11:58.847100 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 9.771241ms)
  I0423 16:11:58.847164 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 9.905873ms)
  I0423 16:11:58.848388 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 11.141903ms)
  I0423 16:11:58.853304 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 16.092523ms)
  I0423 16:11:58.853322 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 16.02444ms)
  I0423 16:11:58.854230 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 17.061019ms)
  I0423 16:11:58.854414 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 17.023171ms)
  I0423 16:11:58.855049 24 proxy.go:558] (12) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 17.90968ms)
  I0423 16:11:58.863672 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 8.364884ms)
  I0423 16:11:58.863823 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 8.279894ms)
  I0423 16:11:58.863847 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 7.986193ms)
  I0423 16:11:58.868683 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 12.931203ms)
  I0423 16:11:58.868738 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 12.792419ms)
  I0423 16:11:58.868772 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 13.179803ms)
  I0423 16:11:58.868795 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 12.975611ms)
  I0423 16:11:58.868822 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 13.03974ms)
  I0423 16:11:58.868919 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 13.604597ms)
  I0423 16:11:58.872269 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 16.237997ms)
  I0423 16:11:58.872181 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 16.071638ms)
  I0423 16:11:58.872909 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 16.830869ms)
  I0423 16:11:58.873580 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 17.579728ms)
  I0423 16:11:58.878367 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 22.457483ms)
  I0423 16:11:58.878368 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 22.877562ms)
  I0423 16:11:58.878837 24 proxy.go:558] (13) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 23.159329ms)
  I0423 16:11:58.891307 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 11.801139ms)
  I0423 16:11:58.891398 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 11.978457ms)
  I0423 16:11:58.898009 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 18.329941ms)
  I0423 16:11:58.899397 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 19.420071ms)
  I0423 16:11:58.899438 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 20.500595ms)
  I0423 16:11:58.900879 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 20.826402ms)
  I0423 16:11:58.900969 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 21.241074ms)
  I0423 16:11:58.901001 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 21.880922ms)
  I0423 16:11:58.901197 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 21.610071ms)
  I0423 16:11:58.901248 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 22.359528ms)
  I0423 16:11:58.901648 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 21.635149ms)
  I0423 16:11:58.901911 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 21.969441ms)
  I0423 16:11:58.902003 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 22.070324ms)
  I0423 16:11:58.902328 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 22.490607ms)
  I0423 16:11:58.902230 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 22.451808ms)
  I0423 16:11:58.902429 24 proxy.go:558] (14) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 23.133568ms)
  I0423 16:11:58.919449 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 14.339512ms)
  I0423 16:11:58.919547 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 16.437274ms)
  I0423 16:11:58.919592 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 14.000745ms)
  I0423 16:11:58.919632 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 13.926611ms)
  I0423 16:11:58.919454 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 15.785282ms)
  I0423 16:11:58.923535 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 20.749648ms)
  I0423 16:11:58.923582 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 17.800175ms)
  I0423 16:11:58.923611 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 17.862034ms)
  I0423 16:11:58.922892 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 19.100557ms)
  I0423 16:11:58.923810 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 21.338975ms)
  I0423 16:11:58.923850 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 21.051781ms)
  I0423 16:11:58.923853 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 18.219608ms)
  I0423 16:11:58.923872 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 20.859912ms)
  I0423 16:11:58.923881 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 18.079144ms)
  I0423 16:11:58.924648 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 18.968033ms)
  I0423 16:11:58.925355 24 proxy.go:558] (15) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 20.382225ms)
  I0423 16:11:58.935332 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 9.467488ms)
  I0423 16:11:58.935698 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 8.192963ms)
  I0423 16:11:58.937071 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 9.310567ms)
  I0423 16:11:58.959391 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 31.060438ms)
  I0423 16:11:58.964726 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 36.922659ms)
  I0423 16:11:58.964856 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 39.080789ms)
  I0423 16:11:58.964889 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 36.52475ms)
  I0423 16:11:58.964928 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 37.010228ms)
  I0423 16:11:58.964961 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 39.546356ms)
  I0423 16:11:58.964999 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 39.437993ms)
  I0423 16:11:58.965032 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 39.102404ms)
  I0423 16:11:58.971271 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 43.4505ms)
  I0423 16:11:58.971347 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 43.498495ms)
  I0423 16:11:58.971382 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 43.488818ms)
  I0423 16:11:58.971414 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 43.131041ms)
  I0423 16:11:58.972210 24 proxy.go:558] (16) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 44.831992ms)
  I0423 16:11:59.035715 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 52.74065ms)
  I0423 16:11:59.036006 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 60.011082ms)
  I0423 16:11:59.036089 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 59.765212ms)
  I0423 16:11:59.036077 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 53.179991ms)
  I0423 16:11:59.036132 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 52.917005ms)
  I0423 16:11:59.036160 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 52.870467ms)
  I0423 16:11:59.036176 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 59.901112ms)
  I0423 16:11:59.036211 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 53.705883ms)
  I0423 16:11:59.036289 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 63.774934ms)
  I0423 16:11:59.036324 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 60.886012ms)
  I0423 16:11:59.036196 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 60.107264ms)
  I0423 16:11:59.036338 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 53.323924ms)
  I0423 16:11:59.036373 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 53.019532ms)
  I0423 16:11:59.036419 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 53.100393ms)
  I0423 16:11:59.036448 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 63.338842ms)
  I0423 16:11:59.037058 24 proxy.go:558] (17) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 60.848062ms)
  I0423 16:11:59.050636 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 12.569636ms)
  I0423 16:11:59.050637 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 12.974105ms)
  I0423 16:11:59.050678 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 12.9509ms)
  I0423 16:11:59.050644 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 13.131408ms)
  I0423 16:11:59.050702 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 12.556583ms)
  I0423 16:11:59.050705 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 12.78002ms)
  I0423 16:11:59.050714 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 12.60395ms)
  I0423 16:11:59.050724 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 12.759292ms)
  I0423 16:11:59.050745 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 12.969349ms)
  I0423 16:11:59.050752 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 12.869061ms)
  I0423 16:11:59.050765 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 12.461747ms)
  I0423 16:11:59.050767 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 12.927537ms)
  I0423 16:11:59.050776 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 12.543619ms)
  I0423 16:11:59.050784 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 12.769187ms)
  I0423 16:11:59.050803 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 12.606826ms)
  I0423 16:11:59.050848 24 proxy.go:558] (18) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 12.578772ms)
  I0423 16:11:59.067024 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">... (200; 13.844968ms)
  I0423 16:11:59.067109 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 15.132932ms)
  I0423 16:11:59.067296 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname2/proxy/: bar (200; 13.947589ms)
  I0423 16:11:59.067399 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:462/proxy/: tls qux (200; 15.462661ms)
  I0423 16:11:59.067471 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:443/proxy/tlsrewritem... (200; 15.692163ms)
  I0423 16:11:59.067494 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 15.353613ms)
  I0423 16:11:59.067532 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t:1080/proxy/rewriteme">test<... (200; 14.167602ms)
  I0423 16:11:59.067540 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/: <a href="/api/v1/namespaces/proxy-5885/pods/proxy-service-mqbq5-72v8t/proxy/rewriteme">test</a> (200; 14.347187ms)
  I0423 16:11:59.067556 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/https:proxy-service-mqbq5-72v8t:460/proxy/: tls baz (200; 15.657926ms)
  I0423 16:11:59.067568 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:160/proxy/: foo (200; 14.185561ms)
  I0423 16:11:59.070820 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname1/proxy/: tls baz (200; 17.510462ms)
  I0423 16:11:59.067016 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/pods/http:proxy-service-mqbq5-72v8t:162/proxy/: bar (200; 13.908949ms)
  I0423 16:11:59.071124 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/services/proxy-service-mqbq5:portname1/proxy/: foo (200; 18.048216ms)
  I0423 16:11:59.071444 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname1/proxy/: foo (200; 19.367636ms)
  I0423 16:11:59.072396 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/services/http:proxy-service-mqbq5:portname2/proxy/: bar (200; 20.392398ms)
  I0423 16:11:59.072582 24 proxy.go:558] (19) /api/v1/namespaces/proxy-5885/services/https:proxy-service-mqbq5:tlsportname2/proxy/: tls qux (200; 19.270123ms)
  STEP: deleting ReplicationController proxy-service-mqbq5 in namespace proxy-5885, will wait for the garbage collector to delete the pods @ 04/23/25 16:11:59.072
  I0423 16:11:59.137322 24 resources.go:139] Deleting ReplicationController proxy-service-mqbq5 took: 8.201782ms
  I0423 16:11:59.238357 24 resources.go:163] Terminating ReplicationController proxy-service-mqbq5 pods took: 101.02633ms
  I0423 16:12:02.240107 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5885" for this suite. @ 04/23/25 16:12:02.247
• [5.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/23/25 16:12:02.257
  I0423 16:12:02.257349 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 16:12:02.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:02.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:02.289
  I0423 16:12:02.308071 24 endpointslice.go:1045] Endpoints addresses: [192.168.58.100] , ports: [6443]
  I0423 16:12:02.308135 24 endpointslice.go:1075] EndpointSlices addresses: [192.168.58.100] , ports: [6443]
  I0423 16:12:02.308285 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4178" for this suite. @ 04/23/25 16:12:02.348
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/23/25 16:12:02.369
  I0423 16:12:02.370193 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 16:12:02.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:02.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:02.399
  STEP: creating the pod @ 04/23/25 16:12:02.405
  STEP: submitting the pod to kubernetes @ 04/23/25 16:12:02.406
  STEP: verifying the pod is in kubernetes @ 04/23/25 16:12:04.435
  STEP: updating the pod @ 04/23/25 16:12:04.44
  I0423 16:12:04.967823 24 pod_client.go:173] Successfully updated pod "pod-update-cbd43cd0-3b3e-4c4f-9299-3f68d7605bd7"
  STEP: verifying the updated pod is in kubernetes @ 04/23/25 16:12:04.973
  I0423 16:12:04.976986 24 pods.go:391] Pod update OK
  I0423 16:12:04.977224 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9803" for this suite. @ 04/23/25 16:12:04.984
• [2.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/23/25 16:12:05.001
  I0423 16:12:05.002002 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:12:05.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:05.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:05.028
  STEP: Creating projection with secret that has name projected-secret-test-fa3a05e4-1c7b-48ce-890a-89ecf0cc59fa @ 04/23/25 16:12:05.035
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:12:05.042
  STEP: Saw pod success @ 04/23/25 16:12:09.078
  I0423 16:12:09.081428 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-a9d561d8-77c1-446f-a9f8-c8a607862126 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:12:09.087
  I0423 16:12:09.102649 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6670" for this suite. @ 04/23/25 16:12:09.106
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/23/25 16:12:09.115
  I0423 16:12:09.115312 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 16:12:09.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:09.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:09.141
  STEP: Create set of pod templates @ 04/23/25 16:12:09.144
  I0423 16:12:09.150958 24 podtemplates.go:143] created test-podtemplate-1
  I0423 16:12:09.159324 24 podtemplates.go:143] created test-podtemplate-2
  I0423 16:12:09.173206 24 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/23/25 16:12:09.173
  STEP: delete collection of pod templates @ 04/23/25 16:12:09.182
  I0423 16:12:09.182182 24 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/23/25 16:12:09.203
  I0423 16:12:09.203064 24 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0423 16:12:09.206508 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3758" for this suite. @ 04/23/25 16:12:09.21
• [0.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/23/25 16:12:09.221
  I0423 16:12:09.221262 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename watch @ 04/23/25 16:12:09.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:09.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:09.239
  STEP: getting a starting resourceVersion @ 04/23/25 16:12:09.241
  STEP: starting a background goroutine to produce watch events @ 04/23/25 16:12:09.246
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/23/25 16:12:09.246
  I0423 16:12:12.031553 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1359" for this suite. @ 04/23/25 16:12:12.079
• [2.909 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/23/25 16:12:12.132
  I0423 16:12:12.132175 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 16:12:12.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:12.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:12.175
  I0423 16:12:12.234028 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4514" for this suite. @ 04/23/25 16:12:12.253
• [0.134 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/23/25 16:12:12.266
  I0423 16:12:12.266272 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 16:12:12.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:12.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:12.298
  STEP: creating a Pod with a static label @ 04/23/25 16:12:12.315
  STEP: watching for Pod to be ready @ 04/23/25 16:12:12.336
  I0423 16:12:12.341638 24 pods.go:945] observed Pod pod-test in namespace pods-7959 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0423 16:12:12.346654 24 pods.go:945] observed Pod pod-test in namespace pods-7959 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  }]
  I0423 16:12:12.371312 24 pods.go:945] observed Pod pod-test in namespace pods-7959 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  }]
  I0423 16:12:12.933915 24 pods.go:945] observed Pod pod-test in namespace pods-7959 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  }]
  I0423 16:12:14.269824 24 pods.go:948] Found Pod pod-test in namespace pods-7959 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:14 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:14 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:12:12 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/23/25 16:12:14.276
  STEP: getting the Pod and ensuring that it's patched @ 04/23/25 16:12:14.301
  STEP: replacing the Pod's status Ready condition to False @ 04/23/25 16:12:14.305
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/23/25 16:12:14.327
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/23/25 16:12:14.33
  STEP: watching for the Pod to be deleted @ 04/23/25 16:12:14.34
  I0423 16:12:14.345100 24 pods.go:1058] observed event type MODIFIED
  I0423 16:12:16.269969 24 pods.go:1058] observed event type MODIFIED
  I0423 16:12:16.569994 24 pods.go:1058] observed event type MODIFIED
  I0423 16:12:16.742988 24 pods.go:1058] observed event type MODIFIED
  I0423 16:12:17.296987 24 pods.go:1058] observed event type MODIFIED
  I0423 16:12:17.312945 24 pods.go:1058] observed event type MODIFIED
  I0423 16:12:17.327807 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7959" for this suite. @ 04/23/25 16:12:17.332
• [5.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/23/25 16:12:17.339
  I0423 16:12:17.339936 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 16:12:17.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:17.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:17.357
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 16:12:17.435
  STEP: create the pod with lifecycle hook @ 04/23/25 16:12:19.478
  STEP: check poststart hook @ 04/23/25 16:12:21.504
  STEP: delete the pod with lifecycle hook @ 04/23/25 16:12:21.515
  I0423 16:12:23.537388 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7979" for this suite. @ 04/23/25 16:12:23.543
• [6.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/23/25 16:12:23.553
  I0423 16:12:23.553402 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 16:12:23.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:23.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:23.58
  I0423 16:12:25.637830 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4308" for this suite. @ 04/23/25 16:12:25.648
• [2.111 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 04/23/25 16:12:25.664
  I0423 16:12:25.664455 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 16:12:25.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:25.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:25.694
  STEP: Creating a job @ 04/23/25 16:12:25.7
  STEP: Ensuring active pods == parallelism @ 04/23/25 16:12:25.706
  STEP: Orphaning one of the Job's Pods @ 04/23/25 16:12:27.719
  I0423 16:12:28.256375 24 pod_client.go:173] Successfully updated pod "adopt-release-c4nqs"
  STEP: Checking that the Job readopts the Pod @ 04/23/25 16:12:28.256
  STEP: Removing the labels from the Job's Pod @ 04/23/25 16:12:30.271
  I0423 16:12:30.796101 24 pod_client.go:173] Successfully updated pod "adopt-release-c4nqs"
  STEP: Checking that the Job releases the Pod @ 04/23/25 16:12:30.796
  I0423 16:12:32.811832 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7480" for this suite. @ 04/23/25 16:12:32.817
• [7.160 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/23/25 16:12:32.824
  I0423 16:12:32.824876 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:12:32.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:32.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:32.855
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:12:32.858
  STEP: Saw pod success @ 04/23/25 16:12:36.889
  I0423 16:12:36.895950 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-89d9f0da-67c7-407a-b02d-3b986ec916cf container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:12:36.934
  I0423 16:12:36.981844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7959" for this suite. @ 04/23/25 16:12:36.986
• [4.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 04/23/25 16:12:36.994
  I0423 16:12:36.994871 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 16:12:36.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:37.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:37.018
  STEP: creating a ServiceAccount @ 04/23/25 16:12:37.02
  STEP: watching for the ServiceAccount to be added @ 04/23/25 16:12:37.027
  STEP: patching the ServiceAccount @ 04/23/25 16:12:37.029
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/23/25 16:12:37.033
  STEP: deleting the ServiceAccount @ 04/23/25 16:12:37.036
  I0423 16:12:37.049073 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4421" for this suite. @ 04/23/25 16:12:37.087
• [0.103 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/23/25 16:12:37.097
  I0423 16:12:37.098010 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 16:12:37.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:37.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:37.138
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/23/25 16:12:37.148
  STEP: When a replication controller with a matching selector is created @ 04/23/25 16:12:39.187
  STEP: Then the orphan pod is adopted @ 04/23/25 16:12:39.207
  I0423 16:12:40.223286 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1215" for this suite. @ 04/23/25 16:12:40.23
• [3.152 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 04/23/25 16:12:40.25
  I0423 16:12:40.250137 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:12:40.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:40.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:40.272
  I0423 16:12:40.279833 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  W0423 16:12:42.954130      24 warnings.go:70] unknown field "alpha"
  W0423 16:12:42.954189      24 warnings.go:70] unknown field "beta"
  W0423 16:12:42.954206      24 warnings.go:70] unknown field "delta"
  W0423 16:12:42.954222      24 warnings.go:70] unknown field "epsilon"
  W0423 16:12:42.954238      24 warnings.go:70] unknown field "gamma"
  I0423 16:12:43.655339 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2781" for this suite. @ 04/23/25 16:12:43.668
• [3.436 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 04/23/25 16:12:43.688
  I0423 16:12:43.688658 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 16:12:43.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:12:43.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:12:43.714
  I0423 16:12:43.735924 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0423 16:13:43.747327 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/23/25 16:13:43.754
  I0423 16:13:43.754766 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/23/25 16:13:43.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:13:43.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:13:43.789
  I0423 16:13:43.815601 24 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0423 16:13:43.828961 24 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 04/23/25 16:13:43.871
  STEP: Removing a custom resource @ 04/23/25 16:13:43.882
  I0423 16:13:43.893512 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9223" for this suite. @ 04/23/25 16:13:43.897
  I0423 16:13:43.903937 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1324" for this suite. @ 04/23/25 16:13:44
• [60.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 04/23/25 16:13:44.013
  I0423 16:13:44.013655 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 16:13:44.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:13:44.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:13:44.045
  I0423 16:14:06.162665 24 container_probe.go:92] Container started at 2025-04-23 16:13:44 +0000 UTC, pod became ready at 2025-04-23 16:14:04 +0000 UTC
  I0423 16:14:06.162855 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7999" for this suite. @ 04/23/25 16:14:06.17
• [22.170 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 04/23/25 16:14:06.183
  I0423 16:14:06.183453 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:14:06.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:06.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:06.217
  STEP: creating service multiprotocol-test in namespace services-9602 @ 04/23/25 16:14:06.223
  STEP: creating pod pod1 in namespace services-9602 @ 04/23/25 16:14:06.24
  STEP: Creating pod pod1 in namespace services-9602 @ 04/23/25 16:14:06.24
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-9602 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/23/25 16:14:08.301
  I0423 16:14:08.332310 24 service.go:4553] successfully validated that service multiprotocol-test in namespace services-9602 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/23/25 16:14:08.332
  I0423 16:14:08.332551 24 resource.go:361] Creating new exec pod
  I0423 16:14:10.362471 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80'
  I0423 16:14:10.561871 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.221 80\nConnection to 10.32.0.221 80 port [tcp/http] succeeded!\n"
  I0423 16:14:10.562014 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:14:10.562139 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.221 80'
  I0423 16:14:12.797739 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.221 80\n"
  I0423 16:14:12.797819 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/23/25 16:14:12.797
  I0423 16:14:12.814092 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80'
  I0423 16:14:13.051993 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.221 80\nConnection to 10.32.0.221 80 port [tcp/http] succeeded!\n"
  I0423 16:14:13.052119 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:14:13.052310 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.221 80'
  I0423 16:14:15.268612 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.221 80\n"
  I0423 16:14:15.268702 24 builder.go:147] stdout: ""
  I0423 16:14:15.268824 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.221 80'
  I0423 16:14:17.498072 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.221 80\n"
  I0423 16:14:17.498150 24 builder.go:147] stdout: ""
  I0423 16:14:17.498265 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.221 80'
  I0423 16:14:19.718968 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.221 80\n"
  I0423 16:14:19.719080 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/23/25 16:14:19.719
  I0423 16:14:19.748551 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.32.0.221 80'
  I0423 16:14:21.941506 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.32.0.221 80\n"
  I0423 16:14:21.941859 24 builder.go:147] stdout: "pod1"
  I0423 16:14:21.943277 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80'
  I0423 16:14:24.208618 24 builder.go:135] rc: 1
  I0423 16:14:24.209229 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.221 80
  nc: connect to 10.32.0.221 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 16:14:24.213292 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80'
  I0423 16:14:26.455642 24 builder.go:135] rc: 1
  I0423 16:14:26.455871 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.221 80
  nc: connect to 10.32.0.221 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 16:14:26.456153 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80'
  I0423 16:14:28.699616 24 builder.go:135] rc: 1
  I0423 16:14:28.700052 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-9602 exec execpodccjxg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.221 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.32.0.221 80
  nc: connect to 10.32.0.221 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0423 16:14:28.701099 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9602" for this suite. @ 04/23/25 16:14:28.708
• [22.534 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 04/23/25 16:14:28.719
  I0423 16:14:28.720234 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:14:28.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:28.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:28.755
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-641 @ 04/23/25 16:14:28.762
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/23/25 16:14:28.787
  STEP: creating service externalsvc in namespace services-641 @ 04/23/25 16:14:28.787
  STEP: creating replication controller externalsvc in namespace services-641 @ 04/23/25 16:14:28.818
  I0423 16:14:28.831830      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-641, replica count: 2
  I0423 16:14:31.885804      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/23/25 16:14:31.891
  I0423 16:14:31.926587 24 resource.go:361] Creating new exec pod
  I0423 16:14:33.954943 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-641 exec execpodfhx5q -- /bin/sh -x -c nslookup clusterip-service.services-641.svc.cluster.local'
  I0423 16:14:34.343753 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-641.svc.cluster.local\n"
  I0423 16:14:34.343802 24 builder.go:147] stdout: "Server:\t\t10.32.0.10\nAddress:\t10.32.0.10#53\n\nclusterip-service.services-641.svc.cluster.local\tcanonical name = externalsvc.services-641.svc.cluster.local.\nName:\texternalsvc.services-641.svc.cluster.local\nAddress: 10.32.0.201\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-641, will wait for the garbage collector to delete the pods @ 04/23/25 16:14:34.343
  I0423 16:14:34.412874 24 resources.go:139] Deleting ReplicationController externalsvc took: 11.526457ms
  I0423 16:14:34.514196 24 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.324506ms
  I0423 16:14:37.658354 24 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0423 16:14:37.687981 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-641" for this suite. @ 04/23/25 16:14:37.695
• [8.985 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/23/25 16:14:37.705
  I0423 16:14:37.705089 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename controllerrevisions @ 04/23/25 16:14:37.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:37.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:37.721
  STEP: Creating DaemonSet "e2e-4dkdx-daemon-set" @ 04/23/25 16:14:37.809
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 16:14:37.82
  I0423 16:14:37.918654 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 0
  I0423 16:14:37.918769 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:14:38.832940 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 0
  I0423 16:14:38.833008 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:14:39.835995 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 1
  I0423 16:14:39.836069 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:14:40.831559 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 1
  I0423 16:14:40.831642 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:14:41.837356 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 1
  I0423 16:14:41.837534 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:14:42.829760 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 1
  I0423 16:14:42.829843 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:14:43.831113 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 1
  I0423 16:14:43.831176 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:14:44.834939 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 1
  I0423 16:14:44.835010 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:14:45.832567 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 2
  I0423 16:14:45.832636 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-4dkdx-daemon-set
  STEP: Confirm DaemonSet "e2e-4dkdx-daemon-set" successfully created with "daemonset-name=e2e-4dkdx-daemon-set" label @ 04/23/25 16:14:45.837
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-4dkdx-daemon-set" @ 04/23/25 16:14:45.847
  I0423 16:14:45.853570 24 controller_revision.go:162] Located ControllerRevision: "e2e-4dkdx-daemon-set-7d9fd94987"
  STEP: Patching ControllerRevision "e2e-4dkdx-daemon-set-7d9fd94987" @ 04/23/25 16:14:45.859
  I0423 16:14:45.870864 24 controller_revision.go:173] e2e-4dkdx-daemon-set-7d9fd94987 has been patched
  STEP: Create a new ControllerRevision @ 04/23/25 16:14:45.87
  I0423 16:14:45.878631 24 controller_revision.go:191] Created ControllerRevision: e2e-4dkdx-daemon-set-8fcdff6c5
  STEP: Confirm that there are two ControllerRevisions @ 04/23/25 16:14:45.878
  I0423 16:14:45.878760 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 16:14:45.883634 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-4dkdx-daemon-set-7d9fd94987" @ 04/23/25 16:14:45.883
  STEP: Confirm that there is only one ControllerRevision @ 04/23/25 16:14:45.896
  I0423 16:14:45.896348 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 16:14:45.902618 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-4dkdx-daemon-set-8fcdff6c5" @ 04/23/25 16:14:45.908
  I0423 16:14:45.922290 24 controller_revision.go:220] e2e-4dkdx-daemon-set-8fcdff6c5 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/23/25 16:14:45.922
  W0423 16:14:45.933902      24 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/23/25 16:14:45.934
  I0423 16:14:45.934161 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 16:14:46.935000 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 16:14:46.944981 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-4dkdx-daemon-set-8fcdff6c5=updated" @ 04/23/25 16:14:46.945
  STEP: Confirm that there is only one ControllerRevision @ 04/23/25 16:14:46.961
  I0423 16:14:46.961567 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0423 16:14:46.968593 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0423 16:14:46.974226 24 controller_revision.go:246] ControllerRevision "e2e-4dkdx-daemon-set-574c588b8b" has revision 3
  STEP: Deleting DaemonSet "e2e-4dkdx-daemon-set" @ 04/23/25 16:14:46.981
  STEP: deleting DaemonSet.extensions e2e-4dkdx-daemon-set in namespace controllerrevisions-8353, will wait for the garbage collector to delete the pods @ 04/23/25 16:14:46.981
  I0423 16:14:47.046850 24 resources.go:139] Deleting DaemonSet.extensions e2e-4dkdx-daemon-set took: 8.144434ms
  I0423 16:14:47.147172 24 resources.go:163] Terminating DaemonSet.extensions e2e-4dkdx-daemon-set pods took: 100.315874ms
  I0423 16:14:49.355478 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-4dkdx-daemon-set: 0
  I0423 16:14:49.355585 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-4dkdx-daemon-set
  I0423 16:14:49.362760 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5805"},"items":null}

  I0423 16:14:49.370095 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5805"},"items":null}

  I0423 16:14:49.400400 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8353" for this suite. @ 04/23/25 16:14:49.479
• [11.782 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/23/25 16:14:49.489
  I0423 16:14:49.489240 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename conformance-tests @ 04/23/25 16:14:49.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:49.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:49.52
  STEP: Getting node addresses @ 04/23/25 16:14:49.525
  I0423 16:14:49.525833 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0423 16:14:49.579108 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-8232" for this suite. @ 04/23/25 16:14:49.584
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 04/23/25 16:14:49.596
  I0423 16:14:49.596374 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 16:14:49.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:49.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:49.632
  STEP: Creating a Serviceaccount "e2e-sa-lxp47" in namespace "svcaccounts-7978" @ 04/23/25 16:14:49.64
  STEP: Creating a ServiceaccountToken "e2e-sa-lxp47" in namespace "svcaccounts-7978" @ 04/23/25 16:14:49.65
  STEP: Creating a TokenReview for "e2e-sa-lxp47" in namespace "svcaccounts-7978" @ 04/23/25 16:14:49.662
  I0423 16:14:49.667977 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7978" for this suite. @ 04/23/25 16:14:49.679
• [0.092 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/23/25 16:14:49.696
  I0423 16:14:49.696203 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 16:14:49.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:49.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:49.736
  I0423 16:14:49.744355 24 replica_set.go:191] Creating ReplicaSet my-hostname-basic-cb3a3b3d-e47f-4d4f-aa35-5a54b01220a7
  I0423 16:14:49.764811 24 resource.go:87] Pod name my-hostname-basic-cb3a3b3d-e47f-4d4f-aa35-5a54b01220a7: Found 0 pods out of 1
  I0423 16:14:54.808004 24 resource.go:87] Pod name my-hostname-basic-cb3a3b3d-e47f-4d4f-aa35-5a54b01220a7: Found 1 pods out of 1
  I0423 16:14:54.808063 24 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-cb3a3b3d-e47f-4d4f-aa35-5a54b01220a7" is running
  I0423 16:14:54.813875 24 replica_set.go:220] Pod "my-hostname-basic-cb3a3b3d-e47f-4d4f-aa35-5a54b01220a7-qhn5b" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:14:51 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:14:49 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:14:51 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:14:51 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:14:49 +0000 UTC Reason: Message:}])
  I0423 16:14:54.813939 24 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/23/25 16:14:54.813
  I0423 16:14:54.923129 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6529" for this suite. @ 04/23/25 16:14:54.93
• [5.250 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 04/23/25 16:14:54.946
  I0423 16:14:54.946145 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 16:14:54.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:14:54.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:14:54.969
  I0423 16:14:54.978842 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/23/25 16:14:56.449
  I0423 16:14:56.449679 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 create -f -'
  I0423 16:14:58.578282 24 builder.go:146] stderr: ""
  I0423 16:14:58.578378 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1569-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0423 16:14:58.578539 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 delete e2e-test-crd-publish-openapi-1569-crds test-foo'
  I0423 16:14:58.721294 24 builder.go:146] stderr: ""
  I0423 16:14:58.721397 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1569-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0423 16:14:58.721551 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 apply -f -'
  I0423 16:14:58.865632 24 builder.go:146] stderr: ""
  I0423 16:14:58.865721 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1569-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0423 16:14:58.865824 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 delete e2e-test-crd-publish-openapi-1569-crds test-foo'
  I0423 16:14:58.987325 24 builder.go:146] stderr: ""
  I0423 16:14:58.987383 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1569-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/23/25 16:14:58.987
  I0423 16:14:58.987536 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 create -f -'
  I0423 16:14:59.110108 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/23/25 16:14:59.11
  I0423 16:14:59.110398 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 create -f -'
  I0423 16:14:59.240991 24 builder.go:135] rc: 1
  I0423 16:14:59.241167 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 apply -f -'
  I0423 16:14:59.385990 24 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/23/25 16:14:59.386
  I0423 16:14:59.386333 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 create -f -'
  I0423 16:14:59.502462 24 builder.go:135] rc: 1
  I0423 16:14:59.502628 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 --namespace=crd-publish-openapi-5542 apply -f -'
  I0423 16:14:59.628940 24 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/23/25 16:14:59.629
  I0423 16:14:59.629552 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 explain e2e-test-crd-publish-openapi-1569-crds'
  I0423 16:14:59.809521 24 builder.go:146] stderr: ""
  I0423 16:14:59.809627 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1569-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/23/25 16:14:59.809
  I0423 16:14:59.810024 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 explain e2e-test-crd-publish-openapi-1569-crds.metadata'
  I0423 16:14:59.907971 24 builder.go:146] stderr: ""
  I0423 16:14:59.908160 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1569-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0423 16:14:59.908502 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 explain e2e-test-crd-publish-openapi-1569-crds.spec'
  I0423 16:15:00.057152 24 builder.go:146] stderr: ""
  I0423 16:15:00.057219 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1569-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0423 16:15:00.057373 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 explain e2e-test-crd-publish-openapi-1569-crds.spec.bars'
  I0423 16:15:00.267953 24 builder.go:146] stderr: ""
  I0423 16:15:00.268032 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1569-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/23/25 16:15:00.278
  I0423 16:15:00.278679 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5542 explain e2e-test-crd-publish-openapi-1569-crds.spec.bars2'
  I0423 16:15:00.425498 24 builder.go:135] rc: 1
  I0423 16:15:01.972261 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5542" for this suite. @ 04/23/25 16:15:01.984
• [7.052 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/23/25 16:15:01.998
  I0423 16:15:01.998446 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:15:02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:15:02.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:15:02.036
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/23/25 16:15:02.042
  STEP: Saw pod success @ 04/23/25 16:15:06.083
  I0423 16:15:06.090959 24 output.go:207] Trying to get logs from node worker00 pod pod-2fd67d1a-58ac-4231-be59-e0fb77d1c64b container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:15:06.115
  I0423 16:15:06.143259 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6318" for this suite. @ 04/23/25 16:15:06.151
• [4.170 seconds]
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 04/23/25 16:15:06.169
  I0423 16:15:06.170030 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 16:15:06.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:15:06.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:15:06.205
  I0423 16:15:10.261117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5133" for this suite. @ 04/23/25 16:15:10.266
• [4.113 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/23/25 16:15:10.281
  I0423 16:15:10.281986 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:15:10.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:15:10.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:15:10.302
  STEP: Creating configMap with name projected-configmap-test-volume-4ae7f256-8025-4c38-aba3-eddc6be32fac @ 04/23/25 16:15:10.306
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:15:10.313
  STEP: Saw pod success @ 04/23/25 16:15:14.349
  I0423 16:15:14.355247 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-de592880-3ecf-47a3-b219-617b39a047c0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:15:14.37
  I0423 16:15:14.438128 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2560" for this suite. @ 04/23/25 16:15:14.443
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/23/25 16:15:14.461
  I0423 16:15:14.461173 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 16:15:14.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:15:14.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:15:14.514
  STEP: Create a pod @ 04/23/25 16:15:14.52
  STEP: patching /status @ 04/23/25 16:15:16.561
  I0423 16:15:16.580899 24 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0423 16:15:16.581131 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6710" for this suite. @ 04/23/25 16:15:16.589
• [2.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 04/23/25 16:15:16.602
  I0423 16:15:16.602625 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename disruption @ 04/23/25 16:15:16.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:15:16.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:15:16.637
  STEP: creating the pdb @ 04/23/25 16:15:16.644
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:15:16.654
  STEP: updating the pdb @ 04/23/25 16:15:18.66
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:15:18.673
  STEP: patching the pdb @ 04/23/25 16:15:20.68
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:15:20.704
  STEP: Waiting for the pdb to be deleted @ 04/23/25 16:15:22.726
  I0423 16:15:22.731771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1014" for this suite. @ 04/23/25 16:15:22.738
• [6.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 04/23/25 16:15:22.747
  I0423 16:15:22.747735 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 16:15:22.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:15:22.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:15:22.775
  STEP: Creating a test externalName service @ 04/23/25 16:15:22.781
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2261.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local; sleep 1; done
   @ 04/23/25 16:15:22.79
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2261.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local; sleep 1; done
   @ 04/23/25 16:15:22.79
  STEP: creating a pod to probe DNS @ 04/23/25 16:15:22.79
  STEP: submitting the pod to kubernetes @ 04/23/25 16:15:22.79
  STEP: retrieving the pod @ 04/23/25 16:15:36.884
  STEP: looking for the results for each expected name from probers @ 04/23/25 16:15:36.891
  I0423 16:15:36.904753 24 dns_common.go:571] DNS probes using dns-test-0df51cce-a6a2-4ca7-a70d-f393be2bb372 succeeded

  STEP: changing the externalName to bar.example.com @ 04/23/25 16:15:36.904
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2261.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local; sleep 1; done
   @ 04/23/25 16:15:36.922
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2261.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local; sleep 1; done
   @ 04/23/25 16:15:36.922
  STEP: creating a second pod to probe DNS @ 04/23/25 16:15:36.922
  STEP: submitting the pod to kubernetes @ 04/23/25 16:15:36.923
  STEP: retrieving the pod @ 04/23/25 16:15:38.966
  STEP: looking for the results for each expected name from probers @ 04/23/25 16:15:38.972
  I0423 16:15:38.980469 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:38.988651 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:38.988781 24 dns_common.go:506] Lookups using dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 failed for: [agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local]

  I0423 16:15:38.998181 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:15:39.009881 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:15:39.019714 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:15:43.979276 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:43.985498 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:43.985583 24 dns_common.go:506] Lookups using dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 failed for: [agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local]

  I0423 16:15:43.994489 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:15:44.003434 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:15:44.016789 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:15:48.983497 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:48.991195 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:48.991297 24 dns_common.go:506] Lookups using dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 failed for: [agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local]

  I0423 16:15:49.005676 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:15:49.019623 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:15:49.029632 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:15:53.983664 24 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:53.994371 24 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local from pod  dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0423 16:15:53.994576 24 dns_common.go:506] Lookups using dns-2261/dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 failed for: [agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local]

  I0423 16:15:54.011826 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:15:54.028396 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:15:54.039838 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:15:58.988142 24 dns_common.go:571] DNS probes using dns-test-80abe198-4aa5-4dbe-9456-cd49b79299d2 succeeded

  STEP: changing the service to type=ClusterIP @ 04/23/25 16:15:58.988
  W0423 16:15:59.019994      24 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2261.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-2261.svc.cluster.local; sleep 1; done
   @ 04/23/25 16:15:59.02
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2261.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2261.svc.cluster.local; sleep 1; done
   @ 04/23/25 16:15:59.02
  STEP: creating a third pod to probe DNS @ 04/23/25 16:15:59.02
  STEP: submitting the pod to kubernetes @ 04/23/25 16:15:59.028
  STEP: retrieving the pod @ 04/23/25 16:16:15.105
  STEP: looking for the results for each expected name from probers @ 04/23/25 16:16:15.113
  I0423 16:16:15.132646 24 dns_common.go:571] DNS probes using dns-test-b29d5270-765f-4b8e-b25d-7404e5c6025f succeeded

  STEP: deleting the pod @ 04/23/25 16:16:15.132
  STEP: deleting the pod @ 04/23/25 16:16:15.168
  STEP: deleting the pod @ 04/23/25 16:16:15.214
  STEP: deleting the test externalName service @ 04/23/25 16:16:15.267
  I0423 16:16:15.305817 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2261" for this suite. @ 04/23/25 16:16:15.311
• [52.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 04/23/25 16:16:15.322
  I0423 16:16:15.323173 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:16:15.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:16:15.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:16:15.346
  STEP: creating a replication controller @ 04/23/25 16:16:15.35
  I0423 16:16:15.350235 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 create -f -'
  I0423 16:16:15.566940 24 builder.go:146] stderr: ""
  I0423 16:16:15.567024 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 16:16:15.569
  I0423 16:16:15.569959 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 16:16:15.751168 24 builder.go:146] stderr: ""
  I0423 16:16:15.751219 24 builder.go:147] stdout: "update-demo-nautilus-6j9cr update-demo-nautilus-7svg9 "
  I0423 16:16:15.751307 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-6j9cr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:15.861603 24 builder.go:146] stderr: ""
  I0423 16:16:15.862043 24 builder.go:147] stdout: ""
  I0423 16:16:15.862096 24 kubectl.go:2509] update-demo-nautilus-6j9cr is created but not running
  I0423 16:16:20.862449 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 16:16:21.106696 24 builder.go:146] stderr: ""
  I0423 16:16:21.106769 24 builder.go:147] stdout: "update-demo-nautilus-6j9cr update-demo-nautilus-7svg9 "
  I0423 16:16:21.106872 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-6j9cr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:21.257735 24 builder.go:146] stderr: ""
  I0423 16:16:21.257845 24 builder.go:147] stdout: ""
  I0423 16:16:21.257871 24 kubectl.go:2509] update-demo-nautilus-6j9cr is created but not running
  I0423 16:16:26.258327 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 16:16:26.421403 24 builder.go:146] stderr: ""
  I0423 16:16:26.421685 24 builder.go:147] stdout: "update-demo-nautilus-6j9cr update-demo-nautilus-7svg9 "
  I0423 16:16:26.421910 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-6j9cr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:26.572271 24 builder.go:146] stderr: ""
  I0423 16:16:26.572328 24 builder.go:147] stdout: "true"
  I0423 16:16:26.572448 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-6j9cr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 16:16:26.683669 24 builder.go:146] stderr: ""
  I0423 16:16:26.683716 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 16:16:26.683732 24 kubectl.go:2400] validating pod update-demo-nautilus-6j9cr
  I0423 16:16:26.688785 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 16:16:26.688907 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 16:16:26.688929 24 kubectl.go:2527] update-demo-nautilus-6j9cr is verified up and running
  I0423 16:16:26.689866 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-7svg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:26.791551 24 builder.go:146] stderr: ""
  I0423 16:16:26.791821 24 builder.go:147] stdout: "true"
  I0423 16:16:26.791914 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-7svg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 16:16:26.913520 24 builder.go:146] stderr: ""
  I0423 16:16:26.913575 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 16:16:26.913598 24 kubectl.go:2400] validating pod update-demo-nautilus-7svg9
  I0423 16:16:26.924461 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 16:16:26.924578 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 16:16:26.924614 24 kubectl.go:2527] update-demo-nautilus-7svg9 is verified up and running
  STEP: scaling down the replication controller @ 04/23/25 16:16:26.924
  I0423 16:16:26.930341 24 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0423 16:16:26.930448 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0423 16:16:28.079280 24 builder.go:146] stderr: ""
  I0423 16:16:28.079360 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 16:16:28.079
  I0423 16:16:28.079734 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 16:16:28.214166 24 builder.go:146] stderr: ""
  I0423 16:16:28.214279 24 builder.go:147] stdout: "update-demo-nautilus-6j9cr update-demo-nautilus-7svg9 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/23/25 16:16:28.214
  I0423 16:16:33.217635 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 16:16:33.365581 24 builder.go:146] stderr: ""
  I0423 16:16:33.365666 24 builder.go:147] stdout: "update-demo-nautilus-7svg9 "
  I0423 16:16:33.365791 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-7svg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:33.501620 24 builder.go:146] stderr: ""
  I0423 16:16:33.501682 24 builder.go:147] stdout: "true"
  I0423 16:16:33.501762 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-7svg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 16:16:33.630747 24 builder.go:146] stderr: ""
  I0423 16:16:33.630856 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 16:16:33.630911 24 kubectl.go:2400] validating pod update-demo-nautilus-7svg9
  I0423 16:16:33.641481 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 16:16:33.641591 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 16:16:33.641648 24 kubectl.go:2527] update-demo-nautilus-7svg9 is verified up and running
  STEP: scaling up the replication controller @ 04/23/25 16:16:33.641
  I0423 16:16:33.650100 24 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0423 16:16:33.650210 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0423 16:16:34.819520 24 builder.go:146] stderr: ""
  I0423 16:16:34.819584 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 16:16:34.819
  I0423 16:16:34.819724 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 16:16:34.959653 24 builder.go:146] stderr: ""
  I0423 16:16:34.959898 24 builder.go:147] stdout: "update-demo-nautilus-7svg9 update-demo-nautilus-rdlrl "
  I0423 16:16:34.960013 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-7svg9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:35.056935 24 builder.go:146] stderr: ""
  I0423 16:16:35.057029 24 builder.go:147] stdout: "true"
  I0423 16:16:35.057109 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-7svg9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 16:16:35.152318 24 builder.go:146] stderr: ""
  I0423 16:16:35.152383 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 16:16:35.152421 24 kubectl.go:2400] validating pod update-demo-nautilus-7svg9
  I0423 16:16:35.158285 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 16:16:35.158460 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 16:16:35.158568 24 kubectl.go:2527] update-demo-nautilus-7svg9 is verified up and running
  I0423 16:16:35.158631 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-rdlrl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 16:16:35.252561 24 builder.go:146] stderr: ""
  I0423 16:16:35.252631 24 builder.go:147] stdout: "true"
  I0423 16:16:35.252737 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods update-demo-nautilus-rdlrl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 16:16:35.386950 24 builder.go:146] stderr: ""
  I0423 16:16:35.387028 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 16:16:35.391606 24 kubectl.go:2400] validating pod update-demo-nautilus-rdlrl
  I0423 16:16:35.401033 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 16:16:35.401154 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 16:16:35.401185 24 kubectl.go:2527] update-demo-nautilus-rdlrl is verified up and running
  STEP: using delete to clean up resources @ 04/23/25 16:16:35.401
  I0423 16:16:35.401343 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 delete --grace-period=0 --force -f -'
  I0423 16:16:35.558748 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 16:16:35.562465 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0423 16:16:35.563330 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get rc,svc -l name=update-demo --no-headers'
  I0423 16:16:35.725532 24 builder.go:146] stderr: "No resources found in kubectl-9381 namespace.\n"
  I0423 16:16:35.725618 24 builder.go:147] stdout: ""
  I0423 16:16:35.725752 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9381 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 16:16:35.812919 24 builder.go:146] stderr: ""
  I0423 16:16:35.812965 24 builder.go:147] stdout: ""
  I0423 16:16:35.813300 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9381" for this suite. @ 04/23/25 16:16:35.818
• [20.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 04/23/25 16:16:35.828
  I0423 16:16:35.829587 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:16:35.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:16:35.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:16:35.858
  STEP: creating service in namespace services-627 @ 04/23/25 16:16:35.861
  STEP: creating service affinity-nodeport-transition in namespace services-627 @ 04/23/25 16:16:35.861
  STEP: creating replication controller affinity-nodeport-transition in namespace services-627 @ 04/23/25 16:16:35.873
  I0423 16:16:35.886993      24 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-627, replica count: 3
  I0423 16:16:38.942384      24 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:16:38.981265 24 resource.go:361] Creating new exec pod
  I0423 16:16:42.023124 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-627 exec execpod-affinitym9thj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0423 16:16:42.279608 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.32.0.33) 80 port [tcp/http] succeeded!\n"
  I0423 16:16:42.279732 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:16:42.279861 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-627 exec execpod-affinitym9thj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.33 80'
  I0423 16:16:42.583590 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.33 80\nConnection to 10.32.0.33 80 port [tcp/http] succeeded!\n"
  I0423 16:16:42.583701 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:16:42.583866 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-627 exec execpod-affinitym9thj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30290'
  I0423 16:16:42.852797 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30290\nConnection to 192.168.58.100 30290 port [tcp/*] succeeded!\n"
  I0423 16:16:42.852888 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:16:42.853035 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-627 exec execpod-affinitym9thj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30290'
  I0423 16:16:43.107929 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 30290\nConnection to 192.168.58.101 30290 port [tcp/*] succeeded!\n"
  I0423 16:16:43.108012 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:16:43.140725 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-627 exec execpod-affinitym9thj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:30290/ ; done'
  I0423 16:16:43.553004 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n"
  I0423 16:16:43.553276 24 builder.go:147] stdout: "\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-7prx6\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-7prx6\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-b6vnm\naffinity-nodeport-transition-7prx6"
  I0423 16:16:43.553308 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553342 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:43.553362 24 service.go:242] Received response from host: affinity-nodeport-transition-7prx6
  I0423 16:16:43.553378 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553392 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:43.553404 24 service.go:242] Received response from host: affinity-nodeport-transition-7prx6
  I0423 16:16:43.553418 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:43.553456 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553478 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:43.553491 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:43.553503 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553516 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553533 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553551 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:43.553584 24 service.go:242] Received response from host: affinity-nodeport-transition-b6vnm
  I0423 16:16:43.553604 24 service.go:242] Received response from host: affinity-nodeport-transition-7prx6
  I0423 16:16:43.571276 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-627 exec execpod-affinitym9thj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:30290/ ; done'
  I0423 16:16:44.034140 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:30290/\n"
  I0423 16:16:44.034225 24 builder.go:147] stdout: "\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv\naffinity-nodeport-transition-qxbkv"
  I0423 16:16:44.034258 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034283 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034304 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034325 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034345 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034368 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034387 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034412 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034474 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034494 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034513 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034533 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034554 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034574 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034594 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034614 24 service.go:242] Received response from host: affinity-nodeport-transition-qxbkv
  I0423 16:16:44.034719 24 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-627, will wait for the garbage collector to delete the pods @ 04/23/25 16:16:44.064
  I0423 16:16:44.134060 24 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 11.019462ms
  I0423 16:16:44.234281 24 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.224346ms
  I0423 16:16:47.490220 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-627" for this suite. @ 04/23/25 16:16:47.496
• [11.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/23/25 16:16:47.509
  I0423 16:16:47.509354 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 16:16:47.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:16:47.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:16:47.545
  I0423 16:16:47.564272 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5030" for this suite. @ 04/23/25 16:16:47.6
• [0.103 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/23/25 16:16:47.611
  I0423 16:16:47.611829 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 16:16:47.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:16:47.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:16:47.652
  STEP: create the deployment @ 04/23/25 16:16:47.665
  W0423 16:16:47.676328      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/23/25 16:16:47.676
  STEP: delete the deployment @ 04/23/25 16:16:48.189
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/23/25 16:16:48.217
  STEP: Gathering metrics @ 04/23/25 16:16:48.747
  I0423 16:16:48.861598 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 16:16:48.861991 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4795" for this suite. @ 04/23/25 16:16:48.871
• [1.275 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 04/23/25 16:16:48.887
  I0423 16:16:48.887270 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 16:16:48.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:16:48.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:16:48.924
  STEP: Creating pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781 @ 04/23/25 16:16:48.931
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 16:16:50.968
  I0423 16:16:50.974396 24 container_probe.go:1749] Initial restart count of pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 is 0
  I0423 16:16:50.983023 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:16:52.989807 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:16:54.995867 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:16:57.000977 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:16:59.008763 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:01.014595 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:03.020217 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:05.027193 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:07.034721 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:09.042876 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:11.048674 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:13.057080 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:15.065479 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:17.071049 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:19.077132 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:21.083916 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:23.091733 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:25.098411 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:27.111677 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:29.119751 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:31.126382 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:33.132099 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:35.141166 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:37.145755 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:39.155902 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:41.162580 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:43.169382 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:45.176747 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:47.183922 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:49.191024 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:51.198267 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:53.205050 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:55.210823 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:57.215575 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:17:59.222576 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:01.230586 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:03.236024 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:05.243523 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:07.250049 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:09.258258 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:11.265526 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:13.274215 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:15.280590 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:17.285628 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:19.292202 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:21.299501 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:23.306143 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:25.317809 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:27.325317 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:29.335319 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:31.343200 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:33.350794 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:35.357671 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:37.365629 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:39.373671 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:41.382573 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:43.398002 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:45.402972 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:47.410651 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:49.418495 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:51.425791 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:53.435776 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:55.441649 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:57.448949 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:18:59.456287 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:01.461502 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:03.471054 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:05.477682 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:07.482759 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:09.492786 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:11.501604 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:13.507709 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:15.514956 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:17.522839 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:19.529764 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:21.535770 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:23.544212 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:25.554560 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:27.561347 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:29.569882 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:31.574766 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:33.582111 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:35.589883 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:37.596390 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:39.602639 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:41.607267 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:43.614868 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:45.621704 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:47.627789 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:49.633756 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:51.640613 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:53.646863 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:55.655440 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:57.661360 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:19:59.669964 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:01.677115 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:03.684152 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:05.691150 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:07.697415 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:09.704928 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:11.709998 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:13.713971 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:15.719750 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:17.727142 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:19.736717 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:21.742308 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:23.748764 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:25.754758 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:27.764362 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:29.768474 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:31.774136 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:33.777310 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:35.781683 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:37.785975 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:39.793272 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:41.799043 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:43.803965 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:45.807844 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:47.812991 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  I0423 16:20:49.818180 24 container_probe.go:1759] Get pod liveness-8c0f7c17-549c-4e17-91a5-c83208a960c1 in namespace container-probe-5781
  STEP: deleting the pod @ 04/23/25 16:20:51.819
  I0423 16:20:51.848803 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5781" for this suite. @ 04/23/25 16:20:51.865
• [243.000 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/23/25 16:20:51.887
  I0423 16:20:51.888056 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 16:20:51.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:20:51.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:20:51.911
  STEP: Saw pod success @ 04/23/25 16:20:59.987
  I0423 16:20:59.989891 24 output.go:207] Trying to get logs from node worker00 pod client-envvars-003423d9-435c-42e4-87f2-1cdf42da8980 container env3cont: <nil>
  STEP: delete the pod @ 04/23/25 16:20:59.997
  I0423 16:21:00.019115 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8316" for this suite. @ 04/23/25 16:21:00.024
• [8.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/23/25 16:21:00.036
  I0423 16:21:00.036204 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:21:00.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:21:00.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:21:00.059
  STEP: Creating secret with name secret-test-37d74891-4d80-4004-babc-ad9d99b30e5c @ 04/23/25 16:21:00.068
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:21:00.076
  STEP: Saw pod success @ 04/23/25 16:21:04.122
  I0423 16:21:04.127281 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-d51fad08-d78b-45aa-8687-cc4eef1706cc container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:21:04.136
  I0423 16:21:04.156237 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4034" for this suite. @ 04/23/25 16:21:04.162
• [4.136 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 04/23/25 16:21:04.172
  I0423 16:21:04.172680 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/23/25 16:21:04.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:21:04.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:21:04.196
  I0423 16:21:04.200703 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0423 16:22:04.201213 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0423 16:22:04.206659 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 04/23/25 16:22:04.206
  I0423 16:22:04.429920 24 taints.go:463] Pod1 is running on worker00. Tainting Node
  I0423 16:22:06.667359 24 taints.go:471] Pod2 is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/23/25 16:22:06.667
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 16:22:06.693
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/23/25 16:22:06.698
  I0423 16:22:12.535666 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0423 16:22:32.609174 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 16:22:32.641
  I0423 16:22:32.662451 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-6669" for this suite. @ 04/23/25 16:22:32.673
• [88.527 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 04/23/25 16:22:32.7
  I0423 16:22:32.700233 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 16:22:32.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:22:32.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:22:32.738
  I0423 16:22:32.746920 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 16:22:34.237
  I0423 16:22:34.237813 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-8712 --namespace=crd-publish-openapi-8712 create -f -'
  I0423 16:22:34.386955 24 builder.go:146] stderr: ""
  I0423 16:22:34.387022 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7158-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0423 16:22:34.387079 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-8712 --namespace=crd-publish-openapi-8712 delete e2e-test-crd-publish-openapi-7158-crds test-cr'
  I0423 16:22:34.471109 24 builder.go:146] stderr: ""
  I0423 16:22:34.471188 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7158-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0423 16:22:34.471275 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-8712 --namespace=crd-publish-openapi-8712 apply -f -'
  I0423 16:22:34.563783 24 builder.go:146] stderr: ""
  I0423 16:22:34.563825 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7158-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0423 16:22:34.563891 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-8712 --namespace=crd-publish-openapi-8712 delete e2e-test-crd-publish-openapi-7158-crds test-cr'
  I0423 16:22:34.715394 24 builder.go:146] stderr: ""
  I0423 16:22:34.715528 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7158-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/23/25 16:22:34.715
  I0423 16:22:34.715686 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-8712 explain e2e-test-crd-publish-openapi-7158-crds'
  I0423 16:22:34.794188 24 builder.go:146] stderr: ""
  I0423 16:22:34.794291 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7158-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0423 16:22:36.154770 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8712" for this suite. @ 04/23/25 16:22:36.162
• [3.470 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/23/25 16:22:36.17
  I0423 16:22:36.170418 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 16:22:36.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:22:36.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:22:36.235
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 16:22:36.263
  STEP: create the pod with lifecycle hook @ 04/23/25 16:22:38.28
  STEP: delete the pod with lifecycle hook @ 04/23/25 16:22:40.298
  STEP: check prestop hook @ 04/23/25 16:22:44.318
  I0423 16:22:44.410867 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-556" for this suite. @ 04/23/25 16:22:44.417
• [8.257 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 04/23/25 16:22:44.428
  I0423 16:22:44.428049 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:22:44.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:22:44.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:22:44.462
  STEP: creating service in namespace services-3655 @ 04/23/25 16:22:44.468
  STEP: creating service affinity-clusterip in namespace services-3655 @ 04/23/25 16:22:44.468
  STEP: creating replication controller affinity-clusterip in namespace services-3655 @ 04/23/25 16:22:44.483
  I0423 16:22:44.500339      24 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-3655, replica count: 3
  I0423 16:22:47.551399      24 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:22:47.559944 24 resource.go:361] Creating new exec pod
  I0423 16:22:50.577666 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-3655 exec execpod-affinitymqghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0423 16:22:50.786922 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.32.0.166) 80 port [tcp/http] succeeded!\n"
  I0423 16:22:50.786994 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:22:50.787151 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-3655 exec execpod-affinitymqghz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.166 80'
  I0423 16:22:50.955182 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.166 80\nConnection to 10.32.0.166 80 port [tcp/http] succeeded!\n"
  I0423 16:22:50.955238 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:22:50.955310 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-3655 exec execpod-affinitymqghz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.166:80/ ; done'
  I0423 16:22:51.251085 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.166:80/\n"
  I0423 16:22:51.251166 24 builder.go:147] stdout: "\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7\naffinity-clusterip-wcsp7"
  I0423 16:22:51.251198 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251222 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251242 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251261 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251282 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251300 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251377 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251394 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251412 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251430 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251449 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251518 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251537 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251557 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251575 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251593 24 service.go:242] Received response from host: affinity-clusterip-wcsp7
  I0423 16:22:51.251714 24 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3655, will wait for the garbage collector to delete the pods @ 04/23/25 16:22:51.277
  I0423 16:22:51.344359 24 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.785083ms
  I0423 16:22:51.446081 24 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.720041ms
  I0423 16:22:54.874600 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3655" for this suite. @ 04/23/25 16:22:54.884
• [10.466 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 04/23/25 16:22:54.895
  I0423 16:22:54.895903 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:22:54.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:22:54.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:22:54.925
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 16:22:54.931
  I0423 16:22:54.931940 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-3172 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0423 16:22:55.036551 24 builder.go:146] stderr: ""
  I0423 16:22:55.036613 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/23/25 16:22:55.036
  I0423 16:22:55.041197 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-3172 delete pods e2e-test-httpd-pod'
  I0423 16:22:56.752147 24 builder.go:146] stderr: ""
  I0423 16:22:56.752212 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 16:22:56.753388 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3172" for this suite. @ 04/23/25 16:22:56.758
• [1.872 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/23/25 16:22:56.768
  I0423 16:22:56.768502 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:22:56.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:22:56.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:22:56.795
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/23/25 16:22:56.8
  STEP: Saw pod success @ 04/23/25 16:23:00.826
  I0423 16:23:00.831959 24 output.go:207] Trying to get logs from node worker00 pod pod-8ebd8e46-fccd-4ac0-a32a-12dcc9e928b0 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:23:00.841
  I0423 16:23:00.871173 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6942" for this suite. @ 04/23/25 16:23:00.88
• [4.124 seconds]
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/23/25 16:23:00.892
  I0423 16:23:00.892530 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename certificates @ 04/23/25 16:23:00.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:23:00.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:23:00.917
  STEP: getting /apis @ 04/23/25 16:23:01.541
  STEP: getting /apis/certificates.k8s.io @ 04/23/25 16:23:01.546
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/23/25 16:23:01.548
  STEP: creating @ 04/23/25 16:23:01.55
  STEP: getting @ 04/23/25 16:23:01.567
  STEP: listing @ 04/23/25 16:23:01.569
  STEP: watching @ 04/23/25 16:23:01.572
  I0423 16:23:01.573015 24 certificates.go:316] starting watch
  STEP: patching @ 04/23/25 16:23:01.574
  STEP: updating @ 04/23/25 16:23:01.585
  I0423 16:23:01.591698 24 certificates.go:332] waiting for watch events with expected annotations
  I0423 16:23:01.591790 24 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/23/25 16:23:01.591
  STEP: patching /approval @ 04/23/25 16:23:01.596
  STEP: updating /approval @ 04/23/25 16:23:01.602
  STEP: getting /status @ 04/23/25 16:23:01.607
  STEP: patching /status @ 04/23/25 16:23:01.61
  STEP: updating /status @ 04/23/25 16:23:01.618
  STEP: deleting @ 04/23/25 16:23:01.624
  STEP: deleting a collection @ 04/23/25 16:23:01.634
  I0423 16:23:01.647763 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-4908" for this suite. @ 04/23/25 16:23:01.653
• [0.768 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/23/25 16:23:01.663
  I0423 16:23:01.663616 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename chunking @ 04/23/25 16:23:01.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:23:01.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:23:01.682
  STEP: creating a large number of resources @ 04/23/25 16:23:01.685
  STEP: retrieving those results in paged fashion several times @ 04/23/25 16:23:19.374
  I0423 16:23:19.420189 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 16:23:19.471766 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0423 16:23:19.522866 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0423 16:23:19.571463 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0423 16:23:19.623216 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0423 16:23:19.672318 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0423 16:23:19.724669 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0423 16:23:19.770832 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0423 16:23:19.822935 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0423 16:23:19.871550 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0423 16:23:19.921041 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0423 16:23:19.969681 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0423 16:23:20.022322 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0423 16:23:20.077011 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0423 16:23:20.119564 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0423 16:23:20.170568 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0423 16:23:20.221028 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0423 16:23:20.269165 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0423 16:23:20.319237 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0423 16:23:20.371136 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0423 16:23:20.422031 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0423 16:23:20.472182 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0423 16:23:20.522004 24 chunking.go:98] Retrieved 17/17 results with rv 9524 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0423 16:23:20.570986 24 chunking.go:98] Retrieved 9/17 results with rv 9524 and continue 
  I0423 16:23:20.622186 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 16:23:20.672409 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0423 16:23:20.725163 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0423 16:23:20.773297 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0423 16:23:20.825494 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0423 16:23:20.875835 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0423 16:23:20.927723 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0423 16:23:20.974213 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0423 16:23:21.023339 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0423 16:23:21.072893 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0423 16:23:21.123505 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0423 16:23:21.172838 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0423 16:23:21.221306 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0423 16:23:21.274400 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0423 16:23:21.321105 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0423 16:23:21.373441 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0423 16:23:21.423953 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0423 16:23:21.472942 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0423 16:23:21.521940 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0423 16:23:21.571353 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0423 16:23:21.621808 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0423 16:23:21.671319 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0423 16:23:21.723395 24 chunking.go:98] Retrieved 17/17 results with rv 9527 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUyNywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0423 16:23:21.772154 24 chunking.go:98] Retrieved 9/17 results with rv 9527 and continue 
  I0423 16:23:21.822739 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiIvdGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0423 16:23:21.872935 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I0423 16:23:21.933680 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I0423 16:23:21.971220 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I0423 16:23:22.021830 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I0423 16:23:22.072073 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I0423 16:23:22.121101 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I0423 16:23:22.174224 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I0423 16:23:22.221892 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I0423 16:23:22.271876 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I0423 16:23:22.325683 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I0423 16:23:22.370896 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I0423 16:23:22.421293 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I0423 16:23:22.472023 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I0423 16:23:22.522245 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I0423 16:23:22.571964 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I0423 16:23:22.623485 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I0423 16:23:22.673168 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I0423 16:23:22.722618 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I0423 16:23:22.773168 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I0423 16:23:22.822666 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I0423 16:23:22.872090 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I0423 16:23:22.922613 24 chunking.go:98] Retrieved 17/17 results with rv 9534 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTUzNCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I0423 16:23:22.971062 24 chunking.go:98] Retrieved 9/17 results with rv 9534 and continue 
  STEP: retrieving those results all at once @ 04/23/25 16:23:22.971
  I0423 16:23:23.031001 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3166" for this suite. @ 04/23/25 16:23:23.072
• [21.473 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/23/25 16:23:23.136
  I0423 16:23:23.136485 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 16:23:23.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:23:23.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:23:23.165
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/23/25 16:23:23.181
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/23/25 16:23:38.263
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/23/25 16:23:38.267
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/23/25 16:23:38.278
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/23/25 16:23:38.279
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/23/25 16:23:38.327
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/23/25 16:23:41.356
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/23/25 16:23:42.367
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/23/25 16:23:42.374
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/23/25 16:23:42.375
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/23/25 16:23:42.403
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/23/25 16:23:43.421
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/23/25 16:23:45.441
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/23/25 16:23:45.448
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/23/25 16:23:45.448
  I0423 16:23:45.478842 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7028" for this suite. @ 04/23/25 16:23:45.484
• [22.361 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 04/23/25 16:23:45.498
  I0423 16:23:45.499107 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 16:23:45.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:23:45.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:23:45.527
  STEP: Creating pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171 @ 04/23/25 16:23:45.532
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 16:23:47.566
  I0423 16:23:47.569544 24 container_probe.go:1749] Initial restart count of pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 is 0
  I0423 16:23:47.573269 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:23:49.580252 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:23:51.586957 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:23:53.594442 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:23:55.600619 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:23:57.606140 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:23:59.611015 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:01.616888 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:03.622048 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:05.628083 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:07.635366 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:07.635705 24 container_probe.go:1763] Restart count of pod container-probe-9171/liveness-6601919f-e891-4ad2-b2cb-41718eaee139 is now 1 (20.06599482s elapsed)
  I0423 16:24:09.641022 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:11.646687 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:13.652516 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:15.658278 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:17.665035 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:19.671590 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:21.678207 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:23.683255 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:25.688894 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:27.695731 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:27.696095 24 container_probe.go:1763] Restart count of pod container-probe-9171/liveness-6601919f-e891-4ad2-b2cb-41718eaee139 is now 2 (40.126384145s elapsed)
  I0423 16:24:29.702293 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:31.712808 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:33.731426 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:35.739245 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:37.746962 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:39.752597 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:41.758272 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:43.765183 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:45.769930 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:47.776005 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:47.776065 24 container_probe.go:1763] Restart count of pod container-probe-9171/liveness-6601919f-e891-4ad2-b2cb-41718eaee139 is now 3 (1m0.206356586s elapsed)
  I0423 16:24:49.782972 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:51.797437 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:53.803768 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:55.810316 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:57.816196 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:24:59.820316 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:01.826101 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:03.831209 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:05.836956 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:07.843050 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:07.843112 24 container_probe.go:1763] Restart count of pod container-probe-9171/liveness-6601919f-e891-4ad2-b2cb-41718eaee139 is now 4 (1m20.273402202s elapsed)
  I0423 16:25:09.850327 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:11.856212 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:13.860292 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:15.866535 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:17.874049 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:19.877297 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:21.883022 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:23.890684 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:25.895664 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:27.901162 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:29.904649 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:31.911305 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:33.916915 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:35.922892 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:37.928411 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:39.933172 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:41.941586 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:43.947662 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:45.952851 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:47.958114 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:49.963870 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:51.970034 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:53.975392 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:55.980548 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:57.985870 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:25:59.989125 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:26:01.994962 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:26:04.002605 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:26:06.007215 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:26:08.014022 24 container_probe.go:1759] Get pod liveness-6601919f-e891-4ad2-b2cb-41718eaee139 in namespace container-probe-9171
  I0423 16:26:08.014078 24 container_probe.go:1763] Restart count of pod container-probe-9171/liveness-6601919f-e891-4ad2-b2cb-41718eaee139 is now 5 (2m20.444368783s elapsed)
  STEP: deleting the pod @ 04/23/25 16:26:08.014
  I0423 16:26:08.044333 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9171" for this suite. @ 04/23/25 16:26:08.056
• [142.578 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 04/23/25 16:26:08.077
  I0423 16:26:08.077570 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 16:26:08.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:08.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:08.106
  STEP: Counting existing ResourceQuota @ 04/23/25 16:26:08.113
  STEP: Creating a ResourceQuota @ 04/23/25 16:26:13.117
  STEP: Ensuring resource quota status is calculated @ 04/23/25 16:26:13.127
  STEP: Creating a Pod that fits quota @ 04/23/25 16:26:15.133
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/23/25 16:26:15.157
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/23/25 16:26:17.162
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/23/25 16:26:17.164
  STEP: Ensuring a pod cannot update its resource requirements @ 04/23/25 16:26:17.166
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/23/25 16:26:17.17
  STEP: Deleting the pod @ 04/23/25 16:26:19.179
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 16:26:19.197
  I0423 16:26:21.202615 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3696" for this suite. @ 04/23/25 16:26:21.208
• [13.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/23/25 16:26:21.222
  I0423 16:26:21.222329 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:26:21.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:21.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:21.248
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:26:21.253
  STEP: Saw pod success @ 04/23/25 16:26:25.285
  I0423 16:26:25.288757 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-02c5064f-abd8-4ce8-b8cb-302ca2f08496 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:26:25.3
  I0423 16:26:25.327242 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3083" for this suite. @ 04/23/25 16:26:25.333
• [4.121 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 04/23/25 16:26:25.343
  I0423 16:26:25.343265 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 16:26:25.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:25.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:25.369
  STEP: Updating Namespace "namespaces-3941" @ 04/23/25 16:26:25.375
  I0423 16:26:25.386366 24 namespace.go:390] Namespace "namespaces-3941" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"54b79d95-ad8f-4129-9cf0-a3d53b9e2041", "kubernetes.io/metadata.name":"namespaces-3941", "namespaces-3941":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0423 16:26:25.386843 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3941" for this suite. @ 04/23/25 16:26:25.435
• [0.108 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/23/25 16:26:25.45
  I0423 16:26:25.451031 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:26:25.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:25.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:25.49
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/23/25 16:26:25.497
  STEP: Saw pod success @ 04/23/25 16:26:29.534
  I0423 16:26:29.538915 24 output.go:207] Trying to get logs from node worker00 pod pod-1740e398-3d0b-4cef-b2d8-4b928c267c7f container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:26:29.546
  I0423 16:26:29.577155 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6234" for this suite. @ 04/23/25 16:26:29.584
• [4.143 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 04/23/25 16:26:29.594
  I0423 16:26:29.594139 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-webhook @ 04/23/25 16:26:29.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:29.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:29.621
  STEP: Setting up server cert @ 04/23/25 16:26:29.627
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 16:26:30.318
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 16:26:30.323
  STEP: Wait for the deployment to be ready @ 04/23/25 16:26:30.341
  I0423 16:26:30.353272 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:26:32.367
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:26:32.379
  I0423 16:26:33.380302 24 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0423 16:26:33.390969 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Creating a v1 custom resource @ 04/23/25 16:26:35.968
  STEP: v2 custom resource should be converted @ 04/23/25 16:26:35.973
  I0423 16:26:36.546516 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-432" for this suite. @ 04/23/25 16:26:36.559
• [6.986 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 04/23/25 16:26:36.589
  I0423 16:26:36.589076 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 16:26:36.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:36.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:36.619
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/23/25 16:26:36.624
  I0423 16:26:36.625144 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:26:38.060651 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:26:43.794548 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6610" for this suite. @ 04/23/25 16:26:43.803
• [7.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/23/25 16:26:43.821
  I0423 16:26:43.821639 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 16:26:43.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:43.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:43.846
  I0423 16:26:43.852087 24 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/23/25 16:26:44.87
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/23/25 16:26:44.875
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/23/25 16:26:45.885
  I0423 16:26:45.899175 24 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/23/25 16:26:45.899
  I0423 16:26:46.910580 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3282" for this suite. @ 04/23/25 16:26:46.916
• [3.107 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 04/23/25 16:26:46.928
  I0423 16:26:46.928604 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 16:26:46.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:46.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:46.953
  STEP: Creating a pod to test service account token:  @ 04/23/25 16:26:46.956
  STEP: Saw pod success @ 04/23/25 16:26:50.992
  I0423 16:26:50.997249 24 output.go:207] Trying to get logs from node worker00 pod test-pod-525a9e7a-aa41-4e50-bb5e-2b9e8ebe75b9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:26:51.003
  I0423 16:26:51.030989 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3740" for this suite. @ 04/23/25 16:26:51.035
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 04/23/25 16:26:51.048
  I0423 16:26:51.048089 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 16:26:51.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:26:51.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:26:51.074
  STEP: Creating a test headless service @ 04/23/25 16:26:51.079
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-653 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-653;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-653 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-653;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-653.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-653.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-653.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-653.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-653.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-653.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-653.svc;check="$$(dig +notcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_udp@PTR;check="$$(dig +tcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_tcp@PTR;sleep 1; done
   @ 04/23/25 16:26:51.107
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-653 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-653;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-653 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-653;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-653.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-653.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-653.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-653.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-653.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-653.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-653.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-653.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-653.svc;check="$$(dig +notcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_udp@PTR;check="$$(dig +tcp +noall +answer +search 224.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.224_tcp@PTR;sleep 1; done
   @ 04/23/25 16:26:51.107
  STEP: creating a pod to probe DNS @ 04/23/25 16:26:51.107
  STEP: submitting the pod to kubernetes @ 04/23/25 16:26:51.107
  STEP: retrieving the pod @ 04/23/25 16:26:53.146
  STEP: looking for the results for each expected name from probers @ 04/23/25 16:26:53.153
  I0423 16:26:53.166901 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.175423 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.183061 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.189054 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.195730 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.202382 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.208974 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.216189 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.247012 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.251739 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.256874 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.262246 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.267909 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.273291 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.279978 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.287560 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:53.310309 24 dns_common.go:506] Lookups using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-653 agnhost_tcp@dns-test-service.dns-653 agnhost_udp@dns-test-service.dns-653.svc agnhost_tcp@dns-test-service.dns-653.svc agnhost_udp@_http._tcp.dns-test-service.dns-653.svc agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-653 jessie_tcp@dns-test-service.dns-653 jessie_udp@dns-test-service.dns-653.svc jessie_tcp@dns-test-service.dns-653.svc jessie_udp@_http._tcp.dns-test-service.dns-653.svc jessie_tcp@_http._tcp.dns-test-service.dns-653.svc]

  I0423 16:26:53.329054 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:26:53.337634 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:26:53.344695 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:26:58.163075 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.167824 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.172945 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.178276 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.185126 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.190562 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.195866 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.201324 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.231712 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.237967 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.244659 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.251745 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.258024 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.264025 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.269654 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.275969 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:26:58.296911 24 dns_common.go:506] Lookups using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-653 agnhost_tcp@dns-test-service.dns-653 agnhost_udp@dns-test-service.dns-653.svc agnhost_tcp@dns-test-service.dns-653.svc agnhost_udp@_http._tcp.dns-test-service.dns-653.svc agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-653 jessie_tcp@dns-test-service.dns-653 jessie_udp@dns-test-service.dns-653.svc jessie_tcp@dns-test-service.dns-653.svc jessie_udp@_http._tcp.dns-test-service.dns-653.svc jessie_tcp@_http._tcp.dns-test-service.dns-653.svc]

  I0423 16:26:58.311122 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:26:58.325173 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:26:58.335178 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:27:03.158933 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.166364 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.172548 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.178812 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.185651 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.191510 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.196928 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.206695 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.229909 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.234228 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.238419 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.242881 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.246595 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.250487 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.254657 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.258812 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:03.275865 24 dns_common.go:506] Lookups using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-653 agnhost_tcp@dns-test-service.dns-653 agnhost_udp@dns-test-service.dns-653.svc agnhost_tcp@dns-test-service.dns-653.svc agnhost_udp@_http._tcp.dns-test-service.dns-653.svc agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-653 jessie_tcp@dns-test-service.dns-653 jessie_udp@dns-test-service.dns-653.svc jessie_tcp@dns-test-service.dns-653.svc jessie_udp@_http._tcp.dns-test-service.dns-653.svc jessie_tcp@_http._tcp.dns-test-service.dns-653.svc]

  I0423 16:27:03.282629 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:27:03.290284 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:27:03.296809 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:27:08.160765 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.166263 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.172099 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.178555 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.183292 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.189013 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.194062 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.200084 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.224963 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.231647 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.237582 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.242982 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.248410 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.253953 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.259972 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.266358 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:08.292153 24 dns_common.go:506] Lookups using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-653 agnhost_tcp@dns-test-service.dns-653 agnhost_udp@dns-test-service.dns-653.svc agnhost_tcp@dns-test-service.dns-653.svc agnhost_udp@_http._tcp.dns-test-service.dns-653.svc agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-653 jessie_tcp@dns-test-service.dns-653 jessie_udp@dns-test-service.dns-653.svc jessie_tcp@dns-test-service.dns-653.svc jessie_udp@_http._tcp.dns-test-service.dns-653.svc jessie_tcp@_http._tcp.dns-test-service.dns-653.svc]

  I0423 16:27:08.306870 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:27:08.316486 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:27:08.326292 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:27:13.161910 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.166779 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.172349 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.177812 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.182648 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.188703 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.193266 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.200889 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.227614 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.232816 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.238397 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.243345 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.248960 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.255617 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.261574 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.267978 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:13.287992 24 dns_common.go:506] Lookups using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-653 agnhost_tcp@dns-test-service.dns-653 agnhost_udp@dns-test-service.dns-653.svc agnhost_tcp@dns-test-service.dns-653.svc agnhost_udp@_http._tcp.dns-test-service.dns-653.svc agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-653 jessie_tcp@dns-test-service.dns-653 jessie_udp@dns-test-service.dns-653.svc jessie_tcp@dns-test-service.dns-653.svc jessie_udp@_http._tcp.dns-test-service.dns-653.svc jessie_tcp@_http._tcp.dns-test-service.dns-653.svc]

  I0423 16:27:13.296061 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:27:13.305306 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:27:13.315423 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:27:18.161430 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.166244 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.170705 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.175006 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.179590 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.183190 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.188087 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.193486 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.215225 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.219501 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.222797 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.225733 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653 from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.229208 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.232847 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.237878 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.241872 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-653.svc from pod dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b: the server could not find the requested resource (get pods dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b)
  I0423 16:27:18.256196 24 dns_common.go:506] Lookups using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-653 agnhost_tcp@dns-test-service.dns-653 agnhost_udp@dns-test-service.dns-653.svc agnhost_tcp@dns-test-service.dns-653.svc agnhost_udp@_http._tcp.dns-test-service.dns-653.svc agnhost_tcp@_http._tcp.dns-test-service.dns-653.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-653 jessie_tcp@dns-test-service.dns-653 jessie_udp@dns-test-service.dns-653.svc jessie_tcp@dns-test-service.dns-653.svc jessie_udp@_http._tcp.dns-test-service.dns-653.svc jessie_tcp@_http._tcp.dns-test-service.dns-653.svc]

  I0423 16:27:18.262550 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 16:27:18.267906 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 16:27:18.274109 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 16:27:23.286488 24 dns_common.go:546] DNS probes using dns-653/dns-test-f1998c60-7570-4812-b7a8-b1dada67f66b succeeded

  STEP: deleting the pod @ 04/23/25 16:27:23.286
  STEP: deleting the test service @ 04/23/25 16:27:23.324
  STEP: deleting the test headless service @ 04/23/25 16:27:23.371
  I0423 16:27:23.401285 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-653" for this suite. @ 04/23/25 16:27:23.408
• [32.369 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 04/23/25 16:27:23.416
  I0423 16:27:23.416764 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:27:23.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:27:23.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:27:23.443
  STEP: creating an Endpoint @ 04/23/25 16:27:23.45
  STEP: waiting for available Endpoint @ 04/23/25 16:27:23.456
  STEP: listing all Endpoints @ 04/23/25 16:27:23.458
  STEP: updating the Endpoint @ 04/23/25 16:27:23.462
  STEP: fetching the Endpoint @ 04/23/25 16:27:23.468
  STEP: patching the Endpoint @ 04/23/25 16:27:23.471
  STEP: fetching the Endpoint @ 04/23/25 16:27:23.483
  STEP: deleting the Endpoint by Collection @ 04/23/25 16:27:23.486
  STEP: waiting for Endpoint deletion @ 04/23/25 16:27:23.496
  STEP: fetching the Endpoint @ 04/23/25 16:27:23.498
  I0423 16:27:23.503170 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2792" for this suite. @ 04/23/25 16:27:23.509
• [0.100 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/23/25 16:27:23.517
  I0423 16:27:23.517120 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 16:27:23.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:27:23.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:27:23.542
  I0423 16:27:23.619195 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/23/25 16:27:23.629
  I0423 16:27:23.635182 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:23.635329 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/23/25 16:27:23.635
  I0423 16:27:23.736662 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:23.736720 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:27:24.734398 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:24.734469 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:27:25.734938 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:27:25.735015 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/23/25 16:27:25.741
  I0423 16:27:25.777988 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:25.778031 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/23/25 16:27:25.778
  I0423 16:27:25.836744 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:25.836796 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:27:26.806024 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:26.806090 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:27:27.814858 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:27.814917 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:27:28.806545 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:28.806583 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:27:29.805952 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:27:29.806011 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 16:27:29.812
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6269, will wait for the garbage collector to delete the pods @ 04/23/25 16:27:29.812
  I0423 16:27:29.886148 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.265138ms
  I0423 16:27:29.987009 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.86072ms
  I0423 16:27:31.991691 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:27:31.991843 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 16:27:31.995505 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11407"},"items":null}

  I0423 16:27:31.999195 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11407"},"items":null}

  I0423 16:27:32.032933 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6269" for this suite. @ 04/23/25 16:27:32.038
• [8.532 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 04/23/25 16:27:32.048
  I0423 16:27:32.049881 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 16:27:32.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:27:32.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:27:32.082
  I0423 16:27:32.104024 24 service_accounts.go:647] created pod
  STEP: Saw pod success @ 04/23/25 16:27:36.118
  I0423 16:28:06.119376 24 service_accounts.go:653] polling logs
  I0423 16:28:06.128688 24 service_accounts.go:663] Pod logs: 
  I0423 16:27:32.933053       1 log.go:245] OK: Got token
  I0423 16:27:32.933165       1 log.go:245] validating with in-cluster discovery
  I0423 16:27:32.933766       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0423 16:27:32.933816       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6863:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00042db40), NotBefore:(*jwt.NumericDate)(0xc00042dc30), IssuedAt:(*jwt.NumericDate)(0xc00042db50), ID:"594299f6-3046-46be-b31c-be0b5a795f09"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6863", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f757f96b-cf18-4fdb-8be8-bf665a69a7b9"}}}
  I0423 16:27:32.952408       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0423 16:27:32.963029       1 log.go:245] OK: Validated signature on JWT
  I0423 16:27:32.963584       1 log.go:245] OK: Got valid claims from token!
  I0423 16:27:32.963769       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6863:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002786e0), NotBefore:(*jwt.NumericDate)(0xc000278708), IssuedAt:(*jwt.NumericDate)(0xc0002786e8), ID:"594299f6-3046-46be-b31c-be0b5a795f09"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6863", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"f757f96b-cf18-4fdb-8be8-bf665a69a7b9"}}}

  I0423 16:28:06.128812 24 service_accounts.go:667] completed pod
  I0423 16:28:06.137206 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6863" for this suite. @ 04/23/25 16:28:06.142
• [34.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/23/25 16:28:06.152
  I0423 16:28:06.152108 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:28:06.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:28:06.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:28:06.178
  STEP: Creating configMap with name projected-configmap-test-volume-map-5ba357ad-8fe0-4fce-9166-e6c8f8e637f5 @ 04/23/25 16:28:06.185
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:28:06.193
  STEP: Saw pod success @ 04/23/25 16:28:10.222
  I0423 16:28:10.226275 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-3b3eba62-52b3-45ad-8997-c75cfe1d1c76 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:28:10.234
  I0423 16:28:10.255388 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-561" for this suite. @ 04/23/25 16:28:10.261
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/23/25 16:28:10.271
  I0423 16:28:10.271179 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:28:10.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:28:10.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:28:10.303
  STEP: Creating projection with secret that has name projected-secret-test-map-0b87a445-4a9e-4775-8e16-192887428f07 @ 04/23/25 16:28:10.309
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:28:10.317
  STEP: Saw pod success @ 04/23/25 16:28:14.342
  I0423 16:28:14.346154 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-306afdd6-bb6b-4e2d-abbe-340f6177cf91 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:28:14.354
  I0423 16:28:14.379340 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5475" for this suite. @ 04/23/25 16:28:14.385
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 04/23/25 16:28:14.4
  I0423 16:28:14.401009 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 16:28:14.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:28:14.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:28:14.428
  STEP: Creating service test in namespace statefulset-4613 @ 04/23/25 16:28:14.434
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/23/25 16:28:14.444
  STEP: Creating stateful set ss in namespace statefulset-4613 @ 04/23/25 16:28:14.454
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4613 @ 04/23/25 16:28:14.464
  I0423 16:28:14.488888 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0423 16:28:24.475380 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/23/25 16:28:24.475
  I0423 16:28:24.480703 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:28:24.707856 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:28:24.707981 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:28:24.708014 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:28:24.713151 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0423 16:28:34.715329 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:28:34.715394 24 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 16:28:34.816869 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999343s
  I0423 16:28:35.821913 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.920916537s
  I0423 16:28:36.827483 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.916210383s
  I0423 16:28:37.835267 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.909707076s
  I0423 16:28:38.841580 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.902616782s
  I0423 16:28:39.845471 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.896636243s
  I0423 16:28:40.852357 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.892818185s
  I0423 16:28:41.858390 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.885704534s
  I0423 16:28:42.865603 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.879577342s
  I0423 16:28:43.873589 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 872.315871ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4613 @ 04/23/25 16:28:44.874
  I0423 16:28:44.879203 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:28:45.071478 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 16:28:45.071559 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:28:45.071593 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:28:45.078258 24 wait.go:40] Found 1 stateful pods, waiting for 3
  I0423 16:28:55.077723 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:28:55.077783 24 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:28:55.077806 24 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/23/25 16:28:55.077
  STEP: Scale down will halt with unhealthy stateful pod @ 04/23/25 16:28:55.077
  I0423 16:28:55.085680 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:28:55.275092 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:28:55.275147 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:28:55.275169 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:28:55.275317 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:28:55.530215 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:28:55.530299 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:28:55.530330 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:28:55.530415 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:28:55.710220 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:28:55.710314 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:28:55.710360 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:28:55.710384 24 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 16:28:55.714677 24 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0423 16:29:05.722844 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:29:05.722927 24 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:29:05.722948 24 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:29:05.823702 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999521s
  I0423 16:29:06.829969 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.910889031s
  I0423 16:29:07.839017 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.903638466s
  I0423 16:29:08.844691 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.896199352s
  I0423 16:29:09.850554 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.890398944s
  I0423 16:29:10.857612 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.884949598s
  I0423 16:29:11.863788 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.877529223s
  I0423 16:29:12.869779 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.871441487s
  I0423 16:29:13.876394 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.865667408s
  I0423 16:29:14.882374 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 858.684056ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4613 @ 04/23/25 16:29:15.882
  I0423 16:29:15.890523 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:29:16.070225 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 16:29:16.070289 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:29:16.070313 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:29:16.070421 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:29:16.244443 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 16:29:16.244598 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:29:16.244712 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:29:16.244865 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-4613 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:29:16.431852 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 16:29:16.431919 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:29:16.431961 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:29:16.432101 24 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/23/25 16:29:26.444
  I0423 16:29:26.444962 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4613
  I0423 16:29:26.449654 24 rest.go:152] Scaling statefulset ss to 0
  I0423 16:29:26.456126 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 16:29:26.460290 24 rest.go:90] Deleting statefulset ss
  I0423 16:29:26.477534 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4613" for this suite. @ 04/23/25 16:29:26.484
• [72.098 seconds]
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 04/23/25 16:29:26.498
  I0423 16:29:26.498930 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:29:26.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:29:26.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:29:26.528
  STEP: creating service endpoint-test2 in namespace services-4467 @ 04/23/25 16:29:26.532
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4467 to expose endpoints map[] @ 04/23/25 16:29:26.546
  I0423 16:29:26.551645 24 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0423 16:29:27.563262 24 service.go:4460] successfully validated that service endpoint-test2 in namespace services-4467 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4467 @ 04/23/25 16:29:27.563
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4467 to expose endpoints map[pod1:[80]] @ 04/23/25 16:29:29.589
  I0423 16:29:29.603647 24 service.go:4460] successfully validated that service endpoint-test2 in namespace services-4467 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/23/25 16:29:29.603
  I0423 16:29:29.603789 24 resource.go:361] Creating new exec pod
  I0423 16:29:32.627274 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-4467 exec execpodsmczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 16:29:32.778204 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.32.0.151) 80 port [tcp/http] succeeded!\n"
  I0423 16:29:32.778268 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:29:32.778375 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-4467 exec execpodsmczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.151 80'
  I0423 16:29:32.964994 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.151 80\nConnection to 10.32.0.151 80 port [tcp/http] succeeded!\n"
  I0423 16:29:32.965062 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4467 @ 04/23/25 16:29:32.965
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4467 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/23/25 16:29:34.997
  I0423 16:29:35.013357 24 service.go:4460] successfully validated that service endpoint-test2 in namespace services-4467 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/23/25 16:29:35.013
  I0423 16:29:36.014458 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-4467 exec execpodsmczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 16:29:36.224173 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.32.0.151) 80 port [tcp/http] succeeded!\n"
  I0423 16:29:36.224276 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:29:36.224446 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-4467 exec execpodsmczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.151 80'
  I0423 16:29:36.419591 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.151 80\nConnection to 10.32.0.151 80 port [tcp/http] succeeded!\n"
  I0423 16:29:36.419666 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4467 @ 04/23/25 16:29:36.419
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4467 to expose endpoints map[pod2:[80]] @ 04/23/25 16:29:36.439
  I0423 16:29:36.476318 24 service.go:4460] successfully validated that service endpoint-test2 in namespace services-4467 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/23/25 16:29:36.477
  I0423 16:29:37.480004 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-4467 exec execpodsmczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0423 16:29:37.702241 24 builder.go:146] stderr: "+ + echo hostNamenc\n -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.32.0.151) 80 port [tcp/http] succeeded!\n"
  I0423 16:29:37.702308 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:29:37.702478 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-4467 exec execpodsmczc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.151 80'
  I0423 16:29:37.864958 24 builder.go:146] stderr: "+ nc -v -t -w+  2 10.32.0.151echo 80\n hostName\nConnection to 10.32.0.151 80 port [tcp/http] succeeded!\n"
  I0423 16:29:37.865095 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4467 @ 04/23/25 16:29:37.865
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4467 to expose endpoints map[] @ 04/23/25 16:29:37.881
  I0423 16:29:38.920505 24 service.go:4460] successfully validated that service endpoint-test2 in namespace services-4467 exposes endpoints map[]
  I0423 16:29:38.951064 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4467" for this suite. @ 04/23/25 16:29:38.96
• [12.470 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/23/25 16:29:38.969
  I0423 16:29:38.969132 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:29:38.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:29:38.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:29:38.998
  STEP: Creating configMap with name projected-configmap-test-volume-map-57d7531b-4825-4ab8-baec-84d5d0cd495a @ 04/23/25 16:29:39.002
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:29:39.007
  STEP: Saw pod success @ 04/23/25 16:29:43.031
  I0423 16:29:43.035382 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-4328ecd7-782a-4738-a35e-1fa52493a1e7 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:29:43.044
  I0423 16:29:43.065998 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9101" for this suite. @ 04/23/25 16:29:43.073
• [4.111 seconds]
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/23/25 16:29:43.08
  I0423 16:29:43.080550 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename subjectreview @ 04/23/25 16:29:43.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:29:43.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:29:43.106
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3771" @ 04/23/25 16:29:43.109
  I0423 16:29:43.115761 24 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3771:e2e"
  I0423 16:29:43.115804 24 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3771"}
  I0423 16:29:43.115820 24 subjectreviews.go:71] saUID: "3b5a4c6c-5c91-4d5c-997b-5ca1e8bd23a3"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3771:e2e" @ 04/23/25 16:29:43.115
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3771:e2e" @ 04/23/25 16:29:43.118
  I0423 16:29:43.120828 24 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3771:e2e" api 'list' configmaps in "subjectreview-3771" namespace @ 04/23/25 16:29:43.12
  I0423 16:29:43.122779 24 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3771:e2e" @ 04/23/25 16:29:43.122
  I0423 16:29:43.124880 24 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0423 16:29:43.124909 24 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0423 16:29:43.125002 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3771" for this suite. @ 04/23/25 16:29:43.173
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 04/23/25 16:29:43.182
  I0423 16:29:43.182855 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 16:29:43.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:29:43.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:29:43.208
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/23/25 16:29:43.213
  I0423 16:29:43.215931 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/23/25 16:29:49.241
  I0423 16:29:49.242204 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:29:50.673177 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:29:56.506938 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5558" for this suite. @ 04/23/25 16:29:56.516
• [13.343 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 04/23/25 16:29:56.527
  I0423 16:29:56.527188 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pv @ 04/23/25 16:29:56.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:29:56.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:29:56.553
  STEP: Creating initial PV and PVC @ 04/23/25 16:29:56.558
  I0423 16:29:56.559610 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4321" @ 04/23/25 16:29:56.582
  STEP: Listing PVCs in namespace "pv-4321" @ 04/23/25 16:29:56.59
  STEP: Patching the PV "pv-4321-7bhzt" @ 04/23/25 16:29:56.6
  STEP: Patching the PVC "pvc-pffqs" @ 04/23/25 16:29:56.666
  STEP: Getting PV "pv-4321-7bhzt" @ 04/23/25 16:29:56.678
  STEP: Getting PVC "pvc-pffqs" @ 04/23/25 16:29:56.682
  STEP: Deleting PVC "pvc-pffqs" @ 04/23/25 16:29:56.688
  STEP: Confirm deletion of PVC "pvc-pffqs" @ 04/23/25 16:29:56.696
  STEP: Deleting PV "pv-4321-7bhzt" @ 04/23/25 16:29:58.706
  STEP: Confirm deletion of PV "pv-4321-7bhzt" @ 04/23/25 16:29:58.714
  STEP: Recreating another PV & PVC @ 04/23/25 16:30:00.727
  I0423 16:30:00.727528 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4321-rrfzs" @ 04/23/25 16:30:00.748
  STEP: Updating the PVC "pvc-g2zfx" @ 04/23/25 16:30:00.766
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-g2zfx=updated" @ 04/23/25 16:30:00.78
  STEP: Deleting PVC "pvc-g2zfx" via DeleteCollection @ 04/23/25 16:30:00.786
  STEP: Confirm deletion of PVC "pvc-g2zfx" @ 04/23/25 16:30:00.805
  STEP: Deleting PV "pv-4321-rrfzs" via DeleteCollection @ 04/23/25 16:30:02.82
  STEP: Confirm deletion of PV "pv-4321-rrfzs" @ 04/23/25 16:30:02.831
  I0423 16:30:04.843955 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0423 16:30:04.844038 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-g2zfx"
  I0423 16:30:04.848592 24 pv.go:193] Deleting PersistentVolume "pv-4321-rrfzs"
  I0423 16:30:04.852895 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4321" for this suite. @ 04/23/25 16:30:04.857
• [8.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 04/23/25 16:30:04.878
  I0423 16:30:04.878487 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:30:04.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:04.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:04.905
  STEP: creating service in namespace services-5798 @ 04/23/25 16:30:04.911
  STEP: creating service affinity-clusterip-transition in namespace services-5798 @ 04/23/25 16:30:04.912
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5798 @ 04/23/25 16:30:04.926
  I0423 16:30:04.943960      24 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5798, replica count: 3
  I0423 16:30:08.000058      24 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:30:08.007669 24 resource.go:361] Creating new exec pod
  I0423 16:30:11.025508 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5798 exec execpod-affinityk9lwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0423 16:30:11.212890 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.32.0.179) 80 port [tcp/http] succeeded!\n"
  I0423 16:30:11.212993 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:30:11.213199 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5798 exec execpod-affinityk9lwc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.179 80'
  I0423 16:30:11.406365 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.179 80\nConnection to 10.32.0.179 80 port [tcp/http] succeeded!\n"
  I0423 16:30:11.406471 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 16:30:11.431146 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5798 exec execpod-affinityk9lwc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.179:80/ ; done'
  I0423 16:30:11.721630 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n"
  I0423 16:30:11.721699 24 builder.go:147] stdout: "\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-2mjm8\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-2mjm8\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-zzsgc\naffinity-clusterip-transition-g4vbk"
  I0423 16:30:11.721814 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.721839 24 service.go:242] Received response from host: affinity-clusterip-transition-2mjm8
  I0423 16:30:11.721961 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.721981 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:11.721999 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.722018 24 service.go:242] Received response from host: affinity-clusterip-transition-2mjm8
  I0423 16:30:11.722669 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.722871 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:11.722897 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.722915 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.722932 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.723029 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.723047 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.723120 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.723138 24 service.go:242] Received response from host: affinity-clusterip-transition-zzsgc
  I0423 16:30:11.723154 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:11.750672 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5798 exec execpod-affinityk9lwc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.32.0.179:80/ ; done'
  I0423 16:30:12.076848 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.32.0.179:80/\n"
  I0423 16:30:12.076923 24 builder.go:147] stdout: "\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk\naffinity-clusterip-transition-g4vbk"
  I0423 16:30:12.076951 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.076973 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.076992 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077045 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077062 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077079 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077160 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077187 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077204 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077225 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077242 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077258 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077280 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077296 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077313 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077329 24 service.go:242] Received response from host: affinity-clusterip-transition-g4vbk
  I0423 16:30:12.077437 24 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5798, will wait for the garbage collector to delete the pods @ 04/23/25 16:30:12.113
  I0423 16:30:12.190622 24 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 19.496843ms
  I0423 16:30:12.291442 24 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.824812ms
  I0423 16:30:15.713641 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5798" for this suite. @ 04/23/25 16:30:15.722
• [10.856 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 04/23/25 16:30:15.735
  I0423 16:30:15.735689 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 16:30:15.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:15.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:15.773
  STEP: Creating pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787 @ 04/23/25 16:30:15.784
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 16:30:17.808
  I0423 16:30:17.812863 24 container_probe.go:1749] Initial restart count of pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 is 0
  I0423 16:30:17.816415 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:19.820118 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:21.824203 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:23.829059 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:25.834275 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:27.838066 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:29.844269 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:31.850991 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:33.856926 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:35.863147 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:37.869538 24 container_probe.go:1759] Get pod liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 in namespace container-probe-6787
  I0423 16:30:37.869615 24 container_probe.go:1763] Restart count of pod container-probe-6787/liveness-3f11bb70-b0e1-4e30-9eea-3db160ff9318 is now 1 (20.05669543s elapsed)
  STEP: deleting the pod @ 04/23/25 16:30:37.869
  I0423 16:30:37.902145 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6787" for this suite. @ 04/23/25 16:30:37.912
• [22.198 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 04/23/25 16:30:37.935
  I0423 16:30:37.935547 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename volumeattachment @ 04/23/25 16:30:37.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:37.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:37.964
  STEP: Create VolumeAttachment "va-e2e-98rg9" on node "worker00" @ 04/23/25 16:30:38.011
  STEP: Patch VolumeAttachment "va-e2e-98rg9" on node "worker00" @ 04/23/25 16:30:38.021
  STEP: Reading "va-e2e-98rg9" Status @ 04/23/25 16:30:38.03
  STEP: Patching "va-e2e-98rg9" Status @ 04/23/25 16:30:38.038
  I0423 16:30:38.044805 24 volume_attachment.go:224] "va-e2e-98rg9" Status.Attached: true
  STEP: Updating "va-e2e-98rg9" Status @ 04/23/25 16:30:38.044
  I0423 16:30:38.053612 24 volume_attachment.go:240] "va-e2e-98rg9" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-98rg9" on node "worker00" @ 04/23/25 16:30:38.053
  STEP: Confirm deletion of VolumeAttachment "va-e2e-98rg9" on node "worker00" @ 04/23/25 16:30:38.064
  I0423 16:30:38.067830 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-7088" for this suite. @ 04/23/25 16:30:38.112
• [0.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/23/25 16:30:38.127
  I0423 16:30:38.127188 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 16:30:38.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:38.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:38.146
  STEP: getting /apis @ 04/23/25 16:30:38.149
  STEP: getting /apis/node.k8s.io @ 04/23/25 16:30:38.153
  STEP: getting /apis/node.k8s.io/v1 @ 04/23/25 16:30:38.155
  STEP: creating @ 04/23/25 16:30:38.156
  STEP: watching @ 04/23/25 16:30:38.171
  I0423 16:30:38.171470 24 runtimeclass.go:275] starting watch
  STEP: getting @ 04/23/25 16:30:38.178
  STEP: listing @ 04/23/25 16:30:38.181
  STEP: patching @ 04/23/25 16:30:38.184
  STEP: updating @ 04/23/25 16:30:38.188
  I0423 16:30:38.194849 24 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 04/23/25 16:30:38.195
  STEP: deleting a collection @ 04/23/25 16:30:38.204
  I0423 16:30:38.218356 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3775" for this suite. @ 04/23/25 16:30:38.222
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/23/25 16:30:38.228
  I0423 16:30:38.228343 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/23/25 16:30:38.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:38.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:38.246
  STEP: getting /apis @ 04/23/25 16:30:38.25
  STEP: getting /apis/storage.k8s.io @ 04/23/25 16:30:38.254
  STEP: getting /apis/storage.k8s.io/v1 @ 04/23/25 16:30:38.256
  STEP: creating @ 04/23/25 16:30:38.258
  STEP: watching @ 04/23/25 16:30:38.276
  I0423 16:30:38.276676 24 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/23/25 16:30:38.287
  STEP: listing in namespace @ 04/23/25 16:30:38.296
  STEP: listing across namespaces @ 04/23/25 16:30:38.3
  STEP: patching @ 04/23/25 16:30:38.304
  STEP: updating @ 04/23/25 16:30:38.31
  I0423 16:30:38.318582 24 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0423 16:30:38.319110 24 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/23/25 16:30:38.319
  STEP: deleting a collection @ 04/23/25 16:30:38.339
  I0423 16:30:38.356000 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2410" for this suite. @ 04/23/25 16:30:38.362
• [0.145 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/23/25 16:30:38.372
  I0423 16:30:38.372780 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:30:38.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:38.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:38.394
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:30:38.398
  STEP: Saw pod success @ 04/23/25 16:30:42.435
  I0423 16:30:42.439938 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-85539626-b053-4f1e-a791-ed380f0d08bd container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:30:42.449
  I0423 16:30:42.467702 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-240" for this suite. @ 04/23/25 16:30:42.472
• [4.108 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 04/23/25 16:30:42.482
  I0423 16:30:42.482663 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:30:42.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:42.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:42.509
  STEP: Creating a pod to test downward api env vars @ 04/23/25 16:30:42.514
  STEP: Saw pod success @ 04/23/25 16:30:46.542
  I0423 16:30:46.547353 24 output.go:207] Trying to get logs from node worker00 pod downward-api-ffa1c0c8-8358-456b-ae6a-ffffcf8e6907 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 16:30:46.554
  I0423 16:30:46.584418 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9775" for this suite. @ 04/23/25 16:30:46.59
• [4.118 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 04/23/25 16:30:46.599
  I0423 16:30:46.599744 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 16:30:46.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:46.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:46.631
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/23/25 16:30:46.635
  I0423 16:30:46.651502 24 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5599  8ea91d07-060d-44c5-b407-b1fba3391505 12939 0 2025-04-23 16:30:46 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-04-23 16:30:46 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q24b5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q24b5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/23/25 16:30:48.665
  I0423 16:30:48.665722 24 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5599 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:30:48.665752 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:30:48.665823 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-5599/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/23/25 16:30:48.772
  I0423 16:30:48.772495 24 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5599 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:30:48.772597 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:30:48.773240 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/dns-5599/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0423 16:30:48.882391 24 dns.go:450] Deleting pod test-dns-nameservers...
  I0423 16:30:48.895568 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5599" for this suite. @ 04/23/25 16:30:48.905
• [2.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/23/25 16:30:48.913
  I0423 16:30:48.913957 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 16:30:48.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:48.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:48.934
  I0423 16:30:48.945785 24 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0423 16:30:53.954360 24 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 16:30:53.954
  I0423 16:30:53.954528 24 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/23/25 16:30:54.068
  I0423 16:30:54.106993 24 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aca89037-94c4-4b1c-8ee5-28664173db0b",
      ResourceVersion: (string) (len=5) "13029",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=262) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 50 72 6f 67  72 65 73 73 69 6e 67 5c  |":\"Progressing\|
              00000090  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              000000a0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000b0  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 55 70 64  |e":{},"f:lastUpd|
              000000c0  61 74 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6d  |ateTime":{},"f:m|
              000000d0  65 73 73 61 67 65 22 3a  7b 7d 2c 22 66 3a 72 65  |essage":{},"f:re|
              000000e0  61 73 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |ason":{},"f:stat|
              000000f0  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000100  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=20) "NewReplicaSetCreated",
          Message: (string) (len=60) "Created new replica set \"test-cleanup-deployment-69b989f764\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 16:30:54.150683 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cf6a9c7-3d7e-4a7c-bb59-0185af08cf32",
      ResourceVersion: (string) (len=5) "13038",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "aca89037-94c4-4b1c-8ee5-28664173db0b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 63 61 38 39 30  33 37 2d 39 34 63 34 2d  |\"aca89037-94c4-|
              00000120  34 62 31 63 2d 38 65 65  35 2d 32 38 36 36 34 31  |4b1c-8ee5-286641|
              00000130  37 33 64 62 30 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |73db0b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:30:54.156639 24 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0423 16:30:54.157210 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32b6b16f-83b1-4323-9f94-b5871919409b",
      ResourceVersion: (string) (len=5) "13025",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "aca89037-94c4-4b1c-8ee5-28664173db0b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 61 63 61 38 39 30 33  |"uid\":\"aca8903|
              00000040  37 2d 39 34 63 34 2d 34  62 31 63 2d 38 65 65 35  |7-94c4-4b1c-8ee5|
              00000050  2d 32 38 36 36 34 31 37  33 64 62 30 62 5c 22 7d  |-28664173db0b\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:30:54.167827 24 deployment.go:68] Pod "test-cleanup-controller-9rrmn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-9rrmn",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7274470-0c53-4f29-90f8-63e467560113",
      ResourceVersion: (string) (len=5) "12991",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "561c5a5a6417bea2c0bf431d6263ed759125e4d9b40a9c17407b5aa51cd9dee0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.169/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.169/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "32b6b16f-83b1-4323-9f94-b5871919409b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  33 32 62 36 62 31 36 66  |uid\":\"32b6b16f|
              00000080  2d 38 33 62 31 2d 34 33  32 33 2d 39 66 39 34 2d  |-83b1-4323-9f94-|
              00000090  62 35 38 37 31 39 31 39  34 30 39 62 5c 22 7d 22  |b5871919409b\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 36 39 5c 22 7d 22  |.200.131.169\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6wktj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6wktj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881022649,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7159ba8bdbf2007554218507ea20e6fc807901b7e9d5011c75f3e2a5867df2b6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 16:30:54.176035 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-ch4z6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-ch4z6",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-2694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45fc74c6-0f44-4f7f-8fa1-31797b192eaf",
      ResourceVersion: (string) (len=5) "13037",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "8cf6a9c7-3d7e-4a7c-bb59-0185af08cf32",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 63  66 36 61 39 63 37 2d 33  |d\":\"8cf6a9c7-3|
              00000090  64 37 65 2d 34 61 37 63  2d 62 62 35 39 2d 30 31  |d7e-4a7c-bb59-01|
              000000a0  38 35 61 66 30 38 63 66  33 32 5c 22 7d 22 3a 7b  |85af08cf32\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pd7jn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pd7jn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=41) "containers with unready status: [agnhost]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881022654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881022654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 16:30:54.187075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2694" for this suite. @ 04/23/25 16:30:54.195
• [5.290 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 04/23/25 16:30:54.204
  I0423 16:30:54.204584 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:30:54.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:54.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:54.252
  STEP: validating cluster-info @ 04/23/25 16:30:54.262
  I0423 16:30:54.262829 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-436 cluster-info'
  I0423 16:30:54.364941 24 builder.go:146] stderr: ""
  I0423 16:30:54.364993 24 builder.go:147] stdout: "Kubernetes control plane is running at https://10.32.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0423 16:30:54.365100 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-436" for this suite. @ 04/23/25 16:30:54.369
• [0.175 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 04/23/25 16:30:54.379
  I0423 16:30:54.379988 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:30:54.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:54.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:54.404
  STEP: Setting up server cert @ 04/23/25 16:30:54.429
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:30:54.703
  STEP: Deploying the webhook pod @ 04/23/25 16:30:54.718
  STEP: Wait for the deployment to be ready @ 04/23/25 16:30:54.729
  I0423 16:30:54.739511 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:30:56.754
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:30:56.78
  I0423 16:30:57.782705 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 16:30:57.792
  STEP: verifying the mutating webhook match conditions @ 04/23/25 16:30:57.839
  STEP: updating the mutating webhook match conditions @ 04/23/25 16:30:57.847
  STEP: verifying the mutating webhook match conditions @ 04/23/25 16:30:57.859
  I0423 16:30:57.929732 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5381" for this suite. @ 04/23/25 16:30:57.933
  STEP: Destroying namespace "webhook-markers-8612" for this suite. @ 04/23/25 16:30:57.947
• [3.597 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 04/23/25 16:30:57.977
  I0423 16:30:57.977717 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:30:57.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:30:57.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:30:57.998
  I0423 16:30:58.001180 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  W0423 16:31:00.538804      24 warnings.go:70] unknown field "alpha"
  W0423 16:31:00.538864      24 warnings.go:70] unknown field "beta"
  W0423 16:31:00.538879      24 warnings.go:70] unknown field "delta"
  W0423 16:31:00.538891      24 warnings.go:70] unknown field "epsilon"
  W0423 16:31:00.538904      24 warnings.go:70] unknown field "gamma"
  I0423 16:31:01.089373 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6686" for this suite. @ 04/23/25 16:31:01.094
• [3.125 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 04/23/25 16:31:01.103
  I0423 16:31:01.103374 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename disruption @ 04/23/25 16:31:01.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:01.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:01.134
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:31:01.146
  STEP: Waiting for all pods to be running @ 04/23/25 16:31:03.196
  I0423 16:31:03.208426 24 disruption.go:691] running pods: 0 < 3
  I0423 16:31:05.204220 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1846" for this suite. @ 04/23/25 16:31:05.207
• [4.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/23/25 16:31:05.223
  I0423 16:31:05.224587 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:31:05.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:05.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:05.243
  STEP: Creating secret with name secret-test-6250a3ba-0a3e-45bc-9a9e-abc8eb0b1d7a @ 04/23/25 16:31:05.246
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:31:05.25
  STEP: Saw pod success @ 04/23/25 16:31:11.277
  I0423 16:31:11.281797 24 output.go:207] Trying to get logs from node worker01 pod pod-secrets-4b056699-7959-44f9-8094-b02c132ee738 container secret-env-test: <nil>
  STEP: delete the pod @ 04/23/25 16:31:11.308
  I0423 16:31:11.327007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9953" for this suite. @ 04/23/25 16:31:11.332
• [6.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/23/25 16:31:11.341
  I0423 16:31:11.341827 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:31:11.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:11.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:11.366
  STEP: Creating configMap with name configmap-test-volume-map-b1ad28fd-df0b-49df-9398-568e7be6e631 @ 04/23/25 16:31:11.371
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:31:11.378
  STEP: Saw pod success @ 04/23/25 16:31:15.41
  I0423 16:31:15.415751 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-57b093e4-15b3-43f8-a823-7b86d00a2879 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:31:15.423
  I0423 16:31:15.454692 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-264" for this suite. @ 04/23/25 16:31:15.461
• [4.129 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/23/25 16:31:15.473
  I0423 16:31:15.473542 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 16:31:15.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:15.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:15.502
  I0423 16:31:15.507261 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 16:31:15.567762 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0423 16:31:15.573721 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 16:31:15.583856 24 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.583956 24 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 16:31:15.584159 24 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.584535 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 16:31:15.584583 24 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.584890 24 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 16:31:15.585005 24 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.585073 24 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 16:31:15.586531 24 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.586845 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 16:31:15.587083 24 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.587120 24 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 16:31:15.587207 24 predicates.go:957] calico-node-8wc69 from networking started at 2025-04-23 16:02:59 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.587237 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 16:31:15.587270 24 predicates.go:957] metallb-speaker-d29d6 from networking started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.587299 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 16:31:15.587407 24 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 16:07:17 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.587596 24 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 16:31:15.587634 24 predicates.go:957] sonobuoy-e2e-job-b8c81cda7ba2451f from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 16:31:15.587685 24 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 16:31:15.587714 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:31:15.587757 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-v6sf4 from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 16:31:15.587786 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:31:15.587817 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 16:31:15.587862 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-x4jkj from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 16:31:15.587894 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:31:15.588427 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:31:15.588494 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.588560 24 predicates.go:957] ceph-csi-rbd-nodeplugin-rk497 from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 16:31:15.588615 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:31:15.588675 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:31:15.588732 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.588792 24 predicates.go:957] ceph-mon-worker00-5b7bb47bf6-b7m6x from storage started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.588873 24 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 16:31:15.588929 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 16:31:15.611953 24 predicates.go:957] coredns-95979559b-ksl8k from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612048 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 16:31:15.612073 24 predicates.go:957] coredns-95979559b-l54c2 from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612091 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 16:31:15.612110 24 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612128 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 16:31:15.612145 24 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612162 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 16:31:15.612182 24 predicates.go:957] kubernetes-dashboard-api-75c8cc87b5-rmmnp from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612199 24 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 16:31:15.612216 24 predicates.go:957] kubernetes-dashboard-auth-84fdc98ddb-fvzk4 from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612232 24 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 16:31:15.612250 24 predicates.go:957] kubernetes-dashboard-kong-78b4d69466-mtmwm from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612267 24 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 16:31:15.612290 24 predicates.go:957] kubernetes-dashboard-metrics-scraper-7c444f8fcc-96vpq from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612306 24 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 16:31:15.612323 24 predicates.go:957] kubernetes-dashboard-web-79499dd8c4-m4zht from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612339 24 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 16:31:15.612378 24 predicates.go:957] calico-kube-controllers-66d7f7ddc9-lxxbz from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612394 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 16:31:15.612420 24 predicates.go:957] calico-node-bscw5 from networking started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612454 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 16:31:15.612473 24 predicates.go:957] calico-typha-679bfcf946-fhbr8 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612488 24 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 16:31:15.612506 24 predicates.go:957] metallb-controller-86d658b89-ljvv5 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612521 24 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 16:31:15.612539 24 predicates.go:957] metallb-speaker-2b64r from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.612556 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 16:31:15.612574 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-d9x28 from sonobuoy started at 2025-04-23 16:07:23 +0000 UTC (2 container statuses recorded)
  I0423 16:31:15.612590 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:31:15.612607 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 16:31:15.612632 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-mr7dh from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 16:31:15.612649 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:31:15.612713 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:31:15.612729 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.612747 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-cffrm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:31:15.612762 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:31:15.612779 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:31:15.612794 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:31:15.612812 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:31:15.612827 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.612844 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-qcmwm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:31:15.612860 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:31:15.612878 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:31:15.612894 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:31:15.612910 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:31:15.612925 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.612942 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-t6rp4 from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:31:15.612959 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:31:15.612976 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:31:15.612993 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:31:15.613009 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:31:15.613045 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.613064 24 predicates.go:957] ceph-csi-rbd-nodeplugin-sbzbz from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 16:31:15.613080 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:31:15.613099 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:31:15.613115 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.613133 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-64x2x from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:31:15.613149 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:31:15.613167 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:31:15.613183 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:31:15.613200 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:31:15.613216 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:31:15.613232 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:31:15.613248 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.613266 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-g6f5s from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:31:15.613283 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:31:15.613301 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:31:15.613317 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:31:15.613334 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:31:15.613351 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:31:15.613366 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:31:15.613404 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.613423 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-hnbps from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:31:15.613439 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:31:15.613455 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:31:15.613570 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:31:15.613588 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:31:15.613603 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:31:15.613619 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:31:15.613634 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:31:15.613651 24 predicates.go:957] ceph-mds-worker01-5cb6f4bd58-7kfbt from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613668 24 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 16:31:15.613704 24 predicates.go:957] ceph-mgr-worker01-7d4796dd6c-7hxcz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613721 24 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 16:31:15.613740 24 predicates.go:957] ceph-osd-worker01-766bd958-tcsks from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613755 24 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 16:31:15.613773 24 predicates.go:957] ceph-rgw-worker01-755cf966f4-qcqjd from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613791 24 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 16:31:15.613809 24 predicates.go:957] ceph-setup-hgggz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613826 24 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 16:31:15.613843 24 predicates.go:957] snapshot-controller-546c95687-dskm5 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613858 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 16:31:15.613875 24 predicates.go:957] snapshot-controller-546c95687-ps84s from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613891 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 16:31:15.613908 24 predicates.go:957] snapshot-validation-webhook-c58ddd547-gl285 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:31:15.613924 24 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 16:31:15.614
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 16:31:17.645
  STEP: Trying to apply a random label on the found node. @ 04/23/25 16:31:17.665
  STEP: verifying the node has the label kubernetes.io/e2e-535104cf-181e-4799-bfb6-41c272065a50 42 @ 04/23/25 16:31:17.69
  STEP: Trying to relaunch the pod, now with labels. @ 04/23/25 16:31:17.698
  STEP: removing the label kubernetes.io/e2e-535104cf-181e-4799-bfb6-41c272065a50 off the node worker00 @ 04/23/25 16:31:19.726
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-535104cf-181e-4799-bfb6-41c272065a50 @ 04/23/25 16:31:19.739
  I0423 16:31:19.745620 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2151" for this suite. @ 04/23/25 16:31:19.752
• [4.288 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/23/25 16:31:19.759
  I0423 16:31:19.759409 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:31:19.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:19.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:19.783
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:31:19.788
  STEP: Saw pod success @ 04/23/25 16:31:23.831
  I0423 16:31:23.833679 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-eb44f75b-8c96-42ca-9459-f947d1af771c container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:31:23.839
  I0423 16:31:23.857040 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9597" for this suite. @ 04/23/25 16:31:23.86
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/23/25 16:31:23.866
  I0423 16:31:23.866626 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/23/25 16:31:23.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:23.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:23.892
  STEP: Creating two CSIDrivers @ 04/23/25 16:31:23.897
  STEP: Getting "inline-driver-5ae1f075-72eb-4551-9de4-74c1bbae2cfe" & "inline-driver-2b8aa5e1-c069-43e4-b2e8-7a8de34b2ed6" @ 04/23/25 16:31:23.912
  STEP: Patching the CSIDriver "inline-driver-2b8aa5e1-c069-43e4-b2e8-7a8de34b2ed6" @ 04/23/25 16:31:23.917
  STEP: Updating the CSIDriver "inline-driver-2b8aa5e1-c069-43e4-b2e8-7a8de34b2ed6" @ 04/23/25 16:31:23.923
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9518" @ 04/23/25 16:31:23.93
  STEP: Deleting CSIDriver "inline-driver-5ae1f075-72eb-4551-9de4-74c1bbae2cfe" @ 04/23/25 16:31:23.933
  STEP: Confirm deletion of CSIDriver "inline-driver-5ae1f075-72eb-4551-9de4-74c1bbae2cfe" @ 04/23/25 16:31:23.939
  STEP: Deleting CSIDriver "inline-driver-2b8aa5e1-c069-43e4-b2e8-7a8de34b2ed6" via DeleteCollection @ 04/23/25 16:31:23.942
  STEP: Confirm deletion of CSIDriver "inline-driver-2b8aa5e1-c069-43e4-b2e8-7a8de34b2ed6" @ 04/23/25 16:31:23.947
  I0423 16:31:23.951332 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9518" for this suite. @ 04/23/25 16:31:23.962
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/23/25 16:31:23.973
  I0423 16:31:23.973059 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:31:23.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:23.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:23.99
  STEP: creating secret secrets-6798/secret-test-831c1c52-6575-4b5f-997b-85d377f15769 @ 04/23/25 16:31:23.994
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:31:23.998
  STEP: Saw pod success @ 04/23/25 16:31:28.024
  I0423 16:31:28.028207 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-a99a068b-3946-40f8-b90d-9f0a85aa6509 container env-test: <nil>
  STEP: delete the pod @ 04/23/25 16:31:28.04
  I0423 16:31:28.055823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6798" for this suite. @ 04/23/25 16:31:28.062
• [4.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 04/23/25 16:31:28.073
  I0423 16:31:28.074063 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:31:28.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:28.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:28.105
  STEP: apply creating a deployment @ 04/23/25 16:31:28.112
  I0423 16:31:28.131854 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3957" for this suite. @ 04/23/25 16:31:28.162
• [0.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 04/23/25 16:31:28.171
  I0423 16:31:28.171358 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename volumeattachment @ 04/23/25 16:31:28.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:28.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:28.194
  STEP: Create VolumeAttachment "va-e2e-6czrt" on node "worker00" @ 04/23/25 16:31:28.263
  STEP: Get VolumeAttachment "va-e2e-6czrt" on node "worker00" @ 04/23/25 16:31:28.271
  STEP: Patch VolumeAttachment "va-e2e-6czrt" on node "worker00" @ 04/23/25 16:31:28.277
  STEP: List VolumeAttachments with "va-e2e-6czrt=patched" label @ 04/23/25 16:31:28.285
  STEP: Delete VolumeAttachment "va-e2e-6czrt" on node "worker00" @ 04/23/25 16:31:28.29
  STEP: Confirm deletion of VolumeAttachment "va-e2e-6czrt" on node "worker00" @ 04/23/25 16:31:28.3
  STEP: Create VolumeAttachment "va-e2e-sp55f" on node "worker01" @ 04/23/25 16:31:28.364
  STEP: Update the VolumeAttachment "va-e2e-sp55f" on node "worker01" with label "va-e2e=updated" @ 04/23/25 16:31:28.375
  STEP: Create VolumeAttachment "va-e2e-ng8sl" on node "worker01" @ 04/23/25 16:31:28.468
  STEP: Update the VolumeAttachment "va-e2e-ng8sl" on node "worker01" with label "va-e2e=updated" @ 04/23/25 16:31:28.473
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/23/25 16:31:28.485
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/23/25 16:31:28.5
  I0423 16:31:28.505612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1479" for this suite. @ 04/23/25 16:31:28.565
• [0.403 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 04/23/25 16:31:28.574
  I0423 16:31:28.575000 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 16:31:28.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:31:28.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:31:28.604
  I0423 16:31:28.627632 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0423 16:32:28.634631 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/23/25 16:32:28.639
  STEP: Adding a custom resource @ 04/23/25 16:32:28.639
  I0423 16:32:28.670876 24 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0423 16:32:28.689125 24 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/23/25 16:32:28.689
  I0423 16:32:28.739165 24 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0423 16:32:28.750478 24 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/23/25 16:32:28.75
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/23/25 16:32:32.786
  STEP: Removing a custom resource @ 04/23/25 16:32:36.887
  STEP: Removing a custom resource @ 04/23/25 16:32:36.907
  I0423 16:32:36.927787 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4066" for this suite. @ 04/23/25 16:32:36.935
• [68.370 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 04/23/25 16:32:36.946
  I0423 16:32:36.946610 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:32:36.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:32:36.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:32:36.973
  I0423 16:32:36.978597 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7784 version'
  I0423 16:32:37.074834 24 builder.go:146] stderr: ""
  I0423 16:32:37.074912 24 builder.go:147] stdout: "Client Version: v1.32.4\nKustomize Version: v5.5.0\nServer Version: v1.32.4\n"
  I0423 16:32:37.075204 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7784" for this suite. @ 04/23/25 16:32:37.078
• [0.141 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/23/25 16:32:37.087
  I0423 16:32:37.087747 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:32:37.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:32:37.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:32:37.106
  STEP: Creating configMap with name projected-configmap-test-volume-b6117079-9f92-4152-9725-9cfbb8b2550b @ 04/23/25 16:32:37.111
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:32:37.116
  STEP: Saw pod success @ 04/23/25 16:32:41.143
  I0423 16:32:41.148785 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-3f6b6497-74dd-494c-92fb-dda2185827d3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:32:41.156
  I0423 16:32:41.184562 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3737" for this suite. @ 04/23/25 16:32:41.19
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 04/23/25 16:32:41.202
  I0423 16:32:41.202495 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:32:41.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:32:41.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:32:41.23
  STEP: Setting up server cert @ 04/23/25 16:32:41.256
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:32:41.652
  STEP: Deploying the webhook pod @ 04/23/25 16:32:41.667
  STEP: Wait for the deployment to be ready @ 04/23/25 16:32:41.679
  I0423 16:32:41.691537 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0423 16:32:43.706017 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 32, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 32, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 32, 41, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 32, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/23/25 16:32:45.712
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:32:45.734
  I0423 16:32:46.735257 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/23/25 16:32:46.743
  STEP: create a pod @ 04/23/25 16:32:46.766
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/23/25 16:32:48.785
  I0423 16:32:48.785177 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=webhook-9936 attach --namespace=webhook-9936 to-be-attached-pod -i -c=container1'
  I0423 16:32:48.929801 24 builder.go:135] rc: 1
  I0423 16:32:49.002867 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9936" for this suite. @ 04/23/25 16:32:49.018
  STEP: Destroying namespace "webhook-markers-9445" for this suite. @ 04/23/25 16:32:49.035
• [7.847 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/23/25 16:32:49.049
  I0423 16:32:49.049632 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:32:49.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:32:49.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:32:49.071
  STEP: Creating configMap with name configmap-test-volume-map-0e7431ea-7b8e-4c0c-ad83-e81d6b915a14 @ 04/23/25 16:32:49.075
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:32:49.082
  STEP: Saw pod success @ 04/23/25 16:32:53.113
  I0423 16:32:53.118567 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-7fec0185-0dce-45d3-a715-de305d1af74a container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:32:53.126
  I0423 16:32:53.158294 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-652" for this suite. @ 04/23/25 16:32:53.163
• [4.124 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 04/23/25 16:32:53.178
  I0423 16:32:53.179111 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename containers @ 04/23/25 16:32:53.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:32:53.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:32:53.207
  STEP: Creating a pod to test override all @ 04/23/25 16:32:53.212
  STEP: Saw pod success @ 04/23/25 16:32:57.241
  I0423 16:32:57.245200 24 output.go:207] Trying to get logs from node worker00 pod client-containers-58a1f228-dd86-4757-a2d0-6262b3c08640 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:32:57.253
  I0423 16:32:57.286050 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5007" for this suite. @ 04/23/25 16:32:57.291
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/23/25 16:32:57.302
  I0423 16:32:57.302067 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:32:57.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:32:57.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:32:57.33
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/23/25 16:32:57.335
  STEP: Saw pod success @ 04/23/25 16:33:01.36
  I0423 16:33:01.365942 24 output.go:207] Trying to get logs from node worker00 pod pod-7f2c9b0e-9b71-4247-a8ee-942918d97c68 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:33:01.377
  I0423 16:33:01.399116 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4477" for this suite. @ 04/23/25 16:33:01.404
• [4.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/23/25 16:33:01.412
  I0423 16:33:01.412995 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:33:01.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:01.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:01.429
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:33:01.434
  STEP: Saw pod success @ 04/23/25 16:33:05.459
  I0423 16:33:05.463371 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-97c7ad57-850d-44cd-8516-b7910dfdc089 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:33:05.47
  I0423 16:33:05.497078 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3778" for this suite. @ 04/23/25 16:33:05.503
• [4.098 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 04/23/25 16:33:05.511
  I0423 16:33:05.511231 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 16:33:05.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:05.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:05.539
  STEP: Creating namespace "e2e-ns-mvm2d" @ 04/23/25 16:33:05.542
  I0423 16:33:05.557009 24 namespace.go:412] Namespace "e2e-ns-mvm2d-3225" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-mvm2d-3225" @ 04/23/25 16:33:05.557
  I0423 16:33:05.563318 24 namespace.go:435] Namespace "e2e-ns-mvm2d-3225" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-mvm2d-3225" @ 04/23/25 16:33:05.563
  I0423 16:33:05.572181 24 namespace.go:464] Namespace "e2e-ns-mvm2d-3225" has []v1.FinalizerName{"kubernetes"}
  I0423 16:33:05.572679 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-252" for this suite. @ 04/23/25 16:33:05.602
  STEP: Destroying namespace "e2e-ns-mvm2d-3225" for this suite. @ 04/23/25 16:33:05.609
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/23/25 16:33:05.615
  I0423 16:33:05.615264 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 16:33:05.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:05.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:05.632
  STEP: Creating replication controller my-hostname-basic-95feca1e-08c0-40c4-898f-2dd03c69f8b7 @ 04/23/25 16:33:05.635
  I0423 16:33:05.641827 24 resource.go:87] Pod name my-hostname-basic-95feca1e-08c0-40c4-898f-2dd03c69f8b7: Found 0 pods out of 1
  I0423 16:33:10.656111 24 resource.go:87] Pod name my-hostname-basic-95feca1e-08c0-40c4-898f-2dd03c69f8b7: Found 1 pods out of 1
  I0423 16:33:10.656159 24 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-95feca1e-08c0-40c4-898f-2dd03c69f8b7" are running
  I0423 16:33:10.663501 24 rc.go:523] Pod "my-hostname-basic-95feca1e-08c0-40c4-898f-2dd03c69f8b7-6szd9" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:33:06 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:33:05 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:33:06 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:33:06 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-23 16:33:05 +0000 UTC Reason: Message:}])
  I0423 16:33:10.663547 24 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/23/25 16:33:10.663
  I0423 16:33:10.677780 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6411" for this suite. @ 04/23/25 16:33:10.687
• [5.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 04/23/25 16:33:10.7
  I0423 16:33:10.700961 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:33:10.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:10.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:10.726
  STEP: creating the pod @ 04/23/25 16:33:10.73
  I0423 16:33:10.730943 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 create -f -'
  I0423 16:33:11.025280 24 builder.go:146] stderr: ""
  I0423 16:33:11.025360 24 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/23/25 16:33:13.041
  I0423 16:33:13.041556 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 label pods pause testing-label=testing-label-value'
  I0423 16:33:13.181072 24 builder.go:146] stderr: ""
  I0423 16:33:13.181140 24 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/23/25 16:33:13.181
  I0423 16:33:13.181260 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 get pod pause -L testing-label'
  I0423 16:33:13.296101 24 builder.go:146] stderr: ""
  I0423 16:33:13.296196 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/23/25 16:33:13.296
  I0423 16:33:13.296325 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 label pods pause testing-label-'
  I0423 16:33:13.437355 24 builder.go:146] stderr: ""
  I0423 16:33:13.437705 24 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/23/25 16:33:13.437
  I0423 16:33:13.438003 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 get pod pause -L testing-label'
  I0423 16:33:13.531543 24 builder.go:146] stderr: ""
  I0423 16:33:13.531663 24 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/23/25 16:33:13.531
  I0423 16:33:13.532131 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 delete --grace-period=0 --force -f -'
  I0423 16:33:13.663070 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 16:33:13.663148 24 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0423 16:33:13.663285 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 get rc,svc -l name=pause --no-headers'
  I0423 16:33:13.795231 24 builder.go:146] stderr: "No resources found in kubectl-2680 namespace.\n"
  I0423 16:33:13.795291 24 builder.go:147] stdout: ""
  I0423 16:33:13.795382 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-2680 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 16:33:13.904709 24 builder.go:146] stderr: ""
  I0423 16:33:13.904772 24 builder.go:147] stdout: ""
  I0423 16:33:13.904964 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2680" for this suite. @ 04/23/25 16:33:13.91
• [3.218 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 04/23/25 16:33:13.92
  I0423 16:33:13.920670 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:33:13.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:13.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:13.943
  STEP: creating Agnhost RC @ 04/23/25 16:33:13.949
  I0423 16:33:13.949303 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-4408 create -f -'
  I0423 16:33:14.130442 24 builder.go:146] stderr: ""
  I0423 16:33:14.130526 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 16:33:14.13
  I0423 16:33:15.137549 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:33:15.137653 24 framework.go:733] Found 0 / 1
  I0423 16:33:16.136985 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:33:16.137038 24 framework.go:733] Found 1 / 1
  I0423 16:33:16.137072 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/23/25 16:33:16.137
  I0423 16:33:16.145099 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:33:16.145150 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 16:33:16.145224 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-4408 patch pod agnhost-primary-pr5rq -p {"metadata":{"annotations":{"x":"y"}}}'
  I0423 16:33:16.236527 24 builder.go:146] stderr: ""
  I0423 16:33:16.236603 24 builder.go:147] stdout: "pod/agnhost-primary-pr5rq patched\n"
  STEP: checking annotations @ 04/23/25 16:33:16.236
  I0423 16:33:16.240757 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:33:16.240801 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 16:33:16.240937 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4408" for this suite. @ 04/23/25 16:33:16.246
• [2.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 04/23/25 16:33:16.253
  I0423 16:33:16.253991 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 16:33:16.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:16.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:16.272
  I0423 16:33:20.303279 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9475" for this suite. @ 04/23/25 16:33:20.309
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 04/23/25 16:33:20.329
  I0423 16:33:20.329044 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 16:33:20.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:20.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:20.354
  STEP: Creating a cronjob @ 04/23/25 16:33:20.359
  STEP: creating @ 04/23/25 16:33:20.359
  STEP: getting @ 04/23/25 16:33:20.372
  STEP: listing @ 04/23/25 16:33:20.378
  STEP: watching @ 04/23/25 16:33:20.383
  I0423 16:33:20.383198 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 04/23/25 16:33:20.384
  STEP: cluster-wide watching @ 04/23/25 16:33:20.389
  I0423 16:33:20.389208 24 cronjob.go:407] starting watch
  STEP: patching @ 04/23/25 16:33:20.392
  STEP: updating @ 04/23/25 16:33:20.401
  I0423 16:33:20.415931 24 cronjob.go:431] waiting for watch events with expected annotations
  I0423 16:33:20.416033 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 04/23/25 16:33:20.416
  STEP: updating /status @ 04/23/25 16:33:20.424
  STEP: get /status @ 04/23/25 16:33:20.434
  STEP: deleting @ 04/23/25 16:33:20.439
  STEP: deleting a collection @ 04/23/25 16:33:20.456
  I0423 16:33:20.473957 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7274" for this suite. @ 04/23/25 16:33:20.478
• [0.156 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 04/23/25 16:33:20.485
  I0423 16:33:20.485198 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:33:20.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:20.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:20.506
  STEP: validating api versions @ 04/23/25 16:33:20.509
  I0423 16:33:20.509589 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5281 api-versions'
  I0423 16:33:20.588838 24 builder.go:146] stderr: ""
  I0423 16:33:20.588962 24 builder.go:147] stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\nadmissionregistration.k8s.io/v1beta1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthentication.k8s.io/v1beta1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncoordination.k8s.io/v1alpha2\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1beta1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha3\nresource.k8s.io/v1beta1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1alpha1\nstorage.k8s.io/v1beta1\nv1\n"
  I0423 16:33:20.589193 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5281" for this suite. @ 04/23/25 16:33:20.595
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/23/25 16:33:20.605
  I0423 16:33:20.605574 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 16:33:20.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:20.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:20.632
  STEP: Performing setup for networking test in namespace pod-network-test-7407 @ 04/23/25 16:33:20.637
  STEP: creating a selector @ 04/23/25 16:33:20.637
  STEP: Creating the service pods in kubernetes @ 04/23/25 16:33:20.637
  I0423 16:33:20.637657 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 16:33:42.847
  I0423 16:33:44.878404 24 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 16:33:44.878497 24 networking.go:42] Breadth first check of 10.200.131.129 on host 192.168.58.100...
  I0423 16:33:44.882366 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.130:9080/dial?request=hostname&protocol=http&host=10.200.131.129&port=8083&tries=1'] Namespace:pod-network-test-7407 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:33:44.882418 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:33:44.882494 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-7407/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.131.129%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 16:33:44.982077 24 utils.go:356] Waiting for responses: map[]
  I0423 16:33:44.982136 24 utils.go:360] reached 10.200.131.129 after 0/1 tries
  I0423 16:33:44.982163 24 networking.go:42] Breadth first check of 10.200.5.37 on host 192.168.58.101...
  I0423 16:33:44.987769 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.130:9080/dial?request=hostname&protocol=http&host=10.200.5.37&port=8083&tries=1'] Namespace:pod-network-test-7407 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:33:44.987847 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:33:44.987951 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-7407/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.130%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.5.37%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 16:33:45.078814 24 utils.go:356] Waiting for responses: map[]
  I0423 16:33:45.078983 24 utils.go:360] reached 10.200.5.37 after 0/1 tries
  I0423 16:33:45.079035 24 networking.go:53] Going to retry 0 out of 2 pods....
  I0423 16:33:45.080479 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7407" for this suite. @ 04/23/25 16:33:45.089
• [24.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 04/23/25 16:33:45.109
  I0423 16:33:45.109893 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 16:33:45.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:45.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:45.132
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/23/25 16:33:45.137
  I0423 16:33:45.139712 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:33:46.500279 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:33:52.336677 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2899" for this suite. @ 04/23/25 16:33:52.347
• [7.243 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/23/25 16:33:52.353
  I0423 16:33:52.353490 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 16:33:52.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:52.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:52.369
  STEP: Creating a pod to test substitution in container's command @ 04/23/25 16:33:52.372
  STEP: Saw pod success @ 04/23/25 16:33:56.392
  I0423 16:33:56.396306 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-c0850432-a859-46b2-83ff-0bfcef45b89f container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 16:33:56.403
  I0423 16:33:56.422710 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3213" for this suite. @ 04/23/25 16:33:56.426
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/23/25 16:33:56.436
  I0423 16:33:56.436904 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 16:33:56.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:33:56.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:33:56.464
  STEP: Creating a ForbidConcurrent cronjob @ 04/23/25 16:33:56.469
  STEP: Ensuring a job is scheduled @ 04/23/25 16:33:56.476
  STEP: Ensuring exactly one is scheduled @ 04/23/25 16:34:00.479
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/23/25 16:34:00.484
  STEP: Ensuring no more jobs are scheduled @ 04/23/25 16:34:00.492
  STEP: Removing cronjob @ 04/23/25 16:34:00.5
  I0423 16:34:00.509551 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8590" for this suite. @ 04/23/25 16:34:00.517
• [4.091 seconds]
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 04/23/25 16:34:00.527
  I0423 16:34:00.527825 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename disruption @ 04/23/25 16:34:00.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:00.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:00.561
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/23/25 16:34:00.569
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:34:00.579
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/23/25 16:34:00.593
  STEP: Waiting for all pods to be running @ 04/23/25 16:34:00.593
  I0423 16:34:00.596908 24 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 04/23/25 16:34:02.603
  STEP: Updating the pdb to allow a pod to be evicted @ 04/23/25 16:34:02.633
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:34:02.674
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/23/25 16:34:04.682
  STEP: Waiting for all pods to be running @ 04/23/25 16:34:04.682
  STEP: Waiting for the pdb to observed all healthy pods @ 04/23/25 16:34:04.688
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/23/25 16:34:04.725
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:34:04.758
  STEP: Waiting for all pods to be running @ 04/23/25 16:34:06.764
  STEP: locating a running pod @ 04/23/25 16:34:06.769
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/23/25 16:34:06.781
  STEP: Waiting for the pdb to be deleted @ 04/23/25 16:34:06.798
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/23/25 16:34:06.803
  STEP: Waiting for all pods to be running @ 04/23/25 16:34:06.803
  I0423 16:34:06.896170 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5672" for this suite. @ 04/23/25 16:34:06.903
• [6.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/23/25 16:34:06.925
  I0423 16:34:06.925396 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:34:06.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:06.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:06.959
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:34:06.965
  STEP: Saw pod success @ 04/23/25 16:34:10.989
  I0423 16:34:10.996301 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-cdf217dc-3c84-4a7f-af4e-30b885e5ec76 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:34:11.006
  I0423 16:34:11.031117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6152" for this suite. @ 04/23/25 16:34:11.037
• [4.123 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 04/23/25 16:34:11.048
  I0423 16:34:11.049092 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:34:11.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:11.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:11.078
  I0423 16:34:11.086180 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  W0423 16:34:11.089403      24 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000cb7330 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0423 16:34:13.656307      24 warnings.go:70] unknown field "alpha"
  W0423 16:34:13.656347      24 warnings.go:70] unknown field "beta"
  W0423 16:34:13.656361      24 warnings.go:70] unknown field "delta"
  W0423 16:34:13.656415      24 warnings.go:70] unknown field "epsilon"
  W0423 16:34:13.656430      24 warnings.go:70] unknown field "gamma"
  I0423 16:34:14.201775 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7513" for this suite. @ 04/23/25 16:34:14.206
• [3.164 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 04/23/25 16:34:14.213
  I0423 16:34:14.213540 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:34:14.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:14.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:14.237
  STEP: Setting up server cert @ 04/23/25 16:34:14.263
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:34:14.529
  STEP: Deploying the webhook pod @ 04/23/25 16:34:14.543
  STEP: Wait for the deployment to be ready @ 04/23/25 16:34:14.554
  I0423 16:34:14.563609 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:34:16.582
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:34:16.601
  I0423 16:34:17.603110 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 16:34:17.613524 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-58-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 16:34:18.129
  STEP: Creating a custom resource while v1 is storage version @ 04/23/25 16:34:18.153
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/23/25 16:34:20.215
  STEP: Patching the custom resource while v2 is storage version @ 04/23/25 16:34:20.227
  I0423 16:34:20.864615 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2977" for this suite. @ 04/23/25 16:34:20.87
  STEP: Destroying namespace "webhook-markers-5017" for this suite. @ 04/23/25 16:34:20.88
• [6.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/23/25 16:34:20.891
  I0423 16:34:20.891821 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename prestop @ 04/23/25 16:34:20.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:20.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:20.924
  STEP: Creating server pod server in namespace prestop-9624 @ 04/23/25 16:34:20.932
  STEP: Waiting for pods to come up. @ 04/23/25 16:34:20.944
  STEP: Creating tester pod tester in namespace prestop-9624 @ 04/23/25 16:34:22.959
  STEP: Deleting pre-stop pod @ 04/23/25 16:34:24.977
  I0423 16:34:29.994877 24 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/23/25 16:34:29.995
  I0423 16:34:30.020045 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9624" for this suite. @ 04/23/25 16:34:30.027
• [9.146 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/23/25 16:34:30.039
  I0423 16:34:30.040358 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:34:30.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:30.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:30.071
  STEP: Creating configMap with name cm-test-opt-del-86dd08fa-35f3-4779-a682-0c1121ba67b4 @ 04/23/25 16:34:30.132
  STEP: Creating configMap with name cm-test-opt-upd-c06ce2f7-7809-49fa-b6a0-66312e1a718d @ 04/23/25 16:34:30.139
  STEP: Creating the pod @ 04/23/25 16:34:30.151
  STEP: Deleting configmap cm-test-opt-del-86dd08fa-35f3-4779-a682-0c1121ba67b4 @ 04/23/25 16:34:32.218
  STEP: Updating configmap cm-test-opt-upd-c06ce2f7-7809-49fa-b6a0-66312e1a718d @ 04/23/25 16:34:32.225
  STEP: Creating configMap with name cm-test-opt-create-e20f35e2-ad91-41d6-b6ba-a077dab1c52e @ 04/23/25 16:34:32.233
  STEP: waiting to observe update in volume @ 04/23/25 16:34:32.242
  I0423 16:34:34.278279 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4713" for this suite. @ 04/23/25 16:34:34.283
• [4.263 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/23/25 16:34:34.301
  I0423 16:34:34.302000 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 16:34:34.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:34.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:34.33
  I0423 16:34:34.392629 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 16:34:34.4
  I0423 16:34:34.493836 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:34:34.493902 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:34:35.407041 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:34:35.407079 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:34:36.415106 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 16:34:36.415168 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/23/25 16:34:36.432
  STEP: Check that daemon pods images are updated. @ 04/23/25 16:34:36.512
  I0423 16:34:36.516998 24 daemon_set.go:1193] Wrong image for pod: daemon-set-k8f5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0423 16:34:37.517648 24 daemon_set.go:1193] Wrong image for pod: daemon-set-k8f5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0423 16:34:38.517111 24 daemon_set.go:1193] Wrong image for pod: daemon-set-k8f5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0423 16:34:38.517190 24 daemon_set.go:1198] Pod daemon-set-pndfx is not available
  I0423 16:34:39.516522 24 daemon_set.go:1193] Wrong image for pod: daemon-set-k8f5n. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0423 16:34:39.516612 24 daemon_set.go:1198] Pod daemon-set-pndfx is not available
  I0423 16:34:40.517442 24 daemon_set.go:1198] Pod daemon-set-s4cw2 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/23/25 16:34:40.524
  I0423 16:34:40.536627 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:34:40.536693 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:34:41.534429 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 16:34:41.534515 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 16:34:41.553
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8855, will wait for the garbage collector to delete the pods @ 04/23/25 16:34:41.553
  I0423 16:34:41.628650 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 19.617923ms
  I0423 16:34:41.728999 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.433588ms
  I0423 16:34:44.337116 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:34:44.337176 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 16:34:44.342344 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15553"},"items":null}

  I0423 16:34:44.346056 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15553"},"items":null}

  I0423 16:34:44.363350 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8855" for this suite. @ 04/23/25 16:34:44.37
• [10.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 04/23/25 16:34:44.385
  I0423 16:34:44.385791 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:34:44.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:44.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:44.409
  STEP: apply creating a deployment @ 04/23/25 16:34:44.413
  I0423 16:34:44.428711 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5276" for this suite. @ 04/23/25 16:34:44.454
• [0.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/23/25 16:34:44.469
  I0423 16:34:44.469732 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:34:44.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:44.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:44.499
  STEP: Creating secret with name s-test-opt-del-582cbcb4-aa98-4527-aa12-6839587adba1 @ 04/23/25 16:34:44.554
  STEP: Creating secret with name s-test-opt-upd-104bcbb0-008f-40df-8482-6489e31b80b6 @ 04/23/25 16:34:44.564
  STEP: Creating the pod @ 04/23/25 16:34:44.571
  STEP: Deleting secret s-test-opt-del-582cbcb4-aa98-4527-aa12-6839587adba1 @ 04/23/25 16:34:46.625
  STEP: Updating secret s-test-opt-upd-104bcbb0-008f-40df-8482-6489e31b80b6 @ 04/23/25 16:34:46.643
  STEP: Creating secret with name s-test-opt-create-42fae53d-98ce-4264-953a-1601cdc6c44a @ 04/23/25 16:34:46.649
  STEP: waiting to observe update in volume @ 04/23/25 16:34:46.657
  I0423 16:34:48.697199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3643" for this suite. @ 04/23/25 16:34:48.702
• [4.249 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 04/23/25 16:34:48.719
  I0423 16:34:48.719146 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:34:48.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:48.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:48.745
  I0423 16:34:48.750575 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  W0423 16:34:51.311296      24 warnings.go:70] unknown field "alpha"
  W0423 16:34:51.311396      24 warnings.go:70] unknown field "beta"
  W0423 16:34:51.311412      24 warnings.go:70] unknown field "delta"
  W0423 16:34:51.311424      24 warnings.go:70] unknown field "epsilon"
  W0423 16:34:51.311477      24 warnings.go:70] unknown field "gamma"
  I0423 16:34:51.858497 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7649" for this suite. @ 04/23/25 16:34:51.862
• [3.151 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 04/23/25 16:34:51.869
  I0423 16:34:51.869875 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 16:34:51.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:34:51.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:34:51.894
  STEP: Creating pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464 @ 04/23/25 16:34:51.899
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 16:34:53.925
  I0423 16:34:53.930099 24 container_probe.go:1749] Initial restart count of pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e is 0
  I0423 16:34:53.935870 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:34:55.943229 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:34:57.950386 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:34:59.953673 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:01.960708 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:03.965598 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:05.971998 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:07.978541 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:09.982607 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:11.988914 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:13.995020 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:16.000300 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:18.006823 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:20.013196 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:22.018620 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:24.025108 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:26.031269 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:28.037948 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:30.044918 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:32.050666 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:34.055663 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:36.062097 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:38.067642 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:40.071235 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:42.077021 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:44.083244 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:46.087078 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:48.092489 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:50.098827 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:52.105848 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:54.112182 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:56.117126 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:35:58.122669 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:00.126944 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:02.132364 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:04.137112 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:06.141716 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:08.148254 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:10.158911 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:12.167249 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:14.174255 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:16.178842 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:18.184082 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:20.189221 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:22.196017 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:24.202380 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:26.208731 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:28.215199 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:30.219741 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:32.226228 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:34.241018 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:36.247043 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:38.253509 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:40.259753 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:42.265046 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:44.272607 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:46.276889 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:48.282243 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:50.288535 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:52.293678 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:54.298106 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:56.303255 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:36:58.309538 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:00.315608 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:02.322780 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:04.326789 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:06.334302 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:08.339389 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:10.345526 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:12.350737 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:14.356347 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:16.362343 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:18.368697 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:20.372830 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:22.380601 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:24.388359 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:26.395946 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:28.402115 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:30.408087 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:32.414493 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:34.419800 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:36.427295 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:38.433093 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:40.437817 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:42.444601 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:44.451866 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:46.456256 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:48.461919 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:50.466613 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:52.471802 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:54.476925 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:56.483093 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:37:58.489981 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:00.495253 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:02.503635 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:04.508401 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:06.514919 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:08.519489 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:10.525211 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:12.533078 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:14.539838 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:16.546549 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:18.552820 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:20.557426 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:22.564053 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:24.570531 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:26.576753 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:28.583810 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:30.587150 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:32.598239 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:34.606421 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:36.612045 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:38.618692 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:40.623415 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:42.626616 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:44.630266 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:46.639258 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:48.647370 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:50.653703 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  I0423 16:38:52.666180 24 container_probe.go:1759] Get pod busybox-fdfd2125-2dc3-4299-a20e-ede7e5d4f53e in namespace container-probe-2464
  STEP: deleting the pod @ 04/23/25 16:38:54.666
  I0423 16:38:54.697068 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2464" for this suite. @ 04/23/25 16:38:54.712
• [242.854 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/23/25 16:38:54.724
  I0423 16:38:54.724335 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:38:54.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:38:54.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:38:54.752
  STEP: Creating configMap with name projected-configmap-test-volume-map-e453dd01-698e-4375-b820-07140fc96ab8 @ 04/23/25 16:38:54.755
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:38:54.76
  STEP: Saw pod success @ 04/23/25 16:38:58.791
  I0423 16:38:58.795617 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-45501f5a-19d0-4641-9e2b-8911147f536c container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:38:58.804
  I0423 16:38:58.826556 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9513" for this suite. @ 04/23/25 16:38:58.832
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/23/25 16:38:58.843
  I0423 16:38:58.843272 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 16:38:58.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:38:58.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:38:58.875
  I0423 16:38:58.945581 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0423 16:38:58.952305 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0423 16:38:59.043248 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:38:59.043374 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:38:59.963461 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:38:59.963524 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:39:00.963034 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 16:39:00.963149 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I0423 16:39:00.963178 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0423 16:39:00.986078 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0423 16:39:03.003106 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0423 16:39:03.012976 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0423 16:39:03.013037 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0423 16:39:03.018306 24 daemon_set.go:1193] Wrong image for pod: daemon-set-tcv42. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0423 16:39:03.018361 24 daemon_set.go:1198] Pod daemon-set-tcv42 is not available
  I0423 16:39:05.018453 24 daemon_set.go:1198] Pod daemon-set-vpgxl is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 16:39:05.037
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7388, will wait for the garbage collector to delete the pods @ 04/23/25 16:39:05.037
  I0423 16:39:05.099721 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.816388ms
  I0423 16:39:05.200482 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.758921ms
  I0423 16:39:06.505691 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:39:06.505767 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 16:39:06.511436 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16749"},"items":null}

  I0423 16:39:06.515238 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16749"},"items":null}

  I0423 16:39:06.528731 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7388" for this suite. @ 04/23/25 16:39:06.532
• [7.700 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/23/25 16:39:06.543
  I0423 16:39:06.543794 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:39:06.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:39:06.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:39:06.568
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:39:06.574
  STEP: Saw pod success @ 04/23/25 16:39:10.605
  I0423 16:39:10.609837 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-0177b694-288d-4509-bcd9-9e23b6fc655b container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:39:10.617
  I0423 16:39:10.643895 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7995" for this suite. @ 04/23/25 16:39:10.65
• [4.116 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 04/23/25 16:39:10.659
  I0423 16:39:10.659135 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 16:39:10.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:39:10.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:39:10.686
  STEP: Creating a suspended job @ 04/23/25 16:39:10.697
  STEP: Patching the Job @ 04/23/25 16:39:10.706
  STEP: Watching for Job to be patched @ 04/23/25 16:39:10.728
  I0423 16:39:10.731527 24 job.go:1309] Event ADDED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8] and annotations: map[]
  I0423 16:39:10.731595 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8] and annotations: map[]
  I0423 16:39:10.731848 24 job.go:1312] Event MODIFIED found for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[]
  STEP: Updating the job @ 04/23/25 16:39:10.733
  STEP: Watching for Job to be updated @ 04/23/25 16:39:10.749
  I0423 16:39:10.752809 24 job.go:1312] Event MODIFIED found for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:10.752902 24 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/23/25 16:39:10.752
  I0423 16:39:10.758428 24 job.go:1187] Job: e2e-ntbx8 as labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched]
  STEP: Waiting for job to complete @ 04/23/25 16:39:10.758
  STEP: Delete a job collection with a labelselector @ 04/23/25 16:39:18.788
  STEP: Watching for Job to be deleted @ 04/23/25 16:39:18.796
  I0423 16:39:18.800923 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.801055 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.801279 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.801317 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.801637 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.802761 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.805670 24 job.go:1309] Event MODIFIED observed for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  I0423 16:39:18.806021 24 job.go:1312] Event DELETED found for Job e2e-ntbx8 in namespace job-2636 with labels: map[e2e-job-label:e2e-ntbx8 e2e-ntbx8:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/23/25 16:39:18.806
  I0423 16:39:18.813575 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2636" for this suite. @ 04/23/25 16:39:18.823
• [8.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/23/25 16:39:18.857
  I0423 16:39:18.858020 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 16:39:18.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:39:18.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:39:18.882
  STEP: referencing a single matching pod @ 04/23/25 16:39:20.99
  STEP: referencing matching pods with named port @ 04/23/25 16:39:20.998
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/23/25 16:39:21.005
  STEP: recreating EndpointSlices after they've been deleted @ 04/23/25 16:39:21.012
  I0423 16:39:21.051643 24 endpointslice.go:946] Expected at least 2 EndpointSlices for Service endpointslice-944/example-named-port, got 1
  I0423 16:39:21.052658 24 endpointslice.go:952] 0 - {"metadata":{"name":"example-named-port-wf75w","generateName":"example-named-port-","namespace":"endpointslice-944","uid":"a92d4b74-4793-4afe-90f0-4ecc1f5dddb9","resourceVersion":"17008","generation":1,"creationTimestamp":"2025-04-23T16:39:21Z","labels":{"endpointslice.kubernetes.io/managed-by":"endpointslice-controller.k8s.io","kubernetes.io/service-name":"example-named-port"},"ownerReferences":[{"apiVersion":"v1","kind":"Service","name":"example-named-port","uid":"34c7cc36-2bc0-4155-8d5f-73af1007d9b7","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"discovery.k8s.io/v1","time":"2025-04-23T16:39:21Z","fieldsType":"FieldsV1","fieldsV1":{"f:addressType":{},"f:endpoints":{},"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:endpointslice.kubernetes.io/managed-by":{},"f:kubernetes.io/service-name":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"34c7cc36-2bc0-4155-8d5f-73af1007d9b7\"}":{}}},"f:ports":{}}}]},"addressType":"IPv4","endpoints":[{"addresses":["10.200.131.153"],"conditions":{"ready":true,"serving":true,"terminating":false},"targetRef":{"kind":"Pod","namespace":"endpointslice-944","name":"pod2","uid":"fcc376bd-c177-4cb9-b556-f142aaed8a6f"},"nodeName":"worker00"}],"ports":[{"name":"http","protocol":"TCP","port":3001}]}
  I0423 16:39:23.051774 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-944" for this suite. @ 04/23/25 16:39:23.057
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/23/25 16:39:23.075
  I0423 16:39:23.075120 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename init-container @ 04/23/25 16:39:23.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:39:23.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:39:23.102
  STEP: creating the pod @ 04/23/25 16:39:23.108
  I0423 16:39:23.108710 24 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0423 16:40:09.253837 24 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1522e9b6-d73e-494e-9156-d4f828d9f225", GenerateName:"", Namespace:"init-container-9935", SelfLink:"", UID:"45c61d93-f304-4a29-a413-da2f7a6284a9", ResourceVersion:"17287", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"108697374"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"8fb7a10f9143fc12a1485de6c837f18b926f3d479efda2126df11799ec7f27e3", "cni.projectcalico.org/podIP":"10.200.131.155/32", "cni.projectcalico.org/podIPs":"10.200.131.155/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 16, 40, 9, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c0a8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-n2brl", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0008a4000), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n2brl", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n2brl", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-n2brl", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0052fc0f8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"worker00", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003150000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0052fc190)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0052fc1b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0052fc1b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0052fc1bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000cb6070), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 16, 39, 24, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.58.100", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.58.100"}}, PodIP:"10.200.131.155", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.131.155"}}, StartTime:time.Date(2025, time.April, 23, 16, 39, 23, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003ec0e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0003ec150)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://49a1563dbdb435d4b7f7caaa7c920e7a089efdef899056fe77d8b1e77bf813c1", Started:(*bool)(0xc0052fc25f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0008a4060), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0052fc265), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0008a4040), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc0052fc234), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil), User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0423 16:40:09.254655 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9935" for this suite. @ 04/23/25 16:40:09.266
• [46.201 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/23/25 16:40:09.276
  I0423 16:40:09.276884 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:40:09.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:40:09.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:40:09.308
  STEP: Creating secret with name secret-test-map-6673ea68-fa5e-446f-8e3a-ea092bfd30e1 @ 04/23/25 16:40:09.312
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:40:09.319
  STEP: Saw pod success @ 04/23/25 16:40:13.353
  I0423 16:40:13.356233 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-e265fa58-97a1-4ec1-b0ac-68dec1087431 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:40:13.364
  I0423 16:40:13.389875 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1721" for this suite. @ 04/23/25 16:40:13.395
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 04/23/25 16:40:13.405
  I0423 16:40:13.405561 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 16:40:13.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:40:13.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:40:13.427
  STEP: Read namespace status @ 04/23/25 16:40:13.433
  I0423 16:40:13.438196 24 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/23/25 16:40:13.438
  I0423 16:40:13.447253 24 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/23/25 16:40:13.447
  I0423 16:40:13.462344 24 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0423 16:40:13.462612 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3121" for this suite. @ 04/23/25 16:40:13.497
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 04/23/25 16:40:13.506
  I0423 16:40:13.506963 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:40:13.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:40:13.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:40:13.535
  STEP: Setting up server cert @ 04/23/25 16:40:13.561
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:40:14.068
  STEP: Deploying the webhook pod @ 04/23/25 16:40:14.083
  STEP: Wait for the deployment to be ready @ 04/23/25 16:40:14.097
  I0423 16:40:14.105178 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:40:16.119
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:40:16.141
  I0423 16:40:17.142441 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/23/25 16:40:17.153
  I0423 16:40:17.236755 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5343" for this suite. @ 04/23/25 16:40:17.243
  STEP: Destroying namespace "webhook-markers-3433" for this suite. @ 04/23/25 16:40:17.254
• [3.770 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 04/23/25 16:40:17.277
  I0423 16:40:17.277864 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:40:17.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:40:17.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:40:17.302
  STEP: Setting up server cert @ 04/23/25 16:40:17.328
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:40:17.605
  STEP: Deploying the webhook pod @ 04/23/25 16:40:17.62
  STEP: Wait for the deployment to be ready @ 04/23/25 16:40:17.631
  I0423 16:40:17.640006 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:40:19.652
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:40:19.673
  I0423 16:40:20.673855 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/23/25 16:40:20.684
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 16:40:20.684
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/23/25 16:40:20.711
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/23/25 16:40:21.726
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 16:40:21.726
  STEP: Having no error when timeout is longer than webhook latency @ 04/23/25 16:40:22.76
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 16:40:22.76
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/23/25 16:40:27.816
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/23/25 16:40:27.816
  I0423 16:40:32.976710 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5774" for this suite. @ 04/23/25 16:40:32.984
  STEP: Destroying namespace "webhook-markers-2328" for this suite. @ 04/23/25 16:40:32.997
• [15.726 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/23/25 16:40:33.003
  I0423 16:40:33.003938 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/23/25 16:40:33.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:40:33.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:40:33.025
  STEP: Creating 50 configmaps @ 04/23/25 16:40:33.029
  STEP: Creating RC which spawns configmap-volume pods @ 04/23/25 16:40:33.261
  I0423 16:40:33.406784 24 resource.go:87] Pod name wrapped-volume-race-db2cdd77-670a-4c14-a314-4e12f2591a7b: Found 2 pods out of 5
  I0423 16:40:38.423874 24 resource.go:87] Pod name wrapped-volume-race-db2cdd77-670a-4c14-a314-4e12f2591a7b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/23/25 16:40:38.424
  STEP: Creating RC which spawns configmap-volume pods @ 04/23/25 16:40:38.457
  I0423 16:40:38.478498 24 resource.go:87] Pod name wrapped-volume-race-6e4d1a38-463e-4652-9623-1da500747d60: Found 1 pods out of 5
  I0423 16:40:43.486462 24 resource.go:87] Pod name wrapped-volume-race-6e4d1a38-463e-4652-9623-1da500747d60: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/23/25 16:40:43.486
  STEP: Creating RC which spawns configmap-volume pods @ 04/23/25 16:40:43.511
  I0423 16:40:43.543189 24 resource.go:87] Pod name wrapped-volume-race-744e1bd2-dcbb-4063-9890-c90f9af1732a: Found 0 pods out of 5
  I0423 16:40:48.549129 24 resource.go:87] Pod name wrapped-volume-race-744e1bd2-dcbb-4063-9890-c90f9af1732a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/23/25 16:40:48.549
  STEP: deleting ReplicationController wrapped-volume-race-744e1bd2-dcbb-4063-9890-c90f9af1732a in namespace emptydir-wrapper-5219, will wait for the garbage collector to delete the pods @ 04/23/25 16:40:48.562
  I0423 16:40:48.624194 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-744e1bd2-dcbb-4063-9890-c90f9af1732a took: 8.022538ms
  I0423 16:40:48.825188 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-744e1bd2-dcbb-4063-9890-c90f9af1732a pods took: 200.993364ms
  STEP: deleting ReplicationController wrapped-volume-race-6e4d1a38-463e-4652-9623-1da500747d60 in namespace emptydir-wrapper-5219, will wait for the garbage collector to delete the pods @ 04/23/25 16:40:50.726
  I0423 16:40:50.789313 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-6e4d1a38-463e-4652-9623-1da500747d60 took: 7.823851ms
  I0423 16:40:50.889591 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-6e4d1a38-463e-4652-9623-1da500747d60 pods took: 100.276096ms
  STEP: deleting ReplicationController wrapped-volume-race-db2cdd77-670a-4c14-a314-4e12f2591a7b in namespace emptydir-wrapper-5219, will wait for the garbage collector to delete the pods @ 04/23/25 16:40:52.79
  I0423 16:40:52.854141 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-db2cdd77-670a-4c14-a314-4e12f2591a7b took: 6.965773ms
  I0423 16:40:52.955630 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-db2cdd77-670a-4c14-a314-4e12f2591a7b pods took: 101.487438ms
  STEP: Cleaning up the configMaps @ 04/23/25 16:40:54.856
  I0423 16:40:55.217582 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5219" for this suite. @ 04/23/25 16:40:55.224
• [22.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 04/23/25 16:40:55.235
  I0423 16:40:55.235485 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-selectable-fields @ 04/23/25 16:40:55.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:40:55.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:40:55.261
  STEP: Setting up server cert @ 04/23/25 16:40:55.267
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 16:40:56.346
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 16:40:56.361
  STEP: Wait for the deployment to be ready @ 04/23/25 16:40:56.372
  I0423 16:40:56.381709 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:40:58.399
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:40:58.425
  I0423 16:40:59.426232 24 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 04/23/25 16:40:59.435
  I0423 16:40:59.435188 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Creating a custom resource conversion webhook @ 04/23/25 16:40:59.964
  STEP: Watching with field selectors @ 04/23/25 16:41:02.009
  STEP: Registering informers with field selectors @ 04/23/25 16:41:02.015
  STEP: Creating custom resources @ 04/23/25 16:41:02.016
  STEP: Listing v2 custom resources with field selector host=host1 @ 04/23/25 16:41:02.042
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 04/23/25 16:41:02.045
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 04/23/25 16:41:02.049
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 04/23/25 16:41:02.051
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 04/23/25 16:41:02.054
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 04/23/25 16:41:02.059
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 04/23/25 16:41:02.059
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 04/23/25 16:41:02.059
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 04/23/25 16:41:02.059
  STEP: Deleting one custom resources to ensure that deletions are observed @ 04/23/25 16:41:02.06
  STEP: Updating one custom resources to ensure that deletions are observed @ 04/23/25 16:41:02.069
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 04/23/25 16:41:02.081
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 04/23/25 16:41:02.083
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 04/23/25 16:41:02.086
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 04/23/25 16:41:02.091
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 04/23/25 16:41:02.092
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 04/23/25 16:41:02.092
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 04/23/25 16:41:02.092
  I0423 16:41:02.678265 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-8888" for this suite. @ 04/23/25 16:41:02.691
• [7.484 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 04/23/25 16:41:02.722
  I0423 16:41:02.722176 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:41:02.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:02.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:02.747
  STEP: Setting up server cert @ 04/23/25 16:41:02.768
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:41:03.209
  STEP: Deploying the webhook pod @ 04/23/25 16:41:03.214
  STEP: Wait for the deployment to be ready @ 04/23/25 16:41:03.222
  I0423 16:41:03.230798 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:41:05.242
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:41:05.256
  I0423 16:41:06.257302 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 16:41:06.267
  STEP: create the configmap with a random name @ 04/23/25 16:41:06.296
  STEP: verify the configmap is mutated @ 04/23/25 16:41:06.321
  STEP: create the configmap with 'skip-me' name @ 04/23/25 16:41:06.321
  I0423 16:41:06.398762 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9106" for this suite. @ 04/23/25 16:41:06.405
  STEP: Destroying namespace "webhook-markers-1568" for this suite. @ 04/23/25 16:41:06.424
• [3.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/23/25 16:41:06.436
  I0423 16:41:06.436332 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:41:06.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:06.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:06.464
  STEP: Creating secret with name s-test-opt-del-e891f45c-2bd5-4a26-a3a2-1c0283bc68cb @ 04/23/25 16:41:06.507
  STEP: Creating secret with name s-test-opt-upd-7b6ae4de-3779-4ae4-be12-78e396ec581c @ 04/23/25 16:41:06.517
  STEP: Creating the pod @ 04/23/25 16:41:06.523
  STEP: Deleting secret s-test-opt-del-e891f45c-2bd5-4a26-a3a2-1c0283bc68cb @ 04/23/25 16:41:08.578
  STEP: Updating secret s-test-opt-upd-7b6ae4de-3779-4ae4-be12-78e396ec581c @ 04/23/25 16:41:08.593
  STEP: Creating secret with name s-test-opt-create-c3467601-dd79-4241-83fc-08a57105ec7f @ 04/23/25 16:41:08.6
  STEP: waiting to observe update in volume @ 04/23/25 16:41:08.607
  I0423 16:41:10.632877 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9284" for this suite. @ 04/23/25 16:41:10.637
• [4.207 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 04/23/25 16:41:10.646
  I0423 16:41:10.646496 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:41:10.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:10.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:10.669
  STEP: Setting up server cert @ 04/23/25 16:41:10.696
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:41:11.268
  STEP: Deploying the webhook pod @ 04/23/25 16:41:11.283
  STEP: Wait for the deployment to be ready @ 04/23/25 16:41:11.302
  I0423 16:41:11.311497 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/23/25 16:41:13.327
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:41:13.339
  I0423 16:41:14.343165 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 16:41:14.352289 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/23/25 16:41:14.864
  STEP: Creating a custom resource that should be denied by the webhook @ 04/23/25 16:41:14.893
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/23/25 16:41:16.907
  STEP: Updating the custom resource with disallowed data should be denied @ 04/23/25 16:41:16.917
  STEP: Deleting the custom resource should be denied @ 04/23/25 16:41:16.928
  STEP: Remove the offending key and value from the custom resource data @ 04/23/25 16:41:16.936
  STEP: Deleting the updated custom resource should be successful @ 04/23/25 16:41:16.947
  I0423 16:41:17.557248 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1631" for this suite. @ 04/23/25 16:41:17.563
  STEP: Destroying namespace "webhook-markers-6295" for this suite. @ 04/23/25 16:41:17.58
• [6.944 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/23/25 16:41:17.59
  I0423 16:41:17.590644 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 16:41:17.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:17.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:17.62
  STEP: Deleting RuntimeClass runtimeclass-272-delete-me @ 04/23/25 16:41:17.635
  STEP: Waiting for the RuntimeClass to disappear @ 04/23/25 16:41:17.644
  I0423 16:41:17.658985 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-272" for this suite. @ 04/23/25 16:41:17.664
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/23/25 16:41:17.672
  I0423 16:41:17.672939 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:41:17.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:17.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:17.697
  STEP: Creating projection with secret that has name projected-secret-test-cca79312-2bb6-4541-a16e-0b56aaeb477c @ 04/23/25 16:41:17.701
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:41:17.706
  STEP: Saw pod success @ 04/23/25 16:41:21.776
  I0423 16:41:21.782003 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-9d491980-9121-46ff-9276-8f3f096c0175 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:41:21.789
  I0423 16:41:21.809527 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7997" for this suite. @ 04/23/25 16:41:21.814
• [4.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/23/25 16:41:21.831
  I0423 16:41:21.831890 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:41:21.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:21.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:21.858
  STEP: Creating a pod to test downward api env vars @ 04/23/25 16:41:21.862
  STEP: Saw pod success @ 04/23/25 16:41:25.893
  I0423 16:41:25.897570 24 output.go:207] Trying to get logs from node worker00 pod downward-api-70c8bed1-1c17-415d-a77c-9366fc15dad9 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 16:41:25.906
  I0423 16:41:25.928515 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-356" for this suite. @ 04/23/25 16:41:25.933
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/23/25 16:41:25.944
  I0423 16:41:25.944386 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 16:41:25.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:25.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:25.976
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/23/25 16:41:25.981
  STEP: When a replicaset with a matching selector is created @ 04/23/25 16:41:28.008
  STEP: Then the orphan pod is adopted @ 04/23/25 16:41:28.025
  STEP: When the matched label of one of its pods change @ 04/23/25 16:41:29.036
  I0423 16:41:29.040583 24 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/23/25 16:41:29.063
  I0423 16:41:30.077119 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7443" for this suite. @ 04/23/25 16:41:30.082
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/23/25 16:41:30.088
  I0423 16:41:30.088520 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename events @ 04/23/25 16:41:30.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:30.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:30.108
  STEP: creating a test event @ 04/23/25 16:41:30.116
  STEP: listing events in all namespaces @ 04/23/25 16:41:30.124
  STEP: listing events in test namespace @ 04/23/25 16:41:30.138
  STEP: listing events with field selection filtering on source @ 04/23/25 16:41:30.141
  STEP: listing events with field selection filtering on reportingController @ 04/23/25 16:41:30.143
  STEP: getting the test event @ 04/23/25 16:41:30.145
  STEP: patching the test event @ 04/23/25 16:41:30.147
  STEP: getting the test event @ 04/23/25 16:41:30.158
  STEP: updating the test event @ 04/23/25 16:41:30.16
  STEP: getting the test event @ 04/23/25 16:41:30.168
  STEP: deleting the test event @ 04/23/25 16:41:30.17
  STEP: listing events in all namespaces @ 04/23/25 16:41:30.178
  STEP: listing events in test namespace @ 04/23/25 16:41:30.19
  I0423 16:41:30.192413 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7984" for this suite. @ 04/23/25 16:41:30.195
• [0.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/23/25 16:41:30.202
  I0423 16:41:30.202157 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 16:41:30.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:30.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:30.229
  I0423 16:41:30.234993 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:41:31.269169 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4734" for this suite. @ 04/23/25 16:41:31.277
• [1.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/23/25 16:41:31.29
  I0423 16:41:31.290218 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:41:31.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:31.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:31.313
  STEP: Creating configMap with name configmap-test-upd-60481c53-f633-4a9c-af37-4d3d156543fa @ 04/23/25 16:41:31.378
  STEP: Creating the pod @ 04/23/25 16:41:31.384
  STEP: Waiting for pod with text data @ 04/23/25 16:41:33.407
  STEP: Waiting for pod with binary data @ 04/23/25 16:41:33.431
  I0423 16:41:33.442937 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3045" for this suite. @ 04/23/25 16:41:33.447
• [2.175 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/23/25 16:41:33.465
  I0423 16:41:33.465768 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 16:41:33.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:33.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:33.494
  STEP: Creating ReplicationController "e2e-rc-2mprz" @ 04/23/25 16:41:33.5
  I0423 16:41:33.512011 24 rc.go:792] Get Replication Controller "e2e-rc-2mprz" to confirm replicas
  I0423 16:41:34.512931 24 rc.go:792] Get Replication Controller "e2e-rc-2mprz" to confirm replicas
  I0423 16:41:34.517540 24 rc.go:801] Found 1 replicas for "e2e-rc-2mprz" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-2mprz" @ 04/23/25 16:41:34.517
  STEP: Updating a scale subresource @ 04/23/25 16:41:34.52
  STEP: Verifying replicas where modified for replication controller "e2e-rc-2mprz" @ 04/23/25 16:41:34.529
  I0423 16:41:34.529790 24 rc.go:792] Get Replication Controller "e2e-rc-2mprz" to confirm replicas
  I0423 16:41:35.530529 24 rc.go:792] Get Replication Controller "e2e-rc-2mprz" to confirm replicas
  I0423 16:41:35.539137 24 rc.go:801] Found 2 replicas for "e2e-rc-2mprz" replication controller
  I0423 16:41:35.540841 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6212" for this suite. @ 04/23/25 16:41:35.546
• [2.088 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/23/25 16:41:35.554
  I0423 16:41:35.554261 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 16:41:35.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:35.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:35.574
  STEP: Performing setup for networking test in namespace pod-network-test-4143 @ 04/23/25 16:41:35.577
  STEP: creating a selector @ 04/23/25 16:41:35.577
  STEP: Creating the service pods in kubernetes @ 04/23/25 16:41:35.577
  I0423 16:41:35.577762 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 16:41:57.746
  I0423 16:41:59.790478 24 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 16:41:59.790526 24 utils.go:496] Going to poll 10.200.131.181 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0423 16:41:59.792973 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.131.181:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4143 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:41:59.793008 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:41:59.793060 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-4143/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.131.181%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0423 16:41:59.854489 24 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0423 16:41:59.854650 24 utils.go:496] Going to poll 10.200.5.48 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I0423 16:41:59.857828 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.5.48:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4143 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:41:59.857868 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:41:59.857923 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-4143/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.5.48%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0423 16:41:59.932938 24 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0423 16:41:59.933113 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4143" for this suite. @ 04/23/25 16:41:59.938
• [24.405 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/23/25 16:41:59.96
  I0423 16:41:59.960560 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 16:41:59.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:41:59.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:41:59.984
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/23/25 16:42:00.052
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 16:42:00.069
  I0423 16:42:00.145371 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:42:00.145548 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:42:01.083020 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:42:01.083181 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:42:02.079581 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:42:02.079638 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 16:42:03.079587 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 16:42:03.079643 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/23/25 16:42:03.083
  I0423 16:42:03.183265 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 16:42:03.183315 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 16:42:04.131806 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 16:42:04.131871 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/23/25 16:42:04.131
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 16:42:04.136
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9051, will wait for the garbage collector to delete the pods @ 04/23/25 16:42:04.136
  I0423 16:42:04.196777 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.292769ms
  I0423 16:42:04.298311 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.528139ms
  I0423 16:42:07.204180 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 16:42:07.204238 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 16:42:07.209064 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19185"},"items":null}

  I0423 16:42:07.213526 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19185"},"items":null}

  I0423 16:42:07.226850 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9051" for this suite. @ 04/23/25 16:42:07.231
• [7.281 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 04/23/25 16:42:07.241
  I0423 16:42:07.241692 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 16:42:07.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:07.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:07.272
  STEP: Creating service test in namespace statefulset-2701 @ 04/23/25 16:42:07.278
  STEP: Creating statefulset ss in namespace statefulset-2701 @ 04/23/25 16:42:07.294
  I0423 16:42:07.309768 24 wait.go:40] Found 0 stateful pods, waiting for 1
  I0423 16:42:17.308927 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/23/25 16:42:17.317
  STEP: Getting /status @ 04/23/25 16:42:17.346
  I0423 16:42:17.352795 24 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/23/25 16:42:17.352
  I0423 16:42:17.366851 24 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/23/25 16:42:17.366
  I0423 16:42:17.370222 24 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0423 16:42:17.370299 24 statefulset.go:1114] Found Statefulset ss in namespace statefulset-2701 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 16:42:17.370324 24 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/23/25 16:42:17.37
  I0423 16:42:17.370389 24 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 16:42:17.383034 24 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/23/25 16:42:17.383
  I0423 16:42:17.386273 24 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0423 16:42:17.386663 24 statefulset.go:138] Deleting all statefulset in ns statefulset-2701
  I0423 16:42:17.393005 24 rest.go:152] Scaling statefulset ss to 0
  I0423 16:42:27.411818 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 16:42:27.416489 24 rest.go:90] Deleting statefulset ss
  I0423 16:42:27.441804 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2701" for this suite. @ 04/23/25 16:42:27.446
• [20.218 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 04/23/25 16:42:27.46
  I0423 16:42:27.460369 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:42:27.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:27.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:27.483
  STEP: Setting up server cert @ 04/23/25 16:42:27.513
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:42:27.953
  STEP: Deploying the webhook pod @ 04/23/25 16:42:27.967
  STEP: Wait for the deployment to be ready @ 04/23/25 16:42:27.976
  I0423 16:42:27.982720 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:42:29.996
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:42:30.021
  I0423 16:42:31.022571 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/23/25 16:42:31.031
  STEP: create a pod that should be denied by the webhook @ 04/23/25 16:42:31.054
  STEP: create a pod that causes the webhook to hang @ 04/23/25 16:42:31.071
  STEP: create a configmap that should be denied by the webhook @ 04/23/25 16:42:41.08
  STEP: create a configmap that should be admitted by the webhook @ 04/23/25 16:42:41.101
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/23/25 16:42:41.115
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/23/25 16:42:41.126
  STEP: create a namespace that bypass the webhook @ 04/23/25 16:42:41.133
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/23/25 16:42:41.148
  I0423 16:42:41.250890 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9425" for this suite. @ 04/23/25 16:42:41.265
  STEP: Destroying namespace "webhook-markers-5541" for this suite. @ 04/23/25 16:42:41.274
  STEP: Destroying namespace "exempted-namespace-250" for this suite. @ 04/23/25 16:42:41.283
• [13.829 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/23/25 16:42:41.289
  I0423 16:42:41.289132 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename apf @ 04/23/25 16:42:41.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:41.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:41.313
  STEP: getting /apis @ 04/23/25 16:42:41.319
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/23/25 16:42:41.325
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/23/25 16:42:41.327
  STEP: creating @ 04/23/25 16:42:41.328
  STEP: getting @ 04/23/25 16:42:41.342
  STEP: listing @ 04/23/25 16:42:41.346
  STEP: watching @ 04/23/25 16:42:41.35
  I0423 16:42:41.350799 24 flowcontrol.go:394] starting watch
  STEP: patching @ 04/23/25 16:42:41.352
  STEP: updating @ 04/23/25 16:42:41.359
  I0423 16:42:41.366698 24 flowcontrol.go:422] waiting for watch events with expected annotations
  I0423 16:42:41.366750 24 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/23/25 16:42:41.366
  STEP: patching /status @ 04/23/25 16:42:41.371
  STEP: updating /status @ 04/23/25 16:42:41.377
  STEP: deleting @ 04/23/25 16:42:41.386
  STEP: deleting a collection @ 04/23/25 16:42:41.401
  I0423 16:42:41.419180 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2778" for this suite. @ 04/23/25 16:42:41.422
• [0.141 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/23/25 16:42:41.429
  I0423 16:42:41.429889 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 16:42:41.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:41.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:41.451
  I0423 16:42:41.454026 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:42:47.746762 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8763" for this suite. @ 04/23/25 16:42:47.752
• [6.334 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 04/23/25 16:42:47.764
  I0423 16:42:47.764728 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:42:47.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:47.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:47.789
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7701 @ 04/23/25 16:42:47.794
  STEP: changing the ExternalName service to type=NodePort @ 04/23/25 16:42:47.802
  STEP: creating replication controller externalname-service in namespace services-7701 @ 04/23/25 16:42:47.823
  I0423 16:42:47.842873      24 runners.go:193] Created replication controller with name: externalname-service, namespace: services-7701, replica count: 2
  I0423 16:42:50.896536      24 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:42:50.896586 24 resource.go:361] Creating new exec pod
  I0423 16:42:53.925298 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-7701 exec execpod8n9jz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 16:42:54.095912 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.198) 80 port [tcp/http] succeeded!\n"
  I0423 16:42:54.095999 24 builder.go:147] stdout: ""
  I0423 16:42:54.926368 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-7701 exec execpod8n9jz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 16:42:55.123924 24 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service (10.32.0.198) 80 port [tcp/http] succeeded!\n"
  I0423 16:42:55.124008 24 builder.go:147] stdout: ""
  I0423 16:42:55.925534 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-7701 exec execpod8n9jz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 16:42:56.092710 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.198) 80 port [tcp/http] succeeded!\n"
  I0423 16:42:56.092805 24 builder.go:147] stdout: "externalname-service-hxwvq"
  I0423 16:42:56.092963 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-7701 exec execpod8n9jz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.198 80'
  I0423 16:42:56.289820 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.198 80\nConnection to 10.32.0.198 80 port [tcp/http] succeeded!\n"
  I0423 16:42:56.289892 24 builder.go:147] stdout: "externalname-service-hxwvq"
  I0423 16:42:56.290006 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-7701 exec execpod8n9jz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 30782'
  I0423 16:42:56.518038 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 30782\nConnection to 192.168.58.100 30782 port [tcp/*] succeeded!\n"
  I0423 16:42:56.518101 24 builder.go:147] stdout: "externalname-service-hxwvq"
  I0423 16:42:56.518186 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-7701 exec execpod8n9jz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 30782'
  I0423 16:42:56.656491 24 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.58.101 30782\n+ echo hostName\nConnection to 192.168.58.101 30782 port [tcp/*] succeeded!\n"
  I0423 16:42:56.656615 24 builder.go:147] stdout: "externalname-service-hxwvq"
  I0423 16:42:56.656753 24 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0423 16:42:56.706649 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7701" for this suite. @ 04/23/25 16:42:56.715
• [8.962 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 04/23/25 16:42:56.727
  I0423 16:42:56.727423 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:42:56.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:56.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:56.755
  STEP: create deployment with httpd image @ 04/23/25 16:42:56.76
  I0423 16:42:56.761134 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7573 create -f -'
  I0423 16:42:56.908130 24 builder.go:146] stderr: ""
  I0423 16:42:56.908194 24 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/23/25 16:42:56.908
  I0423 16:42:56.908286 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7573 diff -f -'
  I0423 16:42:57.104967 24 builder.go:135] rc: 1
  I0423 16:42:57.105132 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7573 delete -f -'
  I0423 16:42:57.211635 24 builder.go:146] stderr: ""
  I0423 16:42:57.211701 24 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0423 16:42:57.211917 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7573" for this suite. @ 04/23/25 16:42:57.222
• [0.506 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/23/25 16:42:57.233
  I0423 16:42:57.233741 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename proxy @ 04/23/25 16:42:57.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:57.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:57.254
  I0423 16:42:57.258578 24 proxy.go:387] Creating pod...
  I0423 16:42:59.276779 24 proxy.go:411] Creating service...
  I0423 16:42:59.304487 24 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=DELETE
  I0423 16:42:59.322601 24 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 16:42:59.322685 24 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=OPTIONS
  I0423 16:42:59.330240 24 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 16:42:59.330303 24 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=PATCH
  I0423 16:42:59.340167 24 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 16:42:59.340210 24 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=POST
  I0423 16:42:59.348903 24 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 16:42:59.348982 24 proxy.go:448] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=PUT
  I0423 16:42:59.361325 24 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 16:42:59.361418 24 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=DELETE
  I0423 16:42:59.371189 24 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 16:42:59.371238 24 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0423 16:42:59.376761 24 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 16:42:59.376831 24 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=PATCH
  I0423 16:42:59.381208 24 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 16:42:59.381259 24 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=POST
  I0423 16:42:59.387155 24 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 16:42:59.387209 24 proxy.go:459] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=PUT
  I0423 16:42:59.393054 24 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 16:42:59.393131 24 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=GET
  I0423 16:42:59.399013 24 proxy.go:487] http.Client request:GET StatusCode:301
  I0423 16:42:59.399088 24 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=GET
  I0423 16:42:59.405199 24 proxy.go:487] http.Client request:GET StatusCode:301
  I0423 16:42:59.405244 24 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/pods/agnhost/proxy?method=HEAD
  I0423 16:42:59.410591 24 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0423 16:42:59.410647 24 proxy.go:479] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-483/services/e2e-proxy-test-service/proxy?method=HEAD
  I0423 16:42:59.415631 24 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0423 16:42:59.415748 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-483" for this suite. @ 04/23/25 16:42:59.42
• [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 04/23/25 16:42:59.43
  I0423 16:42:59.430551 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename disruption @ 04/23/25 16:42:59.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:42:59.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:42:59.449
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:42:59.464
  STEP: Updating PodDisruptionBudget status @ 04/23/25 16:42:59.473
  STEP: Waiting for all pods to be running @ 04/23/25 16:42:59.482
  I0423 16:42:59.491364 24 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 04/23/25 16:43:01.489
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:43:01.508
  STEP: Patching PodDisruptionBudget status @ 04/23/25 16:43:01.52
  STEP: Waiting for the pdb to be processed @ 04/23/25 16:43:01.533
  I0423 16:43:01.538422 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2311" for this suite. @ 04/23/25 16:43:01.55
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/23/25 16:43:01.561
  I0423 16:43:01.561365 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sysctl @ 04/23/25 16:43:01.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:43:01.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:43:01.587
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/23/25 16:43:01.592
  I0423 16:43:01.596663 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7796" for this suite. @ 04/23/25 16:43:01.648
• [0.094 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 04/23/25 16:43:01.654
  I0423 16:43:01.654464 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 16:43:01.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:43:01.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:43:01.676
  STEP: Counting existing ResourceQuota @ 04/23/25 16:43:01.679
  STEP: Creating a ResourceQuota @ 04/23/25 16:43:06.684
  STEP: Ensuring resource quota status is calculated @ 04/23/25 16:43:06.697
  STEP: Creating a Service @ 04/23/25 16:43:08.702
  STEP: Creating a NodePort Service @ 04/23/25 16:43:08.72
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/23/25 16:43:08.759
  STEP: Ensuring resource quota status captures service creation @ 04/23/25 16:43:08.789
  STEP: Deleting Services @ 04/23/25 16:43:10.793
  STEP: Ensuring resource quota status released usage @ 04/23/25 16:43:10.841
  I0423 16:43:12.846044 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-94" for this suite. @ 04/23/25 16:43:12.851
• [11.205 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 04/23/25 16:43:12.859
  I0423 16:43:12.859911 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 16:43:12.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:43:12.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:43:12.884
  STEP: Looking for a node to schedule job pods @ 04/23/25 16:43:12.89
  STEP: Creating a job @ 04/23/25 16:43:12.953
  STEP: Waiting for all the pods to be ready @ 04/23/25 16:43:12.964
  STEP: Fetch all running pods @ 04/23/25 16:43:16.987
  STEP: Evict all the Pods @ 04/23/25 16:43:16.993
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-d2w96/job-6004 @ 04/23/25 16:43:16.993
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-q5s2n/job-6004 @ 04/23/25 16:43:16.993
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-znxh4/job-6004 @ 04/23/25 16:43:16.995
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-d2w96/job-6004 to be deleted @ 04/23/25 16:43:17.026
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-q5s2n/job-6004 to be deleted @ 04/23/25 16:43:17.035
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-znxh4/job-6004 to be deleted @ 04/23/25 16:43:17.047
  STEP: Ensuring job reaches completions @ 04/23/25 16:43:21.064
  I0423 16:44:03.193559 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6004" for this suite. @ 04/23/25 16:44:03.2
• [50.349 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/23/25 16:44:03.209
  I0423 16:44:03.210393 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:44:03.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:44:03.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:44:03.238
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/23/25 16:44:03.242
  STEP: Saw pod success @ 04/23/25 16:44:07.268
  I0423 16:44:07.272106 24 output.go:207] Trying to get logs from node worker00 pod pod-3e8b9de0-1325-462a-963f-0a09f21773c2 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:44:07.283
  I0423 16:44:07.300314 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8502" for this suite. @ 04/23/25 16:44:07.305
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 04/23/25 16:44:07.314
  I0423 16:44:07.314599 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:44:07.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:44:07.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:44:07.34
  STEP: Setting up server cert @ 04/23/25 16:44:07.372
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:44:08.133
  STEP: Deploying the webhook pod @ 04/23/25 16:44:08.148
  STEP: Wait for the deployment to be ready @ 04/23/25 16:44:08.164
  I0423 16:44:08.171155 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:44:10.184
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:44:10.207
  I0423 16:44:11.208106 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/23/25 16:44:11.218
  STEP: create a pod that should be updated by the webhook @ 04/23/25 16:44:11.24
  I0423 16:44:11.324018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6479" for this suite. @ 04/23/25 16:44:11.33
  STEP: Destroying namespace "webhook-markers-7153" for this suite. @ 04/23/25 16:44:11.335
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/23/25 16:44:11.346
  I0423 16:44:11.346406 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:44:11.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:44:11.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:44:11.367
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:44:11.371
  STEP: Saw pod success @ 04/23/25 16:44:15.397
  I0423 16:44:15.401519 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-71e4b03f-b59f-49ca-af92-04f78cbf9241 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:44:15.41
  I0423 16:44:15.428549 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4656" for this suite. @ 04/23/25 16:44:15.433
• [4.094 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/23/25 16:44:15.441
  I0423 16:44:15.441061 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 16:44:15.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:44:15.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:44:15.465
  STEP: creating the pod with failed condition @ 04/23/25 16:44:15.47
  STEP: updating the pod @ 04/23/25 16:46:15.483
  I0423 16:46:16.010925 24 pod_client.go:173] Successfully updated pod "var-expansion-22e3fcba-6f19-45a5-9c12-b5ebba2595b7"
  STEP: waiting for pod running @ 04/23/25 16:46:16.011
  STEP: deleting the pod gracefully @ 04/23/25 16:46:18.023
  I0423 16:46:18.023607 24 delete.go:62] Deleting pod "var-expansion-22e3fcba-6f19-45a5-9c12-b5ebba2595b7" in namespace "var-expansion-3093"
  I0423 16:46:18.045840 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-22e3fcba-6f19-45a5-9c12-b5ebba2595b7" to be fully deleted
  I0423 16:46:50.159919 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3093" for this suite. @ 04/23/25 16:46:50.165
• [154.735 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/23/25 16:46:50.176
  I0423 16:46:50.176412 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 16:46:50.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:46:50.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:46:50.207
  I0423 16:46:50.211529 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 16:46:50.274271 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0423 16:46:50.280423 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 16:46:50.288876 24 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.288929 24 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 16:46:50.288998 24 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.289023 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 16:46:50.289043 24 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.289061 24 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 16:46:50.289093 24 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.289205 24 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 16:46:50.289227 24 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.289813 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 16:46:50.289845 24 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.289864 24 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 16:46:50.289953 24 predicates.go:957] calico-node-8wc69 from networking started at 2025-04-23 16:02:59 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.289970 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 16:46:50.289990 24 predicates.go:957] metallb-speaker-d29d6 from networking started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.290008 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 16:46:50.290028 24 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 16:07:17 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.290047 24 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 16:46:50.290069 24 predicates.go:957] sonobuoy-e2e-job-b8c81cda7ba2451f from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 16:46:50.290149 24 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 16:46:50.290167 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:46:50.290186 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-v6sf4 from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 16:46:50.290204 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:46:50.290223 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 16:46:50.290304 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-x4jkj from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 16:46:50.290322 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:46:50.290340 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:46:50.290362 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.290382 24 predicates.go:957] ceph-csi-rbd-nodeplugin-rk497 from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 16:46:50.290401 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:46:50.290418 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:46:50.290435 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.290454 24 predicates.go:957] ceph-mon-worker00-5b7bb47bf6-b7m6x from storage started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.290473 24 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 16:46:50.290562 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 16:46:50.310089 24 predicates.go:957] coredns-95979559b-ksl8k from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.310142 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 16:46:50.310303 24 predicates.go:957] coredns-95979559b-l54c2 from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.310367 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 16:46:50.310389 24 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.310406 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 16:46:50.310425 24 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.311090 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 16:46:50.311146 24 predicates.go:957] kubernetes-dashboard-api-75c8cc87b5-rmmnp from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.311841 24 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 16:46:50.311873 24 predicates.go:957] kubernetes-dashboard-auth-84fdc98ddb-fvzk4 from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.311892 24 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 16:46:50.312373 24 predicates.go:957] kubernetes-dashboard-kong-78b4d69466-mtmwm from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312395 24 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 16:46:50.312413 24 predicates.go:957] kubernetes-dashboard-metrics-scraper-7c444f8fcc-96vpq from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312436 24 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 16:46:50.312519 24 predicates.go:957] kubernetes-dashboard-web-79499dd8c4-m4zht from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312541 24 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 16:46:50.312563 24 predicates.go:957] calico-kube-controllers-66d7f7ddc9-lxxbz from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312585 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 16:46:50.312609 24 predicates.go:957] calico-node-bscw5 from networking started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312626 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 16:46:50.312643 24 predicates.go:957] calico-typha-679bfcf946-fhbr8 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312680 24 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 16:46:50.312699 24 predicates.go:957] metallb-controller-86d658b89-ljvv5 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312716 24 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 16:46:50.312735 24 predicates.go:957] metallb-speaker-2b64r from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.312772 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 16:46:50.312791 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-d9x28 from sonobuoy started at 2025-04-23 16:07:23 +0000 UTC (2 container statuses recorded)
  I0423 16:46:50.312813 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:46:50.312836 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 16:46:50.312859 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-mr7dh from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 16:46:50.312884 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:46:50.312905 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:46:50.312921 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.312939 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-cffrm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:46:50.312956 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:46:50.312972 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:46:50.313072 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:46:50.313087 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:46:50.313225 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.313244 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-qcmwm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:46:50.313351 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:46:50.313840 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:46:50.313863 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:46:50.313879 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:46:50.313896 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.313917 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-t6rp4 from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:46:50.313935 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:46:50.313953 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:46:50.313987 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:46:50.314004 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:46:50.314019 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.314037 24 predicates.go:957] ceph-csi-rbd-nodeplugin-sbzbz from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 16:46:50.314058 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:46:50.314074 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:46:50.314091 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.314110 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-64x2x from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:46:50.314127 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:46:50.314176 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:46:50.314195 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:46:50.314352 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:46:50.314381 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:46:50.314398 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:46:50.314413 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.314430 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-g6f5s from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:46:50.314446 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:46:50.314463 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:46:50.314480 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:46:50.314496 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:46:50.314845 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:46:50.314865 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:46:50.314885 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.314909 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-hnbps from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:46:50.314961 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:46:50.314977 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:46:50.314993 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:46:50.315008 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:46:50.315024 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:46:50.315044 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:46:50.315317 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:46:50.315346 24 predicates.go:957] ceph-mds-worker01-5cb6f4bd58-7kfbt from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315363 24 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 16:46:50.315380 24 predicates.go:957] ceph-mgr-worker01-7d4796dd6c-7hxcz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315394 24 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 16:46:50.315410 24 predicates.go:957] ceph-osd-worker01-766bd958-tcsks from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315453 24 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 16:46:50.315477 24 predicates.go:957] ceph-rgw-worker01-755cf966f4-qcqjd from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315498 24 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 16:46:50.315515 24 predicates.go:957] ceph-setup-hgggz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315535 24 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 16:46:50.315558 24 predicates.go:957] snapshot-controller-546c95687-dskm5 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315578 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 16:46:50.315633 24 predicates.go:957] snapshot-controller-546c95687-ps84s from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315650 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 16:46:50.315667 24 predicates.go:957] snapshot-validation-webhook-c58ddd547-gl285 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:46:50.315683 24 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/23/25 16:46:50.315
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1839006fb44e7521], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 04/23/25 16:46:50.354
  I0423 16:46:51.357053 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1056" for this suite. @ 04/23/25 16:46:51.363
• [1.197 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 04/23/25 16:46:51.373
  I0423 16:46:51.374139 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:46:51.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:46:51.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:46:51.404
  STEP: Setting up server cert @ 04/23/25 16:46:51.436
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:46:51.904
  STEP: Deploying the webhook pod @ 04/23/25 16:46:51.91
  STEP: Wait for the deployment to be ready @ 04/23/25 16:46:51.921
  I0423 16:46:51.927322 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:46:53.941
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:46:53.965
  I0423 16:46:54.965673 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 16:46:54.975232 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7650-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 16:46:55.488
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/23/25 16:46:55.502
  I0423 16:46:58.143021 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4836" for this suite. @ 04/23/25 16:46:58.149
  STEP: Destroying namespace "webhook-markers-4823" for this suite. @ 04/23/25 16:46:58.157
• [6.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 04/23/25 16:46:58.169
  I0423 16:46:58.169800 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:46:58.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:46:58.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:46:58.199
  STEP: Setting up server cert @ 04/23/25 16:46:58.226
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:46:58.397
  STEP: Deploying the webhook pod @ 04/23/25 16:46:58.401
  STEP: Wait for the deployment to be ready @ 04/23/25 16:46:58.413
  I0423 16:46:58.419403 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:47:00.433
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:47:00.449
  I0423 16:47:01.450865 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/23/25 16:47:01.468
  I0423 16:47:01.544107 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4434" for this suite. @ 04/23/25 16:47:01.559
  STEP: Destroying namespace "webhook-markers-6984" for this suite. @ 04/23/25 16:47:01.573
• [3.417 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 04/23/25 16:47:01.587
  I0423 16:47:01.587149 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 16:47:01.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:01.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:01.609
  STEP: Discovering how many secrets are in namespace by default @ 04/23/25 16:47:01.613
  STEP: Counting existing ResourceQuota @ 04/23/25 16:47:06.631
  STEP: Creating a ResourceQuota @ 04/23/25 16:47:11.639
  STEP: Ensuring resource quota status is calculated @ 04/23/25 16:47:11.657
  STEP: Creating a Secret @ 04/23/25 16:47:13.662
  STEP: Ensuring resource quota status captures secret creation @ 04/23/25 16:47:13.689
  STEP: Deleting a secret @ 04/23/25 16:47:15.696
  STEP: Ensuring resource quota status released usage @ 04/23/25 16:47:15.705
  I0423 16:47:17.713541 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-384" for this suite. @ 04/23/25 16:47:17.719
• [16.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/23/25 16:47:17.74
  I0423 16:47:17.740924 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:47:17.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:17.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:17.768
  STEP: Creating secret with name secret-test-map-52b6ebf0-2109-4edb-a907-66947a195525 @ 04/23/25 16:47:17.773
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:47:17.779
  STEP: Saw pod success @ 04/23/25 16:47:21.813
  I0423 16:47:21.818444 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-5b01e2a3-a354-46bc-808d-4e0a26b31cc5 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:47:21.826
  I0423 16:47:21.846430 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4912" for this suite. @ 04/23/25 16:47:21.852
• [4.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/23/25 16:47:21.867
  I0423 16:47:21.867164 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 16:47:21.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:21.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:21.898
  I0423 16:47:21.920616 24 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0423 16:47:26.926625 24 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 16:47:26.926
  I0423 16:47:26.926764 24 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0423 16:47:28.932113 24 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0423 16:47:28.956742 24 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0423 16:47:30.966631 24 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0423 16:47:30.975609 24 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0423 16:47:30.984071 24 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0423 16:47:30.998292 24 deployment.go:314] Updating deployment test-rollover-deployment
  I0423 16:47:30.998397 24 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0423 16:47:33.009055 24 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0423 16:47:33.017614 24 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0423 16:47:33.026326 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 16:47:33.026429 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:47:35.035866 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 16:47:35.035973 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:47:37.039176 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 16:47:37.039327 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:47:39.039051 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 16:47:39.039150 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:47:41.038157 24 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0423 16:47:41.038251 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 29, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 47, 32, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 47, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:47:43.038064 24 deployment.go:95] 
  I0423 16:47:43.038156 24 deployment.go:974] Ensure that both old replica sets have no replicas
  I0423 16:47:43.055294 24 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7efe0877-526c-4b3f-847b-7ce8494fdecb",
      ResourceVersion: (string) (len=5) "21566",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881023648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023650,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023648,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 16:47:43.069707 24 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3afb2047-c3aa-4a10-a18c-786e1fb41bf8",
      ResourceVersion: (string) (len=5) "21556",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881023651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7efe0877-526c-4b3f-847b-7ce8494fdecb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 66 65 30 38  37 37 2d 35 32 36 63 2d  |\"7efe0877-526c-|
              00000120  34 62 33 66 2d 38 34 37  62 2d 37 63 65 38 34 39  |4b3f-847b-7ce849|
              00000130  34 66 64 65 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4fdecb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:47:43.073642 24 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0423 16:47:43.074045 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "252e71b8-b1db-4e64-a95b-acda97da095b",
      ResourceVersion: (string) (len=5) "21565",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881023641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7efe0877-526c-4b3f-847b-7ce8494fdecb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 65 66 65 30 38 37 37  2d 35 32 36 63 2d 34 62  |7efe0877-526c-4b|
              000000c0  33 66 2d 38 34 37 62 2d  37 63 65 38 34 39 34 66  |3f-847b-7ce8494f|
              000000d0  64 65 63 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |decb\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:47:43.076990 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06306cf9-3875-4e58-ba73-8c617ecac38d",
      ResourceVersion: (string) (len=5) "21497",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881023648,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7efe0877-526c-4b3f-847b-7ce8494fdecb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 65 66 65 30 38  37 37 2d 35 32 36 63 2d  |\"7efe0877-526c-|
              00000120  34 62 33 66 2d 38 34 37  62 2d 37 63 65 38 34 39  |4b3f-847b-7ce849|
              00000130  34 66 64 65 63 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4fdecb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 16:47:43.089645 24 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-pghfg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-pghfg",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-7478",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd85590a-ba0c-4754-9dcd-e5b388abd0fe",
      ResourceVersion: (string) (len=5) "21515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881023651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5d397cde511161e0af28e4037e68756db65cac1eadaba7988be4cb3a0068524",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.149/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.149/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "3afb2047-c3aa-4a10-a18c-786e1fb41bf8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  66 62 32 30 34 37 2d 63  |d\":\"3afb2047-c|
              00000090  33 61 61 2d 34 61 31 30  2d 61 31 38 63 2d 37 38  |3aa-4a10-a18c-78|
              000000a0  36 65 31 66 62 34 31 62  66 38 5c 22 7d 22 3a 7b  |6e1fb41bf8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023652,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 39 5c 22 7d 22  |.200.131.149\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2v9w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2v9w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023652,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023652,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023652,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881023651,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881023651,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881023651,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://de8646be59ca9c9d0c918ce53a53a3d50444be2ed3be808cea0e36366e71e40a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 16:47:43.094533 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7478" for this suite. @ 04/23/25 16:47:43.098
• [21.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/23/25 16:47:43.128
  I0423 16:47:43.128948 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename events @ 04/23/25 16:47:43.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:43.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:43.168
  STEP: creating a test event @ 04/23/25 16:47:43.174
  STEP: listing all events in all namespaces @ 04/23/25 16:47:43.181
  STEP: patching the test event @ 04/23/25 16:47:43.193
  STEP: fetching the test event @ 04/23/25 16:47:43.198
  STEP: updating the test event @ 04/23/25 16:47:43.2
  STEP: getting the test event @ 04/23/25 16:47:43.207
  STEP: deleting the test event @ 04/23/25 16:47:43.21
  STEP: listing all events in all namespaces @ 04/23/25 16:47:43.215
  I0423 16:47:43.229921 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9358" for this suite. @ 04/23/25 16:47:43.235
• [0.116 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/23/25 16:47:43.246
  I0423 16:47:43.246354 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:47:43.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:43.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:43.275
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/23/25 16:47:43.279
  STEP: Saw pod success @ 04/23/25 16:47:47.315
  I0423 16:47:47.320428 24 output.go:207] Trying to get logs from node worker00 pod pod-fca3c022-1fc2-45bd-aead-5d16eb82e6f7 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:47:47.33
  I0423 16:47:47.354446 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8183" for this suite. @ 04/23/25 16:47:47.362
• [4.125 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/23/25 16:47:47.371
  I0423 16:47:47.371778 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:47:47.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:47.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:47.407
  STEP: creating a secret @ 04/23/25 16:47:47.415
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/23/25 16:47:47.424
  STEP: patching the secret @ 04/23/25 16:47:47.428
  STEP: deleting the secret using a LabelSelector @ 04/23/25 16:47:47.442
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/23/25 16:47:47.453
  I0423 16:47:47.458607 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7651" for this suite. @ 04/23/25 16:47:47.464
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 04/23/25 16:47:47.473
  I0423 16:47:47.473311 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 16:47:47.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:47.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:47.5
  STEP: Counting existing ResourceQuota @ 04/23/25 16:47:47.506
  STEP: Creating a ResourceQuota @ 04/23/25 16:47:52.511
  STEP: Ensuring resource quota status is calculated @ 04/23/25 16:47:52.529
  STEP: Creating a ReplicationController @ 04/23/25 16:47:54.536
  STEP: Ensuring resource quota status captures replication controller creation @ 04/23/25 16:47:54.567
  STEP: Deleting a ReplicationController @ 04/23/25 16:47:56.572
  STEP: Ensuring resource quota status released usage @ 04/23/25 16:47:56.583
  I0423 16:47:58.594400 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7378" for this suite. @ 04/23/25 16:47:58.6
• [11.146 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/23/25 16:47:58.619
  I0423 16:47:58.619945 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/23/25 16:47:58.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:47:58.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:47:58.665
  STEP: create the container to handle the HTTPGet hook request. @ 04/23/25 16:47:58.701
  STEP: create the pod with lifecycle hook @ 04/23/25 16:48:02.744
  STEP: check poststart hook @ 04/23/25 16:48:06.785
  STEP: delete the pod with lifecycle hook @ 04/23/25 16:48:06.81
  I0423 16:48:08.835849 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7929" for this suite. @ 04/23/25 16:48:08.842
• [10.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/23/25 16:48:08.853
  I0423 16:48:08.853778 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename events @ 04/23/25 16:48:08.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:08.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:08.881
  STEP: Create set of events @ 04/23/25 16:48:08.887
  STEP: get a list of Events with a label in the current namespace @ 04/23/25 16:48:08.914
  STEP: delete a list of events @ 04/23/25 16:48:08.92
  I0423 16:48:08.920312 24 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/23/25 16:48:08.943
  I0423 16:48:08.948260 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6924" for this suite. @ 04/23/25 16:48:08.958
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 04/23/25 16:48:08.969
  I0423 16:48:08.970585 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:48:08.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:08.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:09
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 16:48:09.006
  I0423 16:48:09.007185 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-4193 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0423 16:48:09.131678 24 builder.go:146] stderr: ""
  I0423 16:48:09.131783 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/23/25 16:48:09.131
  I0423 16:48:09.132166 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-4193 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0423 16:48:09.236228 24 builder.go:146] stderr: ""
  I0423 16:48:09.236273 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 16:48:09.236
  I0423 16:48:09.239119 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-4193 delete pods e2e-test-httpd-pod'
  I0423 16:48:10.749544 24 builder.go:146] stderr: ""
  I0423 16:48:10.749620 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 16:48:10.749839 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4193" for this suite. @ 04/23/25 16:48:10.757
• [1.803 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 04/23/25 16:48:10.773
  I0423 16:48:10.773064 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 16:48:10.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:10.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:10.805
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4969.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-4969.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 04/23/25 16:48:10.81
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4969.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4969.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/23/25 16:48:10.81
  STEP: creating a pod to probe /etc/hosts @ 04/23/25 16:48:10.81
  STEP: submitting the pod to kubernetes @ 04/23/25 16:48:10.81
  STEP: retrieving the pod @ 04/23/25 16:48:12.847
  STEP: looking for the results for each expected name from probers @ 04/23/25 16:48:12.861
  I0423 16:48:12.892657 24 dns_common.go:546] DNS probes using dns-4969/dns-test-0b7d7999-eff4-406c-b269-2a00107d5929 succeeded

  STEP: deleting the pod @ 04/23/25 16:48:12.892
  I0423 16:48:12.919060 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4969" for this suite. @ 04/23/25 16:48:12.933
• [2.181 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 04/23/25 16:48:12.954
  I0423 16:48:12.954059 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:48:12.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:12.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:12.979
  STEP: starting the proxy server @ 04/23/25 16:48:12.982
  I0423 16:48:12.982652 24 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-8374 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/23/25 16:48:13.084
  I0423 16:48:13.099708 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0423 16:48:13.104416 24 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:44851

  I0423 16:48:13.104540 24 kubectl.go:2236] kubectl proxy stderr: W0423 16:48:13.084238     827 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-8374" for this suite. @ 04/23/25 16:48:13.105
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/23/25 16:48:13.116
  I0423 16:48:13.116704 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 16:48:13.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:13.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:13.144
  STEP: Creating secret with name secret-test-f03f1d58-c43b-4fc7-90fb-9fee9c249a43 @ 04/23/25 16:48:13.149
  STEP: Creating a pod to test consume secrets @ 04/23/25 16:48:13.158
  STEP: Saw pod success @ 04/23/25 16:48:17.188
  I0423 16:48:17.192479 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-5c900ea0-997c-4f43-ad46-023bec885f61 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:48:17.199
  I0423 16:48:17.222724 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4432" for this suite. @ 04/23/25 16:48:17.228
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/23/25 16:48:17.241
  I0423 16:48:17.241933 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:48:17.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:17.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:17.272
  STEP: Creating configMap with name projected-configmap-test-volume-44b3cc09-0a4a-4b41-a978-e7c800b25ddc @ 04/23/25 16:48:17.277
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:48:17.283
  STEP: Saw pod success @ 04/23/25 16:48:21.314
  I0423 16:48:21.319088 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-3e8f595f-7ac9-43a0-9ed7-022a6313f30d container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:48:21.329
  I0423 16:48:21.368578 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9003" for this suite. @ 04/23/25 16:48:21.374
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 04/23/25 16:48:21.385
  I0423 16:48:21.385390 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 16:48:21.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:21.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:21.418
  I0423 16:48:21.434871 24 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-6293"
  I0423 16:48:21.447022 24 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-6293"
  STEP: waiting for a new root ca configmap created @ 04/23/25 16:48:21.948
  I0423 16:48:21.952535 24 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-6293"
  I0423 16:48:21.967826 24 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-6293"
  STEP: waiting for the root ca configmap reconciled @ 04/23/25 16:48:22.468
  I0423 16:48:22.472989 24 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-6293"
  I0423 16:48:22.473155 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6293" for this suite. @ 04/23/25 16:48:22.479
• [1.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 04/23/25 16:48:22.49
  I0423 16:48:22.490048 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename field-validation @ 04/23/25 16:48:22.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:22.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:22.515
  I0423 16:48:22.520218 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:48:25.618368 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2353" for this suite. @ 04/23/25 16:48:25.624
• [3.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/23/25 16:48:25.639
  I0423 16:48:25.640010 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename lease-test @ 04/23/25 16:48:25.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:25.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:25.664
  I0423 16:48:25.740992 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8290" for this suite. @ 04/23/25 16:48:25.747
• [0.115 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/23/25 16:48:25.755
  I0423 16:48:25.755924 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:48:25.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:25.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:25.781
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:48:25.785
  STEP: Saw pod success @ 04/23/25 16:48:29.816
  I0423 16:48:29.820396 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-0aadd7d5-a3dc-4d47-8d74-a4e95d3ab832 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:48:29.83
  I0423 16:48:29.857730 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2096" for this suite. @ 04/23/25 16:48:29.866
• [4.121 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/23/25 16:48:29.876
  I0423 16:48:29.876367 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename limitrange @ 04/23/25 16:48:29.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:29.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:29.907
  STEP: Creating LimitRange "e2e-limitrange-446zt" in namespace "limitrange-2021" @ 04/23/25 16:48:29.912
  STEP: Creating another limitRange in another namespace @ 04/23/25 16:48:29.92
  I0423 16:48:29.937285 24 limit_range.go:299] Namespace "e2e-limitrange-446zt-8195" created
  I0423 16:48:29.937352 24 limit_range.go:300] Creating LimitRange "e2e-limitrange-446zt" in namespace "e2e-limitrange-446zt-8195"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-446zt" @ 04/23/25 16:48:29.945
  I0423 16:48:29.950389 24 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-446zt" in "limitrange-2021" namespace @ 04/23/25 16:48:29.95
  I0423 16:48:29.961805 24 limit_range.go:335] LimitRange "e2e-limitrange-446zt" has been patched
  STEP: Delete LimitRange "e2e-limitrange-446zt" by Collection with labelSelector: "e2e-limitrange-446zt=patched" @ 04/23/25 16:48:29.961
  STEP: Confirm that the limitRange "e2e-limitrange-446zt" has been deleted @ 04/23/25 16:48:29.969
  I0423 16:48:29.969960 24 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0423 16:48:29.973858 24 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-446zt=patched"
  I0423 16:48:29.973915 24 limit_range.go:344] LimitRange "e2e-limitrange-446zt" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-446zt" @ 04/23/25 16:48:29.973
  I0423 16:48:29.978419 24 limit_range.go:350] Found 1 limitRange
  I0423 16:48:29.978683 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2021" for this suite. @ 04/23/25 16:48:29.984
  STEP: Destroying namespace "e2e-limitrange-446zt-8195" for this suite. @ 04/23/25 16:48:29.992
• [0.129 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/23/25 16:48:30.005
  I0423 16:48:30.005189 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 16:48:30.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:48:30.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:48:30.032
  I0423 16:48:30.035101 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 16:48:30.085983 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0423 16:48:30.090980 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 16:48:30.097174 24 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097227 24 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 16:48:30.097242 24 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097253 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 16:48:30.097265 24 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097274 24 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 16:48:30.097286 24 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097463 24 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 16:48:30.097505 24 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097515 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 16:48:30.097527 24 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097624 24 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 16:48:30.097677 24 predicates.go:957] calico-node-8wc69 from networking started at 2025-04-23 16:02:59 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097750 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 16:48:30.097761 24 predicates.go:957] metallb-speaker-d29d6 from networking started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097771 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 16:48:30.097782 24 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 16:07:17 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.097878 24 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 16:48:30.097890 24 predicates.go:957] sonobuoy-e2e-job-b8c81cda7ba2451f from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 16:48:30.097900 24 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 16:48:30.097928 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:48:30.097939 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-v6sf4 from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 16:48:30.097949 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:48:30.097959 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 16:48:30.097971 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-x4jkj from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 16:48:30.097981 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:48:30.097991 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:48:30.098001 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.098011 24 predicates.go:957] ceph-csi-rbd-nodeplugin-rk497 from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 16:48:30.098022 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:48:30.098032 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:48:30.098052 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.098068 24 predicates.go:957] ceph-mon-worker00-5b7bb47bf6-b7m6x from storage started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.098078 24 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 16:48:30.098089 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 16:48:30.108117 24 predicates.go:957] coredns-95979559b-ksl8k from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108160 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 16:48:30.108174 24 predicates.go:957] coredns-95979559b-l54c2 from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108185 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 16:48:30.108196 24 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108206 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 16:48:30.108217 24 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108226 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 16:48:30.108238 24 predicates.go:957] kubernetes-dashboard-api-75c8cc87b5-rmmnp from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108249 24 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 16:48:30.108260 24 predicates.go:957] kubernetes-dashboard-auth-84fdc98ddb-fvzk4 from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108270 24 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 16:48:30.108282 24 predicates.go:957] kubernetes-dashboard-kong-78b4d69466-mtmwm from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108292 24 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 16:48:30.108303 24 predicates.go:957] kubernetes-dashboard-metrics-scraper-7c444f8fcc-96vpq from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108313 24 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 16:48:30.108323 24 predicates.go:957] kubernetes-dashboard-web-79499dd8c4-m4zht from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108333 24 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 16:48:30.108344 24 predicates.go:957] calico-kube-controllers-66d7f7ddc9-lxxbz from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108423 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 16:48:30.108435 24 predicates.go:957] calico-node-bscw5 from networking started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108458 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 16:48:30.108469 24 predicates.go:957] calico-typha-679bfcf946-fhbr8 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108479 24 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 16:48:30.108493 24 predicates.go:957] metallb-controller-86d658b89-ljvv5 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108503 24 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 16:48:30.108514 24 predicates.go:957] metallb-speaker-2b64r from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.108524 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 16:48:30.108534 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-d9x28 from sonobuoy started at 2025-04-23 16:07:23 +0000 UTC (2 container statuses recorded)
  I0423 16:48:30.108811 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 16:48:30.108824 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 16:48:30.108858 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-mr7dh from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 16:48:30.108869 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:48:30.109025 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:48:30.109063 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109074 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-cffrm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:48:30.109083 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:48:30.109093 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:48:30.109102 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:48:30.109111 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:48:30.109120 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109130 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-qcmwm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:48:30.109140 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:48:30.109149 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:48:30.109158 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:48:30.109167 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:48:30.109177 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109187 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-t6rp4 from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 16:48:30.109197 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 16:48:30.109206 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:48:30.109216 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:48:30.109225 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:48:30.109234 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109243 24 predicates.go:957] ceph-csi-rbd-nodeplugin-sbzbz from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 16:48:30.109254 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:48:30.109349 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 16:48:30.109359 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109369 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-64x2x from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:48:30.109379 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:48:30.109389 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:48:30.109398 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:48:30.109407 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:48:30.109416 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:48:30.109529 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:48:30.109539 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109550 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-g6f5s from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:48:30.109560 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:48:30.109569 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:48:30.109752 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:48:30.109763 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:48:30.109772 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:48:30.109783 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:48:30.109792 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109803 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-hnbps from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 16:48:30.109814 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 16:48:30.109824 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 16:48:30.109833 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 16:48:30.109844 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 16:48:30.109854 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 16:48:30.109863 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 16:48:30.109872 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 16:48:30.109883 24 predicates.go:957] ceph-mds-worker01-5cb6f4bd58-7kfbt from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.109893 24 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 16:48:30.109904 24 predicates.go:957] ceph-mgr-worker01-7d4796dd6c-7hxcz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.109914 24 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 16:48:30.109925 24 predicates.go:957] ceph-osd-worker01-766bd958-tcsks from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.109935 24 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 16:48:30.109946 24 predicates.go:957] ceph-rgw-worker01-755cf966f4-qcqjd from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.109956 24 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 16:48:30.109968 24 predicates.go:957] ceph-setup-hgggz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.110376 24 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 16:48:30.110389 24 predicates.go:957] snapshot-controller-546c95687-dskm5 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.110398 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 16:48:30.110409 24 predicates.go:957] snapshot-controller-546c95687-ps84s from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.110419 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 16:48:30.110429 24 predicates.go:957] snapshot-validation-webhook-c58ddd547-gl285 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 16:48:30.110440 24 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 16:48:30.111
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 16:48:32.14
  STEP: Trying to apply a random label on the found node. @ 04/23/25 16:48:32.158
  STEP: verifying the node has the label kubernetes.io/e2e-3eda4aa3-1bce-4bea-aedb-ffb257fab722 95 @ 04/23/25 16:48:32.183
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/23/25 16:48:32.189
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.58.100 on the node which pod4 resides and expect not scheduled @ 04/23/25 16:48:34.211
  STEP: removing the label kubernetes.io/e2e-3eda4aa3-1bce-4bea-aedb-ffb257fab722 off the node worker00 @ 04/23/25 16:53:34.225
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3eda4aa3-1bce-4bea-aedb-ffb257fab722 @ 04/23/25 16:53:34.258
  I0423 16:53:34.268502 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6056" for this suite. @ 04/23/25 16:53:34.275
• [304.282 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/23/25 16:53:34.287
  I0423 16:53:34.287681 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 16:53:34.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:53:34.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:53:34.322
  I0423 16:53:34.327108 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 16:53:37.403647 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5092" for this suite. @ 04/23/25 16:53:37.409
• [3.138 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 04/23/25 16:53:37.426
  I0423 16:53:37.426259 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 16:53:37.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:53:37.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:53:37.452
  STEP: Creating service test in namespace statefulset-5223 @ 04/23/25 16:53:37.458
  STEP: Creating stateful set ss in namespace statefulset-5223 @ 04/23/25 16:53:37.468
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5223 @ 04/23/25 16:53:37.482
  I0423 16:53:37.490943 24 wait.go:40] Found 0 stateful pods, waiting for 1
  I0423 16:53:47.489348 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/23/25 16:53:47.489
  I0423 16:53:47.494189 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:53:47.694324 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:53:47.694408 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:53:47.694461 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:53:47.700029 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0423 16:53:57.700961 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:53:57.701028 24 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 16:53:57.740326 24 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0423 16:53:57.741626 24 resource.go:175] ss-0  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:47 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:37 +0000 UTC  }]
  I0423 16:53:57.741724 24 resource.go:175] ss-2            Pending         []
  I0423 16:53:57.741746 24 resource.go:178] 
  I0423 16:53:57.741767 24 statefulset.go:2416] StatefulSet ss has not reached scale 3, at 2
  I0423 16:53:58.753415 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.986477686s
  I0423 16:53:59.760084 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.975587623s
  I0423 16:54:00.767752 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.968772812s
  I0423 16:54:01.774935 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.961023234s
  I0423 16:54:02.785038 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.953181855s
  I0423 16:54:03.794954 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.943039593s
  I0423 16:54:04.802812 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.934100642s
  I0423 16:54:05.810734 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.925536451s
  I0423 16:54:06.818218 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 918.172909ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5223 @ 04/23/25 16:54:07.819
  I0423 16:54:07.826882 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:54:08.041614 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 16:54:08.041719 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:54:08.041748 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:54:08.041841 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:54:08.246111 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0423 16:54:08.246192 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:54:08.246220 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:54:08.246313 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 16:54:08.476965 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0423 16:54:08.477058 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 16:54:08.477099 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0423 16:54:08.484827 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0423 16:54:18.488149 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:54:18.488305 24 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:54:18.488400 24 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/23/25 16:54:18.488
  I0423 16:54:18.497106 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:54:18.696269 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:54:18.696393 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:54:18.696796 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:54:18.696968 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:54:18.970741 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:54:18.970821 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:54:18.970872 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:54:18.971019 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-5223 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 16:54:19.155587 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 16:54:19.155703 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 16:54:19.155978 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0423 16:54:19.156016 24 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0423 16:54:19.160020 24 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 1
  I0423 16:54:29.172697 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:54:29.172861 24 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:54:29.172910 24 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0423 16:54:29.214805 24 resource.go:168] POD   NODE      PHASE    GRACE  CONDITIONS
  I0423 16:54:29.214926 24 resource.go:175] ss-0  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:37 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:18 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:37 +0000 UTC  }]
  I0423 16:54:29.214980 24 resource.go:175] ss-1  worker00  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:19 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC  }]
  I0423 16:54:29.215025 24 resource.go:175] ss-2  worker01  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:59 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC  }]
  I0423 16:54:29.215047 24 resource.go:178] 
  I0423 16:54:29.215071 24 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0423 16:54:30.228811 24 resource.go:168] POD   NODE      PHASE      GRACE  CONDITIONS
  I0423 16:54:30.228910 24 resource.go:175] ss-0  worker00  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:37 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:18 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:18 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:37 +0000 UTC  }]
  I0423 16:54:30.228952 24 resource.go:175] ss-1  worker00  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:19 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:19 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC  }]
  I0423 16:54:30.228992 24 resource.go:175] ss-2  worker01  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:29 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:20 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:54:20 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-23 16:53:57 +0000 UTC  }]
  I0423 16:54:30.229011 24 resource.go:178] 
  I0423 16:54:30.229032 24 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0423 16:54:31.237109 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.963645859s
  I0423 16:54:32.241488 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.955509976s
  I0423 16:54:33.248281 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.950114053s
  I0423 16:54:34.255033 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.943774043s
  I0423 16:54:35.262502 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.936970657s
  I0423 16:54:36.270959 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.929870133s
  I0423 16:54:37.280216 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.92104544s
  I0423 16:54:38.290079 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 911.923765ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5223 @ 04/23/25 16:54:39.29
  I0423 16:54:39.296592 24 rest.go:152] Scaling statefulset ss to 0
  I0423 16:54:39.304918 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 16:54:39.312071 24 statefulset.go:138] Deleting all statefulset in ns statefulset-5223
  I0423 16:54:39.316657 24 rest.go:152] Scaling statefulset ss to 0
  I0423 16:54:39.321702 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 16:54:39.323808 24 rest.go:90] Deleting statefulset ss
  I0423 16:54:39.343693 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5223" for this suite. @ 04/23/25 16:54:39.348
• [61.930 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/23/25 16:54:39.357
  I0423 16:54:39.357431 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:54:39.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:54:39.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:54:39.387
  STEP: Creating configMap configmap-6990/configmap-test-6a95e4f4-3166-41c8-98c3-57c12769eb95 @ 04/23/25 16:54:39.39
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:54:39.395
  STEP: Saw pod success @ 04/23/25 16:54:43.423
  I0423 16:54:43.430845 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-23521660-a8c5-46d1-86af-7eb18661c2cc container env-test: <nil>
  STEP: delete the pod @ 04/23/25 16:54:43.448
  I0423 16:54:43.481604 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6990" for this suite. @ 04/23/25 16:54:43.492
• [4.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 04/23/25 16:54:43.507
  I0423 16:54:43.507078 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 16:54:43.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:54:43.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:54:43.545
  I0423 16:54:43.572862 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0423 16:55:43.582554 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/23/25 16:55:43.589
  STEP: Adding a custom resource @ 04/23/25 16:55:43.589
  I0423 16:55:43.638710 24 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0423 16:55:43.649495 24 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/23/25 16:55:43.649
  I0423 16:55:43.697663 24 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0423 16:55:43.722384 24 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/23/25 16:55:43.722
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/23/25 16:55:45.758
  STEP: Removing a custom resource @ 04/23/25 16:55:49.867
  STEP: Removing a custom resource @ 04/23/25 16:55:49.888
  I0423 16:55:49.909322 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1590" for this suite. @ 04/23/25 16:55:49.919
• [66.426 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/23/25 16:55:49.933
  I0423 16:55:49.933749 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:55:49.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:55:49.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:55:49.966
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:55:49.972
  STEP: Saw pod success @ 04/23/25 16:55:54.005
  I0423 16:55:54.009240 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-ae40ea92-5ceb-4ede-b449-f153d09fef37 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:55:54.019
  I0423 16:55:54.035319 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8541" for this suite. @ 04/23/25 16:55:54.043
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 04/23/25 16:55:54.058
  I0423 16:55:54.058946 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename containers @ 04/23/25 16:55:54.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:55:54.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:55:54.088
  STEP: Creating a pod to test override command @ 04/23/25 16:55:54.096
  STEP: Saw pod success @ 04/23/25 16:55:58.147
  I0423 16:55:58.155973 24 output.go:207] Trying to get logs from node worker00 pod client-containers-b52ccfc0-3258-4f63-bd0a-181b506265a7 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:55:58.168
  I0423 16:55:58.219973 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6153" for this suite. @ 04/23/25 16:55:58.231
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 04/23/25 16:55:58.238
  I0423 16:55:58.238118 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename security-context @ 04/23/25 16:55:58.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:55:58.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:55:58.264
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/23/25 16:55:58.267
  STEP: Saw pod success @ 04/23/25 16:56:02.296
  I0423 16:56:02.303230 24 output.go:207] Trying to get logs from node worker00 pod security-context-41d3fc83-fd51-4c46-8e48-e90279343e8e container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:56:02.312
  I0423 16:56:02.334175 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2114" for this suite. @ 04/23/25 16:56:02.342
• [4.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 04/23/25 16:56:02.353
  I0423 16:56:02.353733 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 16:56:02.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:56:02.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:56:02.387
  STEP: Looking for a node to schedule job pod @ 04/23/25 16:56:02.391
  STEP: Creating a job @ 04/23/25 16:56:02.443
  STEP: Ensuring job fails @ 04/23/25 16:56:02.452
  I0423 16:56:08.476260 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6271" for this suite. @ 04/23/25 16:56:08.482
• [6.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/23/25 16:56:08.502
  I0423 16:56:08.502815 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 16:56:08.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:56:08.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:56:08.541
  STEP: Given a ReplicationController is created @ 04/23/25 16:56:08.548
  STEP: When the matched label of one of its pods change @ 04/23/25 16:56:08.558
  I0423 16:56:08.569172 24 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0423 16:56:13.577376 24 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/23/25 16:56:13.608
  I0423 16:56:14.630837 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2471" for this suite. @ 04/23/25 16:56:14.636
• [6.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/23/25 16:56:14.644
  I0423 16:56:14.644880 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename aggregator @ 04/23/25 16:56:14.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:56:14.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:56:14.674
  I0423 16:56:14.678106 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Registering the sample API server. @ 04/23/25 16:56:14.68
  I0423 16:56:15.041412 24 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0423 16:56:15.083991 24 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0423 16:56:17.164380 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:19.174243 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:21.170140 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:23.171948 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:25.172226 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:27.173269 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:29.171918 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:31.171361 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:33.173509 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:35.169671 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:37.170335 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:39.169417 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:41.169151 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:43.172867 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0423 16:56:45.314852 24 aggregator.go:755] Waited 123.311533ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/23/25 16:56:45.416
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/23/25 16:56:45.423
  STEP: List APIServices @ 04/23/25 16:56:45.436
  I0423 16:56:45.445530 24 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/23/25 16:56:45.445
  I0423 16:56:45.468037 24 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/23/25 16:56:45.468
  I0423 16:56:45.525218 24 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.April, 23, 16, 56, 45, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/23/25 16:56:45.525
  I0423 16:56:45.555132 24 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-04-23 16:56:45 +0000 UTC Passed all checks passed}
  I0423 16:56:45.555176 24 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 16:56:45.555192 24 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/23/25 16:56:45.555
  I0423 16:56:45.567008 24 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-62725782" @ 04/23/25 16:56:45.567
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/23/25 16:56:45.586
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/23/25 16:56:45.597
  STEP: Patch APIService Status @ 04/23/25 16:56:45.601
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/23/25 16:56:45.618
  I0423 16:56:45.625279 24 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-04-23 16:56:45 +0000 UTC Passed all checks passed}
  I0423 16:56:45.625358 24 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 16:56:45.625395 24 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0423 16:56:45.625425 24 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/23/25 16:56:45.625
  STEP: Confirm that the generated APIService has been deleted @ 04/23/25 16:56:45.637
  I0423 16:56:45.637882 24 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0423 16:56:45.642784 24 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0423 16:56:45.642871 24 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0423 16:56:45.867656 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-298" for this suite. @ 04/23/25 16:56:45.88
• [31.250 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/23/25 16:56:45.895
  I0423 16:56:45.895649 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 16:56:45.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:56:45.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:56:45.928
  STEP: fetching the /apis discovery document @ 04/23/25 16:56:45.936
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/23/25 16:56:45.939
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/23/25 16:56:45.939
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/23/25 16:56:45.939
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/23/25 16:56:45.941
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/23/25 16:56:45.941
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/23/25 16:56:45.943
  I0423 16:56:45.943569 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8134" for this suite. @ 04/23/25 16:56:45.976
• [0.097 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/23/25 16:56:45.995
  I0423 16:56:45.995771 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename init-container @ 04/23/25 16:56:45.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:56:46.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:56:46.038
  STEP: creating the pod @ 04/23/25 16:56:46.047
  I0423 16:56:46.047322 24 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0423 16:56:49.913674 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4150" for this suite. @ 04/23/25 16:56:49.92
• [3.936 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 04/23/25 16:56:49.929
  I0423 16:56:49.929126 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 16:56:49.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:56:49.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:56:49.963
  STEP: Creating a ResourceQuota with best effort scope @ 04/23/25 16:56:49.97
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 16:56:49.975
  STEP: Creating a ResourceQuota with not best effort scope @ 04/23/25 16:56:51.981
  STEP: Ensuring ResourceQuota status is calculated @ 04/23/25 16:56:51.989
  STEP: Creating a best-effort pod @ 04/23/25 16:56:53.995
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/23/25 16:56:54.018
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/23/25 16:56:56.024
  STEP: Deleting the pod @ 04/23/25 16:56:58.032
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 16:56:58.062
  STEP: Creating a not best-effort pod @ 04/23/25 16:57:00.068
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/23/25 16:57:00.088
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/23/25 16:57:02.093
  STEP: Deleting the pod @ 04/23/25 16:57:04.098
  STEP: Ensuring resource quota status released the pod usage @ 04/23/25 16:57:04.112
  I0423 16:57:06.118812 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-676" for this suite. @ 04/23/25 16:57:06.126
• [16.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/23/25 16:57:06.137
  I0423 16:57:06.138080 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename endpointslice @ 04/23/25 16:57:06.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:57:06.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:57:06.172
  I0423 16:57:08.264606 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2767" for this suite. @ 04/23/25 16:57:08.281
• [2.168 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 04/23/25 16:57:08.308
  I0423 16:57:08.309686 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 16:57:08.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:57:08.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:57:08.353
  STEP: Creating service test in namespace statefulset-1556 @ 04/23/25 16:57:08.364
  STEP: Creating a new StatefulSet @ 04/23/25 16:57:08.373
  I0423 16:57:08.396942 24 wait.go:40] Found 0 stateful pods, waiting for 3
  I0423 16:57:18.395160 24 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:57:18.395222 24 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:57:18.395245 24 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/23/25 16:57:18.406
  I0423 16:57:18.430905 24 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 04/23/25 16:57:18.431
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/23/25 16:57:28.456
  STEP: Performing a canary update @ 04/23/25 16:57:28.456
  I0423 16:57:28.492497 24 statefulset.go:2510] Updating stateful set ss2
  I0423 16:57:28.515535 24 wait.go:74] Waiting for Pod statefulset-1556/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/23/25 16:57:38.503
  I0423 16:57:38.613435 24 wait.go:40] Found 2 stateful pods, waiting for 3
  I0423 16:57:48.588313 24 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:57:48.588375 24 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 16:57:48.588400 24 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/23/25 16:57:48.597
  I0423 16:57:48.609346 24 statefulset.go:2510] Updating stateful set ss2
  I0423 16:57:48.626896 24 wait.go:74] Waiting for Pod statefulset-1556/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0423 16:57:58.643632 24 statefulset.go:2510] Updating stateful set ss2
  I0423 16:57:58.729427 24 wait.go:56] Waiting for StatefulSet statefulset-1556/ss2 to complete update
  I0423 16:57:58.729549 24 wait.go:63] Waiting for Pod statefulset-1556/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0423 16:58:08.655370 24 statefulset.go:138] Deleting all statefulset in ns statefulset-1556
  I0423 16:58:08.661948 24 rest.go:152] Scaling statefulset ss2 to 0
  I0423 16:58:18.697879 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 16:58:18.705882 24 rest.go:90] Deleting statefulset ss2
  I0423 16:58:18.733211 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1556" for this suite. @ 04/23/25 16:58:18.746
• [70.456 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/23/25 16:58:18.761
  I0423 16:58:18.761992 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename watch @ 04/23/25 16:58:18.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:18.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:18.793
  STEP: creating a watch on configmaps @ 04/23/25 16:58:18.798
  STEP: creating a new configmap @ 04/23/25 16:58:18.801
  STEP: modifying the configmap once @ 04/23/25 16:58:18.805
  STEP: closing the watch once it receives two notifications @ 04/23/25 16:58:18.822
  I0423 16:58:18.823191 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8170  5ec0a5df-699f-4293-a758-8691142d199f 25404 0 2025-04-23 16:58:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 16:58:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 16:58:18.825009 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8170  5ec0a5df-699f-4293-a758-8691142d199f 25405 0 2025-04-23 16:58:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 16:58:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/23/25 16:58:18.826
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/23/25 16:58:18.838
  STEP: deleting the configmap @ 04/23/25 16:58:18.841
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/23/25 16:58:18.847
  I0423 16:58:18.847976 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8170  5ec0a5df-699f-4293-a758-8691142d199f 25407 0 2025-04-23 16:58:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 16:58:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 16:58:18.848821 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8170  5ec0a5df-699f-4293-a758-8691142d199f 25408 0 2025-04-23 16:58:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-23 16:58:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 16:58:18.849280 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8170" for this suite. @ 04/23/25 16:58:18.859
• [0.105 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/23/25 16:58:18.867
  I0423 16:58:18.867287 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 16:58:18.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:18.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:18.889
  I0423 16:58:20.921881 24 delete.go:62] Deleting pod "var-expansion-67dfddd0-cedd-4fbb-b770-2e309f11afb6" in namespace "var-expansion-2155"
  I0423 16:58:20.938613 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-67dfddd0-cedd-4fbb-b770-2e309f11afb6" to be fully deleted
  I0423 16:58:24.958303 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2155" for this suite. @ 04/23/25 16:58:24.965
• [6.109 seconds]
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/23/25 16:58:24.976
  I0423 16:58:24.977008 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 16:58:24.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:25.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:25.007
  STEP: Create a Replicaset @ 04/23/25 16:58:25.025
  STEP: Verify that the required pods have come up. @ 04/23/25 16:58:25.034
  I0423 16:58:25.041228 24 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0423 16:58:30.054171 24 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 16:58:30.054
  STEP: Getting /status @ 04/23/25 16:58:30.054
  I0423 16:58:30.064907 24 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/23/25 16:58:30.064
  I0423 16:58:30.086857 24 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/23/25 16:58:30.086
  I0423 16:58:30.096748 24 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0423 16:58:30.096905 24 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.099903 24 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.101995 24 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.113576 24 replica_set.go:682] Found replicaset test-rs in namespace replicaset-3359 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 16:58:30.113631 24 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/23/25 16:58:30.113
  I0423 16:58:30.113675 24 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 16:58:30.132569 24 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/23/25 16:58:30.132
  I0423 16:58:30.135877 24 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0423 16:58:30.136108 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.136213 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.138864 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.138994 24 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-3359 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 16:58:30.139313 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0423 16:58:30.139378 24 replica_set.go:718] Found replicaset test-rs in namespace replicaset-3359 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0423 16:58:30.139417 24 replica_set.go:729] Replicaset test-rs has a patched status
  I0423 16:58:30.139880 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3359" for this suite. @ 04/23/25 16:58:30.15
• [5.185 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 04/23/25 16:58:30.162
  I0423 16:58:30.163008 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:58:30.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:30.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:30.2
  STEP: creating a Service @ 04/23/25 16:58:30.207
  STEP: watching for the Service to be added @ 04/23/25 16:58:30.224
  I0423 16:58:30.229071 24 service.go:3425] Found Service test-service-rpfgv in namespace services-6719 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32149}]
  I0423 16:58:30.229231 24 service.go:3432] Service test-service-rpfgv created
  STEP: Getting /status @ 04/23/25 16:58:30.229
  I0423 16:58:30.240699 24 service.go:3443] Service test-service-rpfgv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/23/25 16:58:30.24
  STEP: watching for the Service to be patched @ 04/23/25 16:58:30.252
  I0423 16:58:30.255899 24 service.go:3466] observed Service test-service-rpfgv in namespace services-6719 with annotations: map[] & LoadBalancer: {[]}
  I0423 16:58:30.255959 24 service.go:3466] observed Service test-service-rpfgv in namespace services-6719 with annotations: map[] & LoadBalancer: {[{192.168.0.16  0xc0011c6470 []}]}
  I0423 16:58:30.255986 24 service.go:3469] Found Service test-service-rpfgv in namespace services-6719 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0011c6580 []}]}
  I0423 16:58:30.256006 24 service.go:3476] Service test-service-rpfgv has service status patched
  STEP: updating the ServiceStatus @ 04/23/25 16:58:30.256
  I0423 16:58:30.299250 24 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/23/25 16:58:30.299
  I0423 16:58:30.310214 24 service.go:3507] Observed Service test-service-rpfgv in namespace services-6719 with annotations: map[] & Conditions: []
  I0423 16:58:30.314941 24 service.go:3507] Observed Service test-service-rpfgv in namespace services-6719 with annotations: map[] & Conditions: []
  I0423 16:58:30.315204 24 service.go:3518] Observed Service test-service-rpfgv in namespace services-6719 with annotations: map[patchedstatus:true] & Conditions: []
  I0423 16:58:30.319932 24 service.go:3518] Observed Service test-service-rpfgv in namespace services-6719 with annotations: map[patchedstatus:true] & Conditions: []
  I0423 16:58:30.320077 24 service.go:3514] Found Service test-service-rpfgv in namespace services-6719 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 16:58:30.320122 24 service.go:3525] Service test-service-rpfgv has service status updated
  STEP: patching the service @ 04/23/25 16:58:30.32
  STEP: watching for the Service to be patched @ 04/23/25 16:58:30.37
  I0423 16:58:30.378813 24 service.go:3548] observed Service test-service-rpfgv in namespace services-6719 with labels: map[test-service-static:true]
  I0423 16:58:30.378863 24 service.go:3548] observed Service test-service-rpfgv in namespace services-6719 with labels: map[test-service-static:true]
  I0423 16:58:30.378879 24 service.go:3548] observed Service test-service-rpfgv in namespace services-6719 with labels: map[test-service-static:true]
  I0423 16:58:30.379068 24 service.go:3548] observed Service test-service-rpfgv in namespace services-6719 with labels: map[test-service-static:true]
  I0423 16:58:30.379085 24 service.go:3548] observed Service test-service-rpfgv in namespace services-6719 with labels: map[test-service-static:true]
  I0423 16:58:30.379101 24 service.go:3551] Found Service test-service-rpfgv in namespace services-6719 with labels: map[test-service:patched test-service-static:true]
  I0423 16:58:30.379113 24 service.go:3558] Service test-service-rpfgv patched
  STEP: deleting the service @ 04/23/25 16:58:30.379
  STEP: watching for the Service to be deleted @ 04/23/25 16:58:30.399
  I0423 16:58:30.402839 24 service.go:3582] Observed event: ADDED
  I0423 16:58:30.402912 24 service.go:3582] Observed event: MODIFIED
  I0423 16:58:30.402955 24 service.go:3582] Observed event: MODIFIED
  I0423 16:58:30.403150 24 service.go:3582] Observed event: MODIFIED
  I0423 16:58:30.403185 24 service.go:3582] Observed event: MODIFIED
  I0423 16:58:30.404321 24 service.go:3582] Observed event: MODIFIED
  I0423 16:58:30.404630 24 service.go:3578] Found Service test-service-rpfgv in namespace services-6719 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0423 16:58:30.405328 24 service.go:3587] Service test-service-rpfgv deleted
  I0423 16:58:30.406397 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6719" for this suite. @ 04/23/25 16:58:30.412
• [0.257 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 04/23/25 16:58:30.423
  I0423 16:58:30.423093 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 16:58:30.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:30.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:30.453
  STEP: getting /apis @ 04/23/25 16:58:30.465
  STEP: getting /apis/admissionregistration.k8s.io @ 04/23/25 16:58:30.472
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/23/25 16:58:30.474
  STEP: creating @ 04/23/25 16:58:30.476
  STEP: getting @ 04/23/25 16:58:30.493
  STEP: listing @ 04/23/25 16:58:30.497
  STEP: watching @ 04/23/25 16:58:30.501
  I0423 16:58:30.501639 24 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 04/23/25 16:58:30.503
  STEP: updating @ 04/23/25 16:58:30.512
  I0423 16:58:30.524686 24 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 04/23/25 16:58:30.524
  STEP: deleting a collection @ 04/23/25 16:58:30.54
  I0423 16:58:30.567172 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-253" for this suite. @ 04/23/25 16:58:30.572
• [0.162 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 04/23/25 16:58:30.586
  I0423 16:58:30.586795 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:58:30.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:30.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:30.616
  STEP: Setting up server cert @ 04/23/25 16:58:30.652
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:58:30.969
  STEP: Deploying the webhook pod @ 04/23/25 16:58:30.974
  STEP: Wait for the deployment to be ready @ 04/23/25 16:58:30.986
  I0423 16:58:30.995491 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 16:58:33.01
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:58:33.028
  I0423 16:58:34.028298 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/23/25 16:58:34.037
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/23/25 16:58:34.04
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/23/25 16:58:34.04
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/23/25 16:58:34.04
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/23/25 16:58:34.043
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/23/25 16:58:34.043
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/23/25 16:58:34.046
  I0423 16:58:34.123934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9279" for this suite. @ 04/23/25 16:58:34.141
  STEP: Destroying namespace "webhook-markers-3162" for this suite. @ 04/23/25 16:58:34.163
• [3.602 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/23/25 16:58:34.19
  I0423 16:58:34.190144 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:58:34.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:34.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:34.222
  STEP: Creating configMap with name configmap-test-volume-0ee94636-efce-4543-941e-aa257ce505a8 @ 04/23/25 16:58:34.228
  STEP: Creating a pod to test consume configMaps @ 04/23/25 16:58:34.239
  STEP: Saw pod success @ 04/23/25 16:58:38.269
  I0423 16:58:38.274812 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-d918f731-e45a-47f8-9070-b77f2f7311c3 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 16:58:38.291
  I0423 16:58:38.333103 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9607" for this suite. @ 04/23/25 16:58:38.339
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/23/25 16:58:38.355
  I0423 16:58:38.355986 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 16:58:38.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:38.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:38.384
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 16:58:38.392
  STEP: Saw pod success @ 04/23/25 16:58:42.426
  I0423 16:58:42.431584 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-f821df5f-daaa-4d81-b05f-eae140a24e1e container client-container: <nil>
  STEP: delete the pod @ 04/23/25 16:58:42.441
  I0423 16:58:42.465374 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3549" for this suite. @ 04/23/25 16:58:42.472
• [4.125 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/23/25 16:58:42.481
  I0423 16:58:42.481666 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 16:58:42.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:42.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:42.509
  STEP: Creating configMap with name configmap-projected-all-test-volume-17b1e082-48b0-46b3-979d-0cf618049c20 @ 04/23/25 16:58:42.514
  STEP: Creating secret with name secret-projected-all-test-volume-56c33467-9cef-4cad-a12f-8c1755a96a0f @ 04/23/25 16:58:42.519
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/23/25 16:58:42.525
  W0423 16:58:42.537086      24 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 04/23/25 16:58:46.559
  I0423 16:58:46.568603 24 output.go:207] Trying to get logs from node worker00 pod projected-volume-6c4048d3-86ea-481f-a45b-b04a089e3171 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 16:58:46.585
  I0423 16:58:46.611711 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3967" for this suite. @ 04/23/25 16:58:46.617
• [4.147 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/23/25 16:58:46.628
  I0423 16:58:46.628984 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 16:58:46.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:58:46.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:58:46.721
  STEP: Performing setup for networking test in namespace pod-network-test-3544 @ 04/23/25 16:58:46.726
  STEP: creating a selector @ 04/23/25 16:58:46.726
  STEP: Creating the service pods in kubernetes @ 04/23/25 16:58:46.726
  I0423 16:58:46.726258 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/23/25 16:58:58.828
  I0423 16:59:00.854068 24 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 16:59:00.854134 24 networking.go:42] Breadth first check of 10.200.131.178 on host 192.168.58.100...
  I0423 16:59:00.858822 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.180:9080/dial?request=hostname&protocol=udp&host=10.200.131.178&port=8081&tries=1'] Namespace:pod-network-test-3544 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:59:00.858878 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:59:00.858965 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-3544/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.180%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.131.178%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 16:59:00.978826 24 utils.go:356] Waiting for responses: map[]
  I0423 16:59:00.978891 24 utils.go:360] reached 10.200.131.178 after 0/1 tries
  I0423 16:59:00.978918 24 networking.go:42] Breadth first check of 10.200.5.62 on host 192.168.58.101...
  I0423 16:59:00.984977 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.131.180:9080/dial?request=hostname&protocol=udp&host=10.200.5.62&port=8081&tries=1'] Namespace:pod-network-test-3544 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 16:59:00.985064 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 16:59:00.985165 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-3544/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.131.180%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.5.62%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0423 16:59:01.079402 24 utils.go:356] Waiting for responses: map[]
  I0423 16:59:01.079537 24 utils.go:360] reached 10.200.5.62 after 0/1 tries
  I0423 16:59:01.079562 24 networking.go:53] Going to retry 0 out of 2 pods....
  I0423 16:59:01.079698 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3544" for this suite. @ 04/23/25 16:59:01.087
• [14.481 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 04/23/25 16:59:01.109
  I0423 16:59:01.109746 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 16:59:01.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:01.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:01.145
  STEP: creating service nodeport-test with type=NodePort in namespace services-1575 @ 04/23/25 16:59:01.15
  STEP: creating replication controller nodeport-test in namespace services-1575 @ 04/23/25 16:59:01.179
  I0423 16:59:01.199493      24 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1575, replica count: 2
  I0423 16:59:04.251730      24 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:59:04.251797 24 resource.go:361] Creating new exec pod
  I0423 16:59:07.288876 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0423 16:59:07.471255 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.32.0.244) 80 port [tcp/http] succeeded!\n"
  I0423 16:59:07.472038 24 builder.go:147] stdout: "nodeport-test-6ql2q"
  I0423 16:59:07.472128 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.244 80'
  I0423 16:59:07.651185 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.244 80\nConnection to 10.32.0.244 80 port [tcp/http] succeeded!\n"
  I0423 16:59:07.651260 24 builder.go:147] stdout: ""
  I0423 16:59:08.473511 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.244 80'
  I0423 16:59:08.716797 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.244 80\nConnection to 10.32.0.244 80 port [tcp/http] succeeded!\n"
  I0423 16:59:08.716868 24 builder.go:147] stdout: ""
  I0423 16:59:09.473087 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.244 80'
  I0423 16:59:09.669017 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.244 80\nConnection to 10.32.0.244 80 port [tcp/http] succeeded!\n"
  I0423 16:59:09.669063 24 builder.go:147] stdout: ""
  I0423 16:59:10.472774 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.244 80'
  I0423 16:59:10.686321 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.244 80\nConnection to 10.32.0.244 80 port [tcp/http] succeeded!\n"
  I0423 16:59:10.686451 24 builder.go:147] stdout: ""
  I0423 16:59:11.473172 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.244 80'
  I0423 16:59:11.709044 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.244 80\nConnection to 10.32.0.244 80 port [tcp/http] succeeded!\n"
  I0423 16:59:11.709124 24 builder.go:147] stdout: "nodeport-test-sgphh"
  I0423 16:59:11.709255 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 31386'
  I0423 16:59:11.907161 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 31386\nConnection to 192.168.58.100 31386 port [tcp/*] succeeded!\n"
  I0423 16:59:11.907208 24 builder.go:147] stdout: "nodeport-test-sgphh"
  I0423 16:59:11.907325 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-1575 exec execpodhpkqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 31386'
  I0423 16:59:12.075697 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 31386\nConnection to 192.168.58.101 31386 port [tcp/*] succeeded!\n"
  I0423 16:59:12.075774 24 builder.go:147] stdout: "nodeport-test-6ql2q"
  I0423 16:59:12.075948 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1575" for this suite. @ 04/23/25 16:59:12.085
• [10.986 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 04/23/25 16:59:12.098
  I0423 16:59:12.098706 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 16:59:12.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:12.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:12.122
  STEP: Setting up server cert @ 04/23/25 16:59:12.146
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 16:59:12.77
  STEP: Deploying the webhook pod @ 04/23/25 16:59:12.784
  STEP: Wait for the deployment to be ready @ 04/23/25 16:59:12.795
  I0423 16:59:12.801278 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0423 16:59:14.824521 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 23, 16, 59, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 59, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 16, 59, 12, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 16, 59, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/23/25 16:59:16.83
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 16:59:16.845
  I0423 16:59:17.846141 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/23/25 16:59:17.854
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/23/25 16:59:17.879
  STEP: Creating a dummy validating-webhook-configuration object @ 04/23/25 16:59:17.905
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/23/25 16:59:17.919
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/23/25 16:59:17.928
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/23/25 16:59:17.948
  I0423 16:59:18.048903 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2612" for this suite. @ 04/23/25 16:59:18.061
  STEP: Destroying namespace "webhook-markers-5436" for this suite. @ 04/23/25 16:59:18.07
• [5.977 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/23/25 16:59:18.076
  I0423 16:59:18.076294 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 16:59:18.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:18.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:18.109
  STEP: creating a Deployment @ 04/23/25 16:59:18.118
  STEP: waiting for Deployment to be created @ 04/23/25 16:59:18.132
  STEP: waiting for all Replicas to be Ready @ 04/23/25 16:59:18.141
  I0423 16:59:18.145172 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.145215 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.151980 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.152406 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.174839 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.175100 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.216921 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:18.216966 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0423 16:59:19.526088 24 deployment.go:246] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0423 16:59:19.526150 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0423 16:59:19.819611 24 deployment.go:248] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/23/25 16:59:19.819
  I0423 16:59:19.837552 24 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/23/25 16:59:19.837
  I0423 16:59:19.840358 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840487 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840542 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840609 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840680 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840695 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840713 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.840724 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 0
  I0423 16:59:19.841183 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:19.841456 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:19.841472 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.841484 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.841499 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.841510 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.862671 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.862870 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.888841 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.889035 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:19.923798 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:19.923840 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:19.949718 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:19.949755 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:21.873072 24 deployment.go:309] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:21.873229 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:21.913159 24 deployment.go:311] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  STEP: listing Deployments @ 04/23/25 16:59:21.913
  I0423 16:59:21.917773 24 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/23/25 16:59:21.917
  I0423 16:59:21.950642 24 deployment.go:360] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/23/25 16:59:21.95
  I0423 16:59:21.976676 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:22.014015 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:22.111094 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:22.148344 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:22.174161 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:23.557721 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:23.861171 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:23.896869 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:23.936003 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0423 16:59:25.613292 24 deployment.go:389] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/23/25 16:59:25.664
  STEP: fetching the DeploymentStatus @ 04/23/25 16:59:25.677
  I0423 16:59:25.684288 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:25.684330 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:25.684545 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:25.684875 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:25.685730 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 1
  I0423 16:59:25.686567 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:25.689703 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 3
  I0423 16:59:25.692347 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:25.692823 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 2
  I0423 16:59:25.693259 24 deployment.go:449] observed Deployment test-deployment in namespace deployment-3395 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/23/25 16:59:25.696
  I0423 16:59:25.712992 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.713358 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.714267 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.714314 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.716935 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718140 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718170 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718186 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718270 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718283 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718296 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718698 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.718716 24 deployment.go:475] observed event type MODIFIED
  I0423 16:59:25.723687 24 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0423 16:59:25.739288 24 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3395",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91df8e7d-e3f8-4eff-b30b-2806efd4c3df",
      ResourceVersion: (string) (len=5) "26287",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024358,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ecb4bd5b-9aed-47e4-aa4c-742e0c2d81a3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 63 62 34  62 64 35 62 2d 39 61 65  |":\"ecb4bd5b-9ae|
              00000130  64 2d 34 37 65 34 2d 61  61 34 63 2d 37 34 32 65  |d-47e4-aa4c-742e|
              00000140  30 63 32 64 38 31 61 33  5c 22 7d 22 3a 7b 7d 7d  |0c2d81a3\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024361,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0423 16:59:25.768758 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3395" for this suite. @ 04/23/25 16:59:25.789
• [7.721 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/23/25 16:59:25.797
  I0423 16:59:25.797287 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 16:59:25.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:25.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:25.831
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/23/25 16:59:25.836
  STEP: Saw pod success @ 04/23/25 16:59:29.879
  I0423 16:59:29.885147 24 output.go:207] Trying to get logs from node worker00 pod pod-9cde575d-7a7f-4dec-93a7-128818e4533e container test-container: <nil>
  STEP: delete the pod @ 04/23/25 16:59:29.907
  I0423 16:59:29.931636 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-230" for this suite. @ 04/23/25 16:59:29.939
• [4.157 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/23/25 16:59:29.956
  I0423 16:59:29.956499 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 16:59:29.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:29.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:29.985
  STEP: create the deployment @ 04/23/25 16:59:29.99
  W0423 16:59:29.996357      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/23/25 16:59:29.996
  STEP: delete the deployment @ 04/23/25 16:59:30.502
  STEP: wait for all rs to be garbage collected @ 04/23/25 16:59:30.509
  STEP: expected 0 pods, got 2 pods @ 04/23/25 16:59:30.532
  STEP: Gathering metrics @ 04/23/25 16:59:31.041
  I0423 16:59:31.173282 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 16:59:31.174606 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-96" for this suite. @ 04/23/25 16:59:31.182
• [1.245 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/23/25 16:59:31.204
  I0423 16:59:31.204243 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 16:59:31.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:31.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:31.239
  STEP: Creating a pod to test substitution in container's args @ 04/23/25 16:59:31.248
  STEP: Saw pod success @ 04/23/25 16:59:35.297
  I0423 16:59:35.306874 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-ab801f75-726a-4f30-a95c-b76921dd63ef container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 16:59:35.32
  I0423 16:59:35.346062 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8238" for this suite. @ 04/23/25 16:59:35.353
• [4.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 04/23/25 16:59:35.364
  I0423 16:59:35.364828 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 16:59:35.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:35.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:35.394
  STEP: Creating a test headless service @ 04/23/25 16:59:35.399
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9328.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-9328.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 04/23/25 16:59:35.412
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9328.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9328.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/23/25 16:59:35.412
  STEP: creating a pod to probe DNS @ 04/23/25 16:59:35.413
  STEP: submitting the pod to kubernetes @ 04/23/25 16:59:35.413
  STEP: retrieving the pod @ 04/23/25 16:59:37.475
  STEP: looking for the results for each expected name from probers @ 04/23/25 16:59:37.485
  I0423 16:59:37.513756 24 dns_common.go:546] DNS probes using dns-9328/dns-test-5fb2467d-9f98-470a-9f2e-4958b93ecb68 succeeded

  STEP: deleting the pod @ 04/23/25 16:59:37.514
  STEP: deleting the test headless service @ 04/23/25 16:59:37.569
  I0423 16:59:37.628463 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9328" for this suite. @ 04/23/25 16:59:37.647
• [2.306 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/23/25 16:59:37.671
  I0423 16:59:37.673597 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svc-latency @ 04/23/25 16:59:37.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:37.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:37.714
  I0423 16:59:37.717328 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6894 @ 04/23/25 16:59:37.718
  I0423 16:59:37.727654      24 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6894, replica count: 1
  I0423 16:59:38.779903      24 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:59:39.780196      24 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 16:59:39.895369 24 service_latency.go:356] Created: latency-svc-tx5q9
  I0423 16:59:39.911727 24 service_latency.go:363] Got endpoints: latency-svc-tx5q9 [31.104837ms]
  I0423 16:59:39.938660 24 service_latency.go:356] Created: latency-svc-s9frk
  I0423 16:59:39.950566 24 service_latency.go:363] Got endpoints: latency-svc-s9frk [38.058526ms]
  I0423 16:59:39.971514 24 service_latency.go:356] Created: latency-svc-rmkd5
  I0423 16:59:39.977843 24 service_latency.go:363] Got endpoints: latency-svc-rmkd5 [64.857845ms]
  I0423 16:59:39.987591 24 service_latency.go:356] Created: latency-svc-7q8sj
  I0423 16:59:40.003288 24 service_latency.go:363] Got endpoints: latency-svc-7q8sj [89.638135ms]
  I0423 16:59:40.015672 24 service_latency.go:356] Created: latency-svc-scptf
  I0423 16:59:40.031075 24 service_latency.go:356] Created: latency-svc-ht4tr
  I0423 16:59:40.031320 24 service_latency.go:363] Got endpoints: latency-svc-scptf [117.926318ms]
  I0423 16:59:40.037055 24 service_latency.go:363] Got endpoints: latency-svc-ht4tr [123.91427ms]
  I0423 16:59:40.041318 24 service_latency.go:356] Created: latency-svc-j6s87
  I0423 16:59:40.052671 24 service_latency.go:363] Got endpoints: latency-svc-j6s87 [139.069701ms]
  I0423 16:59:40.065013 24 service_latency.go:356] Created: latency-svc-lqbfs
  I0423 16:59:40.065088 24 service_latency.go:363] Got endpoints: latency-svc-lqbfs [151.272004ms]
  I0423 16:59:40.153922 24 service_latency.go:356] Created: latency-svc-jtrgj
  I0423 16:59:40.153851 24 service_latency.go:356] Created: latency-svc-qfsx7
  I0423 16:59:40.154122 24 service_latency.go:356] Created: latency-svc-gn9pb
  I0423 16:59:40.156126 24 service_latency.go:356] Created: latency-svc-rkkpc
  I0423 16:59:40.156182 24 service_latency.go:356] Created: latency-svc-rccgm
  I0423 16:59:40.156248 24 service_latency.go:356] Created: latency-svc-5p6r5
  I0423 16:59:40.156348 24 service_latency.go:356] Created: latency-svc-5c9fx
  I0423 16:59:40.156372 24 service_latency.go:356] Created: latency-svc-vvcjx
  I0423 16:59:40.156564 24 service_latency.go:356] Created: latency-svc-9jp6v
  I0423 16:59:40.156665 24 service_latency.go:356] Created: latency-svc-zvxdn
  I0423 16:59:40.156693 24 service_latency.go:356] Created: latency-svc-wzxtg
  I0423 16:59:40.156804 24 service_latency.go:356] Created: latency-svc-rmvpm
  I0423 16:59:40.156829 24 service_latency.go:356] Created: latency-svc-9mhfw
  I0423 16:59:40.156916 24 service_latency.go:356] Created: latency-svc-hpg9q
  I0423 16:59:40.157011 24 service_latency.go:356] Created: latency-svc-4lgj7
  I0423 16:59:40.160590 24 service_latency.go:363] Got endpoints: latency-svc-qfsx7 [247.273623ms]
  I0423 16:59:40.175957 24 service_latency.go:363] Got endpoints: latency-svc-rccgm [123.043014ms]
  I0423 16:59:40.186248 24 service_latency.go:363] Got endpoints: latency-svc-gn9pb [272.568459ms]
  I0423 16:59:40.189533 24 service_latency.go:363] Got endpoints: latency-svc-rkkpc [276.024665ms]
  I0423 16:59:40.189740 24 service_latency.go:363] Got endpoints: latency-svc-jtrgj [211.586448ms]
  I0423 16:59:40.190061 24 service_latency.go:363] Got endpoints: latency-svc-hpg9q [276.65872ms]
  I0423 16:59:40.197813 24 service_latency.go:356] Created: latency-svc-tfj5q
  I0423 16:59:40.198047 24 service_latency.go:363] Got endpoints: latency-svc-vvcjx [132.935732ms]
  I0423 16:59:40.207383 24 service_latency.go:363] Got endpoints: latency-svc-9mhfw [293.513446ms]
  I0423 16:59:40.209167 24 service_latency.go:363] Got endpoints: latency-svc-9jp6v [258.527911ms]
  I0423 16:59:40.218851 24 service_latency.go:363] Got endpoints: latency-svc-wzxtg [305.349761ms]
  I0423 16:59:40.219405 24 service_latency.go:363] Got endpoints: latency-svc-4lgj7 [305.677505ms]
  I0423 16:59:40.225045 24 service_latency.go:363] Got endpoints: latency-svc-zvxdn [221.709699ms]
  I0423 16:59:40.219584 24 service_latency.go:363] Got endpoints: latency-svc-5c9fx [305.626281ms]
  I0423 16:59:40.232595 24 service_latency.go:356] Created: latency-svc-vt4fz
  I0423 16:59:40.234912 24 service_latency.go:363] Got endpoints: latency-svc-5p6r5 [203.54246ms]
  I0423 16:59:40.235393 24 service_latency.go:363] Got endpoints: latency-svc-rmvpm [198.233105ms]
  I0423 16:59:40.239700 24 service_latency.go:363] Got endpoints: latency-svc-vt4fz [63.439975ms]
  I0423 16:59:40.240535 24 service_latency.go:363] Got endpoints: latency-svc-tfj5q [79.902324ms]
  I0423 16:59:40.242033 24 service_latency.go:356] Created: latency-svc-mthh4
  I0423 16:59:40.252599 24 service_latency.go:363] Got endpoints: latency-svc-mthh4 [62.826541ms]
  I0423 16:59:40.258851 24 service_latency.go:356] Created: latency-svc-qqwtb
  I0423 16:59:40.269188 24 service_latency.go:363] Got endpoints: latency-svc-qqwtb [79.098068ms]
  I0423 16:59:40.274366 24 service_latency.go:356] Created: latency-svc-gz55g
  I0423 16:59:40.279792 24 service_latency.go:356] Created: latency-svc-26wns
  I0423 16:59:40.299261 24 service_latency.go:356] Created: latency-svc-8tt64
  I0423 16:59:40.299476 24 service_latency.go:363] Got endpoints: latency-svc-8tt64 [101.393806ms]
  I0423 16:59:40.300666 24 service_latency.go:363] Got endpoints: latency-svc-26wns [114.27232ms]
  I0423 16:59:40.301618 24 service_latency.go:363] Got endpoints: latency-svc-gz55g [110.044144ms]
  I0423 16:59:40.309308 24 service_latency.go:356] Created: latency-svc-mxhhm
  I0423 16:59:40.325612 24 service_latency.go:356] Created: latency-svc-j8gfn
  I0423 16:59:40.325291 24 service_latency.go:363] Got endpoints: latency-svc-mxhhm [117.620254ms]
  I0423 16:59:40.337283 24 service_latency.go:363] Got endpoints: latency-svc-j8gfn [128.079485ms]
  I0423 16:59:40.352061 24 service_latency.go:356] Created: latency-svc-59fbl
  I0423 16:59:40.353867 24 service_latency.go:363] Got endpoints: latency-svc-59fbl [128.782738ms]
  I0423 16:59:40.363498 24 service_latency.go:356] Created: latency-svc-4f9np
  I0423 16:59:40.379168 24 service_latency.go:363] Got endpoints: latency-svc-4f9np [153.911372ms]
  I0423 16:59:40.385245 24 service_latency.go:356] Created: latency-svc-pt8w9
  I0423 16:59:40.392714 24 service_latency.go:363] Got endpoints: latency-svc-pt8w9 [167.936388ms]
  I0423 16:59:40.399405 24 service_latency.go:356] Created: latency-svc-f48jc
  I0423 16:59:40.410649 24 service_latency.go:363] Got endpoints: latency-svc-f48jc [187.389856ms]
  I0423 16:59:40.427652 24 service_latency.go:356] Created: latency-svc-b7rm8
  I0423 16:59:40.443908 24 service_latency.go:356] Created: latency-svc-dhcfc
  I0423 16:59:40.444145 24 service_latency.go:363] Got endpoints: latency-svc-b7rm8 [208.402965ms]
  I0423 16:59:40.447742 24 service_latency.go:363] Got endpoints: latency-svc-dhcfc [211.478734ms]
  I0423 16:59:40.460325 24 service_latency.go:356] Created: latency-svc-d2c6h
  I0423 16:59:40.462728 24 service_latency.go:363] Got endpoints: latency-svc-d2c6h [222.94781ms]
  I0423 16:59:40.470996 24 service_latency.go:356] Created: latency-svc-4hhqx
  I0423 16:59:40.478085 24 service_latency.go:363] Got endpoints: latency-svc-4hhqx [237.508536ms]
  I0423 16:59:40.481333 24 service_latency.go:356] Created: latency-svc-r9zsb
  I0423 16:59:40.487944 24 service_latency.go:363] Got endpoints: latency-svc-r9zsb [235.264926ms]
  I0423 16:59:40.502167 24 service_latency.go:356] Created: latency-svc-h8q6c
  I0423 16:59:40.516535 24 service_latency.go:363] Got endpoints: latency-svc-h8q6c [247.293187ms]
  I0423 16:59:40.525918 24 service_latency.go:356] Created: latency-svc-gffd9
  I0423 16:59:40.540391 24 service_latency.go:356] Created: latency-svc-9nnc5
  I0423 16:59:40.555141 24 service_latency.go:363] Got endpoints: latency-svc-gffd9 [255.197002ms]
  I0423 16:59:40.557664 24 service_latency.go:356] Created: latency-svc-vmjg7
  I0423 16:59:40.570087 24 service_latency.go:356] Created: latency-svc-mt8kv
  I0423 16:59:40.583620 24 service_latency.go:356] Created: latency-svc-4m9dp
  I0423 16:59:40.596250 24 service_latency.go:356] Created: latency-svc-gprmh
  I0423 16:59:40.609874 24 service_latency.go:363] Got endpoints: latency-svc-9nnc5 [306.595771ms]
  I0423 16:59:40.621627 24 service_latency.go:356] Created: latency-svc-qpg5v
  I0423 16:59:40.638065 24 service_latency.go:356] Created: latency-svc-jhpwj
  I0423 16:59:40.651907 24 service_latency.go:356] Created: latency-svc-t9d6t
  I0423 16:59:40.664300 24 service_latency.go:363] Got endpoints: latency-svc-vmjg7 [360.021686ms]
  I0423 16:59:40.677804 24 service_latency.go:356] Created: latency-svc-dcfk5
  I0423 16:59:40.684851 24 service_latency.go:356] Created: latency-svc-lxf7b
  I0423 16:59:40.706887 24 service_latency.go:363] Got endpoints: latency-svc-mt8kv [379.894357ms]
  I0423 16:59:40.711807 24 service_latency.go:356] Created: latency-svc-52jn8
  I0423 16:59:40.726919 24 service_latency.go:356] Created: latency-svc-9hb5n
  I0423 16:59:40.738741 24 service_latency.go:356] Created: latency-svc-rzfj6
  I0423 16:59:40.756254 24 service_latency.go:356] Created: latency-svc-ckm7k
  I0423 16:59:40.760553 24 service_latency.go:363] Got endpoints: latency-svc-4m9dp [423.224585ms]
  I0423 16:59:40.769555 24 service_latency.go:356] Created: latency-svc-wjsvv
  I0423 16:59:40.776913 24 service_latency.go:356] Created: latency-svc-bxmfw
  I0423 16:59:40.785014 24 service_latency.go:356] Created: latency-svc-ftfd5
  I0423 16:59:40.790086 24 service_latency.go:356] Created: latency-svc-5nqmx
  I0423 16:59:40.795698 24 service_latency.go:356] Created: latency-svc-bxbkb
  I0423 16:59:40.799369 24 service_latency.go:363] Got endpoints: latency-svc-gprmh [445.437179ms]
  I0423 16:59:40.812111 24 service_latency.go:356] Created: latency-svc-vw9qx
  I0423 16:59:40.857168 24 service_latency.go:363] Got endpoints: latency-svc-qpg5v [477.869667ms]
  I0423 16:59:40.874937 24 service_latency.go:356] Created: latency-svc-rr4vk
  I0423 16:59:40.903109 24 service_latency.go:363] Got endpoints: latency-svc-jhpwj [510.241385ms]
  I0423 16:59:40.928346 24 service_latency.go:356] Created: latency-svc-7vfzj
  I0423 16:59:40.957241 24 service_latency.go:363] Got endpoints: latency-svc-t9d6t [546.473034ms]
  I0423 16:59:40.983663 24 service_latency.go:356] Created: latency-svc-2qmd8
  I0423 16:59:40.999156 24 service_latency.go:363] Got endpoints: latency-svc-dcfk5 [554.893639ms]
  I0423 16:59:41.027215 24 service_latency.go:356] Created: latency-svc-z98ps
  I0423 16:59:41.056177 24 service_latency.go:363] Got endpoints: latency-svc-lxf7b [608.27895ms]
  I0423 16:59:41.079355 24 service_latency.go:356] Created: latency-svc-7nwl2
  I0423 16:59:41.113984 24 service_latency.go:363] Got endpoints: latency-svc-52jn8 [651.212867ms]
  I0423 16:59:41.152007 24 service_latency.go:356] Created: latency-svc-5w4qx
  I0423 16:59:41.160670 24 service_latency.go:363] Got endpoints: latency-svc-9hb5n [672.540178ms]
  I0423 16:59:41.186804 24 service_latency.go:356] Created: latency-svc-nxxsr
  I0423 16:59:41.205478 24 service_latency.go:363] Got endpoints: latency-svc-rzfj6 [688.270593ms]
  I0423 16:59:41.221791 24 service_latency.go:356] Created: latency-svc-8fxn4
  I0423 16:59:41.254114 24 service_latency.go:363] Got endpoints: latency-svc-ckm7k [698.871652ms]
  I0423 16:59:41.277526 24 service_latency.go:356] Created: latency-svc-kfmjt
  I0423 16:59:41.300497 24 service_latency.go:363] Got endpoints: latency-svc-wjsvv [690.542301ms]
  I0423 16:59:41.318431 24 service_latency.go:356] Created: latency-svc-7zw5b
  I0423 16:59:41.353060 24 service_latency.go:363] Got endpoints: latency-svc-bxmfw [688.578467ms]
  I0423 16:59:41.370256 24 service_latency.go:356] Created: latency-svc-8ls56
  I0423 16:59:41.400225 24 service_latency.go:363] Got endpoints: latency-svc-ftfd5 [922.00576ms]
  I0423 16:59:41.431839 24 service_latency.go:356] Created: latency-svc-zmncc
  I0423 16:59:41.454374 24 service_latency.go:363] Got endpoints: latency-svc-5nqmx [747.343865ms]
  I0423 16:59:41.471243 24 service_latency.go:356] Created: latency-svc-7tzlc
  I0423 16:59:41.510819 24 service_latency.go:363] Got endpoints: latency-svc-bxbkb [745.663289ms]
  I0423 16:59:41.548058 24 service_latency.go:356] Created: latency-svc-69pcf
  I0423 16:59:41.565881 24 service_latency.go:363] Got endpoints: latency-svc-vw9qx [766.463013ms]
  I0423 16:59:41.590130 24 service_latency.go:356] Created: latency-svc-lxcbt
  I0423 16:59:41.602310 24 service_latency.go:363] Got endpoints: latency-svc-rr4vk [744.9689ms]
  I0423 16:59:41.628839 24 service_latency.go:356] Created: latency-svc-7bfnk
  I0423 16:59:41.658609 24 service_latency.go:363] Got endpoints: latency-svc-7vfzj [753.534561ms]
  I0423 16:59:41.683023 24 service_latency.go:356] Created: latency-svc-k8dmn
  I0423 16:59:41.713609 24 service_latency.go:363] Got endpoints: latency-svc-2qmd8 [756.29312ms]
  I0423 16:59:41.732461 24 service_latency.go:356] Created: latency-svc-9x2kp
  I0423 16:59:41.762909 24 service_latency.go:363] Got endpoints: latency-svc-z98ps [759.933975ms]
  I0423 16:59:41.782530 24 service_latency.go:356] Created: latency-svc-npbmm
  I0423 16:59:41.802563 24 service_latency.go:363] Got endpoints: latency-svc-7nwl2 [746.257763ms]
  I0423 16:59:41.826136 24 service_latency.go:356] Created: latency-svc-zq6zk
  I0423 16:59:41.851094 24 service_latency.go:363] Got endpoints: latency-svc-5w4qx [737.029648ms]
  I0423 16:59:41.876548 24 service_latency.go:356] Created: latency-svc-dp8mr
  I0423 16:59:41.903704 24 service_latency.go:363] Got endpoints: latency-svc-nxxsr [742.973781ms]
  I0423 16:59:41.925542 24 service_latency.go:356] Created: latency-svc-5cwdv
  I0423 16:59:41.950864 24 service_latency.go:363] Got endpoints: latency-svc-8fxn4 [744.570043ms]
  I0423 16:59:41.973986 24 service_latency.go:356] Created: latency-svc-p4kpt
  I0423 16:59:42.001631 24 service_latency.go:363] Got endpoints: latency-svc-kfmjt [746.254415ms]
  I0423 16:59:42.014992 24 service_latency.go:356] Created: latency-svc-nwhm7
  I0423 16:59:42.053374 24 service_latency.go:363] Got endpoints: latency-svc-7zw5b [752.546022ms]
  I0423 16:59:42.075100 24 service_latency.go:356] Created: latency-svc-c5nxt
  I0423 16:59:42.101820 24 service_latency.go:363] Got endpoints: latency-svc-8ls56 [748.693603ms]
  I0423 16:59:42.118393 24 service_latency.go:356] Created: latency-svc-mxx2s
  I0423 16:59:42.154108 24 service_latency.go:363] Got endpoints: latency-svc-zmncc [753.821812ms]
  I0423 16:59:42.175968 24 service_latency.go:356] Created: latency-svc-x4lkh
  I0423 16:59:42.198523 24 service_latency.go:363] Got endpoints: latency-svc-7tzlc [743.974283ms]
  I0423 16:59:42.223392 24 service_latency.go:356] Created: latency-svc-tpz6w
  I0423 16:59:42.255768 24 service_latency.go:363] Got endpoints: latency-svc-69pcf [744.758417ms]
  I0423 16:59:42.275199 24 service_latency.go:356] Created: latency-svc-7lxqc
  I0423 16:59:42.300926 24 service_latency.go:363] Got endpoints: latency-svc-lxcbt [734.937586ms]
  I0423 16:59:42.318773 24 service_latency.go:356] Created: latency-svc-kj9ll
  I0423 16:59:42.355049 24 service_latency.go:363] Got endpoints: latency-svc-7bfnk [752.492892ms]
  I0423 16:59:42.375249 24 service_latency.go:356] Created: latency-svc-rklds
  I0423 16:59:42.404169 24 service_latency.go:363] Got endpoints: latency-svc-k8dmn [745.474209ms]
  I0423 16:59:42.430774 24 service_latency.go:356] Created: latency-svc-nrmnj
  I0423 16:59:42.454732 24 service_latency.go:363] Got endpoints: latency-svc-9x2kp [740.77658ms]
  I0423 16:59:42.481991 24 service_latency.go:356] Created: latency-svc-rsvj9
  I0423 16:59:42.511057 24 service_latency.go:363] Got endpoints: latency-svc-npbmm [748.060148ms]
  I0423 16:59:42.527401 24 service_latency.go:356] Created: latency-svc-76d8p
  I0423 16:59:42.556149 24 service_latency.go:363] Got endpoints: latency-svc-zq6zk [753.48246ms]
  I0423 16:59:42.586926 24 service_latency.go:356] Created: latency-svc-cbd9k
  I0423 16:59:42.604073 24 service_latency.go:363] Got endpoints: latency-svc-dp8mr [752.823436ms]
  I0423 16:59:42.625919 24 service_latency.go:356] Created: latency-svc-pfzz9
  I0423 16:59:42.653157 24 service_latency.go:363] Got endpoints: latency-svc-5cwdv [749.232518ms]
  I0423 16:59:42.674941 24 service_latency.go:356] Created: latency-svc-4f24j
  I0423 16:59:42.700204 24 service_latency.go:363] Got endpoints: latency-svc-p4kpt [749.259285ms]
  I0423 16:59:42.712139 24 service_latency.go:356] Created: latency-svc-sjfb2
  I0423 16:59:42.753690 24 service_latency.go:363] Got endpoints: latency-svc-nwhm7 [752.011895ms]
  I0423 16:59:42.778480 24 service_latency.go:356] Created: latency-svc-l4b45
  I0423 16:59:42.806647 24 service_latency.go:363] Got endpoints: latency-svc-c5nxt [753.078098ms]
  I0423 16:59:42.839565 24 service_latency.go:356] Created: latency-svc-hdfk9
  I0423 16:59:42.861768 24 service_latency.go:363] Got endpoints: latency-svc-mxx2s [759.67021ms]
  I0423 16:59:42.880405 24 service_latency.go:356] Created: latency-svc-8lpv6
  I0423 16:59:42.905356 24 service_latency.go:363] Got endpoints: latency-svc-x4lkh [750.032739ms]
  I0423 16:59:42.947881 24 service_latency.go:356] Created: latency-svc-8mk5w
  I0423 16:59:42.955292 24 service_latency.go:363] Got endpoints: latency-svc-tpz6w [756.704352ms]
  I0423 16:59:42.996845 24 service_latency.go:356] Created: latency-svc-4j47s
  I0423 16:59:43.012342 24 service_latency.go:363] Got endpoints: latency-svc-7lxqc [755.522056ms]
  I0423 16:59:43.025500 24 service_latency.go:356] Created: latency-svc-z9vnj
  I0423 16:59:43.059872 24 service_latency.go:363] Got endpoints: latency-svc-kj9ll [758.850682ms]
  I0423 16:59:43.077823 24 service_latency.go:356] Created: latency-svc-twdd2
  I0423 16:59:43.109319 24 service_latency.go:363] Got endpoints: latency-svc-rklds [754.187021ms]
  I0423 16:59:43.129229 24 service_latency.go:356] Created: latency-svc-zgsdq
  I0423 16:59:43.155273 24 service_latency.go:363] Got endpoints: latency-svc-nrmnj [750.811764ms]
  I0423 16:59:43.171825 24 service_latency.go:356] Created: latency-svc-hjshg
  I0423 16:59:43.201919 24 service_latency.go:363] Got endpoints: latency-svc-rsvj9 [747.109418ms]
  I0423 16:59:43.222836 24 service_latency.go:356] Created: latency-svc-7lj2z
  I0423 16:59:43.256529 24 service_latency.go:363] Got endpoints: latency-svc-76d8p [744.921453ms]
  I0423 16:59:43.271022 24 service_latency.go:356] Created: latency-svc-qksbx
  I0423 16:59:43.305413 24 service_latency.go:363] Got endpoints: latency-svc-cbd9k [748.878721ms]
  I0423 16:59:43.335176 24 service_latency.go:356] Created: latency-svc-t8rpg
  I0423 16:59:43.357226 24 service_latency.go:363] Got endpoints: latency-svc-pfzz9 [752.94865ms]
  I0423 16:59:43.374263 24 service_latency.go:356] Created: latency-svc-29wkk
  I0423 16:59:43.401284 24 service_latency.go:363] Got endpoints: latency-svc-4f24j [748.015358ms]
  I0423 16:59:43.423475 24 service_latency.go:356] Created: latency-svc-q5lfm
  I0423 16:59:43.460727 24 service_latency.go:363] Got endpoints: latency-svc-sjfb2 [760.150987ms]
  I0423 16:59:43.487772 24 service_latency.go:356] Created: latency-svc-qvfzn
  I0423 16:59:43.500287 24 service_latency.go:363] Got endpoints: latency-svc-l4b45 [746.434501ms]
  I0423 16:59:43.518544 24 service_latency.go:356] Created: latency-svc-rmx4q
  I0423 16:59:43.559326 24 service_latency.go:363] Got endpoints: latency-svc-hdfk9 [752.445412ms]
  I0423 16:59:43.576340 24 service_latency.go:356] Created: latency-svc-29svl
  I0423 16:59:43.602498 24 service_latency.go:363] Got endpoints: latency-svc-8lpv6 [740.338998ms]
  I0423 16:59:43.632077 24 service_latency.go:356] Created: latency-svc-pr8tb
  I0423 16:59:43.656218 24 service_latency.go:363] Got endpoints: latency-svc-8mk5w [748.988011ms]
  I0423 16:59:43.677555 24 service_latency.go:356] Created: latency-svc-bhvh2
  I0423 16:59:43.704338 24 service_latency.go:363] Got endpoints: latency-svc-4j47s [748.987879ms]
  I0423 16:59:43.726253 24 service_latency.go:356] Created: latency-svc-x9mqr
  I0423 16:59:43.756837 24 service_latency.go:363] Got endpoints: latency-svc-z9vnj [744.318493ms]
  I0423 16:59:43.773523 24 service_latency.go:356] Created: latency-svc-cr6xj
  I0423 16:59:43.806167 24 service_latency.go:363] Got endpoints: latency-svc-twdd2 [746.198483ms]
  I0423 16:59:43.832815 24 service_latency.go:356] Created: latency-svc-tnn87
  I0423 16:59:43.862641 24 service_latency.go:363] Got endpoints: latency-svc-zgsdq [753.172155ms]
  I0423 16:59:43.877405 24 service_latency.go:356] Created: latency-svc-796tk
  I0423 16:59:43.906739 24 service_latency.go:363] Got endpoints: latency-svc-hjshg [751.3957ms]
  I0423 16:59:43.925751 24 service_latency.go:356] Created: latency-svc-pjrkx
  I0423 16:59:43.949708 24 service_latency.go:363] Got endpoints: latency-svc-7lj2z [747.714964ms]
  I0423 16:59:43.965255 24 service_latency.go:356] Created: latency-svc-4xnd6
  I0423 16:59:44.000698 24 service_latency.go:363] Got endpoints: latency-svc-qksbx [744.080434ms]
  I0423 16:59:44.011709 24 service_latency.go:356] Created: latency-svc-g7vvv
  I0423 16:59:44.050289 24 service_latency.go:363] Got endpoints: latency-svc-t8rpg [744.585645ms]
  I0423 16:59:44.068653 24 service_latency.go:356] Created: latency-svc-2799g
  I0423 16:59:44.107750 24 service_latency.go:363] Got endpoints: latency-svc-29wkk [750.364294ms]
  I0423 16:59:44.126195 24 service_latency.go:356] Created: latency-svc-vc2md
  I0423 16:59:44.154120 24 service_latency.go:363] Got endpoints: latency-svc-q5lfm [752.719992ms]
  I0423 16:59:44.171124 24 service_latency.go:356] Created: latency-svc-4x9qq
  I0423 16:59:44.206220 24 service_latency.go:363] Got endpoints: latency-svc-qvfzn [745.292312ms]
  I0423 16:59:44.225921 24 service_latency.go:356] Created: latency-svc-ssjkf
  I0423 16:59:44.256266 24 service_latency.go:363] Got endpoints: latency-svc-rmx4q [754.697903ms]
  I0423 16:59:44.284202 24 service_latency.go:356] Created: latency-svc-qkj2h
  I0423 16:59:44.310949 24 service_latency.go:363] Got endpoints: latency-svc-29svl [751.550493ms]
  I0423 16:59:44.335010 24 service_latency.go:356] Created: latency-svc-2g7xt
  I0423 16:59:44.353076 24 service_latency.go:363] Got endpoints: latency-svc-pr8tb [750.371989ms]
  I0423 16:59:44.384949 24 service_latency.go:356] Created: latency-svc-fkc44
  I0423 16:59:44.403030 24 service_latency.go:363] Got endpoints: latency-svc-bhvh2 [746.731881ms]
  I0423 16:59:44.428849 24 service_latency.go:356] Created: latency-svc-2f57z
  I0423 16:59:44.469320 24 service_latency.go:363] Got endpoints: latency-svc-x9mqr [763.350768ms]
  I0423 16:59:44.488180 24 service_latency.go:356] Created: latency-svc-qrdpz
  I0423 16:59:44.509325 24 service_latency.go:363] Got endpoints: latency-svc-cr6xj [752.39591ms]
  I0423 16:59:44.522981 24 service_latency.go:356] Created: latency-svc-b5wxz
  I0423 16:59:44.550917 24 service_latency.go:363] Got endpoints: latency-svc-tnn87 [744.654505ms]
  I0423 16:59:44.568007 24 service_latency.go:356] Created: latency-svc-x9rwg
  I0423 16:59:44.603861 24 service_latency.go:363] Got endpoints: latency-svc-796tk [741.142793ms]
  I0423 16:59:44.628793 24 service_latency.go:356] Created: latency-svc-8w8h8
  I0423 16:59:44.656155 24 service_latency.go:363] Got endpoints: latency-svc-pjrkx [749.278642ms]
  I0423 16:59:44.677599 24 service_latency.go:356] Created: latency-svc-n6gnc
  I0423 16:59:44.712075 24 service_latency.go:363] Got endpoints: latency-svc-4xnd6 [762.27319ms]
  I0423 16:59:44.727354 24 service_latency.go:356] Created: latency-svc-k7dfj
  I0423 16:59:44.758227 24 service_latency.go:363] Got endpoints: latency-svc-g7vvv [757.352672ms]
  I0423 16:59:44.773408 24 service_latency.go:356] Created: latency-svc-rlbbk
  I0423 16:59:44.808770 24 service_latency.go:363] Got endpoints: latency-svc-2799g [758.397105ms]
  I0423 16:59:44.832893 24 service_latency.go:356] Created: latency-svc-fpz99
  I0423 16:59:44.860752 24 service_latency.go:363] Got endpoints: latency-svc-vc2md [752.689695ms]
  I0423 16:59:44.887787 24 service_latency.go:356] Created: latency-svc-24k4l
  I0423 16:59:44.901587 24 service_latency.go:363] Got endpoints: latency-svc-4x9qq [747.093047ms]
  I0423 16:59:44.936991 24 service_latency.go:356] Created: latency-svc-hrx4t
  I0423 16:59:44.954654 24 service_latency.go:363] Got endpoints: latency-svc-ssjkf [748.369532ms]
  I0423 16:59:44.963469 24 service_latency.go:356] Created: latency-svc-hgzqx
  I0423 16:59:44.997826 24 service_latency.go:363] Got endpoints: latency-svc-qkj2h [737.254162ms]
  I0423 16:59:45.012327 24 service_latency.go:356] Created: latency-svc-ssdxt
  I0423 16:59:45.055666 24 service_latency.go:363] Got endpoints: latency-svc-2g7xt [744.63654ms]
  I0423 16:59:45.074934 24 service_latency.go:356] Created: latency-svc-2czgw
  I0423 16:59:45.117878 24 service_latency.go:363] Got endpoints: latency-svc-fkc44 [764.672255ms]
  I0423 16:59:45.153313 24 service_latency.go:356] Created: latency-svc-6h8sr
  I0423 16:59:45.164408 24 service_latency.go:363] Got endpoints: latency-svc-2f57z [761.220591ms]
  I0423 16:59:45.179056 24 service_latency.go:356] Created: latency-svc-82bc5
  I0423 16:59:45.202675 24 service_latency.go:363] Got endpoints: latency-svc-qrdpz [733.268025ms]
  I0423 16:59:45.224592 24 service_latency.go:356] Created: latency-svc-wgpsl
  I0423 16:59:45.251913 24 service_latency.go:363] Got endpoints: latency-svc-b5wxz [742.429045ms]
  I0423 16:59:45.271812 24 service_latency.go:356] Created: latency-svc-d4924
  I0423 16:59:45.305608 24 service_latency.go:363] Got endpoints: latency-svc-x9rwg [754.540123ms]
  I0423 16:59:45.326780 24 service_latency.go:356] Created: latency-svc-vqwjn
  I0423 16:59:45.354954 24 service_latency.go:363] Got endpoints: latency-svc-8w8h8 [750.977329ms]
  I0423 16:59:45.367639 24 service_latency.go:356] Created: latency-svc-gtc72
  I0423 16:59:45.402155 24 service_latency.go:363] Got endpoints: latency-svc-n6gnc [745.807571ms]
  I0423 16:59:45.423253 24 service_latency.go:356] Created: latency-svc-pzgqq
  I0423 16:59:45.459364 24 service_latency.go:363] Got endpoints: latency-svc-k7dfj [747.131775ms]
  I0423 16:59:45.478208 24 service_latency.go:356] Created: latency-svc-24kx9
  I0423 16:59:45.502773 24 service_latency.go:363] Got endpoints: latency-svc-rlbbk [744.418525ms]
  I0423 16:59:45.518166 24 service_latency.go:356] Created: latency-svc-j5kvn
  I0423 16:59:45.553165 24 service_latency.go:363] Got endpoints: latency-svc-fpz99 [744.278498ms]
  I0423 16:59:45.567876 24 service_latency.go:356] Created: latency-svc-nq5m2
  I0423 16:59:45.600637 24 service_latency.go:363] Got endpoints: latency-svc-24k4l [739.422691ms]
  I0423 16:59:45.620360 24 service_latency.go:356] Created: latency-svc-hb7kk
  I0423 16:59:45.652897 24 service_latency.go:363] Got endpoints: latency-svc-hrx4t [751.017848ms]
  I0423 16:59:45.669863 24 service_latency.go:356] Created: latency-svc-fvllj
  I0423 16:59:45.709400 24 service_latency.go:363] Got endpoints: latency-svc-hgzqx [754.669693ms]
  I0423 16:59:45.724666 24 service_latency.go:356] Created: latency-svc-bfmbv
  I0423 16:59:45.752185 24 service_latency.go:363] Got endpoints: latency-svc-ssdxt [754.299554ms]
  I0423 16:59:45.771129 24 service_latency.go:356] Created: latency-svc-xm2h9
  I0423 16:59:45.808559 24 service_latency.go:363] Got endpoints: latency-svc-2czgw [752.331319ms]
  I0423 16:59:45.833947 24 service_latency.go:356] Created: latency-svc-6pk8m
  I0423 16:59:45.857151 24 service_latency.go:363] Got endpoints: latency-svc-6h8sr [738.997679ms]
  I0423 16:59:45.873216 24 service_latency.go:356] Created: latency-svc-6rt8j
  I0423 16:59:45.901821 24 service_latency.go:363] Got endpoints: latency-svc-82bc5 [737.247966ms]
  I0423 16:59:45.922735 24 service_latency.go:356] Created: latency-svc-s85qj
  I0423 16:59:45.956340 24 service_latency.go:363] Got endpoints: latency-svc-wgpsl [753.570301ms]
  I0423 16:59:45.976447 24 service_latency.go:356] Created: latency-svc-ll79f
  I0423 16:59:46.000324 24 service_latency.go:363] Got endpoints: latency-svc-d4924 [748.257047ms]
  I0423 16:59:46.013059 24 service_latency.go:356] Created: latency-svc-krkdx
  I0423 16:59:46.053566 24 service_latency.go:363] Got endpoints: latency-svc-vqwjn [746.282741ms]
  I0423 16:59:46.070990 24 service_latency.go:356] Created: latency-svc-vcrcc
  I0423 16:59:46.102454 24 service_latency.go:363] Got endpoints: latency-svc-gtc72 [747.387501ms]
  I0423 16:59:46.122647 24 service_latency.go:356] Created: latency-svc-2gcx2
  I0423 16:59:46.156940 24 service_latency.go:363] Got endpoints: latency-svc-pzgqq [754.653105ms]
  I0423 16:59:46.170771 24 service_latency.go:356] Created: latency-svc-fcvgq
  I0423 16:59:46.205764 24 service_latency.go:363] Got endpoints: latency-svc-24kx9 [745.972889ms]
  I0423 16:59:46.220900 24 service_latency.go:356] Created: latency-svc-tdzsd
  I0423 16:59:46.255198 24 service_latency.go:363] Got endpoints: latency-svc-j5kvn [752.335247ms]
  I0423 16:59:46.272861 24 service_latency.go:356] Created: latency-svc-njrdf
  I0423 16:59:46.304480 24 service_latency.go:363] Got endpoints: latency-svc-nq5m2 [751.17224ms]
  I0423 16:59:46.330759 24 service_latency.go:356] Created: latency-svc-4vb7c
  I0423 16:59:46.353284 24 service_latency.go:363] Got endpoints: latency-svc-hb7kk [752.565083ms]
  I0423 16:59:46.374061 24 service_latency.go:356] Created: latency-svc-q4946
  I0423 16:59:46.408050 24 service_latency.go:363] Got endpoints: latency-svc-fvllj [755.034165ms]
  I0423 16:59:46.429936 24 service_latency.go:356] Created: latency-svc-xdq2x
  I0423 16:59:46.460866 24 service_latency.go:363] Got endpoints: latency-svc-bfmbv [751.232664ms]
  I0423 16:59:46.488982 24 service_latency.go:356] Created: latency-svc-thfnd
  I0423 16:59:46.509116 24 service_latency.go:363] Got endpoints: latency-svc-xm2h9 [756.797081ms]
  I0423 16:59:46.525817 24 service_latency.go:356] Created: latency-svc-7fhrw
  I0423 16:59:46.553053 24 service_latency.go:363] Got endpoints: latency-svc-6pk8m [744.41523ms]
  I0423 16:59:46.574954 24 service_latency.go:356] Created: latency-svc-pzstw
  I0423 16:59:46.604907 24 service_latency.go:363] Got endpoints: latency-svc-6rt8j [747.661499ms]
  I0423 16:59:46.624815 24 service_latency.go:356] Created: latency-svc-vk9gk
  I0423 16:59:46.651378 24 service_latency.go:363] Got endpoints: latency-svc-s85qj [748.864381ms]
  I0423 16:59:46.678577 24 service_latency.go:356] Created: latency-svc-rk7xt
  I0423 16:59:46.709361 24 service_latency.go:363] Got endpoints: latency-svc-ll79f [752.874939ms]
  I0423 16:59:46.733430 24 service_latency.go:356] Created: latency-svc-2sgsz
  I0423 16:59:46.761019 24 service_latency.go:363] Got endpoints: latency-svc-krkdx [760.560603ms]
  I0423 16:59:46.786952 24 service_latency.go:356] Created: latency-svc-mnhgt
  I0423 16:59:46.809872 24 service_latency.go:363] Got endpoints: latency-svc-vcrcc [756.222759ms]
  I0423 16:59:46.838479 24 service_latency.go:356] Created: latency-svc-nbgpj
  I0423 16:59:46.860726 24 service_latency.go:363] Got endpoints: latency-svc-2gcx2 [757.248366ms]
  I0423 16:59:46.882609 24 service_latency.go:356] Created: latency-svc-w8fhd
  I0423 16:59:46.905918 24 service_latency.go:363] Got endpoints: latency-svc-fcvgq [748.888199ms]
  I0423 16:59:46.936774 24 service_latency.go:356] Created: latency-svc-l6bsw
  I0423 16:59:46.960345 24 service_latency.go:363] Got endpoints: latency-svc-tdzsd [753.684027ms]
  I0423 16:59:46.990043 24 service_latency.go:356] Created: latency-svc-7qbmj
  I0423 16:59:47.009239 24 service_latency.go:363] Got endpoints: latency-svc-njrdf [753.897111ms]
  I0423 16:59:47.028487 24 service_latency.go:356] Created: latency-svc-9xk9z
  I0423 16:59:47.057441 24 service_latency.go:363] Got endpoints: latency-svc-4vb7c [748.743899ms]
  I0423 16:59:47.079331 24 service_latency.go:356] Created: latency-svc-f55h2
  I0423 16:59:47.102770 24 service_latency.go:363] Got endpoints: latency-svc-q4946 [749.359247ms]
  I0423 16:59:47.129591 24 service_latency.go:356] Created: latency-svc-qbrc5
  I0423 16:59:47.160865 24 service_latency.go:363] Got endpoints: latency-svc-xdq2x [752.698598ms]
  I0423 16:59:47.181984 24 service_latency.go:356] Created: latency-svc-x56m2
  I0423 16:59:47.211882 24 service_latency.go:363] Got endpoints: latency-svc-thfnd [750.842127ms]
  I0423 16:59:47.230084 24 service_latency.go:356] Created: latency-svc-pscbh
  I0423 16:59:47.255438 24 service_latency.go:363] Got endpoints: latency-svc-7fhrw [745.847763ms]
  I0423 16:59:47.275184 24 service_latency.go:356] Created: latency-svc-zxnld
  I0423 16:59:47.304544 24 service_latency.go:363] Got endpoints: latency-svc-pzstw [750.66256ms]
  I0423 16:59:47.320306 24 service_latency.go:356] Created: latency-svc-ms2dp
  I0423 16:59:47.356173 24 service_latency.go:363] Got endpoints: latency-svc-vk9gk [750.847779ms]
  I0423 16:59:47.387548 24 service_latency.go:356] Created: latency-svc-7thx4
  I0423 16:59:47.401458 24 service_latency.go:363] Got endpoints: latency-svc-rk7xt [749.691785ms]
  I0423 16:59:47.422550 24 service_latency.go:356] Created: latency-svc-sbk66
  I0423 16:59:47.460110 24 service_latency.go:363] Got endpoints: latency-svc-2sgsz [750.256397ms]
  I0423 16:59:47.477636 24 service_latency.go:356] Created: latency-svc-drj92
  I0423 16:59:47.506075 24 service_latency.go:363] Got endpoints: latency-svc-mnhgt [744.928788ms]
  I0423 16:59:47.524824 24 service_latency.go:356] Created: latency-svc-6bglt
  I0423 16:59:47.554956 24 service_latency.go:363] Got endpoints: latency-svc-nbgpj [743.833185ms]
  I0423 16:59:47.570544 24 service_latency.go:356] Created: latency-svc-h6wcb
  I0423 16:59:47.605004 24 service_latency.go:363] Got endpoints: latency-svc-w8fhd [743.993136ms]
  I0423 16:59:47.627538 24 service_latency.go:356] Created: latency-svc-pbxdr
  I0423 16:59:47.656509 24 service_latency.go:363] Got endpoints: latency-svc-l6bsw [747.534836ms]
  I0423 16:59:47.674346 24 service_latency.go:356] Created: latency-svc-tc2j4
  I0423 16:59:47.701265 24 service_latency.go:363] Got endpoints: latency-svc-7qbmj [740.757387ms]
  I0423 16:59:47.720671 24 service_latency.go:356] Created: latency-svc-k2k6m
  I0423 16:59:47.753395 24 service_latency.go:363] Got endpoints: latency-svc-9xk9z [744.059701ms]
  I0423 16:59:47.804216 24 service_latency.go:363] Got endpoints: latency-svc-f55h2 [746.656448ms]
  I0423 16:59:47.863142 24 service_latency.go:363] Got endpoints: latency-svc-qbrc5 [760.135705ms]
  I0423 16:59:47.906156 24 service_latency.go:363] Got endpoints: latency-svc-x56m2 [745.125414ms]
  I0423 16:59:47.956527 24 service_latency.go:363] Got endpoints: latency-svc-pscbh [744.157304ms]
  I0423 16:59:48.003711 24 service_latency.go:363] Got endpoints: latency-svc-zxnld [748.162205ms]
  I0423 16:59:48.048007 24 service_latency.go:363] Got endpoints: latency-svc-ms2dp [743.085085ms]
  I0423 16:59:48.104670 24 service_latency.go:363] Got endpoints: latency-svc-7thx4 [748.406753ms]
  I0423 16:59:48.151876 24 service_latency.go:363] Got endpoints: latency-svc-sbk66 [750.256529ms]
  I0423 16:59:48.201337 24 service_latency.go:363] Got endpoints: latency-svc-drj92 [741.084585ms]
  I0423 16:59:48.256782 24 service_latency.go:363] Got endpoints: latency-svc-6bglt [750.470064ms]
  I0423 16:59:48.306909 24 service_latency.go:363] Got endpoints: latency-svc-h6wcb [751.758548ms]
  I0423 16:59:48.353729 24 service_latency.go:363] Got endpoints: latency-svc-pbxdr [747.517526ms]
  I0423 16:59:48.405279 24 service_latency.go:363] Got endpoints: latency-svc-tc2j4 [748.611655ms]
  I0423 16:59:48.453367 24 service_latency.go:363] Got endpoints: latency-svc-k2k6m [752.028209ms]
  I0423 16:59:48.453672 24 service_latency.go:114] Latencies: [38.058526ms 62.826541ms 63.439975ms 64.857845ms 79.098068ms 79.902324ms 89.638135ms 101.393806ms 110.044144ms 114.27232ms 117.620254ms 117.926318ms 123.043014ms 123.91427ms 128.079485ms 128.782738ms 132.935732ms 139.069701ms 151.272004ms 153.911372ms 167.936388ms 187.389856ms 198.233105ms 203.54246ms 208.402965ms 211.478734ms 211.586448ms 221.709699ms 222.94781ms 235.264926ms 237.508536ms 247.273623ms 247.293187ms 255.197002ms 258.527911ms 272.568459ms 276.024665ms 276.65872ms 293.513446ms 305.349761ms 305.626281ms 305.677505ms 306.595771ms 360.021686ms 379.894357ms 423.224585ms 445.437179ms 477.869667ms 510.241385ms 546.473034ms 554.893639ms 608.27895ms 651.212867ms 672.540178ms 688.270593ms 688.578467ms 690.542301ms 698.871652ms 733.268025ms 734.937586ms 737.029648ms 737.247966ms 737.254162ms 738.997679ms 739.422691ms 740.338998ms 740.757387ms 740.77658ms 741.084585ms 741.142793ms 742.429045ms 742.973781ms 743.085085ms 743.833185ms 743.974283ms 743.993136ms 744.059701ms 744.080434ms 744.157304ms 744.278498ms 744.318493ms 744.41523ms 744.418525ms 744.570043ms 744.585645ms 744.63654ms 744.654505ms 744.758417ms 744.921453ms 744.928788ms 744.9689ms 745.125414ms 745.292312ms 745.474209ms 745.663289ms 745.807571ms 745.847763ms 745.972889ms 746.198483ms 746.254415ms 746.257763ms 746.282741ms 746.434501ms 746.656448ms 746.731881ms 747.093047ms 747.109418ms 747.131775ms 747.343865ms 747.387501ms 747.517526ms 747.534836ms 747.661499ms 747.714964ms 748.015358ms 748.060148ms 748.162205ms 748.257047ms 748.369532ms 748.406753ms 748.611655ms 748.693603ms 748.743899ms 748.864381ms 748.878721ms 748.888199ms 748.987879ms 748.988011ms 749.232518ms 749.259285ms 749.278642ms 749.359247ms 749.691785ms 750.032739ms 750.256397ms 750.256529ms 750.364294ms 750.371989ms 750.470064ms 750.66256ms 750.811764ms 750.842127ms 750.847779ms 750.977329ms 751.017848ms 751.17224ms 751.232664ms 751.3957ms 751.550493ms 751.758548ms 752.011895ms 752.028209ms 752.331319ms 752.335247ms 752.39591ms 752.445412ms 752.492892ms 752.546022ms 752.565083ms 752.689695ms 752.698598ms 752.719992ms 752.823436ms 752.874939ms 752.94865ms 753.078098ms 753.172155ms 753.48246ms 753.534561ms 753.570301ms 753.684027ms 753.821812ms 753.897111ms 754.187021ms 754.299554ms 754.540123ms 754.653105ms 754.669693ms 754.697903ms 755.034165ms 755.522056ms 756.222759ms 756.29312ms 756.704352ms 756.797081ms 757.248366ms 757.352672ms 758.397105ms 758.850682ms 759.67021ms 759.933975ms 760.135705ms 760.150987ms 760.560603ms 761.220591ms 762.27319ms 763.350768ms 764.672255ms 766.463013ms 922.00576ms]
  I0423 16:59:48.453711 24 service_latency.go:118] 50 %ile: 746.257763ms
  I0423 16:59:48.453732 24 service_latency.go:119] 90 %ile: 755.522056ms
  I0423 16:59:48.453751 24 service_latency.go:120] 99 %ile: 766.463013ms
  I0423 16:59:48.453769 24 service_latency.go:121] Total sample count: 200
  I0423 16:59:48.453934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6894" for this suite. @ 04/23/25 16:59:48.471
• [10.811 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/23/25 16:59:48.484
  I0423 16:59:48.484935 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 16:59:48.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:48.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:48.518
  STEP: Creating configMap with name cm-test-opt-del-02da13f3-e083-4eb9-8f8d-8941882bbde5 @ 04/23/25 16:59:48.573
  STEP: Creating configMap with name cm-test-opt-upd-cfd092f5-e3c8-4c97-bc0b-f2fb05c06a97 @ 04/23/25 16:59:48.581
  STEP: Creating the pod @ 04/23/25 16:59:48.589
  STEP: Deleting configmap cm-test-opt-del-02da13f3-e083-4eb9-8f8d-8941882bbde5 @ 04/23/25 16:59:50.679
  STEP: Updating configmap cm-test-opt-upd-cfd092f5-e3c8-4c97-bc0b-f2fb05c06a97 @ 04/23/25 16:59:50.701
  STEP: Creating configMap with name cm-test-opt-create-5961c057-4c84-4f2a-8aba-6057a3679bfd @ 04/23/25 16:59:50.71
  STEP: waiting to observe update in volume @ 04/23/25 16:59:50.722
  I0423 16:59:52.783011 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7520" for this suite. @ 04/23/25 16:59:52.791
• [4.318 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 04/23/25 16:59:52.803
  I0423 16:59:52.803374 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 16:59:52.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 16:59:52.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 16:59:52.862
  STEP: creating Agnhost RC @ 04/23/25 16:59:52.871
  I0423 16:59:52.871083 24 kubectl.go:1544] namespace kubectl-7018
  I0423 16:59:52.871266 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7018 create -f -'
  I0423 16:59:53.146546 24 builder.go:146] stderr: ""
  I0423 16:59:53.146633 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/23/25 16:59:53.146
  I0423 16:59:54.152036 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:59:54.152076 24 framework.go:733] Found 0 / 1
  I0423 16:59:55.155320 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:59:55.155402 24 framework.go:733] Found 1 / 1
  I0423 16:59:55.155490 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0423 16:59:55.162792 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0423 16:59:55.162859 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0423 16:59:55.162873 24 kubectl.go:1551] wait on agnhost-primary startup in kubectl-7018 
  I0423 16:59:55.162925 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7018 logs agnhost-primary-j8cp8 agnhost-primary'
  I0423 16:59:55.385989 24 builder.go:146] stderr: ""
  I0423 16:59:55.386068 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/23/25 16:59:55.386
  I0423 16:59:55.386339 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7018 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0423 16:59:55.652007 24 builder.go:146] stderr: ""
  I0423 16:59:55.652051 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I0423 16:59:55.657690 24 utils.go:1203] Service rm2 in namespace kubectl-7018 found.
  I0423 16:59:57.663359 24 kubectl.go:1559] Get endpoints failed (interval 2s): endpoints "rm2" not found
  I0423 16:59:59.660726 24 kubectl.go:1559] Get endpoints failed (interval 2s): endpoints "rm2" not found
  I0423 17:00:01.663823 24 kubectl.go:1559] Get endpoints failed (interval 2s): endpoints "rm2" not found
  I0423 17:00:03.663891 24 kubectl.go:1559] Get endpoints failed (interval 2s): endpoints "rm2" not found
  I0423 17:00:05.663769 24 kubectl.go:1559] Get endpoints failed (interval 2s): endpoints "rm2" not found
  STEP: exposing service @ 04/23/25 17:00:07.67
  I0423 17:00:07.670791 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-7018 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0423 17:00:07.845000 24 builder.go:146] stderr: ""
  I0423 17:00:07.845075 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I0423 17:00:07.852391 24 utils.go:1203] Service rm3 in namespace kubectl-7018 found.
  I0423 17:00:09.870020 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7018" for this suite. @ 04/23/25 17:00:09.878
• [17.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 04/23/25 17:00:09.888
  I0423 17:00:09.888136 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 17:00:09.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:00:09.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:00:09.923
  STEP: Counting existing ResourceQuota @ 04/23/25 17:00:09.929
  STEP: Creating a ResourceQuota @ 04/23/25 17:00:14.938
  STEP: Ensuring resource quota status is calculated @ 04/23/25 17:00:14.949
  I0423 17:00:16.956739 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4601" for this suite. @ 04/23/25 17:00:16.962
• [7.098 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/23/25 17:00:16.985
  I0423 17:00:16.986053 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename server-version @ 04/23/25 17:00:16.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:00:17.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:00:17.012
  STEP: Request ServerVersion @ 04/23/25 17:00:17.019
  STEP: Confirm major version @ 04/23/25 17:00:17.021
  I0423 17:00:17.022180 24 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/23/25 17:00:17.022
  I0423 17:00:17.022442 24 server_version.go:58] cleanMinorVersion: 32
  I0423 17:00:17.024177 24 server_version.go:62] Minor version: 32
  I0423 17:00:17.024769 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2565" for this suite. @ 04/23/25 17:00:17.064
• [0.089 seconds]
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 04/23/25 17:00:17.075
  I0423 17:00:17.075184 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 17:00:17.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:00:17.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:00:17.116
  STEP: Creating a test headless service @ 04/23/25 17:00:17.125
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8704.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8704.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-8704.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-8704.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 121.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.121_udp@PTR;check="$$(dig +tcp +noall +answer +search 121.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.121_tcp@PTR;sleep 1; done
   @ 04/23/25 17:00:17.163
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8704.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8704.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8704.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8704.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8704.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 121.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.121_udp@PTR;check="$$(dig +tcp +noall +answer +search 121.0.32.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.32.0.121_tcp@PTR;sleep 1; done
   @ 04/23/25 17:00:17.163
  STEP: creating a pod to probe DNS @ 04/23/25 17:00:17.163
  STEP: submitting the pod to kubernetes @ 04/23/25 17:00:17.163
  STEP: retrieving the pod @ 04/23/25 17:00:19.226
  STEP: looking for the results for each expected name from probers @ 04/23/25 17:00:19.238
  I0423 17:00:19.244297 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.249657 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.255586 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.262419 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.277778 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.280669 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.284005 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.286686 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:19.304679 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_udp@dns-test-service.dns-8704.svc.cluster.local jessie_tcp@dns-test-service.dns-8704.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:19.310967 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:19.316580 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:19.322072 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:24.247796 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.254421 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.260107 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.266822 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.290542 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.297991 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.305149 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.316107 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:24.337849 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_udp@dns-test-service.dns-8704.svc.cluster.local jessie_tcp@dns-test-service.dns-8704.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:24.346741 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:24.353585 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:24.359031 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:29.241761 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.246699 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.250235 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.254647 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.268294 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.271882 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.275155 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.277749 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:29.291744 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_udp@dns-test-service.dns-8704.svc.cluster.local jessie_tcp@dns-test-service.dns-8704.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:29.299639 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:29.305888 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:29.310642 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:34.248058 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.253273 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.263618 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.268745 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.291885 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.295522 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.299632 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.303819 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:34.315102 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_udp@dns-test-service.dns-8704.svc.cluster.local jessie_tcp@dns-test-service.dns-8704.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:34.320753 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:34.325872 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:34.331493 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:39.246351 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.253684 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.258672 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.262178 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.278843 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.281343 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.283790 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.286610 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:39.296862 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_udp@dns-test-service.dns-8704.svc.cluster.local jessie_tcp@dns-test-service.dns-8704.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:39.301689 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:39.307139 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:39.312674 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:44.247015 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.252543 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.258054 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.265316 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.293096 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.302597 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.310688 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.313966 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:44.327584 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_udp@dns-test-service.dns-8704.svc.cluster.local jessie_tcp@dns-test-service.dns-8704.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:44.334058 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:44.340685 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:44.349283 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:49.244291 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:49.247733 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:49.252224 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:49.257763 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local from pod dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49: the server could not find the requested resource (get pods dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49)
  I0423 17:00:49.297335 24 dns_common.go:506] Lookups using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 failed for: [agnhost_udp@dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@dns-test-service.dns-8704.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-8704.svc.cluster.local]

  I0423 17:00:49.305477 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:00:49.310890 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:00:49.319234 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0423 17:00:54.320566 24 dns_common.go:546] DNS probes using dns-8704/dns-test-8ccc6c10-467e-4083-a5d5-82af139bbf49 succeeded

  STEP: deleting the pod @ 04/23/25 17:00:54.32
  STEP: deleting the test service @ 04/23/25 17:00:54.353
  STEP: deleting the test headless service @ 04/23/25 17:00:54.434
  I0423 17:00:54.454984 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8704" for this suite. @ 04/23/25 17:00:54.463
• [37.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/23/25 17:00:54.473
  I0423 17:00:54.473325 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:00:54.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:00:54.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:00:54.491
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-937bc7a8-0bf8-4aa0-ba30-8e2180cd66bb @ 04/23/25 17:00:54.564
  STEP: Creating the pod @ 04/23/25 17:00:54.57
  STEP: Updating configmap projected-configmap-test-upd-937bc7a8-0bf8-4aa0-ba30-8e2180cd66bb @ 04/23/25 17:00:56.619
  STEP: waiting to observe update in volume @ 04/23/25 17:00:56.627
  I0423 17:00:58.648897 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5645" for this suite. @ 04/23/25 17:00:58.658
• [4.197 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/23/25 17:00:58.671
  I0423 17:00:58.671178 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:00:58.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:00:58.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:00:58.711
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:00:58.717
  STEP: Saw pod success @ 04/23/25 17:01:02.756
  I0423 17:01:02.761730 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-b73945c3-25d7-4486-a1de-64602118e76e container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:01:02.771
  I0423 17:01:02.806121 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5659" for this suite. @ 04/23/25 17:01:02.812
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 04/23/25 17:01:02.823
  I0423 17:01:02.823547 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 17:01:02.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:02.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:02.854
  STEP: Creating a test namespace @ 04/23/25 17:01:02.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:02.881
  STEP: Creating a pod in the namespace @ 04/23/25 17:01:02.888
  STEP: Waiting for the pod to have running status @ 04/23/25 17:01:02.899
  STEP: Deleting the namespace @ 04/23/25 17:01:04.92
  STEP: Waiting for the namespace to be removed. @ 04/23/25 17:01:04.935
  STEP: Recreating the namespace @ 04/23/25 17:01:15.941
  STEP: Verifying there are no pods in the namespace @ 04/23/25 17:01:15.959
  I0423 17:01:15.966355 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1231" for this suite. @ 04/23/25 17:01:15.98
  STEP: Destroying namespace "nsdeletetest-9152" for this suite. @ 04/23/25 17:01:15.998
  I0423 17:01:16.005334 24 framework.go:370] Namespace nsdeletetest-9152 was already deleted
  STEP: Destroying namespace "nsdeletetest-7982" for this suite. @ 04/23/25 17:01:16.005
• [13.197 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 04/23/25 17:01:16.021
  I0423 17:01:16.021130 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 17:01:16.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:16.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:16.055
  STEP: creating service multi-endpoint-test in namespace services-5900 @ 04/23/25 17:01:16.062
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5900 to expose endpoints map[] @ 04/23/25 17:01:16.085
  I0423 17:01:16.110625 24 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5900 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5900 @ 04/23/25 17:01:16.11
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5900 to expose endpoints map[pod1:[100]] @ 04/23/25 17:01:18.14
  I0423 17:01:18.155901 24 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5900 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5900 @ 04/23/25 17:01:18.155
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5900 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/23/25 17:01:20.179
  I0423 17:01:20.196341 24 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5900 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/23/25 17:01:20.196
  I0423 17:01:20.196502 24 resource.go:361] Creating new exec pod
  I0423 17:01:23.216749 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5900 exec execpodqj2f9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0423 17:01:23.427017 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.32.0.104) 80 port [tcp/http] succeeded!\n"
  I0423 17:01:23.427105 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:01:23.427239 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5900 exec execpodqj2f9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.104 80'
  I0423 17:01:23.641217 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.104 80\nConnection to 10.32.0.104 80 port [tcp/http] succeeded!\n"
  I0423 17:01:23.641680 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:01:23.641851 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5900 exec execpodqj2f9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0423 17:01:23.876444 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.32.0.104) 81 port [tcp/*] succeeded!\n"
  I0423 17:01:23.876610 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:01:23.876761 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-5900 exec execpodqj2f9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.104 81'
  I0423 17:01:24.083662 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.104 81\nConnection to 10.32.0.104 81 port [tcp/*] succeeded!\n"
  I0423 17:01:24.083733 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5900 @ 04/23/25 17:01:24.083
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5900 to expose endpoints map[pod2:[101]] @ 04/23/25 17:01:24.114
  I0423 17:01:24.160124 24 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5900 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5900 @ 04/23/25 17:01:24.16
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5900 to expose endpoints map[] @ 04/23/25 17:01:24.237
  I0423 17:01:24.278585 24 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-5900 exposes endpoints map[]
  I0423 17:01:24.340807 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5900" for this suite. @ 04/23/25 17:01:24.358
• [8.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 04/23/25 17:01:24.372
  I0423 17:01:24.372916 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 17:01:24.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:24.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:24.397
  STEP: Creating a job @ 04/23/25 17:01:24.402
  STEP: Ensuring active pods == parallelism @ 04/23/25 17:01:24.412
  STEP: delete a job @ 04/23/25 17:01:28.43
  STEP: deleting Job.batch foo in namespace job-7447, will wait for the garbage collector to delete the pods @ 04/23/25 17:01:28.431
  I0423 17:01:28.507735 24 resources.go:139] Deleting Job.batch foo took: 21.072548ms
  I0423 17:01:28.609029 24 resources.go:163] Terminating Job.batch foo pods took: 101.290458ms
  STEP: Ensuring job was deleted @ 04/23/25 17:01:29.71
  I0423 17:01:29.720216 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7447" for this suite. @ 04/23/25 17:01:29.728
• [5.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/23/25 17:01:29.749
  I0423 17:01:29.749812 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 17:01:29.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:29.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:29.776
  I0423 17:01:29.780531 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 17:01:32.958857 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3093" for this suite. @ 04/23/25 17:01:32.965
• [3.235 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/23/25 17:01:32.985
  I0423 17:01:32.985283 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:01:32.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:33.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:33.014
  STEP: Creating the pod @ 04/23/25 17:01:33.021
  I0423 17:01:35.579549 24 pod_client.go:173] Successfully updated pod "annotationupdate2a1eee91-a083-4c64-aef0-4ba77cbc8aa6"
  I0423 17:01:37.601317 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4113" for this suite. @ 04/23/25 17:01:37.607
• [4.643 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 04/23/25 17:01:37.628
  I0423 17:01:37.629028 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename csinodes @ 04/23/25 17:01:37.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:37.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:37.666
  STEP: Creating initial csiNode "e2e-csinode-6czx7" @ 04/23/25 17:01:37.671
  STEP: Getting initial csiNode "e2e-csinode-6czx7" @ 04/23/25 17:01:37.679
  STEP: Patching initial csiNode: "e2e-csinode-6czx7" @ 04/23/25 17:01:37.683
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-6czx7=patched" @ 04/23/25 17:01:37.694
  STEP: Delete initial csiNode: "e2e-csinode-6czx7" @ 04/23/25 17:01:37.698
  STEP: Confirm deletion of csiNode "e2e-csinode-6czx7" @ 04/23/25 17:01:37.707
  STEP: Creating replacement csiNode "e2e-csinode-prf7p" @ 04/23/25 17:01:37.713
  STEP: Getting replacement csiNode "e2e-csinode-prf7p" @ 04/23/25 17:01:37.719
  STEP: Updating replacement csiNode "e2e-csinode-prf7p" @ 04/23/25 17:01:37.723
  STEP: DeleteCollection of CSINodes with "e2e-csinode-prf7p=updated" label @ 04/23/25 17:01:37.738
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-prf7p=updated" @ 04/23/25 17:01:37.748
  I0423 17:01:37.753606 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-3934" for this suite. @ 04/23/25 17:01:37.758
• [0.139 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/23/25 17:01:37.768
  I0423 17:01:37.768166 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 17:01:37.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:37.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:37.802
  STEP: create the container @ 04/23/25 17:01:37.807
  W0423 17:01:37.824641      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/23/25 17:01:37.825
  STEP: get the container status @ 04/23/25 17:01:41.858
  STEP: the container should be terminated @ 04/23/25 17:01:41.863
  STEP: the termination message should be set @ 04/23/25 17:01:41.863
  I0423 17:01:41.863555 24 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/23/25 17:01:41.863
  I0423 17:01:41.894705 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8471" for this suite. @ 04/23/25 17:01:41.901
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 04/23/25 17:01:41.913
  I0423 17:01:41.914186 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 17:01:41.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:01:41.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:01:41.95
  STEP: Creating resourceQuota "e2e-rq-status-hrtpn" @ 04/23/25 17:01:41.96
  I0423 17:01:41.979718 24 resource_quota.go:1102] Resource quota "e2e-rq-status-hrtpn" reports spec: hard cpu limit of 500m
  I0423 17:01:41.979813 24 resource_quota.go:1104] Resource quota "e2e-rq-status-hrtpn" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-hrtpn" /status @ 04/23/25 17:01:41.979
  STEP: Confirm /status for "e2e-rq-status-hrtpn" resourceQuota via watch @ 04/23/25 17:01:41.994
  I0423 17:01:41.997915 24 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-hrtpn" in namespace "resourcequota-8228" with hard status: v1.ResourceList(nil)
  I0423 17:01:41.998038 24 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-hrtpn" in namespace "resourcequota-8228" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0423 17:01:41.998068 24 resource_quota.go:1141] ResourceQuota "e2e-rq-status-hrtpn" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/23/25 17:01:42.003
  I0423 17:01:42.017592 24 resource_quota.go:1152] Resource quota "e2e-rq-status-hrtpn" reports spec: hard cpu limit of 1
  I0423 17:01:42.017753 24 resource_quota.go:1153] Resource quota "e2e-rq-status-hrtpn" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-hrtpn" /status @ 04/23/25 17:01:42.017
  STEP: Confirm /status for "e2e-rq-status-hrtpn" resourceQuota via watch @ 04/23/25 17:01:42.027
  I0423 17:01:42.031234 24 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-hrtpn" in namespace "resourcequota-8228" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0423 17:01:42.031342 24 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-hrtpn" in namespace "resourcequota-8228" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0423 17:01:42.032249 24 resource_quota.go:1185] ResourceQuota "e2e-rq-status-hrtpn" /status was patched
  STEP: Get "e2e-rq-status-hrtpn" /status @ 04/23/25 17:01:42.032
  I0423 17:01:42.041828 24 resource_quota.go:1196] Resourcequota "e2e-rq-status-hrtpn" reports status: hard cpu of 1
  I0423 17:01:42.041942 24 resource_quota.go:1198] Resourcequota "e2e-rq-status-hrtpn" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-hrtpn" /status before checking Spec is unchanged @ 04/23/25 17:01:42.048
  I0423 17:01:42.074736 24 resource_quota.go:1218] Resourcequota "e2e-rq-status-hrtpn" reports status: hard cpu of 2
  I0423 17:01:42.074827 24 resource_quota.go:1220] Resourcequota "e2e-rq-status-hrtpn" reports status: hard memory of 2Gi
  I0423 17:01:42.079301 24 resource_quota.go:1229] observed resourceQuota "e2e-rq-status-hrtpn" in namespace "resourcequota-8228" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0423 17:01:42.079549 24 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-hrtpn" in namespace "resourcequota-8228" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0423 17:01:42.084643 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690d140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690d170), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690d1a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:01:47.084213 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004492bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004492c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004492c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:01:52.085771 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004492090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044920c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044920f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:01:57.086067 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0064f4078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0064f40a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0064f40d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:02.085537 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0064f41b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0064f41e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0064f4210), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:07.086046 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c0a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c0d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:12.086661 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c210), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c270), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:17.086688 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c3c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:22.085063 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004492270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044922a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044922d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:27.085987 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c4e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c588), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:32.087186 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c660), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c690), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c6c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:37.086620 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-hrtpn" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-hrtpn", GenerateName:"", Namespace:"resourcequota-8228", SelfLink:"", UID:"5f78485d-7f35-4b34-a4a1-a5d99be0decc", ResourceVersion:"29511", Generation:0, CreationTimestamp:time.Date(2025, time.April, 23, 17, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-hrtpn"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c7e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 23, 17, 1, 42, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00690c840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0423 17:02:42.089560 24 resource_quota.go:1260] ResourceQuota "e2e-rq-status-hrtpn" Spec was unchanged and /status reset
  I0423 17:02:42.089957 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8228" for this suite. @ 04/23/25 17:02:42.098
• [60.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/23/25 17:02:42.112
  I0423 17:02:42.112085 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 17:02:42.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:02:42.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:02:42.151
  I0423 17:02:44.184227 24 delete.go:62] Deleting pod "var-expansion-390bf30b-2646-45fe-b75c-02f85231d3a8" in namespace "var-expansion-8872"
  I0423 17:02:44.194088 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-390bf30b-2646-45fe-b75c-02f85231d3a8" to be fully deleted
  I0423 17:02:48.233619 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8872" for this suite. @ 04/23/25 17:02:48.239
• [6.134 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 04/23/25 17:02:48.246
  I0423 17:02:48.246775 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 17:02:48.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:02:48.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:02:48.273
  STEP: Creating pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877 @ 04/23/25 17:02:48.278
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 17:02:50.314
  I0423 17:02:50.317836 24 container_probe.go:1749] Initial restart count of pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd is 0
  I0423 17:02:50.321391 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:02:52.326912 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:02:54.333737 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:02:56.339401 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:02:58.345672 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:00.352425 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:02.360163 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:04.366654 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:06.372034 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:08.379492 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:10.384628 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:12.391138 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:14.395948 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:16.400731 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:18.406057 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:20.411628 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:22.420054 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:24.426142 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:26.433076 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:28.439206 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:30.444080 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:32.448555 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:34.456207 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:36.462507 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:38.471430 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:40.480166 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:42.488505 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:44.494068 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:46.500364 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:48.505610 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:50.515036 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:52.527242 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:54.536722 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:56.541393 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:03:58.546308 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:00.553839 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:02.559769 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:04.567731 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:06.574598 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:08.581892 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:10.592365 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:12.601724 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:14.610001 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:16.614992 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:18.622488 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:20.629057 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:22.639475 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:24.644053 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:26.648968 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:28.654863 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:30.661929 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:32.666228 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:34.672618 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:36.678477 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:38.686570 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:40.692377 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:42.698658 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:44.704349 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:46.710962 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:48.717587 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:50.723812 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:52.730790 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:54.736774 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:56.742811 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:04:58.751937 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:00.759286 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:02.766526 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:04.771420 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:06.778617 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:08.784664 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:10.793454 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:12.801785 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:14.809573 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:16.816798 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:18.822327 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:20.830133 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:22.843039 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:24.851688 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:26.857664 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:28.864643 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:30.870246 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:32.876757 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:34.887248 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:36.894113 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:38.900314 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:40.908303 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:42.918372 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:44.927010 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:46.937703 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:48.944356 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:50.950943 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:52.957520 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:54.963272 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:56.968775 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:05:58.975321 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:00.980384 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:02.987187 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:04.996237 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:07.004633 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:09.014711 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:11.021934 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:13.029240 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:15.036568 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:17.044214 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:19.053541 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:21.060250 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:23.066906 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:25.076350 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:27.083015 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:29.090097 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:31.096603 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:33.102384 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:35.109191 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:37.117965 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:39.123001 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:41.130789 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:43.134971 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:45.140866 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:47.148272 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  I0423 17:06:49.153329 24 container_probe.go:1759] Get pod test-grpc-20826e47-6d04-4972-a15a-6e4daa228cbd in namespace container-probe-7877
  STEP: deleting the pod @ 04/23/25 17:06:51.154
  I0423 17:06:51.179247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7877" for this suite. @ 04/23/25 17:06:51.188
• [242.960 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 04/23/25 17:06:51.206
  I0423 17:06:51.206990 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/23/25 17:06:51.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:06:51.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:06:51.243
  STEP: Setting up the test @ 04/23/25 17:06:51.247
  STEP: Creating hostNetwork=false pod @ 04/23/25 17:06:51.248
  STEP: Creating hostNetwork=true pod @ 04/23/25 17:06:53.281
  STEP: Running the test @ 04/23/25 17:06:55.322
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/23/25 17:06:55.322
  I0423 17:06:55.322788 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.322826 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.322905 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0423 17:06:55.416994 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:55.417091 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.417119 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.418730 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0423 17:06:55.500464 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:55.500535 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.500561 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.500657 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0423 17:06:55.575290 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:55.575374 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.575399 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.575966 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0423 17:06:55.667921 24 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/23/25 17:06:55.668
  I0423 17:06:55.668062 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.668091 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.668216 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0423 17:06:55.764708 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:55.764756 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.764781 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.764835 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0423 17:06:55.832511 24 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/23/25 17:06:55.832
  I0423 17:06:55.833088 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.833294 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.833785 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0423 17:06:55.935476 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:55.935589 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:55.935612 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:55.935699 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0423 17:06:56.027239 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:56.027330 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:56.027382 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:56.027589 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0423 17:06:56.125105 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:56.125214 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6830 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:06:56.125240 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:06:56.125425 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6830/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0423 17:06:56.218616 24 exec_util.go:108] Exec stderr: ""
  I0423 17:06:56.218934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6830" for this suite. @ 04/23/25 17:06:56.227
• [5.041 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 04/23/25 17:06:56.248
  I0423 17:06:56.248394 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:06:56.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:06:56.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:06:56.288
  STEP: Creating a pod to test downward api env vars @ 04/23/25 17:06:56.297
  STEP: Saw pod success @ 04/23/25 17:07:00.346
  I0423 17:07:00.352003 24 output.go:207] Trying to get logs from node worker01 pod downward-api-417c25ff-c475-45b5-a859-c95d74e3d460 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 17:07:00.387
  I0423 17:07:00.425784 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1924" for this suite. @ 04/23/25 17:07:00.436
• [4.203 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/23/25 17:07:00.451
  I0423 17:07:00.451602 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 17:07:00.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:00.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:00.485
  STEP: creating the pod @ 04/23/25 17:07:00.492
  STEP: submitting the pod to kubernetes @ 04/23/25 17:07:00.492
  W0423 17:07:00.513672      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/23/25 17:07:02.539
  STEP: updating the pod @ 04/23/25 17:07:02.545
  I0423 17:07:03.060710 24 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-b12e2672-824f-4f54-a6cc-c77afc786baa"
  I0423 17:07:07.078365 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3946" for this suite. @ 04/23/25 17:07:07.084
• [6.645 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/23/25 17:07:07.096
  I0423 17:07:07.096061 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:07:07.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:07.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:07.135
  STEP: Creating configMap that has name configmap-test-emptyKey-2fb49a48-aeec-4c1c-bb1c-7d988b6c1b07 @ 04/23/25 17:07:07.141
  I0423 17:07:07.145866 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8177" for this suite. @ 04/23/25 17:07:07.186
• [0.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/23/25 17:07:07.199
  I0423 17:07:07.199984 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 17:07:07.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:07.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:07.232
  STEP: Creating projection with secret that has name secret-emptykey-test-0119d856-07c9-4409-a571-87d3f90446b2 @ 04/23/25 17:07:07.24
  I0423 17:07:07.246010 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5640" for this suite. @ 04/23/25 17:07:07.286
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/23/25 17:07:07.298
  I0423 17:07:07.298260 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:07:07.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:07.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:07.331
  I0423 17:07:07.379292 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-153" for this suite. @ 04/23/25 17:07:07.385
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/23/25 17:07:07.391
  I0423 17:07:07.391957 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 17:07:07.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:07.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:07.413
  STEP: creating the pod @ 04/23/25 17:07:07.416
  STEP: waiting for pod running @ 04/23/25 17:07:07.426
  STEP: creating a file in subpath @ 04/23/25 17:07:09.437
  I0423 17:07:09.442096 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3991 PodName:var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:07:09.442140 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:07:09.442327 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-3991/pods/var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/23/25 17:07:09.512
  I0423 17:07:09.516950 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3991 PodName:var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:07:09.516988 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:07:09.517082 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/var-expansion-3991/pods/var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/23/25 17:07:09.576
  I0423 17:07:10.101895 24 pod_client.go:173] Successfully updated pod "var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7"
  STEP: waiting for annotated pod running @ 04/23/25 17:07:10.101
  STEP: deleting the pod gracefully @ 04/23/25 17:07:10.113
  I0423 17:07:10.114574 24 delete.go:62] Deleting pod "var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7" in namespace "var-expansion-3991"
  I0423 17:07:10.130934 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-bb7d01ab-ad48-46d9-bca2-26f835ecc0b7" to be fully deleted
  I0423 17:07:44.255535 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3991" for this suite. @ 04/23/25 17:07:44.262
• [36.880 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 04/23/25 17:07:44.272
  I0423 17:07:44.272198 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:07:44.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:44.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:44.313
  STEP: Setting up server cert @ 04/23/25 17:07:44.345
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:07:45.059
  STEP: Deploying the webhook pod @ 04/23/25 17:07:45.065
  STEP: Wait for the deployment to be ready @ 04/23/25 17:07:45.077
  I0423 17:07:45.086634 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 17:07:47.104
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:07:47.119
  I0423 17:07:48.119663 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/23/25 17:07:48.129
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/23/25 17:07:48.157
  STEP: Creating a configMap that should not be mutated @ 04/23/25 17:07:48.169
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/23/25 17:07:48.188
  STEP: Creating a configMap that should be mutated @ 04/23/25 17:07:48.2
  I0423 17:07:48.297622 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-260" for this suite. @ 04/23/25 17:07:48.305
  STEP: Destroying namespace "webhook-markers-3038" for this suite. @ 04/23/25 17:07:48.317
• [4.064 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/23/25 17:07:48.336
  I0423 17:07:48.336816 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 17:07:48.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:48.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:48.361
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/23/25 17:07:48.364
  STEP: Saw pod success @ 04/23/25 17:07:52.388
  I0423 17:07:52.391841 24 output.go:207] Trying to get logs from node worker00 pod pod-c40bf5bf-84ce-4f29-897a-7c5761dd0d82 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 17:07:52.406
  I0423 17:07:52.431844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5763" for this suite. @ 04/23/25 17:07:52.438
• [4.112 seconds]
------------------------------
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/23/25 17:07:52.451
  I0423 17:07:52.451811 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sysctl @ 04/23/25 17:07:52.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:52.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:52.485
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/23/25 17:07:52.488
  STEP: Watching for error events or started pod @ 04/23/25 17:07:52.495
  STEP: Waiting for pod completion @ 04/23/25 17:07:54.502
  STEP: Checking that the pod succeeded @ 04/23/25 17:07:56.53
  STEP: Getting logs from the pod @ 04/23/25 17:07:56.53
  STEP: Checking that the sysctl is actually updated @ 04/23/25 17:07:56.539
  I0423 17:07:56.540025 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8911" for this suite. @ 04/23/25 17:07:56.547
• [4.105 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/23/25 17:07:56.557
  I0423 17:07:56.558071 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 17:07:56.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:56.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:56.593
  I0423 17:07:56.598646 24 deployment.go:1645] Creating simple deployment test-new-deployment
  I0423 17:07:56.616482 24 deployment.go:223] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 04/23/25 17:07:58.635
  STEP: updating a scale subresource @ 04/23/25 17:07:58.641
  STEP: verifying the deployment Spec.Replicas was modified @ 04/23/25 17:07:58.66
  STEP: Patch a scale subresource @ 04/23/25 17:07:58.667
  I0423 17:07:58.724929 24 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2613",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79bf4785-caf0-40fa-8b61-73423bd4098d",
      ResourceVersion: (string) (len=5) "31290",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024876,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024876,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024876,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 17:07:58.745064 24 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2613",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ddbd45a6-02cc-4551-846d-e0cbde288800",
      ResourceVersion: (string) (len=5) "31294",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024876,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "79bf4785-caf0-40fa-8b61-73423bd4098d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 39 62 66 34 37  38 35 2d 63 61 66 30 2d  |\"79bf4785-caf0-|
              00000120  34 30 66 61 2d 38 62 36  31 2d 37 33 34 32 33 62  |40fa-8b61-73423b|
              00000130  64 34 30 39 38 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d4098d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 17:07:58.768340 24 deployment.go:68] Pod "test-new-deployment-685b768f58-jvghm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-jvghm",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2613",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d09eb26c-a915-4dac-b0cf-a95fa55d9de7",
      ResourceVersion: (string) (len=5) "31297",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024878,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "ddbd45a6-02cc-4551-846d-e0cbde288800",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 64  62 64 34 35 61 36 2d 30  |d\":\"ddbd45a6-0|
              00000090  32 63 63 2d 34 35 35 31  2d 38 34 36 64 2d 65 30  |2cc-4551-846d-e0|
              000000a0  63 62 64 65 32 38 38 38  30 30 5c 22 7d 22 3a 7b  |cbde288800\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vp5fd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vp5fd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024878,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:07:58.818496 24 deployment.go:68] Pod "test-new-deployment-685b768f58-xk2pc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-xk2pc",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-2613",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66155e4d-fb60-4d58-adb8-16eed39d1966",
      ResourceVersion: (string) (len=5) "31282",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024876,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b6a014cf72db8129e6055e77428a62d3e125a9657bc9009c13d0e1365bc9e467",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.147/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.147/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "ddbd45a6-02cc-4551-846d-e0cbde288800",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024876,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 64  62 64 34 35 61 36 2d 30  |d\":\"ddbd45a6-0|
              00000090  32 63 63 2d 34 35 35 31  2d 38 34 36 64 2d 65 30  |2cc-4551-846d-e0|
              000000a0  63 62 64 65 32 38 38 38  30 30 5c 22 7d 22 3a 7b  |cbde288800\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024877,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 34 37 5c 22 7d 22  |.200.131.147\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7z58d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7z58d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024876,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024876,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024876,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024877,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2aea1e4ab139770fd4e6e644ca5cc60505a86d6d89909ea59c84d84b7d2ade8c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:07:58.852854 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2613" for this suite. @ 04/23/25 17:07:58.862
• [2.314 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 04/23/25 17:07:58.871
  I0423 17:07:58.871360 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 17:07:58.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:58.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:58.886
  STEP: creating a collection of services @ 04/23/25 17:07:58.89
  I0423 17:07:58.890426 24 service.go:3635] Creating e2e-svc-a-9j4h8
  I0423 17:07:58.898881 24 service.go:3635] Creating e2e-svc-b-cmfsq
  I0423 17:07:58.913468 24 service.go:3635] Creating e2e-svc-c-d2zkn
  STEP: deleting service collection @ 04/23/25 17:07:58.94
  I0423 17:07:59.001425 24 service.go:3670] Collection of services has been deleted
  I0423 17:07:59.001708 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2276" for this suite. @ 04/23/25 17:07:59.012
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/23/25 17:07:59.024
  I0423 17:07:59.024529 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename apf @ 04/23/25 17:07:59.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:59.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:59.067
  STEP: getting /apis @ 04/23/25 17:07:59.077
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/23/25 17:07:59.09
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/23/25 17:07:59.105
  STEP: creating @ 04/23/25 17:07:59.114
  STEP: getting @ 04/23/25 17:07:59.162
  STEP: listing @ 04/23/25 17:07:59.165
  STEP: watching @ 04/23/25 17:07:59.17
  I0423 17:07:59.170255 24 flowcontrol.go:620] starting watch
  STEP: patching @ 04/23/25 17:07:59.172
  STEP: updating @ 04/23/25 17:07:59.178
  I0423 17:07:59.188823 24 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/23/25 17:07:59.188
  STEP: patching /status @ 04/23/25 17:07:59.192
  STEP: updating /status @ 04/23/25 17:07:59.198
  STEP: deleting @ 04/23/25 17:07:59.209
  STEP: deleting a collection @ 04/23/25 17:07:59.227
  I0423 17:07:59.249923 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-120" for this suite. @ 04/23/25 17:07:59.254
• [0.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 04/23/25 17:07:59.262
  I0423 17:07:59.262603 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 17:07:59.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:59.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:59.288
  STEP: getting /apis @ 04/23/25 17:07:59.298
  STEP: getting /apis/admissionregistration.k8s.io @ 04/23/25 17:07:59.304
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/23/25 17:07:59.305
  STEP: creating @ 04/23/25 17:07:59.307
  STEP: getting @ 04/23/25 17:07:59.326
  STEP: listing @ 04/23/25 17:07:59.335
  STEP: watching @ 04/23/25 17:07:59.341
  I0423 17:07:59.341724 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 04/23/25 17:07:59.344
  STEP: updating @ 04/23/25 17:07:59.355
  I0423 17:07:59.376761 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 04/23/25 17:07:59.376
  STEP: patching /status @ 04/23/25 17:07:59.382
  STEP: updating /status @ 04/23/25 17:07:59.404
  STEP: deleting @ 04/23/25 17:07:59.415
  STEP: deleting a collection @ 04/23/25 17:07:59.435
  I0423 17:07:59.462553 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3454" for this suite. @ 04/23/25 17:07:59.468
• [0.214 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/23/25 17:07:59.477
  I0423 17:07:59.477135 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename init-container @ 04/23/25 17:07:59.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:07:59.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:07:59.501
  STEP: creating the pod @ 04/23/25 17:07:59.504
  I0423 17:07:59.504471 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0423 17:08:03.654782 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7742" for this suite. @ 04/23/25 17:08:03.668
• [4.206 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/23/25 17:08:03.684
  I0423 17:08:03.684711 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 17:08:03.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:03.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:03.71
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/23/25 17:08:03.714
  I0423 17:08:03.725591 24 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0423 17:08:08.735305 24 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 17:08:08.735
  STEP: getting scale subresource @ 04/23/25 17:08:08.735
  STEP: updating a scale subresource @ 04/23/25 17:08:08.74
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/23/25 17:08:08.75
  STEP: Patch a scale subresource @ 04/23/25 17:08:08.765
  I0423 17:08:08.806544 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3103" for this suite. @ 04/23/25 17:08:08.813
• [5.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 04/23/25 17:08:08.821
  I0423 17:08:08.821381 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 17:08:08.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:08.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:08.847
  STEP: Starting the proxy @ 04/23/25 17:08:08.86
  I0423 17:08:08.861378 24 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5070 proxy --unix-socket=/tmp/kubectl-proxy-unix3596661902/test'
  STEP: retrieving proxy /api/ output @ 04/23/25 17:08:08.945
  I0423 17:08:08.949465 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5070" for this suite. @ 04/23/25 17:08:08.955
• [0.142 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 04/23/25 17:08:08.963
  I0423 17:08:08.963316 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 17:08:08.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:08.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:08.982
  STEP: set up a multi version CRD @ 04/23/25 17:08:08.986
  I0423 17:08:08.987378 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: rename a version @ 04/23/25 17:08:12.835
  STEP: check the new version name is served @ 04/23/25 17:08:12.864
  STEP: check the old version name is removed @ 04/23/25 17:08:13.873
  STEP: check the other version is not changed @ 04/23/25 17:08:14.666
  I0423 17:08:17.720585 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7623" for this suite. @ 04/23/25 17:08:17.728
• [8.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 04/23/25 17:08:17.733
  I0423 17:08:17.733697 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl-logs @ 04/23/25 17:08:17.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:17.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:17.755
  STEP: creating a pod @ 04/23/25 17:08:17.758
  I0423 17:08:17.758801 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0423 17:08:17.864766 24 builder.go:146] stderr: ""
  I0423 17:08:17.864811 24 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/23/25 17:08:17.865
  I0423 17:08:17.866013 24 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0423 17:08:19.875743 24 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/23/25 17:08:19.875
  I0423 17:08:19.875972 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 logs logs-generator logs-generator'
  I0423 17:08:20.032934 24 builder.go:146] stderr: ""
  I0423 17:08:20.033050 24 builder.go:147] stdout: "I0423 17:08:18.720048       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/zfqk 308\nI0423 17:08:18.920859       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/z7h 306\nI0423 17:08:19.120368       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/dcm 325\nI0423 17:08:19.320889       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/hqg 573\nI0423 17:08:19.520449       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/9mg6 415\nI0423 17:08:19.721206       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/rcrt 393\nI0423 17:08:19.920772       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/jhh 574\n"
  STEP: limiting log lines @ 04/23/25 17:08:20.033
  I0423 17:08:20.038754 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 logs logs-generator logs-generator --tail=1'
  I0423 17:08:20.165517 24 builder.go:146] stderr: ""
  I0423 17:08:20.165575 24 builder.go:147] stdout: "I0423 17:08:20.122244       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/qdk 262\n"
  I0423 17:08:20.165591 24 logs.go:180] got output "I0423 17:08:20.122244       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/qdk 262\n"
  STEP: limiting log bytes @ 04/23/25 17:08:20.165
  I0423 17:08:20.165685 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 logs logs-generator logs-generator --limit-bytes=1'
  I0423 17:08:20.257796 24 builder.go:146] stderr: ""
  I0423 17:08:20.257902 24 builder.go:147] stdout: "I"
  I0423 17:08:20.257924 24 logs.go:186] got output "I"
  STEP: exposing timestamps @ 04/23/25 17:08:20.257
  I0423 17:08:20.258050 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 logs logs-generator logs-generator --tail=1 --timestamps'
  I0423 17:08:20.401276 24 builder.go:146] stderr: ""
  I0423 17:08:20.401356 24 builder.go:147] stdout: "2025-04-23T17:08:20.321195214Z I0423 17:08:20.320952       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/wrg 332\n"
  I0423 17:08:20.401380 24 logs.go:192] got output "2025-04-23T17:08:20.321195214Z I0423 17:08:20.320952       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/wrg 332\n"
  STEP: restricting to a time range @ 04/23/25 17:08:20.401
  I0423 17:08:22.901715 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 logs logs-generator logs-generator --since=1s'
  I0423 17:08:23.089601 24 builder.go:146] stderr: ""
  I0423 17:08:23.089687 24 builder.go:147] stdout: "I0423 17:08:22.121025       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/6jx9 520\nI0423 17:08:22.320774       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/6744 477\nI0423 17:08:22.520481       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/j58 366\nI0423 17:08:22.721681       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/z58 353\nI0423 17:08:22.921237       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/mbr7 486\n"
  I0423 17:08:23.089759 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 logs logs-generator logs-generator --since=24h'
  I0423 17:08:23.225751 24 builder.go:146] stderr: ""
  I0423 17:08:23.225868 24 builder.go:147] stdout: "I0423 17:08:18.720048       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/zfqk 308\nI0423 17:08:18.920859       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/z7h 306\nI0423 17:08:19.120368       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/dcm 325\nI0423 17:08:19.320889       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/hqg 573\nI0423 17:08:19.520449       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/9mg6 415\nI0423 17:08:19.721206       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/rcrt 393\nI0423 17:08:19.920772       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/jhh 574\nI0423 17:08:20.122244       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/qdk 262\nI0423 17:08:20.320952       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/wrg 332\nI0423 17:08:20.520592       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/4t6d 242\nI0423 17:08:20.720498       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/mxpt 306\nI0423 17:08:20.920205       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/dn8c 572\nI0423 17:08:21.120125       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/tb6 263\nI0423 17:08:21.321068       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/2tsv 457\nI0423 17:08:21.520971       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/6bb 465\nI0423 17:08:21.720624       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/7rb 399\nI0423 17:08:21.920121       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/qzsd 488\nI0423 17:08:22.121025       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/6jx9 520\nI0423 17:08:22.320774       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/6744 477\nI0423 17:08:22.520481       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/j58 366\nI0423 17:08:22.721681       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/z58 353\nI0423 17:08:22.921237       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/mbr7 486\nI0423 17:08:23.121821       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/s9h 296\n"
  I0423 17:08:23.226075 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-logs-2907 delete pod logs-generator'
  I0423 17:08:24.434376 24 builder.go:146] stderr: ""
  I0423 17:08:24.434499 24 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0423 17:08:24.434711 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2907" for this suite. @ 04/23/25 17:08:24.441
• [6.717 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 04/23/25 17:08:24.451
  I0423 17:08:24.451122 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:08:24.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:24.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:24.483
  STEP: Setting up server cert @ 04/23/25 17:08:24.513
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:08:24.834
  STEP: Deploying the webhook pod @ 04/23/25 17:08:24.843
  STEP: Wait for the deployment to be ready @ 04/23/25 17:08:24.858
  I0423 17:08:24.868547 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 17:08:26.887
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:08:26.913
  I0423 17:08:27.914504 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/23/25 17:08:27.927
  STEP: create a configmap that should be updated by the webhook @ 04/23/25 17:08:27.949
  I0423 17:08:28.044653 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5917" for this suite. @ 04/23/25 17:08:28.055
  STEP: Destroying namespace "webhook-markers-39" for this suite. @ 04/23/25 17:08:28.071
• [3.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 04/23/25 17:08:28.092
  I0423 17:08:28.092863 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:08:28.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:28.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:28.13
  STEP: Setting up server cert @ 04/23/25 17:08:28.159
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:08:28.521
  STEP: Deploying the webhook pod @ 04/23/25 17:08:28.527
  STEP: Wait for the deployment to be ready @ 04/23/25 17:08:28.544
  I0423 17:08:28.557986 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 17:08:30.574
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:08:30.597
  I0423 17:08:31.601674 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/23/25 17:08:31.614
  STEP: verifying the validating webhook match conditions @ 04/23/25 17:08:31.641
  STEP: updating the validating webhook match conditions @ 04/23/25 17:08:31.649
  STEP: verifying the validating webhook match conditions @ 04/23/25 17:08:31.665
  I0423 17:08:31.750561 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6372" for this suite. @ 04/23/25 17:08:31.772
  STEP: Destroying namespace "webhook-markers-1726" for this suite. @ 04/23/25 17:08:31.803
• [3.723 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/23/25 17:08:31.815
  I0423 17:08:31.815818 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename csi-storageclass @ 04/23/25 17:08:31.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:31.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:31.841
  STEP: Creating a StorageClass @ 04/23/25 17:08:31.845
  STEP: Get StorageClass "e2e-mm5zp" @ 04/23/25 17:08:31.854
  STEP: Patching the StorageClass "e2e-mm5zp" @ 04/23/25 17:08:31.858
  STEP: Delete StorageClass "e2e-mm5zp" @ 04/23/25 17:08:31.867
  STEP: Confirm deletion of StorageClass "e2e-mm5zp" @ 04/23/25 17:08:31.876
  STEP: Create a replacement StorageClass @ 04/23/25 17:08:31.882
  STEP: Updating StorageClass "e2e-v2-52vvh" @ 04/23/25 17:08:31.892
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-52vvh=updated" @ 04/23/25 17:08:31.904
  STEP: Deleting StorageClass "e2e-v2-52vvh" via DeleteCollection @ 04/23/25 17:08:31.91
  STEP: Confirm deletion of StorageClass "e2e-v2-52vvh" @ 04/23/25 17:08:31.924
  I0423 17:08:31.929523 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3033" for this suite. @ 04/23/25 17:08:31.937
• [0.133 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/23/25 17:08:31.949
  I0423 17:08:31.949783 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:08:31.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:31.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:31.981
  STEP: Creating configMap with name configmap-test-upd-544843b4-e356-49bd-8b92-5006c69568dd @ 04/23/25 17:08:32.039
  STEP: Creating the pod @ 04/23/25 17:08:32.053
  STEP: Updating configmap configmap-test-upd-544843b4-e356-49bd-8b92-5006c69568dd @ 04/23/25 17:08:34.094
  STEP: waiting to observe update in volume @ 04/23/25 17:08:34.104
  I0423 17:08:36.130143 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5942" for this suite. @ 04/23/25 17:08:36.137
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 04/23/25 17:08:36.15
  I0423 17:08:36.151051 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:08:36.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:36.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:36.178
  STEP: Setting up server cert @ 04/23/25 17:08:36.215
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:08:36.663
  STEP: Deploying the webhook pod @ 04/23/25 17:08:36.677
  STEP: Wait for the deployment to be ready @ 04/23/25 17:08:36.692
  I0423 17:08:36.702517 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 17:08:38.736
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:08:38.751
  I0423 17:08:39.751542 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0423 17:08:39.765000 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1401-crds.webhook.example.com via the AdmissionRegistration API @ 04/23/25 17:08:40.28
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/23/25 17:08:40.314
  I0423 17:08:43.005127 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7642" for this suite. @ 04/23/25 17:08:43.012
  STEP: Destroying namespace "webhook-markers-6954" for this suite. @ 04/23/25 17:08:43.039
• [6.911 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/23/25 17:08:43.063
  I0423 17:08:43.063116 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 17:08:43.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:43.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:43.105
  I0423 17:08:45.163631 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8199" for this suite. @ 04/23/25 17:08:45.169
• [2.118 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 04/23/25 17:08:45.179
  I0423 17:08:45.180048 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 17:08:45.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:45.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:45.208
  STEP: set up a multi version CRD @ 04/23/25 17:08:45.215
  I0423 17:08:45.216399 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: mark a version not serverd @ 04/23/25 17:08:49.211
  STEP: check the unserved version gets removed @ 04/23/25 17:08:49.235
  STEP: check the other version is not changed @ 04/23/25 17:08:50.222
  I0423 17:08:53.250695 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4510" for this suite. @ 04/23/25 17:08:53.263
• [8.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/23/25 17:08:53.312
  I0423 17:08:53.312095 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:08:53.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:53.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:53.345
  STEP: Creating secret with name projected-secret-test-c65a9fda-2137-496e-baa4-3c5feb19fa40 @ 04/23/25 17:08:53.347
  STEP: Creating a pod to test consume secrets @ 04/23/25 17:08:53.353
  STEP: Saw pod success @ 04/23/25 17:08:57.388
  I0423 17:08:57.394134 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-fe970037-6167-4006-9aac-75ba6a15d508 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 17:08:57.404
  I0423 17:08:57.427536 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6704" for this suite. @ 04/23/25 17:08:57.433
• [4.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 04/23/25 17:08:57.448
  I0423 17:08:57.448549 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 17:08:57.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:08:57.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:08:57.481
  STEP: Counting existing ResourceQuota @ 04/23/25 17:08:57.49
  STEP: Creating a ResourceQuota @ 04/23/25 17:09:02.497
  STEP: Ensuring resource quota status is calculated @ 04/23/25 17:09:02.52
  STEP: Creating a ReplicaSet @ 04/23/25 17:09:04.527
  STEP: Ensuring resource quota status captures replicaset creation @ 04/23/25 17:09:04.565
  STEP: Deleting a ReplicaSet @ 04/23/25 17:09:06.57
  STEP: Ensuring resource quota status released usage @ 04/23/25 17:09:06.579
  I0423 17:09:08.586624 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3899" for this suite. @ 04/23/25 17:09:08.593
• [11.167 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/23/25 17:09:08.617
  I0423 17:09:08.617712 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 17:09:08.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:09:08.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:09:08.649
  STEP: create the container @ 04/23/25 17:09:08.657
  W0423 17:09:08.673193      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/23/25 17:09:08.673
  STEP: get the container status @ 04/23/25 17:09:11.697
  STEP: the container should be terminated @ 04/23/25 17:09:11.703
  STEP: the termination message should be set @ 04/23/25 17:09:11.703
  I0423 17:09:11.703485 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/23/25 17:09:11.703
  I0423 17:09:11.739475 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2528" for this suite. @ 04/23/25 17:09:11.744
• [3.137 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/23/25 17:09:11.753
  I0423 17:09:11.753371 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 17:09:11.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:09:11.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:09:11.781
  STEP: Creating secret with name secret-test-4bd80179-dc0b-4a0e-9956-34b5ef64ba75 @ 04/23/25 17:09:11.811
  STEP: Creating a pod to test consume secrets @ 04/23/25 17:09:11.817
  STEP: Saw pod success @ 04/23/25 17:09:15.846
  I0423 17:09:15.852157 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-7b0bcf68-b25e-400b-a01a-bf07424de0d1 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 17:09:15.861
  I0423 17:09:15.902641 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3620" for this suite. @ 04/23/25 17:09:15.91
  STEP: Destroying namespace "secret-namespace-298" for this suite. @ 04/23/25 17:09:15.922
• [4.190 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/23/25 17:09:15.943
  I0423 17:09:15.943865 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 17:09:15.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:09:15.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:09:15.98
  I0423 17:09:15.988011 24 deployment.go:1196] Creating deployment "webserver-deployment"
  I0423 17:09:16.002603 24 deployment.go:1200] Waiting for observed generation 1
  I0423 17:09:18.017135 24 deployment.go:1205] Waiting for all required pods to come up
  I0423 17:09:18.020825 24 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/23/25 17:09:18.02
  I0423 17:09:20.031643 24 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0423 17:09:20.042790 24 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0423 17:09:20.080903 24 deployment.go:314] Updating deployment webserver-deployment
  I0423 17:09:20.080974 24 deployment.go:1224] Waiting for observed generation 2
  I0423 17:09:22.110962 24 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0423 17:09:22.120609 24 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0423 17:09:22.131030 24 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0423 17:09:22.155122 24 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0423 17:09:22.155245 24 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0423 17:09:22.162883 24 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0423 17:09:22.179947 24 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0423 17:09:22.180087 24 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0423 17:09:22.196295 24 deployment.go:314] Updating deployment webserver-deployment
  I0423 17:09:22.196346 24 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0423 17:09:22.217597 24 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0423 17:09:22.235453 24 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0423 17:09:22.315813 24 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d429ac08-2f22-420f-a860-fd6f9cb28678",
      ResourceVersion: (string) (len=5) "32540",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024955,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 17:09:22.372659 24 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
      ResourceVersion: (string) (len=5) "32523",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d429ac08-2f22-420f-a860-fd6f9cb28678",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 34 32 39 61 63  30 38 2d 32 66 32 32 2d  |\"d429ac08-2f22-|
              00000120  34 32 30 66 2d 61 38 36  30 2d 66 64 36 66 39 63  |420f-a860-fd6f9c|
              00000130  62 32 38 36 37 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b28678\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 17:09:22.396326 24 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0423 17:09:22.396683 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
      ResourceVersion: (string) (len=5) "32519",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "d429ac08-2f22-420f-a860-fd6f9cb28678",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 34 32 39 61 63  30 38 2d 32 66 32 32 2d  |\"d429ac08-2f22-|
              00000120  34 32 30 66 2d 61 38 36  30 2d 66 64 36 66 39 63  |420f-a860-fd6f9c|
              00000130  62 32 38 36 37 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b28678\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 17:09:22.436783 24 deployment.go:68] Pod "webserver-deployment-685b768f58-2pc5p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2pc5p",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "381a5771-f157-426a-87d4-f13b37b74330",
      ResourceVersion: (string) (len=5) "32552",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hqgjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hqgjh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.447189 24 deployment.go:68] Pod "webserver-deployment-685b768f58-4bxqk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4bxqk",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8ac40898-d0fe-499b-8e6b-0b8241c9ed97",
      ResourceVersion: (string) (len=5) "32589",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gpmbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gpmbs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.457820 24 deployment.go:68] Pod "webserver-deployment-685b768f58-4lsx6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-4lsx6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "091cee20-7de1-42aa-aaf5-01ebeec44479",
      ResourceVersion: (string) (len=5) "32401",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dd854617e08fc176505d80f8c0a7f91fdeeb24b3b355428a03e559c06f53c570",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 36 32 5c 22 7d 22  |.200.131.162\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w4hbr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w4hbr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024958,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5652380932e22b9f8614899aab7c268fcbaf990764cd957f1f70ff78fd1ee8c5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.462921 24 deployment.go:68] Pod "webserver-deployment-685b768f58-5tknb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-5tknb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f18c9b17-58c3-4418-a591-fb0d8dcbd7d4",
      ResourceVersion: (string) (len=5) "32382",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "694976ee324cb7cb089f022758ba9a49f89a63eb03034a31f5542e77e9d4bcbb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  37 5c 22 7d 22 3a 7b 22  |.200.5.27\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2974",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2974",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ac3f2ed2108fad4c7ea2b66e6ff817c47dcf8c4a7622e2712bc92392b4e6c45e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.475451 24 deployment.go:68] Pod "webserver-deployment-685b768f58-btknj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-btknj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f9a92fe-c8d8-4b53-9efa-6daabfdac237",
      ResourceVersion: (string) (len=5) "32554",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cq8kr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cq8kr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.478226 24 deployment.go:68] Pod "webserver-deployment-685b768f58-cwz6g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-cwz6g",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b20ec7d6-4dc1-449b-be3b-2493973bd091",
      ResourceVersion: (string) (len=5) "32572",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hcxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hcxf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.481188 24 deployment.go:68] Pod "webserver-deployment-685b768f58-fbmqx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fbmqx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b9f81a4-0461-4bf0-9f87-a5a45f697790",
      ResourceVersion: (string) (len=5) "32553",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sk8p4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sk8p4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.509755 24 deployment.go:68] Pod "webserver-deployment-685b768f58-fpmr6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-fpmr6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c9da7f3-94f4-401c-b6e0-ac21e26a713b",
      ResourceVersion: (string) (len=5) "32368",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5315114ee0f58147d323074d874431f62adb6a1e20be65b5af3795d7d3468a81",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.170/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.170/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 37 30 5c 22 7d 22  |.200.131.170\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5s48m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5s48m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5adc031807e2b4ecef82935dd535183634be746cd0c7900372fd39ac432e6df0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.521341 24 deployment.go:68] Pod "webserver-deployment-685b768f58-gwgzt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-gwgzt",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b2f3c56-d44c-44cd-8d91-783e3f838d97",
      ResourceVersion: (string) (len=5) "32569",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p2978",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p2978",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.523879 24 deployment.go:68] Pod "webserver-deployment-685b768f58-kr2p6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kr2p6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4ad196b8-34dc-466a-ba4f-7204f7218c76",
      ResourceVersion: (string) (len=5) "32374",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.30/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.30/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bc387b36072fe350f8766d4f51d0730f958a41e6bd8da32027377d4b87930198"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 33  30 5c 22 7d 22 3a 7b 22  |.200.5.30\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ljkz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ljkz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2782603425f42fdb5e8a667e052373550fe9b47fb7a698ad2dad8ecc4914df83",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.533524 24 deployment.go:68] Pod "webserver-deployment-685b768f58-l6gpn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-l6gpn",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ae31e8c-2fad-40e0-ace8-b41be0cc0e29",
      ResourceVersion: (string) (len=5) "32560",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4g97",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4g97",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.546506 24 deployment.go:68] Pod "webserver-deployment-685b768f58-lr7nb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lr7nb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac65a043-0cf1-426f-bb7a-01dbf0437492",
      ResourceVersion: (string) (len=5) "32573",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxtcl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxtcl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.548688 24 deployment.go:68] Pod "webserver-deployment-685b768f58-qckwj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qckwj",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "534b5563-a029-4e6d-98ff-a3308958dfa3",
      ResourceVersion: (string) (len=5) "32564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fxhbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fxhbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.560605 24 deployment.go:68] Pod "webserver-deployment-685b768f58-qd84c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-qd84c",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10a8f99e-ff4d-483b-b64d-bcafe1a1191a",
      ResourceVersion: (string) (len=5) "32577",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m6qwn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m6qwn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.568702 24 deployment.go:68] Pod "webserver-deployment-685b768f58-rhnxv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-rhnxv",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a7aa6dfd-4261-44c1-80c9-d43e28840299",
      ResourceVersion: (string) (len=5) "32376",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.172/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c629663cc962b256104854bebec660c08d7848760d5f82da32a9ff30f1174981",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.172/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 37 32 5c 22 7d 22  |.200.131.172\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qt9r9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qt9r9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://72792d672e0cb877f67101ec706d36ca1104025ea1cf3271faf4658e445057ac",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.590490 24 deployment.go:68] Pod "webserver-deployment-685b768f58-t82rm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-t82rm",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "228ea4cd-373d-4331-b7cb-773cfba74e4b",
      ResourceVersion: (string) (len=5) "32378",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "818c7d94eabf405d1e60ebe021bf996e16c2a821004d80a33d0e2fc0fdb1e929",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  38 5c 22 7d 22 3a 7b 22  |.200.5.28\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5qcz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5qcz8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://462a7578ad2346adb3395da8ad598909c4cd68be0734a3b3d15cc9007084d17b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.615346 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tbqzw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tbqzw",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd721da4-7dfd-4c8d-984d-244cd9ca04c2",
      ResourceVersion: (string) (len=5) "32371",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.171/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.171/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4580723d07b86ed77aea73eb71132ccdcb8b4a52e3c4824accbbd03838f239b9"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 37 31 5c 22 7d 22  |.200.131.171\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8qn7h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8qn7h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.171",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.171"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0e601f62e2cb68a2e2899de1cdb613148311e7d1c167c95fb8f818f923d9cec3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.627499 24 deployment.go:68] Pod "webserver-deployment-685b768f58-tn5fb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tn5fb",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f35f5337-ae6c-4a51-9b62-9e2823faa406",
      ResourceVersion: (string) (len=5) "32547",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tq5zp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tq5zp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.698360 24 deployment.go:68] Pod "webserver-deployment-685b768f58-vzfgc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-vzfgc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da7f525b-ed0b-4745-b913-afa1cc76c9c6",
      ResourceVersion: (string) (len=5) "32388",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "efbad23ebdcbfeb3164167a0addfbad96a16f2eff61b5bea27b039205bb4b656",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 35 2e 32  39 5c 22 7d 22 3a 7b 22  |.200.5.29\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jswxn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jswxn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024957,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) (len=11) "10.200.5.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.200.5.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881024957,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://258b79574bdaf2e325f4f24eb2ae397ba9ec15569a0e130d1276fe4e83863f5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.751668 24 deployment.go:68] Pod "webserver-deployment-685b768f58-x5dzx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-x5dzx",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d85fb0a2-3dab-4cbb-9b2f-355c22ae4b76",
      ResourceVersion: (string) (len=5) "32546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "33df4e23-0181-4069-af5a-65d41cba4977",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  64 66 34 65 32 33 2d 30  |d\":\"33df4e23-0|
              00000090  31 38 31 2d 34 30 36 39  2d 61 66 35 61 2d 36 35  |181-4069-af5a-65|
              000000a0  64 34 31 63 62 61 34 39  37 37 5c 22 7d 22 3a 7b  |d41cba4977\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nrbtb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nrbtb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.773359 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-47t9m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-47t9m",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1100914c-6c4e-4f96-9488-ce82b257d313",
      ResourceVersion: (string) (len=5) "32556",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w9czv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w9czv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.778112 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-4llqr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-4llqr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44edd7a9-1937-4b51-89e9-a14aa651d0b0",
      ResourceVersion: (string) (len=5) "32571",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4v2wc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4v2wc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.786588 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-528tj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-528tj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7481da3-3f47-4a7e-82ee-b8d205543c09",
      ResourceVersion: (string) (len=5) "32575",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lt2pr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lt2pr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.798750 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6nbmq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6nbmq",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "607cc8d2-3c85-4b5d-a381-7fe751443675",
      ResourceVersion: (string) (len=5) "32481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a280348df8549bfbf458bf55d34854ea71791e4656f623aa4de27aa85bf29e65",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8pprg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8pprg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.815240 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-9dgsl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-9dgsl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "257aeba6-4c90-46f0-99f3-8c02d8117619",
      ResourceVersion: (string) (len=5) "32476",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0a08effd51512c41067e3a09940afcba6b5427c293cb860ffb56f7a9012d83b8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.33/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.33/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72cts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72cts",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.825584 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-kblnb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-kblnb",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64858fb4-6c75-4fe2-adb0-5ada37982be6",
      ResourceVersion: (string) (len=5) "32486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6834e0842cda37cd21f94521a53f717b25947a337c7bc7a31eb34ed291818df0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.163/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.163/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ndvwf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ndvwf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.830336 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-mdmmt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-mdmmt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ec631d9-6313-4986-b681-21e6db1fe42d",
      ResourceVersion: (string) (len=5) "32494",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cc5a4763bab1d99cf5fa3f6523d4373c4bd0dbb72ca3b8f9c5579f77a28ec197",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.164/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024961,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v84wr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v84wr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.847689 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qht5v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qht5v",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d27955a4-9930-4aec-8af8-311898921ed2",
      ResourceVersion: (string) (len=5) "32574",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7xr2r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7xr2r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.858598 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qs5wm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qs5wm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0656a11b-1cdc-40de-89e2-a12e95ac5d7c",
      ResourceVersion: (string) (len=5) "32472",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.200.5.32/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "176c67e072eb79f70b4a7ceb0b3335caf3d7f9b7ac769db01326685c59660751",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.200.5.32/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npphb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npphb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024960,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.101",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.101"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024960,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.875733 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rrlmn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rrlmn",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95bab8e3-f47b-4ab2-b68f-d6be09d35477",
      ResourceVersion: (string) (len=5) "32578",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nz2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nz2w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.901741 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tkxjh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tkxjh",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93c26dea-f1b2-4752-a19f-eff5ca2a4c07",
      ResourceVersion: (string) (len=5) "32555",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qg44g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qg44g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.916311 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-tq7l7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-tq7l7",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30eac76e-347f-49ef-9eec-52ebf51b1d0c",
      ResourceVersion: (string) (len=5) "32584",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8rtbw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8rtbw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.938750 24 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xhzzl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xhzzl",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-9679",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef456b97-a171-40a9-ae17-0a1d30205cee",
      ResourceVersion: (string) (len=5) "32576",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881024962,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "d04b2b87-c7c6-492e-982f-cef2e8ba2de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 30  34 62 32 62 38 37 2d 63  |d\":\"d04b2b87-c|
              00000090  37 63 36 2d 34 39 32 65  2d 39 38 32 66 2d 63 65  |7c6-492e-982f-ce|
              000000a0  66 32 65 38 62 61 32 64  65 32 5c 22 7d 22 3a 7b  |f2e8ba2de2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nzfd4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nzfd4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881024962,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:09:22.977824 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9679" for this suite. @ 04/23/25 17:09:22.985
• [7.059 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/23/25 17:09:23.01
  I0423 17:09:23.010549 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 17:09:23.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:09:23.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:09:23.069
  STEP: create the rc @ 04/23/25 17:09:23.097
  W0423 17:09:23.119561      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/23/25 17:09:29.216
  STEP: wait for the rc to be deleted @ 04/23/25 17:09:29.336
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/23/25 17:09:34.471
  STEP: Gathering metrics @ 04/23/25 17:10:04.477
  I0423 17:10:04.534612 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 17:10:04.534693 24 delete.go:95] Deleting pod "simpletest.rc-26t52" in namespace "gc-2712"
  I0423 17:10:04.550682 24 delete.go:95] Deleting pod "simpletest.rc-2dcwv" in namespace "gc-2712"
  I0423 17:10:04.572606 24 delete.go:95] Deleting pod "simpletest.rc-2fps7" in namespace "gc-2712"
  I0423 17:10:04.590314 24 delete.go:95] Deleting pod "simpletest.rc-2knhj" in namespace "gc-2712"
  I0423 17:10:04.615390 24 delete.go:95] Deleting pod "simpletest.rc-4gsgk" in namespace "gc-2712"
  I0423 17:10:04.639344 24 delete.go:95] Deleting pod "simpletest.rc-4jgvl" in namespace "gc-2712"
  I0423 17:10:04.691914 24 delete.go:95] Deleting pod "simpletest.rc-4tnhb" in namespace "gc-2712"
  I0423 17:10:04.713253 24 delete.go:95] Deleting pod "simpletest.rc-4vgvv" in namespace "gc-2712"
  I0423 17:10:04.733120 24 delete.go:95] Deleting pod "simpletest.rc-575qq" in namespace "gc-2712"
  I0423 17:10:04.769674 24 delete.go:95] Deleting pod "simpletest.rc-5m5pv" in namespace "gc-2712"
  I0423 17:10:04.801933 24 delete.go:95] Deleting pod "simpletest.rc-5wbhc" in namespace "gc-2712"
  I0423 17:10:04.835642 24 delete.go:95] Deleting pod "simpletest.rc-6q7d2" in namespace "gc-2712"
  I0423 17:10:04.856089 24 delete.go:95] Deleting pod "simpletest.rc-7hcl4" in namespace "gc-2712"
  I0423 17:10:04.892943 24 delete.go:95] Deleting pod "simpletest.rc-88x48" in namespace "gc-2712"
  I0423 17:10:04.928117 24 delete.go:95] Deleting pod "simpletest.rc-89pwl" in namespace "gc-2712"
  I0423 17:10:04.947848 24 delete.go:95] Deleting pod "simpletest.rc-8fvdb" in namespace "gc-2712"
  I0423 17:10:04.977618 24 delete.go:95] Deleting pod "simpletest.rc-8l66w" in namespace "gc-2712"
  I0423 17:10:05.019918 24 delete.go:95] Deleting pod "simpletest.rc-8q87z" in namespace "gc-2712"
  I0423 17:10:05.045626 24 delete.go:95] Deleting pod "simpletest.rc-8rvxb" in namespace "gc-2712"
  I0423 17:10:05.072249 24 delete.go:95] Deleting pod "simpletest.rc-9k2cz" in namespace "gc-2712"
  I0423 17:10:05.091121 24 delete.go:95] Deleting pod "simpletest.rc-9zft2" in namespace "gc-2712"
  I0423 17:10:05.123063 24 delete.go:95] Deleting pod "simpletest.rc-b48gw" in namespace "gc-2712"
  I0423 17:10:05.146158 24 delete.go:95] Deleting pod "simpletest.rc-b67zp" in namespace "gc-2712"
  I0423 17:10:05.186743 24 delete.go:95] Deleting pod "simpletest.rc-b76nw" in namespace "gc-2712"
  I0423 17:10:05.225124 24 delete.go:95] Deleting pod "simpletest.rc-b7q5d" in namespace "gc-2712"
  I0423 17:10:05.248021 24 delete.go:95] Deleting pod "simpletest.rc-bcjt2" in namespace "gc-2712"
  I0423 17:10:05.280031 24 delete.go:95] Deleting pod "simpletest.rc-bfn6j" in namespace "gc-2712"
  I0423 17:10:05.296392 24 delete.go:95] Deleting pod "simpletest.rc-blsdl" in namespace "gc-2712"
  I0423 17:10:05.317942 24 delete.go:95] Deleting pod "simpletest.rc-bw68r" in namespace "gc-2712"
  I0423 17:10:05.364773 24 delete.go:95] Deleting pod "simpletest.rc-bzkz8" in namespace "gc-2712"
  I0423 17:10:05.385881 24 delete.go:95] Deleting pod "simpletest.rc-c2jwq" in namespace "gc-2712"
  I0423 17:10:05.415672 24 delete.go:95] Deleting pod "simpletest.rc-c7sj7" in namespace "gc-2712"
  I0423 17:10:05.457907 24 delete.go:95] Deleting pod "simpletest.rc-dcj22" in namespace "gc-2712"
  I0423 17:10:05.490493 24 delete.go:95] Deleting pod "simpletest.rc-dg9fx" in namespace "gc-2712"
  I0423 17:10:05.509009 24 delete.go:95] Deleting pod "simpletest.rc-dgt54" in namespace "gc-2712"
  I0423 17:10:05.540013 24 delete.go:95] Deleting pod "simpletest.rc-dj5v9" in namespace "gc-2712"
  I0423 17:10:05.564328 24 delete.go:95] Deleting pod "simpletest.rc-f2sj9" in namespace "gc-2712"
  I0423 17:10:05.634244 24 delete.go:95] Deleting pod "simpletest.rc-f9jms" in namespace "gc-2712"
  I0423 17:10:05.670468 24 delete.go:95] Deleting pod "simpletest.rc-g9ql2" in namespace "gc-2712"
  I0423 17:10:05.695512 24 delete.go:95] Deleting pod "simpletest.rc-gb9rn" in namespace "gc-2712"
  I0423 17:10:05.715532 24 delete.go:95] Deleting pod "simpletest.rc-gbbjg" in namespace "gc-2712"
  I0423 17:10:05.734697 24 delete.go:95] Deleting pod "simpletest.rc-gfcp6" in namespace "gc-2712"
  I0423 17:10:05.759432 24 delete.go:95] Deleting pod "simpletest.rc-gfdd2" in namespace "gc-2712"
  I0423 17:10:05.781757 24 delete.go:95] Deleting pod "simpletest.rc-gjm28" in namespace "gc-2712"
  I0423 17:10:05.811690 24 delete.go:95] Deleting pod "simpletest.rc-gk65v" in namespace "gc-2712"
  I0423 17:10:05.824524 24 delete.go:95] Deleting pod "simpletest.rc-h64n5" in namespace "gc-2712"
  I0423 17:10:05.873107 24 delete.go:95] Deleting pod "simpletest.rc-hbnkm" in namespace "gc-2712"
  I0423 17:10:05.899852 24 delete.go:95] Deleting pod "simpletest.rc-hk8sp" in namespace "gc-2712"
  I0423 17:10:05.922777 24 delete.go:95] Deleting pod "simpletest.rc-hxf94" in namespace "gc-2712"
  I0423 17:10:05.938736 24 delete.go:95] Deleting pod "simpletest.rc-jg269" in namespace "gc-2712"
  I0423 17:10:05.992772 24 delete.go:95] Deleting pod "simpletest.rc-jzfxr" in namespace "gc-2712"
  I0423 17:10:06.045338 24 delete.go:95] Deleting pod "simpletest.rc-kgg7w" in namespace "gc-2712"
  I0423 17:10:06.080269 24 delete.go:95] Deleting pod "simpletest.rc-kgjjd" in namespace "gc-2712"
  I0423 17:10:06.099208 24 delete.go:95] Deleting pod "simpletest.rc-kn4vj" in namespace "gc-2712"
  I0423 17:10:06.132017 24 delete.go:95] Deleting pod "simpletest.rc-kvjgr" in namespace "gc-2712"
  I0423 17:10:06.153774 24 delete.go:95] Deleting pod "simpletest.rc-kwm22" in namespace "gc-2712"
  I0423 17:10:06.183269 24 delete.go:95] Deleting pod "simpletest.rc-lsfr6" in namespace "gc-2712"
  I0423 17:10:06.197692 24 delete.go:95] Deleting pod "simpletest.rc-mwdm7" in namespace "gc-2712"
  I0423 17:10:06.219006 24 delete.go:95] Deleting pod "simpletest.rc-n2fck" in namespace "gc-2712"
  I0423 17:10:06.278311 24 delete.go:95] Deleting pod "simpletest.rc-ncc7m" in namespace "gc-2712"
  I0423 17:10:06.295535 24 delete.go:95] Deleting pod "simpletest.rc-ncjxr" in namespace "gc-2712"
  I0423 17:10:06.348701 24 delete.go:95] Deleting pod "simpletest.rc-ndvw2" in namespace "gc-2712"
  I0423 17:10:06.370376 24 delete.go:95] Deleting pod "simpletest.rc-ngk5c" in namespace "gc-2712"
  I0423 17:10:06.395381 24 delete.go:95] Deleting pod "simpletest.rc-nmcjm" in namespace "gc-2712"
  I0423 17:10:06.425558 24 delete.go:95] Deleting pod "simpletest.rc-ntz4j" in namespace "gc-2712"
  I0423 17:10:06.450341 24 delete.go:95] Deleting pod "simpletest.rc-p2b84" in namespace "gc-2712"
  I0423 17:10:06.471748 24 delete.go:95] Deleting pod "simpletest.rc-p6kdk" in namespace "gc-2712"
  I0423 17:10:06.498878 24 delete.go:95] Deleting pod "simpletest.rc-p7wgq" in namespace "gc-2712"
  I0423 17:10:06.537784 24 delete.go:95] Deleting pod "simpletest.rc-pfggt" in namespace "gc-2712"
  I0423 17:10:06.566057 24 delete.go:95] Deleting pod "simpletest.rc-q2hcd" in namespace "gc-2712"
  I0423 17:10:06.582865 24 delete.go:95] Deleting pod "simpletest.rc-q9zmb" in namespace "gc-2712"
  I0423 17:10:06.638020 24 delete.go:95] Deleting pod "simpletest.rc-qgwnf" in namespace "gc-2712"
  I0423 17:10:06.673485 24 delete.go:95] Deleting pod "simpletest.rc-qtnlz" in namespace "gc-2712"
  I0423 17:10:06.691160 24 delete.go:95] Deleting pod "simpletest.rc-qxqpr" in namespace "gc-2712"
  I0423 17:10:06.755369 24 delete.go:95] Deleting pod "simpletest.rc-r2q2l" in namespace "gc-2712"
  I0423 17:10:06.788272 24 delete.go:95] Deleting pod "simpletest.rc-rbhtw" in namespace "gc-2712"
  I0423 17:10:06.812631 24 delete.go:95] Deleting pod "simpletest.rc-rn9q9" in namespace "gc-2712"
  I0423 17:10:06.829851 24 delete.go:95] Deleting pod "simpletest.rc-rp6c8" in namespace "gc-2712"
  I0423 17:10:06.863884 24 delete.go:95] Deleting pod "simpletest.rc-s27b2" in namespace "gc-2712"
  I0423 17:10:06.940956 24 delete.go:95] Deleting pod "simpletest.rc-scs7s" in namespace "gc-2712"
  I0423 17:10:06.972819 24 delete.go:95] Deleting pod "simpletest.rc-t42wc" in namespace "gc-2712"
  I0423 17:10:07.005777 24 delete.go:95] Deleting pod "simpletest.rc-t4m2t" in namespace "gc-2712"
  I0423 17:10:07.032930 24 delete.go:95] Deleting pod "simpletest.rc-tbm82" in namespace "gc-2712"
  I0423 17:10:07.052595 24 delete.go:95] Deleting pod "simpletest.rc-tc5m4" in namespace "gc-2712"
  I0423 17:10:07.084686 24 delete.go:95] Deleting pod "simpletest.rc-v2sbd" in namespace "gc-2712"
  I0423 17:10:07.110052 24 delete.go:95] Deleting pod "simpletest.rc-v7wk4" in namespace "gc-2712"
  I0423 17:10:07.132767 24 delete.go:95] Deleting pod "simpletest.rc-v82wl" in namespace "gc-2712"
  I0423 17:10:07.158783 24 delete.go:95] Deleting pod "simpletest.rc-vgfwj" in namespace "gc-2712"
  I0423 17:10:07.185219 24 delete.go:95] Deleting pod "simpletest.rc-vgk9g" in namespace "gc-2712"
  I0423 17:10:07.208664 24 delete.go:95] Deleting pod "simpletest.rc-vh4lp" in namespace "gc-2712"
  I0423 17:10:07.232362 24 delete.go:95] Deleting pod "simpletest.rc-vvzdm" in namespace "gc-2712"
  I0423 17:10:07.265303 24 delete.go:95] Deleting pod "simpletest.rc-w5pj9" in namespace "gc-2712"
  I0423 17:10:07.293445 24 delete.go:95] Deleting pod "simpletest.rc-wj9sm" in namespace "gc-2712"
  I0423 17:10:07.320123 24 delete.go:95] Deleting pod "simpletest.rc-xbz7j" in namespace "gc-2712"
  I0423 17:10:07.370296 24 delete.go:95] Deleting pod "simpletest.rc-xjnt6" in namespace "gc-2712"
  I0423 17:10:07.385056 24 delete.go:95] Deleting pod "simpletest.rc-z6x9w" in namespace "gc-2712"
  I0423 17:10:07.401100 24 delete.go:95] Deleting pod "simpletest.rc-zpb9h" in namespace "gc-2712"
  I0423 17:10:07.433553 24 delete.go:95] Deleting pod "simpletest.rc-zqwrc" in namespace "gc-2712"
  I0423 17:10:07.464061 24 delete.go:95] Deleting pod "simpletest.rc-zsq7l" in namespace "gc-2712"
  I0423 17:10:07.509730 24 delete.go:95] Deleting pod "simpletest.rc-zvqm9" in namespace "gc-2712"
  I0423 17:10:07.546168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2712" for this suite. @ 04/23/25 17:10:07.555
• [44.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/23/25 17:10:07.575
  I0423 17:10:07.575950 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:10:07.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:07.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:07.642
  STEP: Creating the pod @ 04/23/25 17:10:07.652
  I0423 17:10:16.208336 24 pod_client.go:173] Successfully updated pod "annotationupdate2d76ec70-3f10-46b9-bbb1-0d493808cb60"
  I0423 17:10:18.219888 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9114" for this suite. @ 04/23/25 17:10:18.222
• [10.652 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/23/25 17:10:18.228
  I0423 17:10:18.228168 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 17:10:18.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:18.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:18.24
  STEP: create the rc @ 04/23/25 17:10:18.241
  W0423 17:10:18.243873      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/23/25 17:10:23.248
  STEP: wait for all pods to be garbage collected @ 04/23/25 17:10:23.253
  STEP: Gathering metrics @ 04/23/25 17:10:28.259
  I0423 17:10:28.299656 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 17:10:28.299901 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4271" for this suite. @ 04/23/25 17:10:28.302
• [10.078 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/23/25 17:10:28.307
  I0423 17:10:28.307054 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:10:28.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:28.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:28.318
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:10:28.321
  STEP: Saw pod success @ 04/23/25 17:10:30.341
  I0423 17:10:30.343765 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-f48041d5-6742-4f1d-b358-bd0838c51b6c container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:10:30.347
  I0423 17:10:30.355163 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-794" for this suite. @ 04/23/25 17:10:30.358
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 04/23/25 17:10:30.365
  I0423 17:10:30.365115 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pv @ 04/23/25 17:10:30.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:30.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:30.375
  STEP: Creating initial PV and PVC @ 04/23/25 17:10:30.378
  I0423 17:10:30.378320 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9648" @ 04/23/25 17:10:30.388
  STEP: Listing PVCs in namespace "pv-9648" @ 04/23/25 17:10:30.392
  STEP: Reading "pvc-2gfwv" Status @ 04/23/25 17:10:30.397
  STEP: Reading "pv-9648-kct7d" Status @ 04/23/25 17:10:30.402
  STEP: Patching "pvc-2gfwv" Status @ 04/23/25 17:10:30.414
  STEP: Patching "pv-9648-kct7d" Status @ 04/23/25 17:10:30.422
  STEP: Updating "pvc-2gfwv" Status @ 04/23/25 17:10:30.427
  STEP: Updating "pv-9648-kct7d" Status @ 04/23/25 17:10:30.438
  I0423 17:10:30.448201 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0423 17:10:30.448279 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-2gfwv"
  I0423 17:10:30.453480 24 pv.go:193] Deleting PersistentVolume "pv-9648-kct7d"
  I0423 17:10:30.459670 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9648" for this suite. @ 04/23/25 17:10:30.465
• [0.105 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/23/25 17:10:30.47
  I0423 17:10:30.470211 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 17:10:30.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:30.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:30.489
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/23/25 17:10:30.492
  I0423 17:10:30.492958 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-8134 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0423 17:10:30.689948 24 builder.go:146] stderr: ""
  I0423 17:10:30.690015 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/23/25 17:10:30.69
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/23/25 17:10:35.741
  I0423 17:10:35.741303 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-8134 get pod e2e-test-httpd-pod -o json'
  I0423 17:10:35.789221 24 builder.go:146] stderr: ""
  I0423 17:10:35.789276 24 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"124985e6bbe6abfdea13d04d6829c5660d38d984e08bbe65eeb698559fc6a058\",\n            \"cni.projectcalico.org/podIP\": \"10.200.131.175/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.200.131.175/32\"\n        },\n        \"creationTimestamp\": \"2025-04-23T17:10:30Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8134\",\n        \"resourceVersion\": \"35678\",\n        \"uid\": \"c670fa91-3df3-4a84-b397-d3b56bd6047b\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-lnzn5\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"worker00\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-lnzn5\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T17:10:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T17:10:30Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T17:10:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T17:10:32Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-23T17:10:30Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://bd8bd6fb061cf6208ea47471982d016ed403518c47d6f29fff85b3702ada3f64\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-04-23T17:10:31Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.58.100\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.58.100\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.131.175\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.131.175\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-04-23T17:10:30Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/23/25 17:10:35.789
  I0423 17:10:35.789339 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-8134 replace -f -'
  I0423 17:10:35.865796 24 builder.go:146] stderr: ""
  I0423 17:10:35.865835 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/23/25 17:10:35.865
  I0423 17:10:35.867317 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-8134 delete pods e2e-test-httpd-pod'
  I0423 17:10:37.212171 24 builder.go:146] stderr: ""
  I0423 17:10:37.212197 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0423 17:10:37.212267 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8134" for this suite. @ 04/23/25 17:10:37.214
• [6.747 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/23/25 17:10:37.217
  I0423 17:10:37.217371 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 17:10:37.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:37.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:37.225
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/23/25 17:10:37.226
  STEP: Saw pod success @ 04/23/25 17:10:41.244
  I0423 17:10:41.247385 24 output.go:207] Trying to get logs from node worker00 pod pod-c446a0a7-7240-45e4-ac5f-50e8328c227f container test-container: <nil>
  STEP: delete the pod @ 04/23/25 17:10:41.251
  I0423 17:10:41.260383 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3181" for this suite. @ 04/23/25 17:10:41.261
• [4.047 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 04/23/25 17:10:41.264
  I0423 17:10:41.264345 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 17:10:41.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:41.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:41.271
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 17:10:41.373
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 17:10:41.376
  I0423 17:10:41.467384 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 17:10:41.467477 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  I0423 17:10:42.391015 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 17:10:42.392621 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  I0423 17:10:43.386297 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 17:10:43.386337 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 04/23/25 17:10:43.389
  I0423 17:10:43.396737 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/23/25 17:10:43.396
  I0423 17:10:43.412923 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/23/25 17:10:43.412
  I0423 17:10:43.415041 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0423 17:10:43.415227 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.415505 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.416217 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.416262 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9238 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 17:10:43.416292 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/23/25 17:10:43.416
  STEP: watching for the daemon set status to be patched @ 04/23/25 17:10:43.422
  I0423 17:10:43.423545 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0423 17:10:43.423601 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.424778 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.425787 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.425817 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9238 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0423 17:10:43.426609 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0423 17:10:43.426855 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9238 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0423 17:10:43.428345 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 17:10:43.43
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9238, will wait for the garbage collector to delete the pods @ 04/23/25 17:10:43.43
  I0423 17:10:43.490600 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.503381ms
  I0423 17:10:43.591882 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.273226ms
  I0423 17:10:45.495533 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 17:10:45.495614 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 17:10:45.498268 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35856"},"items":null}

  I0423 17:10:45.499692 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35856"},"items":null}

  I0423 17:10:45.503250 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9238" for this suite. @ 04/23/25 17:10:45.504
• [4.242 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 04/23/25 17:10:45.506
  I0423 17:10:45.506976 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 17:10:45.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:10:45.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:10:45.515
  STEP: Creating pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164 @ 04/23/25 17:10:45.517
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 17:10:47.53
  I0423 17:10:47.534750 24 container_probe.go:1749] Initial restart count of pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 is 0
  I0423 17:10:47.536710 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:10:49.542601 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:10:51.549524 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:10:53.556688 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:10:55.561241 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:10:57.564699 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:10:59.570094 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:01.576607 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:03.583883 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:05.595034 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:07.604678 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:09.611504 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:11.618519 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:13.623964 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:15.630585 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:17.639625 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:19.646570 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:21.650203 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:23.657779 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:25.664783 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:27.672153 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:29.678027 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:31.683896 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:33.687898 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:35.692981 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:37.700340 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:39.703643 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:41.706426 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:43.714572 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:45.721375 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:47.728731 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:49.732667 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:51.736081 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:53.738862 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:55.743424 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:57.749336 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:11:59.755011 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:01.760705 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:03.764916 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:05.772015 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:07.778181 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:09.784002 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:11.789111 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:13.791797 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:15.799381 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:17.805515 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:19.810255 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:21.812309 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:23.819322 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:25.827936 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:27.835551 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:29.839396 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:31.842648 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:33.847410 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:35.853811 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:37.860086 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:39.865777 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:41.869806 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:43.876283 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:45.880789 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:47.886803 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:49.891139 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:51.894024 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:53.904094 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:55.912625 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:57.920504 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:12:59.926200 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:01.931062 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:03.937862 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:05.944130 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:07.954398 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:09.960091 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:11.966670 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:13.973062 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:15.980028 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:17.986787 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:19.992280 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:21.998003 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:24.006954 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:26.011729 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:28.017334 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:30.022039 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:32.027699 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:34.034783 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:36.040332 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:38.047007 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:40.052151 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:42.058659 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:44.066229 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:46.073997 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:48.080574 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:50.082973 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:52.089140 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:54.097762 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:56.100280 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:13:58.108108 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:00.111720 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:02.117103 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:04.124110 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:06.128363 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:08.134832 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:10.140365 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:12.145099 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:14.148664 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:16.157994 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:18.165276 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:20.172285 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:22.180907 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:24.186120 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:26.194465 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:28.199220 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:30.204485 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:32.210600 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:34.213479 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:36.219351 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:38.226603 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:40.229912 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:42.234948 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:44.240894 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  I0423 17:14:46.245018 24 container_probe.go:1759] Get pod test-webserver-a0c96563-8b39-49a6-9557-be53b985b542 in namespace container-probe-3164
  STEP: deleting the pod @ 04/23/25 17:14:48.247
  I0423 17:14:48.276324 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3164" for this suite. @ 04/23/25 17:14:48.286
• [242.782 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 04/23/25 17:14:48.289
  I0423 17:14:48.289588 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 17:14:48.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:14:48.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:14:48.302
  STEP: creating a replication controller @ 04/23/25 17:14:48.304
  I0423 17:14:48.304672 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 create -f -'
  I0423 17:14:48.406157 24 builder.go:146] stderr: ""
  I0423 17:14:48.406258 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/23/25 17:14:48.406
  I0423 17:14:48.406346 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 17:14:48.484421 24 builder.go:146] stderr: ""
  I0423 17:14:48.484804 24 builder.go:147] stdout: "update-demo-nautilus-s7jsk update-demo-nautilus-tvf8l "
  I0423 17:14:48.485074 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods update-demo-nautilus-s7jsk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 17:14:48.533328 24 builder.go:146] stderr: ""
  I0423 17:14:48.533472 24 builder.go:147] stdout: ""
  I0423 17:14:48.533484 24 kubectl.go:2509] update-demo-nautilus-s7jsk is created but not running
  I0423 17:14:53.535976 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0423 17:14:53.582965 24 builder.go:146] stderr: ""
  I0423 17:14:53.582992 24 builder.go:147] stdout: "update-demo-nautilus-s7jsk update-demo-nautilus-tvf8l "
  I0423 17:14:53.583032 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods update-demo-nautilus-s7jsk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 17:14:53.632785 24 builder.go:146] stderr: ""
  I0423 17:14:53.632813 24 builder.go:147] stdout: "true"
  I0423 17:14:53.632846 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods update-demo-nautilus-s7jsk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 17:14:53.672671 24 builder.go:146] stderr: ""
  I0423 17:14:53.672707 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 17:14:53.672716 24 kubectl.go:2400] validating pod update-demo-nautilus-s7jsk
  I0423 17:14:53.680011 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 17:14:53.680169 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 17:14:53.680191 24 kubectl.go:2527] update-demo-nautilus-s7jsk is verified up and running
  I0423 17:14:53.680311 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods update-demo-nautilus-tvf8l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0423 17:14:53.721329 24 builder.go:146] stderr: ""
  I0423 17:14:53.721361 24 builder.go:147] stdout: "true"
  I0423 17:14:53.721396 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods update-demo-nautilus-tvf8l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0423 17:14:53.761218 24 builder.go:146] stderr: ""
  I0423 17:14:53.761256 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0423 17:14:53.761274 24 kubectl.go:2400] validating pod update-demo-nautilus-tvf8l
  I0423 17:14:53.765710 24 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0423 17:14:53.765757 24 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0423 17:14:53.765769 24 kubectl.go:2527] update-demo-nautilus-tvf8l is verified up and running
  STEP: using delete to clean up resources @ 04/23/25 17:14:53.765
  I0423 17:14:53.765938 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 delete --grace-period=0 --force -f -'
  I0423 17:14:53.810882 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:14:53.810916 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0423 17:14:53.810950 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get rc,svc -l name=update-demo --no-headers'
  I0423 17:14:53.902563 24 builder.go:146] stderr: "No resources found in kubectl-5741 namespace.\n"
  I0423 17:14:53.902623 24 builder.go:147] stdout: ""
  I0423 17:14:53.902962 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-5741 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0423 17:14:53.999671 24 builder.go:146] stderr: ""
  I0423 17:14:53.999726 24 builder.go:147] stdout: ""
  I0423 17:14:53.999839 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5741" for this suite. @ 04/23/25 17:14:54.004
• [5.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/23/25 17:14:54.008
  I0423 17:14:54.008511 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename watch @ 04/23/25 17:14:54.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:14:54.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:14:54.033
  STEP: creating a watch on configmaps with a certain label @ 04/23/25 17:14:54.039
  STEP: creating a new configmap @ 04/23/25 17:14:54.04
  STEP: modifying the configmap once @ 04/23/25 17:14:54.046
  STEP: changing the label value of the configmap @ 04/23/25 17:14:54.052
  STEP: Expecting to observe a delete notification for the watched object @ 04/23/25 17:14:54.062
  I0423 17:14:54.062522 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  be7fb123-6b1e-4084-b85d-de18487dbb53 36831 0 2025-04-23 17:14:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 17:14:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:14:54.062692 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  be7fb123-6b1e-4084-b85d-de18487dbb53 36833 0 2025-04-23 17:14:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 17:14:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:14:54.062763 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  be7fb123-6b1e-4084-b85d-de18487dbb53 36836 0 2025-04-23 17:14:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 17:14:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/23/25 17:14:54.062
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/23/25 17:14:54.067
  STEP: changing the label value of the configmap back @ 04/23/25 17:15:04.07
  STEP: modifying the configmap a third time @ 04/23/25 17:15:04.085
  STEP: deleting the configmap @ 04/23/25 17:15:04.09
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/23/25 17:15:04.094
  I0423 17:15:04.094416 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  be7fb123-6b1e-4084-b85d-de18487dbb53 36895 0 2025-04-23 17:14:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:04.094530 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  be7fb123-6b1e-4084-b85d-de18487dbb53 36896 0 2025-04-23 17:14:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:04.094573 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  be7fb123-6b1e-4084-b85d-de18487dbb53 36898 0 2025-04-23 17:14:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:04.094622 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5653" for this suite. @ 04/23/25 17:15:04.096
• [10.092 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/23/25 17:15:04.1
  I0423 17:15:04.100816 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/23/25 17:15:04.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:04.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:04.11
  STEP: creating @ 04/23/25 17:15:04.112
  STEP: getting @ 04/23/25 17:15:04.123
  STEP: listing in namespace @ 04/23/25 17:15:04.125
  STEP: patching @ 04/23/25 17:15:04.127
  STEP: deleting @ 04/23/25 17:15:04.135
  I0423 17:15:04.139844 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3313" for this suite. @ 04/23/25 17:15:04.197
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/23/25 17:15:04.203
  I0423 17:15:04.203601 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 17:15:04.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:04.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:04.212
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/23/25 17:15:04.214
  STEP: Saw pod success @ 04/23/25 17:15:08.227
  I0423 17:15:08.231201 24 output.go:207] Trying to get logs from node worker00 pod pod-75adb0db-871c-4323-ad53-334ea27d3200 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 17:15:08.243
  I0423 17:15:08.252168 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5427" for this suite. @ 04/23/25 17:15:08.255
• [4.055 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 04/23/25 17:15:08.259
  I0423 17:15:08.259654 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 17:15:08.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:08.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:08.27
  STEP: Creating a test namespace @ 04/23/25 17:15:08.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:08.278
  STEP: Creating a service in the namespace @ 04/23/25 17:15:08.279
  STEP: Deleting the namespace @ 04/23/25 17:15:08.285
  STEP: Waiting for the namespace to be removed. @ 04/23/25 17:15:08.294
  STEP: Recreating the namespace @ 04/23/25 17:15:14.302
  STEP: Verifying there is no service in the namespace @ 04/23/25 17:15:14.31
  I0423 17:15:14.312153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1502" for this suite. @ 04/23/25 17:15:14.313
  STEP: Destroying namespace "nsdeletetest-6219" for this suite. @ 04/23/25 17:15:14.317
  I0423 17:15:14.318754 24 framework.go:370] Namespace nsdeletetest-6219 was already deleted
  STEP: Destroying namespace "nsdeletetest-2433" for this suite. @ 04/23/25 17:15:14.318
• [6.064 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/23/25 17:15:14.323
  I0423 17:15:14.323266 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/23/25 17:15:14.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:14.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:14.332
  STEP: Cleaning up the secret @ 04/23/25 17:15:16.352
  STEP: Cleaning up the configmap @ 04/23/25 17:15:16.369
  STEP: Cleaning up the pod @ 04/23/25 17:15:16.374
  I0423 17:15:16.390053 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4162" for this suite. @ 04/23/25 17:15:16.394
• [2.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 04/23/25 17:15:16.398
  I0423 17:15:16.398824 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename namespaces @ 04/23/25 17:15:16.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:16.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:16.411
  STEP: creating a Namespace @ 04/23/25 17:15:16.412
  STEP: patching the Namespace @ 04/23/25 17:15:16.419
  STEP: get the Namespace and ensuring it has the label @ 04/23/25 17:15:16.424
  I0423 17:15:16.427023 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1854" for this suite. @ 04/23/25 17:15:16.499
  STEP: Destroying namespace "nspatchtest-ca1e2d80-68af-49ce-8507-6e354ee57efc-1225" for this suite. @ 04/23/25 17:15:16.507
• [0.115 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/23/25 17:15:16.513
  I0423 17:15:16.513561 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 17:15:16.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:16.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:16.523
  I0423 17:15:18.555140 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4178" for this suite. @ 04/23/25 17:15:18.558
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/23/25 17:15:18.563
  I0423 17:15:18.563123 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 17:15:18.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:18.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:18.572
  I0423 17:15:18.574002 24 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0423 17:15:18.576286 24 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0423 17:15:18.581388 24 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0423 17:15:20.591282 24 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0423 17:15:20.594256 24 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0423 17:15:20.610032 24 deployment.go:314] Updating deployment test-recreate-deployment
  I0423 17:15:20.610060 24 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0423 17:15:20.664945 24 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7899",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb606eae-37ca-43c0-b044-d0ea40aea973",
      ResourceVersion: (string) (len=5) "37128",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 17:15:20.691708 24 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7899",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9406e852-f3c1-4a40-bd1a-246c54b626a8",
      ResourceVersion: (string) (len=5) "37126",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "eb606eae-37ca-43c0-b044-d0ea40aea973",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 62 36 30 36 65  61 65 2d 33 37 63 61 2d  |\"eb606eae-37ca-|
              00000120  34 33 63 30 2d 62 30 34  34 2d 64 30 65 61 34 30  |43c0-b044-d0ea40|
              00000130  61 65 61 39 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aea973\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 17:15:20.692399 24 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0423 17:15:20.692629 24 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7899",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "450f4e7d-2389-453d-a34a-bf49eede9243",
      ResourceVersion: (string) (len=5) "37116",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "eb606eae-37ca-43c0-b044-d0ea40aea973",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 62 36 30 36 65  61 65 2d 33 37 63 61 2d  |\"eb606eae-37ca-|
              00000120  34 33 63 30 2d 62 30 34  34 2d 64 30 65 61 34 30  |43c0-b044-d0ea40|
              00000130  61 65 61 39 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aea973\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 17:15:20.699857 24 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-s77q4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-s77q4",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7899",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "234c0288-1ec3-46ae-b693-81edff93d55a",
      ResourceVersion: (string) (len=5) "37127",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "9406e852-f3c1-4a40-bd1a-246c54b626a8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 34  30 36 65 38 35 32 2d 66  |d\":\"9406e852-f|
              00000090  33 63 31 2d 34 61 34 30  2d 62 64 31 61 2d 32 34  |3c1-4a40-bd1a-24|
              000000a0  36 63 35 34 62 36 32 36  61 38 5c 22 7d 22 3a 7b  |6c54b626a8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrqgl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrqgl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:15:20.706609 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7899" for this suite. @ 04/23/25 17:15:20.711
• [2.151 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/23/25 17:15:20.717
  I0423 17:15:20.717273 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename deployment @ 04/23/25 17:15:20.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:20.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:20.727
  STEP: creating a Deployment @ 04/23/25 17:15:20.733
  I0423 17:15:20.733513 24 deployment.go:507] Creating simple deployment test-deployment-w4gnz
  I0423 17:15:20.739750 24 deployment.go:223] deployment "test-deployment-w4gnz" doesn't have the required revision set
  STEP: Getting /status @ 04/23/25 17:15:22.749
  I0423 17:15:22.752295 24 deployment.go:532] Deployment test-deployment-w4gnz has Conditions: [{Available True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w4gnz-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/23/25 17:15:22.752
  I0423 17:15:22.759123 24 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 17, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 17, 15, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 23, 17, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 23, 17, 15, 20, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-w4gnz-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/23/25 17:15:22.759
  I0423 17:15:22.760290 24 deployment.go:579] Observed &Deployment event: ADDED
  I0423 17:15:22.760362 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w4gnz-6fb4c74686"}
  I0423 17:15:22.761155 24 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 17:15:22.761286 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w4gnz-6fb4c74686"}
  I0423 17:15:22.761296 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 17:15:22.761570 24 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 17:15:22.761648 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 17:15:22.761660 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-w4gnz-6fb4c74686" is progressing.}
  I0423 17:15:22.761724 24 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 17:15:22.761736 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 17:15:22.761746 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w4gnz-6fb4c74686" has successfully progressed.}
  I0423 17:15:22.761788 24 deployment.go:579] Observed &Deployment event: MODIFIED
  I0423 17:15:22.761953 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 17:15:22.762092 24 deployment.go:575] Observed Deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w4gnz-6fb4c74686" has successfully progressed.}
  I0423 17:15:22.762199 24 deployment.go:572] Found Deployment test-deployment-w4gnz in namespace deployment-5961 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 17:15:22.762225 24 deployment.go:583] Deployment test-deployment-w4gnz has an updated status
  STEP: patching the Statefulset Status @ 04/23/25 17:15:22.762
  I0423 17:15:22.762248 24 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0423 17:15:22.766533 24 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/23/25 17:15:22.766
  I0423 17:15:22.768110 24 deployment.go:616] Observed &Deployment event: ADDED
  I0423 17:15:22.768135 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w4gnz-6fb4c74686"}
  I0423 17:15:22.768180 24 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 17:15:22.768193 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-w4gnz-6fb4c74686"}
  I0423 17:15:22.768201 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 17:15:22.768245 24 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 17:15:22.768398 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0423 17:15:22.768413 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:20 +0000 UTC 2025-04-23 17:15:20 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-w4gnz-6fb4c74686" is progressing.}
  I0423 17:15:22.768499 24 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 17:15:22.768520 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 17:15:22.768528 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w4gnz-6fb4c74686" has successfully progressed.}
  I0423 17:15:22.768571 24 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 17:15:22.768590 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:22 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0423 17:15:22.768599 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-23 17:15:22 +0000 UTC 2025-04-23 17:15:20 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-w4gnz-6fb4c74686" has successfully progressed.}
  I0423 17:15:22.768608 24 deployment.go:612] Observed deployment test-deployment-w4gnz in namespace deployment-5961 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0423 17:15:22.768648 24 deployment.go:616] Observed &Deployment event: MODIFIED
  I0423 17:15:22.768660 24 deployment.go:609] Found deployment test-deployment-w4gnz in namespace deployment-5961 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0423 17:15:22.768668 24 deployment.go:620] Deployment test-deployment-w4gnz has a patched status
  I0423 17:15:22.774358 24 deployment.go:633] Deployment "test-deployment-w4gnz":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-w4gnz",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5961",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0d3c9e6-7011-496b-8dbf-e339b882d5a2",
      ResourceVersion: (string) (len=5) "37181",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-w4gnz-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0423 17:15:22.847220 24 deployment.go:40] New ReplicaSet "test-deployment-w4gnz-6fb4c74686" of Deployment "test-deployment-w4gnz":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-w4gnz-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5961",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08bee70a-53f0-4cf5-b3a7-e8370d399f92",
      ResourceVersion: (string) (len=5) "37176",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-w4gnz",
          UID: (types.UID) (len=36) "f0d3c9e6-7011-496b-8dbf-e339b882d5a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 66 30 64  |k:{\"uid\":\"f0d|
              00000120  33 63 39 65 36 2d 37 30  31 31 2d 34 39 36 62 2d  |3c9e6-7011-496b-|
              00000130  38 64 62 66 2d 65 33 33  39 62 38 38 32 64 35 61  |8dbf-e339b882d5a|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0423 17:15:22.852201 24 deployment.go:68] Pod "test-deployment-w4gnz-6fb4c74686-7rwcg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-w4gnz-6fb4c74686-7rwcg",
      GenerateName: (string) (len=33) "test-deployment-w4gnz-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-5961",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "268d57dc-d52a-4b4d-95b2-3108cd3a773c",
      ResourceVersion: (string) (len=5) "37175",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a4446e0c82b0d1086964acbbf2ded8a37920739c2049ab0f79a091b0eca60bdb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "10.200.131.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "10.200.131.158/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-w4gnz-6fb4c74686",
          UID: (types.UID) (len=36) "08bee70a-53f0-4cf5-b3a7-e8370d399f92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 38 62 65 65 37 30  61 2d 35 33 66 30 2d 34  |"08bee70a-53f0-4|
              000000a0  63 66 35 2d 62 33 61 37  2d 65 38 33 37 30 64 33  |cf5-b3a7-e8370d3|
              000000b0  39 39 66 39 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |99f92\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025321,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 30 30 2e 31 33 31  2e 31 35 38 5c 22 7d 22  |.200.131.158\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sd827",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sd827",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=8) "worker00",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025322,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881025320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.58.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.58.100"
        }
      },
      PodIP: (string) (len=14) "10.200.131.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "10.200.131.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881025320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881025321,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://742847c42aea39011a9050742c9e542f8dcf626166906a59f7332378b815fe6f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>,
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0423 17:15:22.854765 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5961" for this suite. @ 04/23/25 17:15:22.859
• [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/23/25 17:15:22.866
  I0423 17:15:22.866760 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 17:15:22.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:22.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:22.881
  STEP: Creating secret with name secret-test-3264cf75-3fc9-4f8e-a9d7-878233002c47 @ 04/23/25 17:15:22.884
  STEP: Creating a pod to test consume secrets @ 04/23/25 17:15:22.887
  STEP: Saw pod success @ 04/23/25 17:15:26.907
  I0423 17:15:26.911610 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-43fec84c-9e11-4904-84a9-187ff331933e container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 17:15:26.916
  I0423 17:15:26.936886 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1275" for this suite. @ 04/23/25 17:15:26.939
• [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 04/23/25 17:15:26.943
  I0423 17:15:26.943553 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename disruption @ 04/23/25 17:15:26.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:26.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:26.953
  STEP: Creating a kubernetes client @ 04/23/25 17:15:26.954
  I0423 17:15:26.954834 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename disruption-2 @ 04/23/25 17:15:26.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:26.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:26.962
  STEP: Waiting for the pdb to be processed @ 04/23/25 17:15:26.965
  STEP: Waiting for the pdb to be processed @ 04/23/25 17:15:28.978
  STEP: Waiting for the pdb to be processed @ 04/23/25 17:15:28.987
  STEP: listing a collection of PDBs across all namespaces @ 04/23/25 17:15:30.992
  STEP: listing a collection of PDBs in namespace disruption-6198 @ 04/23/25 17:15:30.995
  STEP: deleting a collection of PDBs @ 04/23/25 17:15:30.997
  STEP: Waiting for the PDB collection to be deleted @ 04/23/25 17:15:31.003
  I0423 17:15:31.005256 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8267" for this suite. @ 04/23/25 17:15:31.006
  I0423 17:15:31.009738 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6198" for this suite. @ 04/23/25 17:15:31.112
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 04/23/25 17:15:31.122
  I0423 17:15:31.122982 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 17:15:31.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:31.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:31.135
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/23/25 17:15:31.137
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/23/25 17:15:31.138
  STEP: creating a pod to probe DNS @ 04/23/25 17:15:31.138
  STEP: submitting the pod to kubernetes @ 04/23/25 17:15:31.139
  STEP: retrieving the pod @ 04/23/25 17:15:33.152
  STEP: looking for the results for each expected name from probers @ 04/23/25 17:15:33.155
  I0423 17:15:33.163379 24 dns_common.go:546] DNS probes using dns-7150/dns-test-002da480-53fa-4f67-8d6c-ea93304b1653 succeeded

  STEP: deleting the pod @ 04/23/25 17:15:33.163
  I0423 17:15:33.170042 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7150" for this suite. @ 04/23/25 17:15:33.173
• [2.056 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/23/25 17:15:33.178
  I0423 17:15:33.179011 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename watch @ 04/23/25 17:15:33.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:33.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:33.194
  STEP: creating a watch on configmaps with label A @ 04/23/25 17:15:33.196
  STEP: creating a watch on configmaps with label B @ 04/23/25 17:15:33.197
  STEP: creating a watch on configmaps with label A or B @ 04/23/25 17:15:33.198
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/23/25 17:15:33.199
  I0423 17:15:33.201780 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37354 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:33.201899 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37354 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/23/25 17:15:33.202
  I0423 17:15:33.204911 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37355 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:33.205039 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37355 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/23/25 17:15:33.205
  I0423 17:15:33.208075 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37356 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:33.208120 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37356 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/23/25 17:15:33.208
  I0423 17:15:33.211397 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37357 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:33.211512 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6463  4c1247e1-3d73-44f6-8df9-93171727f2d4 37357 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/23/25 17:15:33.211
  I0423 17:15:33.214053 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6463  14aee5f3-bc6b-44bf-bc3a-a5418b0c256f 37358 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:33.214101 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6463  14aee5f3-bc6b-44bf-bc3a-a5418b0c256f 37358 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/23/25 17:15:43.217
  I0423 17:15:43.233091 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6463  14aee5f3-bc6b-44bf-bc3a-a5418b0c256f 37423 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:43.233138 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6463  14aee5f3-bc6b-44bf-bc3a-a5418b0c256f 37423 0 2025-04-23 17:15:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-23 17:15:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0423 17:15:53.233771 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6463" for this suite. @ 04/23/25 17:15:53.24
• [20.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 04/23/25 17:15:53.255
  I0423 17:15:53.255711 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 17:15:53.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:53.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:53.271
  I0423 17:15:53.273633 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3944" for this suite. @ 04/23/25 17:15:53.341
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 04/23/25 17:15:53.348
  I0423 17:15:53.348791 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:15:53.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:53.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:53.357
  STEP: Setting up server cert @ 04/23/25 17:15:53.365
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:15:53.544
  STEP: Deploying the webhook pod @ 04/23/25 17:15:53.547
  STEP: Wait for the deployment to be ready @ 04/23/25 17:15:53.553
  I0423 17:15:53.556484 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/23/25 17:15:55.565
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:15:55.569
  I0423 17:15:56.570269 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/23/25 17:15:56.604
  STEP: Creating a configMap that should be mutated @ 04/23/25 17:15:56.61
  STEP: Deleting the collection of validation webhooks @ 04/23/25 17:15:56.623
  STEP: Creating a configMap that should not be mutated @ 04/23/25 17:15:56.637
  I0423 17:15:56.661453 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9419" for this suite. @ 04/23/25 17:15:56.664
  STEP: Destroying namespace "webhook-markers-2778" for this suite. @ 04/23/25 17:15:56.67
• [3.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/23/25 17:15:56.677
  I0423 17:15:56.677493 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 17:15:56.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:56.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:56.689
  STEP: Creating secret with name secret-test-297eb0cb-a5ad-4849-8671-fc08caf04747 @ 04/23/25 17:15:56.691
  STEP: Creating a pod to test consume secrets @ 04/23/25 17:15:56.693
  STEP: Saw pod success @ 04/23/25 17:15:58.707
  I0423 17:15:58.711185 24 output.go:207] Trying to get logs from node worker00 pod pod-secrets-9ac2fbd2-f0a9-42a0-8800-e5bf05e2041b container secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 17:15:58.714
  I0423 17:15:58.723099 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8429" for this suite. @ 04/23/25 17:15:58.724
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/23/25 17:15:58.728
  I0423 17:15:58.728805 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename chunking @ 04/23/25 17:15:58.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:15:58.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:15:58.737
  STEP: creating a large number of resources @ 04/23/25 17:15:58.739
  STEP: retrieving the first page @ 04/23/25 17:16:16.432
  I0423 17:16:16.486320 24 chunking.go:163] Retrieved 40/40 results with rv 38075 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/23/25 17:16:16.486
  I0423 17:16:36.492104 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:16:56.493489 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:17:16.494145 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:17:36.495249 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:17:56.491487 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:18:16.494305 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:18:36.492854 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:18:56.497300 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:19:16.489832 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:19:36.493734 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:19:56.493032 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:20:16.492295 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:20:36.495926 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:20:56.493923 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:21:16.492263 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:21:36.494969 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:21:56.496569 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:22:16.492850 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzgwNzUsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0423 17:22:36.491770 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0423 17:22:36.491851 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/23/25 17:22:36.491
  STEP: retrieving all remaining pages @ 04/23/25 17:22:36.498
  I0423 17:22:36.501012 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0423 17:22:36.503748 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0423 17:22:36.505966 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0423 17:22:36.508491 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0423 17:22:36.510212 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0423 17:22:36.512713 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0423 17:22:36.514743 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzk0MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0423 17:22:36.516638 24 chunking.go:221] Retrieved 40/40 results with rv 39404 and continue 
  I0423 17:22:36.516743 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-887" for this suite. @ 04/23/25 17:22:36.519
• [397.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/23/25 17:22:36.533
  I0423 17:22:36.533547 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 17:22:36.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:22:36.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:22:36.543
  I0423 17:22:36.546752 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1466" for this suite. @ 04/23/25 17:22:36.621
• [0.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/23/25 17:22:36.629
  I0423 17:22:36.629622 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 17:22:36.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:22:36.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:22:36.642
  I0423 17:22:36.643503 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: creating the pod @ 04/23/25 17:22:36.643
  STEP: submitting the pod to kubernetes @ 04/23/25 17:22:36.643
  I0423 17:22:38.671151 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9101" for this suite. @ 04/23/25 17:22:38.673
• [2.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 04/23/25 17:22:38.677
  I0423 17:22:38.677467 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 17:22:38.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:22:38.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:22:38.686
  STEP: Counting existing ResourceQuota @ 04/23/25 17:22:55.693
  STEP: Creating a ResourceQuota @ 04/23/25 17:23:00.7
  STEP: Ensuring resource quota status is calculated @ 04/23/25 17:23:00.718
  STEP: Creating a ConfigMap @ 04/23/25 17:23:02.725
  STEP: Ensuring resource quota status captures configMap creation @ 04/23/25 17:23:02.734
  STEP: Deleting a ConfigMap @ 04/23/25 17:23:04.74
  STEP: Ensuring resource quota status released usage @ 04/23/25 17:23:04.745
  I0423 17:23:06.752181 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3024" for this suite. @ 04/23/25 17:23:06.756
• [28.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/23/25 17:23:06.76
  I0423 17:23:06.760874 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/23/25 17:23:06.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:23:06.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:23:06.775
  I0423 17:23:06.777139 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 17:23:09.832279 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5066" for this suite. @ 04/23/25 17:23:09.839
• [3.084 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/23/25 17:23:09.845
  I0423 17:23:09.846043 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 17:23:09.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:23:09.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:23:09.858
  STEP: Creating a suspended cronjob @ 04/23/25 17:23:09.861
  STEP: Ensuring no jobs are scheduled @ 04/23/25 17:23:09.864
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/23/25 17:28:09.864
  STEP: Removing cronjob @ 04/23/25 17:28:09.869
  I0423 17:28:09.875372 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5147" for this suite. @ 04/23/25 17:28:09.878
• [300.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/23/25 17:28:09.882
  I0423 17:28:09.882258 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename discovery @ 04/23/25 17:28:09.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:09.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:09.893
  STEP: Setting up server cert @ 04/23/25 17:28:09.896
  I0423 17:28:10.047856 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0423 17:28:10.048792 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0423 17:28:10.048811 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0423 17:28:10.048817 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0423 17:28:10.048823 24 discovery.go:139] Checking APIGroup: apps
  I0423 17:28:10.049923 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0423 17:28:10.049941 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0423 17:28:10.049948 24 discovery.go:154] apps/v1 matches apps/v1
  I0423 17:28:10.049953 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0423 17:28:10.050600 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0423 17:28:10.050752 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0423 17:28:10.050760 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0423 17:28:10.050766 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0423 17:28:10.051299 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0423 17:28:10.051327 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1} {authentication.k8s.io/v1beta1 v1beta1}]
  I0423 17:28:10.051333 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0423 17:28:10.051339 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0423 17:28:10.052050 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0423 17:28:10.052103 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0423 17:28:10.052111 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0423 17:28:10.052117 24 discovery.go:139] Checking APIGroup: autoscaling
  I0423 17:28:10.052602 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0423 17:28:10.052616 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0423 17:28:10.052621 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0423 17:28:10.052626 24 discovery.go:139] Checking APIGroup: batch
  I0423 17:28:10.053112 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0423 17:28:10.053128 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0423 17:28:10.053133 24 discovery.go:154] batch/v1 matches batch/v1
  I0423 17:28:10.053139 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0423 17:28:10.054057 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0423 17:28:10.054075 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0423 17:28:10.054085 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0423 17:28:10.054092 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0423 17:28:10.054484 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0423 17:28:10.054496 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1beta1 v1beta1}]
  I0423 17:28:10.054502 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0423 17:28:10.054507 24 discovery.go:139] Checking APIGroup: policy
  I0423 17:28:10.055116 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0423 17:28:10.055127 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0423 17:28:10.055133 24 discovery.go:154] policy/v1 matches policy/v1
  I0423 17:28:10.055142 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0423 17:28:10.055704 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0423 17:28:10.055754 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0423 17:28:10.055839 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0423 17:28:10.055845 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0423 17:28:10.056240 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0423 17:28:10.056295 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1} {storage.k8s.io/v1alpha1 v1alpha1}]
  I0423 17:28:10.056301 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0423 17:28:10.056306 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0423 17:28:10.056823 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0423 17:28:10.056835 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1beta1 v1beta1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
  I0423 17:28:10.056842 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0423 17:28:10.056847 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0423 17:28:10.058178 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0423 17:28:10.058209 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0423 17:28:10.058329 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0423 17:28:10.058336 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0423 17:28:10.059092 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0423 17:28:10.059111 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0423 17:28:10.059118 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0423 17:28:10.059125 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0423 17:28:10.059536 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0423 17:28:10.059551 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1} {coordination.k8s.io/v1alpha2 v1alpha2}]
  I0423 17:28:10.059556 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0423 17:28:10.059646 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0423 17:28:10.060051 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0423 17:28:10.060065 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0423 17:28:10.060100 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0423 17:28:10.060105 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0423 17:28:10.060694 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0423 17:28:10.060710 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0423 17:28:10.060716 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0423 17:28:10.060722 24 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0423 17:28:10.061224 24 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1beta1
  I0423 17:28:10.061235 24 discovery.go:148] Versions found [{resource.k8s.io/v1beta1 v1beta1} {resource.k8s.io/v1alpha3 v1alpha3}]
  I0423 17:28:10.061241 24 discovery.go:154] resource.k8s.io/v1beta1 matches resource.k8s.io/v1beta1
  I0423 17:28:10.061246 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0423 17:28:10.061813 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0423 17:28:10.061824 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0423 17:28:10.061829 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0423 17:28:10.061835 24 discovery.go:139] Checking APIGroup: internal.apiserver.k8s.io
  I0423 17:28:10.062508 24 discovery.go:147] PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
  I0423 17:28:10.062528 24 discovery.go:148] Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
  I0423 17:28:10.062535 24 discovery.go:154] internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
  I0423 17:28:10.062543 24 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0423 17:28:10.062882 24 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0423 17:28:10.062897 24 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0423 17:28:10.062904 24 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0423 17:28:10.062910 24 discovery.go:139] Checking APIGroup: snapshot.storage.k8s.io
  I0423 17:28:10.063294 24 discovery.go:147] PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  I0423 17:28:10.063309 24 discovery.go:148] Versions found [{snapshot.storage.k8s.io/v1 v1}]
  I0423 17:28:10.063315 24 discovery.go:154] snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  I0423 17:28:10.063376 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2769" for this suite. @ 04/23/25 17:28:10.065
• [0.185 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/23/25 17:28:10.067
  I0423 17:28:10.067930 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename hostport @ 04/23/25 17:28:10.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:10.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:10.075
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/23/25 17:28:10.167
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.58.101 on the node which pod1 resides and expect scheduled @ 04/23/25 17:28:12.191
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.58.101 but use UDP protocol on the node which pod2 resides @ 04/23/25 17:28:14.217
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/23/25 17:28:18.253
  I0423 17:28:18.253865 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.58.101 http://127.0.0.1:54323/hostname] Namespace:hostport-9301 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:28:18.253893 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:28:18.253970 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-9301/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.58.101+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 @ 04/23/25 17:28:18.354
  I0423 17:28:18.355026 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.58.101:54323/hostname] Namespace:hostport-9301 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:28:18.355039 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:28:18.355225 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-9301/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.58.101%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.58.101, port: 54323 UDP @ 04/23/25 17:28:18.399
  I0423 17:28:18.399736 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.58.101 54323] Namespace:hostport-9301 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:28:18.399749 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:28:18.399791 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/hostport-9301/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.58.101+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0423 17:28:23.447905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9301" for this suite. @ 04/23/25 17:28:23.457
• [13.404 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/23/25 17:28:23.474
  I0423 17:28:23.474163 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 17:28:23.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:23.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:23.483
  STEP: Creating Pod @ 04/23/25 17:28:23.485
  STEP: Reading file content from the nginx-container @ 04/23/25 17:28:25.499
  I0423 17:28:25.499557 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-940 PodName:pod-sharedvolume-cdf227f9-ca6c-4b2c-812e-199751025065 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:28:25.499587 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:28:25.499658 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/emptydir-940/pods/pod-sharedvolume-cdf227f9-ca6c-4b2c-812e-199751025065/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0423 17:28:25.552927 24 exec_util.go:108] Exec stderr: ""
  I0423 17:28:25.553027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-940" for this suite. @ 04/23/25 17:28:25.555
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 04/23/25 17:28:25.558
  I0423 17:28:25.558528 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 17:28:25.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:25.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:25.567
  STEP: Creating service test in namespace statefulset-4955 @ 04/23/25 17:28:25.569
  I0423 17:28:25.579610 24 wait.go:40] Found 0 stateful pods, waiting for 1
  I0423 17:28:35.587979 24 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/23/25 17:28:35.594
  I0423 17:28:35.619091 24 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 17:28:35.619237 24 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0423 17:28:45.617728 24 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 17:28:45.617780 24 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/23/25 17:28:45.621
  STEP: Delete all of the StatefulSets @ 04/23/25 17:28:45.623
  STEP: Verify that StatefulSets have been deleted @ 04/23/25 17:28:45.626
  I0423 17:28:45.630447 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4955
  I0423 17:28:45.644812 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4955" for this suite. @ 04/23/25 17:28:45.653
• [20.098 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 04/23/25 17:28:45.656
  I0423 17:28:45.656691 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 17:28:45.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:45.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:45.67
  STEP: Creating a job @ 04/23/25 17:28:45.672
  STEP: Ensuring job reaches completions @ 04/23/25 17:28:45.676
  I0423 17:28:55.708424 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8651" for this suite. @ 04/23/25 17:28:55.71
• [10.067 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/23/25 17:28:55.723
  I0423 17:28:55.723539 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 17:28:55.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:55.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:55.735
  I0423 17:28:55.736994 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: creating the pod @ 04/23/25 17:28:55.737
  STEP: submitting the pod to kubernetes @ 04/23/25 17:28:55.737
  I0423 17:28:57.791378 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-214" for this suite. @ 04/23/25 17:28:57.793
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/23/25 17:28:57.796
  I0423 17:28:57.796866 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 17:28:57.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:28:57.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:28:57.813
  I0423 17:28:57.825327 24 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0423 17:29:02.836842 24 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/23/25 17:29:02.836
  STEP: Scaling up "test-rs" replicaset @ 04/23/25 17:29:02.836
  I0423 17:29:02.841895 24 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/23/25 17:29:02.841
  I0423 17:29:02.850174 24 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1128 with ReadyReplicas 1, AvailableReplicas 1
  I0423 17:29:02.857896 24 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1128 with ReadyReplicas 1, AvailableReplicas 1
  I0423 17:29:02.866402 24 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1128 with ReadyReplicas 1, AvailableReplicas 1
  I0423 17:29:02.875861 24 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1128 with ReadyReplicas 1, AvailableReplicas 1
  I0423 17:29:04.303229 24 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1128 with ReadyReplicas 2, AvailableReplicas 2
  I0423 17:29:04.309932 24 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1128 with ReadyReplicas 3 found true
  I0423 17:29:04.310173 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1128" for this suite. @ 04/23/25 17:29:04.311
• [6.518 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 04/23/25 17:29:04.315
  I0423 17:29:04.315514 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 17:29:04.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:29:04.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:29:04.325
  STEP: Creating pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985 @ 04/23/25 17:29:04.327
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 17:29:06.342
  I0423 17:29:06.345940 24 container_probe.go:1749] Initial restart count of pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 is 0
  I0423 17:29:06.347539 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:08.355128 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:10.359817 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:12.365294 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:14.373052 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:16.378914 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:18.383536 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:20.389892 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:22.395204 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:24.397238 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:26.403109 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:28.409458 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:30.415700 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:32.419445 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:34.425546 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:36.431222 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:38.441701 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:40.446348 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:42.452687 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:44.460381 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:46.466727 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:48.473344 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:50.480247 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:52.487633 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:54.492365 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:56.497739 24 container_probe.go:1759] Get pod busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 in namespace container-probe-6985
  I0423 17:29:56.497789 24 container_probe.go:1763] Restart count of pod container-probe-6985/busybox-b5b30bbb-b37f-48f6-bd2a-6697b8f5f779 is now 1 (50.15182407s elapsed)
  STEP: deleting the pod @ 04/23/25 17:29:56.497
  I0423 17:29:56.509132 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6985" for this suite. @ 04/23/25 17:29:56.512
• [52.200 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/23/25 17:29:56.515
  I0423 17:29:56.515551 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename runtimeclass @ 04/23/25 17:29:56.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:29:56.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:29:56.529
  I0423 17:29:56.537918 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7184" for this suite. @ 04/23/25 17:29:56.613
• [0.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/23/25 17:29:56.619
  I0423 17:29:56.620361 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 17:29:56.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:29:56.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:29:56.631
  STEP: reading a file in the container @ 04/23/25 17:29:58.652
  I0423 17:29:58.652688 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6897 pod-service-account-9da3244d-61ac-4a7f-9daf-9ee6b1f765ea -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/23/25 17:29:58.747
  I0423 17:29:58.747609 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6897 pod-service-account-9da3244d-61ac-4a7f-9daf-9ee6b1f765ea -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/23/25 17:29:58.821
  I0423 17:29:58.821603 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6897 pod-service-account-9da3244d-61ac-4a7f-9daf-9ee6b1f765ea -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0423 17:29:58.918165 24 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-6897"
  I0423 17:29:58.919599 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6897" for this suite. @ 04/23/25 17:29:58.921
• [2.304 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/23/25 17:29:58.924
  I0423 17:29:58.924151 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/23/25 17:29:58.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:29:58.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:29:58.938
  I0423 17:29:58.940431 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 17:29:59.473489 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5043" for this suite. @ 04/23/25 17:29:59.477
• [0.556 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/23/25 17:29:59.48
  I0423 17:29:59.480412 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 17:29:59.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:29:59.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:29:59.49
  STEP: creating a policy with variables @ 04/23/25 17:29:59.495
  STEP: waiting until the marker is denied @ 04/23/25 17:29:59.506
  STEP: testing a replicated Deployment to be allowed @ 04/23/25 17:30:00.013
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/23/25 17:30:00.025
  I0423 17:30:00.097503 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1445" for this suite. @ 04/23/25 17:30:00.102
• [0.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 04/23/25 17:30:00.108
  I0423 17:30:00.108144 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 17:30:00.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:30:00.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:30:00.119
  I0423 17:30:00.128998 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0423 17:31:00.136342 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/23/25 17:31:00.14
  I0423 17:31:00.140390 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/23/25 17:31:00.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:00.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:00.167
  STEP: Finding an available node @ 04/23/25 17:31:00.168
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/23/25 17:31:00.168
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/23/25 17:31:02.187
  I0423 17:31:02.209770 24 preemption.go:709] found a healthy node: worker00
  STEP: Adding a custom resource @ 04/23/25 17:31:02.215
  I0423 17:31:08.275880 24 preemption.go:828] pods created so far: [1 1 1]
  I0423 17:31:08.275927 24 preemption.go:829] length of pods created so far: 3
  I0423 17:31:10.304838 24 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 04/23/25 17:31:17.306
  STEP: Removing a custom resource @ 04/23/25 17:31:17.35
  STEP: Removing a custom resource @ 04/23/25 17:31:17.353
  I0423 17:31:17.357528 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8888" for this suite. @ 04/23/25 17:31:17.359
  I0423 17:31:17.361750 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5820" for this suite. @ 04/23/25 17:31:17.463
• [77.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 04/23/25 17:31:17.472
  I0423 17:31:17.472879 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 17:31:17.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:17.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:17.483
  STEP: Creating a job @ 04/23/25 17:31:17.485
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/23/25 17:31:17.487
  STEP: patching /status @ 04/23/25 17:31:19.496
  STEP: updating /status @ 04/23/25 17:31:19.512
  STEP: get /status @ 04/23/25 17:31:19.518
  I0423 17:31:19.520827 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8450" for this suite. @ 04/23/25 17:31:19.523
• [2.056 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/23/25 17:31:19.528
  I0423 17:31:19.528539 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:31:19.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:19.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:19.538
  STEP: Creating configMap with name configmap-test-volume-0515b443-793d-4d1a-a9a0-bb9bcfd12c07 @ 04/23/25 17:31:19.54
  STEP: Creating a pod to test consume configMaps @ 04/23/25 17:31:19.543
  STEP: Saw pod success @ 04/23/25 17:31:23.558
  I0423 17:31:23.561991 24 output.go:207] Trying to get logs from node worker01 pod pod-configmaps-1030f00a-ddbb-4c12-86bc-cc7ce4eb661e container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 17:31:23.574
  I0423 17:31:23.582711 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8034" for this suite. @ 04/23/25 17:31:23.584
• [4.060 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 04/23/25 17:31:23.588
  I0423 17:31:23.588701 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename security-context-test @ 04/23/25 17:31:23.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:23.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:23.599
  I0423 17:31:27.623026 24 security_context.go:538] Got logs for pod "busybox-privileged-false-058b1330-5efb-422e-b48f-169d54f78775": "ip: RTNETLINK answers: Operation not permitted\n"
  I0423 17:31:27.623216 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9430" for this suite. @ 04/23/25 17:31:27.626
• [4.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/23/25 17:31:27.631
  I0423 17:31:27.631198 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:31:27.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:27.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:27.638
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:31:27.64
  STEP: Saw pod success @ 04/23/25 17:31:31.654
  I0423 17:31:31.661635 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-414285a7-8b6f-4374-b179-417398e0060f container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:31:31.667
  I0423 17:31:31.675517 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-869" for this suite. @ 04/23/25 17:31:31.677
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/23/25 17:31:31.68
  I0423 17:31:31.680936 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:31:31.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:31.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:31.69
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:31:31.693
  STEP: Saw pod success @ 04/23/25 17:31:35.718
  I0423 17:31:35.724489 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-e0230966-0be0-4dc3-ba74-4883dbbdac3c container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:31:35.731
  I0423 17:31:35.741320 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6093" for this suite. @ 04/23/25 17:31:35.743
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 04/23/25 17:31:35.746
  I0423 17:31:35.746665 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 17:31:35.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:35.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:35.755
  STEP: Creating ServiceAccount "e2e-sa-ncjjz"  @ 04/23/25 17:31:35.756
  I0423 17:31:35.759651 24 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-ncjjz"  @ 04/23/25 17:31:35.759
  I0423 17:31:35.763379 24 service_accounts.go:868] AutomountServiceAccountToken: true
  I0423 17:31:35.763471 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7298" for this suite. @ 04/23/25 17:31:35.845
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/23/25 17:31:35.857
  I0423 17:31:35.857985 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 17:31:35.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:35.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:35.87
  STEP: create the rc @ 04/23/25 17:31:35.945
  W0423 17:31:35.953219      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/23/25 17:31:41.966
  STEP: wait for the rc to be deleted @ 04/23/25 17:31:41.989
  I0423 17:31:43.006311 24 garbage_collector.go:670] 80 pods remaining
  I0423 17:31:43.006347 24 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0423 17:31:43.006358 24 garbage_collector.go:678] 
  I0423 17:31:44.014354 24 garbage_collector.go:670] 71 pods remaining
  I0423 17:31:44.014394 24 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0423 17:31:44.014404 24 garbage_collector.go:678] 
  I0423 17:31:44.996134 24 garbage_collector.go:670] 60 pods remaining
  I0423 17:31:44.996172 24 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0423 17:31:44.996189 24 garbage_collector.go:678] 
  I0423 17:31:46.061495 24 garbage_collector.go:670] 40 pods remaining
  I0423 17:31:46.061540 24 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0423 17:31:46.061551 24 garbage_collector.go:678] 
  I0423 17:31:47.010137 24 garbage_collector.go:670] 31 pods remaining
  I0423 17:31:47.010195 24 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I0423 17:31:47.010205 24 garbage_collector.go:678] 
  I0423 17:31:48.058744 24 garbage_collector.go:670] 20 pods remaining
  I0423 17:31:48.058797 24 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I0423 17:31:48.058818 24 garbage_collector.go:678] 
  STEP: Gathering metrics @ 04/23/25 17:31:49.003
  I0423 17:31:49.231592 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 17:31:49.232224 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6601" for this suite. @ 04/23/25 17:31:49.238
• [13.394 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/23/25 17:31:49.252
  I0423 17:31:49.253820 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 17:31:49.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:49.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:49.287
  I0423 17:31:49.371528 24 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"f0e0e86e-b7b9-4a5d-b63d-a5632a28c8c4", Controller:(*bool)(0xc0050ef8e6), BlockOwnerDeletion:(*bool)(0xc0050ef8e7)}}
  I0423 17:31:49.385531 24 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"fab2ca20-8068-4cdb-8dab-3488341e02d4", Controller:(*bool)(0xc004fde036), BlockOwnerDeletion:(*bool)(0xc004fde037)}}
  I0423 17:31:49.398375 24 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"5d046132-f63f-46e8-8670-65ab1316d0e4", Controller:(*bool)(0xc004fde25a), BlockOwnerDeletion:(*bool)(0xc004fde25b)}}
  I0423 17:31:54.444619 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-946" for this suite. @ 04/23/25 17:31:54.449
• [5.202 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/23/25 17:31:54.454
  I0423 17:31:54.454475 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename discovery @ 04/23/25 17:31:54.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:54.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:54.467
  STEP: Setting up server cert @ 04/23/25 17:31:54.47
  STEP: Requesting APIResourceList from "/api/v1" @ 04/23/25 17:31:54.703
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/23/25 17:31:54.705
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/23/25 17:31:54.706
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/23/25 17:31:54.707
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/23/25 17:31:54.707
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/23/25 17:31:54.709
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/23/25 17:31:54.709
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/23/25 17:31:54.71
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/23/25 17:31:54.711
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/23/25 17:31:54.712
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/23/25 17:31:54.714
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/23/25 17:31:54.715
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/23/25 17:31:54.715
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/23/25 17:31:54.717
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/23/25 17:31:54.718
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/23/25 17:31:54.719
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/23/25 17:31:54.72
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/23/25 17:31:54.72
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/23/25 17:31:54.721
  I0423 17:31:54.722420 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3408" for this suite. @ 04/23/25 17:31:54.725
• [0.275 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/23/25 17:31:54.73
  I0423 17:31:54.730346 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-watch @ 04/23/25 17:31:54.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:31:54.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:31:54.742
  I0423 17:31:54.744762 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Creating first CR  @ 04/23/25 17:31:57.292
  I0423 17:31:57.296267 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T17:31:57Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T17:31:57Z]] name:name1 resourceVersion:45201 uid:4f9837af-3acb-4cca-b23c-2df3a25eca80] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 04/23/25 17:32:07.297
  I0423 17:32:07.313823 24 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T17:32:07Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T17:32:07Z]] name:name2 resourceVersion:45251 uid:748f42cc-e1e1-499e-9d76-978fe051546e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 04/23/25 17:32:17.314
  I0423 17:32:17.334359 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T17:31:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T17:32:17Z]] name:name1 resourceVersion:45287 uid:4f9837af-3acb-4cca-b23c-2df3a25eca80] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 04/23/25 17:32:27.335
  I0423 17:32:27.340710 24 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T17:32:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T17:32:27Z]] name:name2 resourceVersion:45323 uid:748f42cc-e1e1-499e-9d76-978fe051546e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 04/23/25 17:32:37.341
  I0423 17:32:37.345183 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T17:31:57Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T17:32:17Z]] name:name1 resourceVersion:45360 uid:4f9837af-3acb-4cca-b23c-2df3a25eca80] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 04/23/25 17:32:47.345
  I0423 17:32:47.365518 24 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-23T17:32:07Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-23T17:32:27Z]] name:name2 resourceVersion:45396 uid:748f42cc-e1e1-499e-9d76-978fe051546e] num:map[num1:9223372036854775807 num2:1000000]]}
  I0423 17:32:57.893929 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7126" for this suite. @ 04/23/25 17:32:57.897
• [63.170 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/23/25 17:32:57.901
  I0423 17:32:57.901337 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:32:57.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:32:57.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:32:57.909
  STEP: Creating configMap configmap-5137/configmap-test-0597f654-2afa-4bad-973d-35fb87d48d07 @ 04/23/25 17:32:57.911
  STEP: Creating a pod to test consume configMaps @ 04/23/25 17:32:57.913
  STEP: Saw pod success @ 04/23/25 17:33:01.926
  I0423 17:33:01.928571 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-1dd88bbd-ffeb-41e8-aa15-2ae0117e4e83 container env-test: <nil>
  STEP: delete the pod @ 04/23/25 17:33:01.933
  I0423 17:33:01.942277 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5137" for this suite. @ 04/23/25 17:33:01.943
• [4.046 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/23/25 17:33:01.948
  I0423 17:33:01.948220 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:33:01.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:33:01.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:33:01.957
  STEP: Creating a pod to test downward api env vars @ 04/23/25 17:33:01.958
  STEP: Saw pod success @ 04/23/25 17:33:05.974
  I0423 17:33:05.977238 24 output.go:207] Trying to get logs from node worker00 pod downward-api-21c5c7d3-7aa1-4f71-8e11-7a25c560b0e5 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 17:33:05.981
  I0423 17:33:05.988546 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6546" for this suite. @ 04/23/25 17:33:05.99
• [4.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 04/23/25 17:33:05.993
  I0423 17:33:05.993422 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 17:33:05.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:33:05.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:33:06
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-366 @ 04/23/25 17:33:06.003
  STEP: changing the ExternalName service to type=ClusterIP @ 04/23/25 17:33:06.006
  STEP: creating replication controller externalname-service in namespace services-366 @ 04/23/25 17:33:06.014
  I0423 17:33:06.020647      24 runners.go:193] Created replication controller with name: externalname-service, namespace: services-366, replica count: 2
  I0423 17:33:09.071150      24 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 17:33:09.071179 24 resource.go:361] Creating new exec pod
  I0423 17:33:12.081537 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-366 exec execpodbg4dv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0423 17:33:12.156145 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.32.0.33) 80 port [tcp/http] succeeded!\n"
  I0423 17:33:12.156175 24 builder.go:147] stdout: "externalname-service-xfcxk"
  I0423 17:33:12.156229 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-366 exec execpodbg4dv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.33 80'
  I0423 17:33:12.226769 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.33 80\nConnection to 10.32.0.33 80 port [tcp/http] succeeded!\n"
  I0423 17:33:12.226797 24 builder.go:147] stdout: "externalname-service-xfcxk"
  I0423 17:33:12.226866 24 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0423 17:33:12.238935 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-366" for this suite. @ 04/23/25 17:33:12.24
• [6.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 04/23/25 17:33:12.244
  I0423 17:33:12.244456 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 17:33:12.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:33:12.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:33:12.258
  I0423 17:34:12.269625 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6196" for this suite. @ 04/23/25 17:34:12.271
• [60.031 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 04/23/25 17:34:12.275
  I0423 17:34:12.275218 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/23/25 17:34:12.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:12.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:12.291
  I0423 17:34:12.293820 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/23/25 17:34:13.494
  I0423 17:34:13.494884 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5258 --namespace=crd-publish-openapi-5258 create -f -'
  I0423 17:34:15.578087 24 builder.go:146] stderr: ""
  I0423 17:34:15.578195 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7722-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0423 17:34:15.578272 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5258 --namespace=crd-publish-openapi-5258 delete e2e-test-crd-publish-openapi-7722-crds test-cr'
  I0423 17:34:15.627714 24 builder.go:146] stderr: ""
  I0423 17:34:15.627774 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7722-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0423 17:34:15.627832 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5258 --namespace=crd-publish-openapi-5258 apply -f -'
  I0423 17:34:15.697303 24 builder.go:146] stderr: ""
  I0423 17:34:15.697349 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7722-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0423 17:34:15.697489 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5258 --namespace=crd-publish-openapi-5258 delete e2e-test-crd-publish-openapi-7722-crds test-cr'
  I0423 17:34:15.750191 24 builder.go:146] stderr: ""
  I0423 17:34:15.750221 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7722-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/23/25 17:34:15.75
  I0423 17:34:15.750292 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=crd-publish-openapi-5258 explain e2e-test-crd-publish-openapi-7722-crds'
  I0423 17:34:15.792974 24 builder.go:146] stderr: ""
  I0423 17:34:15.793008 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-7722-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0423 17:34:17.018290 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5258" for this suite. @ 04/23/25 17:34:17.022
• [4.750 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 04/23/25 17:34:17.025
  I0423 17:34:17.025263 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename svcaccounts @ 04/23/25 17:34:17.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:17.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:17.032
  I0423 17:34:17.044333 24 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0423 17:34:17.044364 24 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0423 17:34:17.052726 24 service_accounts.go:282] created pod pod-service-account-mountsa
  I0423 17:34:17.052757 24 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0423 17:34:17.057587 24 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0423 17:34:17.057628 24 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0423 17:34:17.063706 24 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0423 17:34:17.063738 24 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0423 17:34:17.069833 24 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0423 17:34:17.069865 24 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0423 17:34:17.077376 24 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0423 17:34:17.077413 24 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0423 17:34:17.089079 24 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0423 17:34:17.089108 24 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0423 17:34:17.097240 24 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0423 17:34:17.097307 24 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0423 17:34:17.104062 24 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0423 17:34:17.104096 24 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0423 17:34:17.104184 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2791" for this suite. @ 04/23/25 17:34:17.124
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/23/25 17:34:17.131
  I0423 17:34:17.131610 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/23/25 17:34:17.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:17.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:17.15
  STEP: creating the policy @ 04/23/25 17:34:17.159
  STEP: waiting until the marker is denied @ 04/23/25 17:34:17.167
  STEP: testing a replicated Deployment to be allowed @ 04/23/25 17:34:18.172
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/23/25 17:34:18.179
  I0423 17:34:18.227651 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1393" for this suite. @ 04/23/25 17:34:18.23
• [1.103 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/23/25 17:34:18.234
  I0423 17:34:18.234393 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename init-container @ 04/23/25 17:34:18.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:18.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:18.248
  STEP: creating the pod @ 04/23/25 17:34:18.25
  I0423 17:34:18.250618 24 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0423 17:34:23.064199 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5461" for this suite. @ 04/23/25 17:34:23.071
• [4.841 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 04/23/25 17:34:23.076
  I0423 17:34:23.076245 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 17:34:23.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:23.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:23.096
  STEP: fetching services @ 04/23/25 17:34:23.098
  I0423 17:34:23.101812 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7604" for this suite. @ 04/23/25 17:34:23.171
• [0.107 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/23/25 17:34:23.182
  I0423 17:34:23.182601 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename ingressclass @ 04/23/25 17:34:23.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:23.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:23.197
  STEP: getting /apis @ 04/23/25 17:34:23.199
  STEP: getting /apis/networking.k8s.io @ 04/23/25 17:34:23.201
  STEP: getting /apis/networking.k8s.iov1 @ 04/23/25 17:34:23.202
  STEP: creating @ 04/23/25 17:34:23.204
  STEP: getting @ 04/23/25 17:34:23.213
  STEP: listing @ 04/23/25 17:34:23.215
  STEP: watching @ 04/23/25 17:34:23.217
  I0423 17:34:23.217534 24 ingressclass.go:348] starting watch
  STEP: patching @ 04/23/25 17:34:23.219
  STEP: updating @ 04/23/25 17:34:23.224
  I0423 17:34:23.226975 24 ingressclass.go:364] waiting for watch events with expected annotations
  I0423 17:34:23.227002 24 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/23/25 17:34:23.227
  STEP: deleting a collection @ 04/23/25 17:34:23.232
  I0423 17:34:23.239130 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8331" for this suite. @ 04/23/25 17:34:23.269
• [0.090 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 04/23/25 17:34:23.273
  I0423 17:34:23.273051 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-probe @ 04/23/25 17:34:23.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:34:23.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:34:23.284
  STEP: Creating pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703 @ 04/23/25 17:34:23.288
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/23/25 17:34:25.3
  I0423 17:34:25.303141 24 container_probe.go:1749] Initial restart count of pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 is 0
  I0423 17:34:25.306095 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:27.311809 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:29.314570 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:31.320250 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:33.327738 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:35.332974 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:37.339532 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:39.342818 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:41.348790 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:43.354812 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:45.359310 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:47.364397 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:49.367284 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:51.374683 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:53.379631 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:55.387334 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:57.394299 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:34:59.397288 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:01.403416 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:03.408935 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:05.415859 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:07.423246 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:09.427043 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:11.433602 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:13.440179 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:15.451752 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:17.458206 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:19.464039 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:21.471321 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:23.477118 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:25.484787 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:27.491363 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:29.497348 24 container_probe.go:1759] Get pod test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 in namespace container-probe-5703
  I0423 17:35:29.497419 24 container_probe.go:1763] Restart count of pod container-probe-5703/test-grpc-babe3463-fb38-476e-b8ff-31bf2fa06062 is now 1 (1m4.194235785s elapsed)
  STEP: deleting the pod @ 04/23/25 17:35:29.497
  I0423 17:35:29.520553 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5703" for this suite. @ 04/23/25 17:35:29.528
• [66.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/23/25 17:35:29.538
  I0423 17:35:29.538906 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename subpath @ 04/23/25 17:35:29.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:35:29.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:35:29.553
  STEP: Setting up data @ 04/23/25 17:35:29.555
  STEP: Creating pod pod-subpath-test-configmap-m58d @ 04/23/25 17:35:29.559
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 17:35:29.559
  STEP: Saw pod success @ 04/23/25 17:35:53.623
  I0423 17:35:53.627768 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-configmap-m58d container test-container-subpath-configmap-m58d: <nil>
  STEP: delete the pod @ 04/23/25 17:35:53.634
  STEP: Deleting pod pod-subpath-test-configmap-m58d @ 04/23/25 17:35:53.654
  I0423 17:35:53.654550 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-m58d" in namespace "subpath-2518"
  I0423 17:35:53.657421 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2518" for this suite. @ 04/23/25 17:35:53.659
• [24.125 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/23/25 17:35:53.665
  I0423 17:35:53.665310 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename gc @ 04/23/25 17:35:53.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:35:53.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:35:53.675
  STEP: create the rc1 @ 04/23/25 17:35:53.763
  STEP: create the rc2 @ 04/23/25 17:35:53.772
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/23/25 17:35:59.782
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/23/25 17:36:00.567
  STEP: wait for the rc to be deleted @ 04/23/25 17:36:00.579
  I0423 17:36:05.605336 24 garbage_collector.go:762] 72 pods remaining
  I0423 17:36:05.605381 24 garbage_collector.go:769] 72 pods has nil DeletionTimestamp
  I0423 17:36:05.605390 24 garbage_collector.go:770] 
  STEP: Gathering metrics @ 04/23/25 17:36:10.588
  I0423 17:36:10.621101 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0423 17:36:10.621185 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22c2v" in namespace "gc-3990"
  I0423 17:36:10.637719 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2blvj" in namespace "gc-3990"
  I0423 17:36:10.656478 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kfmx" in namespace "gc-3990"
  I0423 17:36:10.664174 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2qsl5" in namespace "gc-3990"
  I0423 17:36:10.681029 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4gcgf" in namespace "gc-3990"
  I0423 17:36:10.701848 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lcx2" in namespace "gc-3990"
  I0423 17:36:10.713515 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mbxk" in namespace "gc-3990"
  I0423 17:36:10.729775 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xcjh" in namespace "gc-3990"
  I0423 17:36:10.750345 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xlf9" in namespace "gc-3990"
  I0423 17:36:10.787734 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zsmd" in namespace "gc-3990"
  I0423 17:36:10.816972 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58c5s" in namespace "gc-3990"
  I0423 17:36:10.846875 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fxnq" in namespace "gc-3990"
  I0423 17:36:10.875190 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qxwp" in namespace "gc-3990"
  I0423 17:36:10.898249 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ss4w" in namespace "gc-3990"
  I0423 17:36:10.934752 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5t6z9" in namespace "gc-3990"
  I0423 17:36:10.969987 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ts6f" in namespace "gc-3990"
  I0423 17:36:10.991959 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68h6j" in namespace "gc-3990"
  I0423 17:36:11.033122 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dv7l" in namespace "gc-3990"
  I0423 17:36:11.055799 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6fdsz" in namespace "gc-3990"
  I0423 17:36:11.106789 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6qbvm" in namespace "gc-3990"
  I0423 17:36:11.132376 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74v86" in namespace "gc-3990"
  I0423 17:36:11.188043 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7dngd" in namespace "gc-3990"
  I0423 17:36:11.212899 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hf6z" in namespace "gc-3990"
  I0423 17:36:11.236285 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7lbf9" in namespace "gc-3990"
  I0423 17:36:11.259814 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7pt78" in namespace "gc-3990"
  I0423 17:36:11.292010 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7x8sr" in namespace "gc-3990"
  I0423 17:36:11.328062 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7xjb5" in namespace "gc-3990"
  I0423 17:36:11.365769 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8d6lq" in namespace "gc-3990"
  I0423 17:36:11.403779 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8m4jq" in namespace "gc-3990"
  I0423 17:36:11.462241 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8p9lz" in namespace "gc-3990"
  I0423 17:36:11.483008 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vf4t" in namespace "gc-3990"
  I0423 17:36:11.574697 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8znx5" in namespace "gc-3990"
  I0423 17:36:11.601646 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bv5x" in namespace "gc-3990"
  I0423 17:36:11.617045 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fgxq" in namespace "gc-3990"
  I0423 17:36:11.674290 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbznt" in namespace "gc-3990"
  I0423 17:36:11.695127 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfc9b" in namespace "gc-3990"
  I0423 17:36:11.710986 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bldt6" in namespace "gc-3990"
  I0423 17:36:11.757042 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bn5k5" in namespace "gc-3990"
  I0423 17:36:11.774309 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bv6xt" in namespace "gc-3990"
  I0423 17:36:11.785220 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvssn" in namespace "gc-3990"
  I0423 17:36:11.803359 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwn2g" in namespace "gc-3990"
  I0423 17:36:11.845764 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwpdg" in namespace "gc-3990"
  I0423 17:36:11.870341 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6l9j" in namespace "gc-3990"
  I0423 17:36:11.892414 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbzfh" in namespace "gc-3990"
  I0423 17:36:11.927149 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cc6cm" in namespace "gc-3990"
  I0423 17:36:11.975755 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cj986" in namespace "gc-3990"
  I0423 17:36:11.991724 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cp9sf" in namespace "gc-3990"
  I0423 17:36:12.069148 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dvwqp" in namespace "gc-3990"
  I0423 17:36:12.106893 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f6s4v" in namespace "gc-3990"
  I0423 17:36:12.182106 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fz7v7" in namespace "gc-3990"
  I0423 17:36:12.216748 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3990" for this suite. @ 04/23/25 17:36:12.222
• [18.571 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/23/25 17:36:12.236
  I0423 17:36:12.236211 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replication-controller @ 04/23/25 17:36:12.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:36:12.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:36:12.259
  STEP: creating a ReplicationController @ 04/23/25 17:36:12.269
  STEP: waiting for RC to be added @ 04/23/25 17:36:12.276
  STEP: waiting for available Replicas @ 04/23/25 17:36:12.276
  STEP: patching ReplicationController @ 04/23/25 17:36:14.374
  STEP: waiting for RC to be modified @ 04/23/25 17:36:14.381
  STEP: patching ReplicationController status @ 04/23/25 17:36:14.381
  STEP: waiting for RC to be modified @ 04/23/25 17:36:14.387
  STEP: waiting for available Replicas @ 04/23/25 17:36:14.387
  STEP: fetching ReplicationController status @ 04/23/25 17:36:14.39
  STEP: patching ReplicationController scale @ 04/23/25 17:36:14.392
  STEP: waiting for RC to be modified @ 04/23/25 17:36:14.397
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/23/25 17:36:14.397
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/23/25 17:36:16.031
  STEP: updating ReplicationController status @ 04/23/25 17:36:16.034
  STEP: waiting for RC to be modified @ 04/23/25 17:36:16.037
  STEP: listing all ReplicationControllers @ 04/23/25 17:36:16.037
  STEP: checking that ReplicationController has expected values @ 04/23/25 17:36:16.038
  STEP: deleting ReplicationControllers by collection @ 04/23/25 17:36:16.038
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/23/25 17:36:16.079
  E0423 17:36:16.094786      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:36:16.094686 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3414" for this suite. @ 04/23/25 17:36:16.097
• [3.865 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 04/23/25 17:36:16.101
  I0423 17:36:16.101035 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-preemption @ 04/23/25 17:36:16.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:36:16.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:36:16.11
  I0423 17:36:16.118597 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0423 17:36:17.095768      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:18.095653      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:19.096598      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:20.096759      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:21.097193      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:22.097743      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:23.097985      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:24.098198      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:25.099276      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:26.100627      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:27.101567      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:28.102158      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:29.103271      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:30.103698      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:31.104571      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:32.104660      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:33.104879      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:34.105116      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:35.105630      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:36.107019      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:37.107610      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:38.108838      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:39.109575      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:40.109898      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:41.110589      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:42.110835      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:43.111753      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:44.113022      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:45.113273      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:46.114070      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:47.114821      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:48.115549      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:49.116118      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:50.116962      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:51.117948      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:52.118893      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:53.120893      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:54.122177      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:55.122151      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:56.122968      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:57.124148      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:58.124724      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:36:59.126326      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:00.126426      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:01.127588      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:02.127674      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:03.127872      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:04.128053      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:05.129627      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:06.129845      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:07.130567      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:08.131117      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:09.131511      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:10.131459      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:11.131785      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:12.133115      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:13.132751      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:14.132876      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:15.133363      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:16.123806 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 04/23/25 17:37:16.126
  STEP: Adding a custom resource @ 04/23/25 17:37:16.126
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 04/23/25 17:37:16.132
  E0423 17:37:16.134251      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:16.139550 24 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 04/23/25 17:37:16.139
  E0423 17:37:17.134082      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:18.135048      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 04/23/25 17:37:18.147
  I0423 17:37:18.153179 24 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 04/23/25 17:37:18.153
  E0423 17:37:19.135850      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:20.136515      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 04/23/25 17:37:20.16
  I0423 17:37:20.162854 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0423 17:37:20.669998 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 04/23/25 17:37:20.682
  STEP: Removing a custom resource @ 04/23/25 17:37:20.689
  I0423 17:37:20.695843 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6006" for this suite. @ 04/23/25 17:37:20.697
• [64.599 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/23/25 17:37:20.699
  I0423 17:37:20.699635 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:37:20.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:20.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:20.709
  STEP: Creating projection with secret that has name projected-secret-test-571708b3-0ee5-4bab-b7cb-95122dba5761 @ 04/23/25 17:37:20.711
  STEP: Creating a pod to test consume secrets @ 04/23/25 17:37:20.713
  E0423 17:37:21.137252      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:22.137989      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:23.138966      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:24.139705      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:37:24.727
  I0423 17:37:24.742139 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-secrets-f85cd493-e666-49e4-95d6-e5d209fb0bf8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 17:37:24.746
  I0423 17:37:24.756294 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4176" for this suite. @ 04/23/25 17:37:24.758
• [4.062 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 04/23/25 17:37:24.761
  I0423 17:37:24.761928 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename containers @ 04/23/25 17:37:24.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:24.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:24.769
  STEP: Creating a pod to test override arguments @ 04/23/25 17:37:24.772
  E0423 17:37:25.140556      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:26.141050      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:27.141976      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:28.142629      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:37:28.784
  I0423 17:37:28.786695 24 output.go:207] Trying to get logs from node worker00 pod client-containers-d7023d76-78b6-4ee9-987d-9c7557e7a62b container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 17:37:28.789
  I0423 17:37:28.805216 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5020" for this suite. @ 04/23/25 17:37:28.808
• [4.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 04/23/25 17:37:28.811
  I0423 17:37:28.811372 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename job @ 04/23/25 17:37:28.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:28.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:28.823
  STEP: Creating Indexed job @ 04/23/25 17:37:28.825
  STEP: Ensuring job reaches completions @ 04/23/25 17:37:28.83
  E0423 17:37:29.143061      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:30.144035      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:31.144320      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:32.144570      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:33.145037      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:34.145415      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 04/23/25 17:37:34.843
  I0423 17:37:34.845181 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7737" for this suite. @ 04/23/25 17:37:34.847
• [6.041 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/23/25 17:37:34.852
  I0423 17:37:34.852534 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/23/25 17:37:34.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:34.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:34.863
  STEP: creating a target pod @ 04/23/25 17:37:34.864
  E0423 17:37:35.146576      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:36.146755      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/23/25 17:37:36.876
  E0423 17:37:37.147062      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:38.148551      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/23/25 17:37:38.896
  I0423 17:37:38.896840 24 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8824 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:37:38.896950 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:37:38.897038 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-8824/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0423 17:37:38.938277 24 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/23/25 17:37:38.941
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/23/25 17:37:38.944
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/23/25 17:37:38.961
  I0423 17:37:38.964789 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8824" for this suite. @ 04/23/25 17:37:38.967
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 04/23/25 17:37:38.975
  I0423 17:37:38.975643 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 17:37:38.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:38.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:38.988
  STEP: Creating a ResourceQuota @ 04/23/25 17:37:38.991
  STEP: Getting a ResourceQuota @ 04/23/25 17:37:38.994
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/23/25 17:37:38.997
  STEP: Patching the ResourceQuota @ 04/23/25 17:37:38.999
  STEP: Deleting a Collection of ResourceQuotas @ 04/23/25 17:37:39.004
  STEP: Verifying the deleted ResourceQuota @ 04/23/25 17:37:39.01
  I0423 17:37:39.011890 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6173" for this suite. @ 04/23/25 17:37:39.068
• [0.097 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/23/25 17:37:39.072
  I0423 17:37:39.072544 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename secrets @ 04/23/25 17:37:39.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:39.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:39.084
  I0423 17:37:39.103061 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0423 17:37:39.149813      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "secrets-5183" for this suite. @ 04/23/25 17:37:39.169
• [0.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 04/23/25 17:37:39.175
  I0423 17:37:39.175326 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:37:39.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:39.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:39.187
  STEP: Setting up server cert @ 04/23/25 17:37:39.205
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:37:39.344
  STEP: Deploying the webhook pod @ 04/23/25 17:37:39.349
  STEP: Wait for the deployment to be ready @ 04/23/25 17:37:39.358
  I0423 17:37:39.369857 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 17:37:40.150541      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:41.151046      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 17:37:41.381
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:37:41.386
  E0423 17:37:42.151774      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:42.386990 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/23/25 17:37:42.424
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 17:37:42.446
  STEP: Deleting the collection of validation webhooks @ 04/23/25 17:37:42.465
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 17:37:42.484
  I0423 17:37:42.509687 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1965" for this suite. @ 04/23/25 17:37:42.512
  STEP: Destroying namespace "webhook-markers-8393" for this suite. @ 04/23/25 17:37:42.518
• [3.345 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/23/25 17:37:42.521
  I0423 17:37:42.521567 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename proxy @ 04/23/25 17:37:42.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:42.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:42.533
  I0423 17:37:42.535207 24 proxy.go:293] Creating pod...
  E0423 17:37:43.152535      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:44.152634      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:44.548386 24 proxy.go:317] Creating service...
  I0423 17:37:44.552080 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/DELETE
  I0423 17:37:44.555525 24 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 17:37:44.555569 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/GET
  I0423 17:37:44.560116 24 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0423 17:37:44.560198 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/HEAD
  I0423 17:37:44.562163 24 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0423 17:37:44.562191 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/OPTIONS
  I0423 17:37:44.564688 24 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 17:37:44.564717 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/PATCH
  I0423 17:37:44.566213 24 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 17:37:44.566237 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/POST
  I0423 17:37:44.567336 24 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 17:37:44.567354 24 proxy.go:354] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/pods/agnhost/proxy/some/path/with/PUT
  I0423 17:37:44.568830 24 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 17:37:44.568863 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/DELETE
  I0423 17:37:44.571489 24 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0423 17:37:44.571515 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/GET
  I0423 17:37:44.574603 24 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0423 17:37:44.574630 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/HEAD
  I0423 17:37:44.577075 24 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0423 17:37:44.577111 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/OPTIONS
  I0423 17:37:44.579948 24 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0423 17:37:44.579973 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/PATCH
  I0423 17:37:44.581743 24 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0423 17:37:44.581777 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/POST
  I0423 17:37:44.584580 24 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0423 17:37:44.584624 24 proxy.go:365] Starting http.Client for https://10.32.0.1:443/api/v1/namespaces/proxy-6044/services/test-service/proxy/some/path/with/PUT
  I0423 17:37:44.586743 24 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0423 17:37:44.586818 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6044" for this suite. @ 04/23/25 17:37:44.589
• [2.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/23/25 17:37:44.595
  I0423 17:37:44.595196 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 17:37:44.596
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:44.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:44.607
  STEP: create the container @ 04/23/25 17:37:44.608
  W0423 17:37:44.620631      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/23/25 17:37:44.62
  E0423 17:37:45.154587      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:46.156080      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:47.156991      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/23/25 17:37:47.639
  STEP: the container should be terminated @ 04/23/25 17:37:47.642
  STEP: the termination message should be set @ 04/23/25 17:37:47.642
  I0423 17:37:47.642139 24 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/23/25 17:37:47.642
  I0423 17:37:47.655863 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4327" for this suite. @ 04/23/25 17:37:47.659
• [3.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/23/25 17:37:47.664
  I0423 17:37:47.664463 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename ingress @ 04/23/25 17:37:47.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:47.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:47.675
  STEP: getting /apis @ 04/23/25 17:37:47.676
  STEP: getting /apis/networking.k8s.io @ 04/23/25 17:37:47.679
  STEP: getting /apis/networking.k8s.iov1 @ 04/23/25 17:37:47.681
  STEP: creating @ 04/23/25 17:37:47.682
  STEP: getting @ 04/23/25 17:37:47.694
  STEP: listing @ 04/23/25 17:37:47.696
  STEP: watching @ 04/23/25 17:37:47.698
  I0423 17:37:47.698798 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/23/25 17:37:47.699
  STEP: cluster-wide watching @ 04/23/25 17:37:47.704
  I0423 17:37:47.704176 24 ingress.go:198] starting watch
  STEP: patching @ 04/23/25 17:37:47.704
  STEP: updating @ 04/23/25 17:37:47.707
  I0423 17:37:47.712527 24 ingress.go:221] waiting for watch events with expected annotations
  I0423 17:37:47.712558 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/23/25 17:37:47.712
  STEP: updating /status @ 04/23/25 17:37:47.715
  STEP: get /status @ 04/23/25 17:37:47.719
  STEP: deleting @ 04/23/25 17:37:47.721
  STEP: deleting a collection @ 04/23/25 17:37:47.725
  I0423 17:37:47.732087 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4820" for this suite. @ 04/23/25 17:37:47.76
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/23/25 17:37:47.765
  I0423 17:37:47.765518 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 17:37:47.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:47.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:47.779
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 17:37:47.869
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 17:37:47.873
  I0423 17:37:47.965903 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 17:37:47.965938 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 17:37:48.156970      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:48.878965 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 17:37:48.878985 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0423 17:37:49.157057      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:49.877460 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 17:37:49.877485 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/23/25 17:37:49.879
  I0423 17:37:49.978907 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 17:37:49.978940 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0423 17:37:50.157973      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:50.891113 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 17:37:50.891154 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0423 17:37:51.159265      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:51.892731 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 17:37:51.892803 24 fixtures.go:131] Node worker01 is running 0 daemon pod, expected 1
  E0423 17:37:52.159258      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:52.888105 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 17:37:52.888131 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/23/25 17:37:52.971
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2798, will wait for the garbage collector to delete the pods @ 04/23/25 17:37:52.971
  I0423 17:37:53.032187 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.711618ms
  I0423 17:37:53.132563 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.367103ms
  E0423 17:37:53.160206      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:54.161173      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:55.162239      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:37:55.537202 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 17:37:55.537345 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0423 17:37:55.540147 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"50298"},"items":null}

  I0423 17:37:55.542822 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"50298"},"items":null}

  I0423 17:37:55.546758 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2798" for this suite. @ 04/23/25 17:37:55.548
• [7.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 04/23/25 17:37:55.551
  I0423 17:37:55.551126 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename security-context @ 04/23/25 17:37:55.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:55.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:55.561
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/23/25 17:37:55.562
  E0423 17:37:56.162587      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:57.163183      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:58.163332      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:37:59.163455      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:37:59.584
  I0423 17:37:59.587343 24 output.go:207] Trying to get logs from node worker00 pod security-context-3a4053f3-ba6c-4ea7-87ea-5c815ee3b5c8 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 17:37:59.591
  I0423 17:37:59.601690 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3896" for this suite. @ 04/23/25 17:37:59.603
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/23/25 17:37:59.606
  I0423 17:37:59.606687 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 17:37:59.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:37:59.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:37:59.614
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/23/25 17:37:59.615
  E0423 17:38:00.163675      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:01.165103      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:02.166691      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:03.167144      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:38:03.631
  I0423 17:38:03.634745 24 output.go:207] Trying to get logs from node worker00 pod pod-e857f886-4b0e-40bb-a807-4ab38e53e942 container test-container: <nil>
  STEP: delete the pod @ 04/23/25 17:38:03.64
  I0423 17:38:03.660348 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4623" for this suite. @ 04/23/25 17:38:03.662
• [4.059 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 04/23/25 17:38:03.666
  I0423 17:38:03.666329 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:38:03.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:03.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:03.673
  STEP: Setting up server cert @ 04/23/25 17:38:03.683
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:38:03.889
  STEP: Deploying the webhook pod @ 04/23/25 17:38:03.892
  STEP: Wait for the deployment to be ready @ 04/23/25 17:38:03.898
  I0423 17:38:03.903872 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 17:38:04.167390      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:05.167716      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 17:38:05.928
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:38:05.936
  E0423 17:38:06.167889      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:06.937291 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/23/25 17:38:06.945
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/23/25 17:38:06.957
  I0423 17:38:06.957841 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  I0423 17:38:06.986812 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2193" for this suite. @ 04/23/25 17:38:06.99
  STEP: Destroying namespace "webhook-markers-5417" for this suite. @ 04/23/25 17:38:06.996
• [3.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/23/25 17:38:07.001
  I0423 17:38:07.001860 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename replicaset @ 04/23/25 17:38:07.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:07.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:07.011
  STEP: Create a ReplicaSet @ 04/23/25 17:38:07.012
  STEP: Verify that the required pods have come up @ 04/23/25 17:38:07.015
  I0423 17:38:07.017881 24 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0423 17:38:07.168885      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:08.169244      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:09.170278      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:10.171030      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:11.172420      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:12.121642 24 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/23/25 17:38:12.121
  I0423 17:38:12.124920 24 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/23/25 17:38:12.124
  STEP: DeleteCollection of the ReplicaSets @ 04/23/25 17:38:12.126
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/23/25 17:38:12.13
  I0423 17:38:12.133618 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4145" for this suite. @ 04/23/25 17:38:12.139
• [5.151 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/23/25 17:38:12.153
  I0423 17:38:12.153470 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 17:38:12.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:12.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:12.166
  STEP: Create set of pods @ 04/23/25 17:38:12.169
  E0423 17:38:12.172298      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:12.177304 24 pods.go:871] created test-pod-1
  I0423 17:38:12.183889 24 pods.go:871] created test-pod-2
  I0423 17:38:12.193422 24 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/23/25 17:38:12.193
  E0423 17:38:13.172876      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:14.172895      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/23/25 17:38:14.219
  I0423 17:38:14.221230 24 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0423 17:38:15.173341      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:15.222921 24 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0423 17:38:16.173371      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:16.224636 24 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E0423 17:38:17.174073      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:17.220988 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7663" for this suite. @ 04/23/25 17:38:17.223
• [5.074 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/23/25 17:38:17.228
  I0423 17:38:17.228198 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:38:17.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:17.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:17.235
  STEP: Creating the pod @ 04/23/25 17:38:17.237
  E0423 17:38:18.174829      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:19.174963      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:19.778257 24 pod_client.go:173] Successfully updated pod "labelsupdate8b0faaca-f54b-45dc-befa-dda7fc1b3e76"
  E0423 17:38:20.175436      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:21.176674      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:21.794745 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1929" for this suite. @ 04/23/25 17:38:21.798
• [4.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 04/23/25 17:38:21.811
  I0423 17:38:21.811995 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 17:38:21.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:21.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:21.821
  STEP: Creating service test in namespace statefulset-1465 @ 04/23/25 17:38:21.822
  STEP: Creating statefulset ss in namespace statefulset-1465 @ 04/23/25 17:38:21.826
  I0423 17:38:21.835672 24 wait.go:40] Found 0 stateful pods, waiting for 1
  E0423 17:38:22.177026      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:23.177626      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:24.177714      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:25.178679      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:26.180009      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:27.180232      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:28.180546      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:29.180733      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:30.180708      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:31.182103      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:31.838309 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/23/25 17:38:31.844
  STEP: updating a scale subresource @ 04/23/25 17:38:31.847
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/23/25 17:38:31.862
  STEP: Patch a scale subresource @ 04/23/25 17:38:31.864
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/23/25 17:38:31.869
  I0423 17:38:31.873335 24 statefulset.go:138] Deleting all statefulset in ns statefulset-1465
  I0423 17:38:31.875250 24 rest.go:152] Scaling statefulset ss to 0
  E0423 17:38:32.183289      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:33.184324      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:34.185306      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:35.185724      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:36.186652      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:37.187013      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:38.187120      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:39.187268      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:40.187824      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:41.188546      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:41.885112 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 17:38:41.889258 24 rest.go:90] Deleting statefulset ss
  I0423 17:38:41.901762 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1465" for this suite. @ 04/23/25 17:38:41.904
• [20.097 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 04/23/25 17:38:41.911
  I0423 17:38:41.911938 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename services @ 04/23/25 17:38:41.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:41.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:41.932
  STEP: creating service in namespace services-439 @ 04/23/25 17:38:41.936
  STEP: creating service affinity-nodeport in namespace services-439 @ 04/23/25 17:38:41.936
  STEP: creating replication controller affinity-nodeport in namespace services-439 @ 04/23/25 17:38:41.949
  I0423 17:38:41.960218      24 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-439, replica count: 3
  E0423 17:38:42.188579      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:43.188624      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:44.189507      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:45.011286      24 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0423 17:38:45.023188 24 resource.go:361] Creating new exec pod
  E0423 17:38:45.190815      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:46.191599      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:47.191472      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:48.047528 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-439 exec execpod-affinityqcp2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0423 17:38:48.125420 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.32.0.168) 80 port [tcp/http] succeeded!\n"
  I0423 17:38:48.125464 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:38:48.125564 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-439 exec execpod-affinityqcp2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.32.0.168 80'
  I0423 17:38:48.189950 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.32.0.168 80\nConnection to 10.32.0.168 80 port [tcp/http] succeeded!\n"
  I0423 17:38:48.189979 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:38:48.190028 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-439 exec execpod-affinityqcp2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.100 32767'
  E0423 17:38:48.191643      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:48.255904 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.100 32767\nConnection to 192.168.58.100 32767 port [tcp/*] succeeded!\n"
  I0423 17:38:48.255939 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:38:48.255993 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-439 exec execpod-affinityqcp2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.58.101 32767'
  I0423 17:38:48.330902 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.58.101 32767\nConnection to 192.168.58.101 32767 port [tcp/*] succeeded!\n"
  I0423 17:38:48.330932 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0423 17:38:48.330969 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=services-439 exec execpod-affinityqcp2n -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.58.100:32767/ ; done'
  I0423 17:38:48.443824 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.58.100:32767/\n"
  I0423 17:38:48.443855 24 builder.go:147] stdout: "\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th\naffinity-nodeport-rl9th"
  I0423 17:38:48.443864 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443871 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443888 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443893 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443899 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443905 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443910 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443916 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443951 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443959 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443965 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443971 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443977 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.443983 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.444292 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.444399 24 service.go:242] Received response from host: affinity-nodeport-rl9th
  I0423 17:38:48.444933 24 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-439, will wait for the garbage collector to delete the pods @ 04/23/25 17:38:48.452
  I0423 17:38:48.513641 24 resources.go:139] Deleting ReplicationController affinity-nodeport took: 7.609361ms
  I0423 17:38:48.614275 24 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.633123ms
  E0423 17:38:49.192667      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:50.193408      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:51.193951      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:51.534359 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-439" for this suite. @ 04/23/25 17:38:51.535
• [9.628 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/23/25 17:38:51.539
  I0423 17:38:51.539275 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/23/25 17:38:51.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:51.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:51.547
  STEP: creating a target pod @ 04/23/25 17:38:51.548
  E0423 17:38:52.194057      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:53.194741      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/23/25 17:38:53.562
  E0423 17:38:54.194642      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:55.195059      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/23/25 17:38:55.592
  I0423 17:38:55.593004 24 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2048 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:38:55.593043 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:38:55.593153 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/ephemeral-containers-test-2048/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0423 17:38:55.632169 24 exec_util.go:108] Exec stderr: ""
  I0423 17:38:55.635701 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2048" for this suite. @ 04/23/25 17:38:55.637
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 04/23/25 17:38:55.65
  I0423 17:38:55.650535 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename crd-webhook @ 04/23/25 17:38:55.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:38:55.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:38:55.663
  STEP: Setting up server cert @ 04/23/25 17:38:55.664
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/23/25 17:38:56.003
  STEP: Deploying the custom resource conversion webhook pod @ 04/23/25 17:38:56.015
  STEP: Wait for the deployment to be ready @ 04/23/25 17:38:56.02
  I0423 17:38:56.024925 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0423 17:38:56.195218      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:38:57.195436      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 17:38:58.031
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:38:58.047
  E0423 17:38:58.195650      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:38:59.048950 24 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0423 17:38:59.052016 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  E0423 17:38:59.195779      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:00.196094      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:01.197236      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/23/25 17:39:01.607
  STEP: Create a v2 custom resource @ 04/23/25 17:39:01.616
  STEP: List CRs in v1 @ 04/23/25 17:39:01.659
  STEP: List CRs in v2 @ 04/23/25 17:39:01.66
  I0423 17:39:02.193346 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3396" for this suite. @ 04/23/25 17:39:02.197
  E0423 17:39:02.197343      24 retrywatcher.go:160] "Watch failed" err="context canceled"
• [6.557 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/23/25 17:39:02.206
  I0423 17:39:02.206922 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:39:02.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:02.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:02.221
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:39:02.224
  E0423 17:39:03.198171      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:04.198871      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:05.199241      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:06.200115      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:39:06.237
  I0423 17:39:06.238868 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-fa10bae4-ffe1-49ce-b880-8dc5ea0b136b container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:39:06.241
  I0423 17:39:06.249712 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6297" for this suite. @ 04/23/25 17:39:06.251
• [4.049 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/23/25 17:39:06.256
  I0423 17:39:06.256339 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename container-runtime @ 04/23/25 17:39:06.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:06.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:06.265
  STEP: create the container @ 04/23/25 17:39:06.266
  W0423 17:39:06.271320      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/23/25 17:39:06.271
  E0423 17:39:07.201026      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:08.201103      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:09.201546      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/23/25 17:39:09.279
  STEP: the container should be terminated @ 04/23/25 17:39:09.281
  STEP: the termination message should be set @ 04/23/25 17:39:09.281
  I0423 17:39:09.282027 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/23/25 17:39:09.282
  I0423 17:39:09.293779 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5581" for this suite. @ 04/23/25 17:39:09.295
• [3.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/23/25 17:39:09.299
  I0423 17:39:09.299024 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 17:39:09.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:09.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:09.308
  I0423 17:39:09.327464 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8407" for this suite. @ 04/23/25 17:39:09.396
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/23/25 17:39:09.399
  I0423 17:39:09.399628 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:39:09.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:09.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:09.408
  STEP: Creating configMap with name configmap-test-volume-map-8e90c176-f3db-4014-a52c-8f93d3dfd783 @ 04/23/25 17:39:09.409
  STEP: Creating a pod to test consume configMaps @ 04/23/25 17:39:09.411
  E0423 17:39:10.201843      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:11.202072      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:39:11.422
  I0423 17:39:11.424289 24 output.go:207] Trying to get logs from node worker00 pod pod-configmaps-bb4b04b1-1a4c-4509-b0ec-21457b76a3c0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/23/25 17:39:11.427
  I0423 17:39:11.432750 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4096" for this suite. @ 04/23/25 17:39:11.434
• [2.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/23/25 17:39:11.436
  I0423 17:39:11.436771 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:39:11.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:11.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:11.445
  STEP: Creating the pod @ 04/23/25 17:39:11.446
  E0423 17:39:12.202988      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:13.204502      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:14.002891 24 pod_client.go:173] Successfully updated pod "labelsupdatea0fbe201-fafb-44a2-a513-704bc15d337c"
  E0423 17:39:14.204831      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:15.205173      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:16.023344 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1271" for this suite. @ 04/23/25 17:39:16.027
• [4.604 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/23/25 17:39:16.04
  I0423 17:39:16.041018 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:39:16.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:16.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:16.05
  STEP: Creating configMap with name projected-configmap-test-volume-85fe3ccf-4469-498d-abf9-2f6cbbe6ec94 @ 04/23/25 17:39:16.052
  STEP: Creating a pod to test consume configMaps @ 04/23/25 17:39:16.055
  E0423 17:39:16.205566      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:17.206303      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:18.207264      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:19.207766      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:39:20.069
  I0423 17:39:20.070709 24 output.go:207] Trying to get logs from node worker00 pod pod-projected-configmaps-15cd4ec0-a960-4ddb-a3d1-3429bb1a455f container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/23/25 17:39:20.072
  I0423 17:39:20.087829 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7145" for this suite. @ 04/23/25 17:39:20.089
• [4.052 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 04/23/25 17:39:20.092
  I0423 17:39:20.092696 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename dns @ 04/23/25 17:39:20.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:20.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:20.1
  STEP: Creating a test headless service @ 04/23/25 17:39:20.101
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-2997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-2997.svc.cluster.local;sleep 1; done
   @ 04/23/25 17:39:20.105
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2997.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2997.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2997.svc.cluster.local;sleep 1; done
   @ 04/23/25 17:39:20.105
  STEP: creating a pod to probe DNS @ 04/23/25 17:39:20.105
  STEP: submitting the pod to kubernetes @ 04/23/25 17:39:20.105
  E0423 17:39:20.208695      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:21.209504      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/23/25 17:39:22.118
  STEP: looking for the results for each expected name from probers @ 04/23/25 17:39:22.122
  I0423 17:39:22.126724 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:22.128895 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:22.134652 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:22.136335 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:22.137605 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:22.138891 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:22.138919 24 dns_common.go:506] Lookups using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-test-service-2.dns-2997.svc.cluster.local]

  I0423 17:39:22.146746 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:39:22.149807 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:39:22.152465 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 17:39:22.210208      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:23.210345      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:24.210505      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:25.210695      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:26.210773      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:27.128897 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:27.133416 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:27.143567 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:27.145668 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:27.148754 24 dns_common.go:506] Lookups using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local]

  I0423 17:39:27.151134 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:39:27.153833 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:39:27.155883 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 17:39:27.211543      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:28.212259      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:29.212805      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:30.213091      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:31.213840      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:32.128982 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:32.131895 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:32.139347 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:32.141805 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:32.145693 24 dns_common.go:506] Lookups using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local]

  I0423 17:39:32.149645 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:39:32.153156 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:39:32.156116 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 17:39:32.214702      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:33.215056      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:34.215873      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:35.216636      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:36.217400      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:37.129946 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:37.136827 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:37.150243 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:37.156659 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:37.161945 24 dns_common.go:506] Lookups using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local]

  I0423 17:39:37.165239 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:39:37.169011 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:39:37.173580 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 17:39:37.218629      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:38.220079      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:39.220158      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:40.220539      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:41.220387      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:42.126101 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:42.128663 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:42.137114 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:42.139191 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:42.143176 24 dns_common.go:506] Lookups using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local]

  I0423 17:39:42.146007 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:39:42.148414 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:39:42.150942 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 17:39:42.221814      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:43.221758      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:44.222824      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:45.222822      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:46.223197      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:47.129711 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:47.134884 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:47.144235 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:47.146421 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local from pod dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8: the server could not find the requested resource (get pods dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8)
  I0423 17:39:47.149665 24 dns_common.go:506] Lookups using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-2997.svc.cluster.local]

  I0423 17:39:47.152564 24 dns_common.go:514] Pod client logs for webserver: 
  I0423 17:39:47.154927 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0423 17:39:47.157855 24 dns_common.go:514] Pod client logs for jessie-querier: 
  E0423 17:39:47.223579      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:48.224164      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:49.224645      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:50.224906      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:51.225756      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:39:52.145192 24 dns_common.go:546] DNS probes using dns-2997/dns-test-2edbf1d2-5c86-4b5a-8b12-f6ee35ab44b8 succeeded

  STEP: deleting the pod @ 04/23/25 17:39:52.145
  STEP: deleting the test headless service @ 04/23/25 17:39:52.155
  I0423 17:39:52.175833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2997" for this suite. @ 04/23/25 17:39:52.18
• [32.093 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/23/25 17:39:52.186
  I0423 17:39:52.186367 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pod-network-test @ 04/23/25 17:39:52.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:39:52.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:39:52.198
  STEP: Performing setup for networking test in namespace pod-network-test-9922 @ 04/23/25 17:39:52.199
  STEP: creating a selector @ 04/23/25 17:39:52.199
  STEP: Creating the service pods in kubernetes @ 04/23/25 17:39:52.199
  I0423 17:39:52.200001 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0423 17:39:52.226603      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:53.227518      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:54.227866      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:55.228225      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:56.228322      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:57.228707      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:58.229834      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:39:59.230133      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:00.231315      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:01.232225      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:02.232726      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:03.233820      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:04.234866      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/23/25 17:40:04.327
  E0423 17:40:05.235358      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:06.235774      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:40:06.365534 24 utils.go:803] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I0423 17:40:06.365567 24 utils.go:496] Going to poll 10.200.131.149 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0423 17:40:06.367780 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.131.149 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9922 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:40:06.367807 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:40:06.367849 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-9922/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.131.149+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0423 17:40:07.236772      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:40:07.404191 24 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0423 17:40:07.404229 24 utils.go:496] Going to poll 10.200.5.43 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I0423 17:40:07.406741 24 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.5.43 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9922 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0423 17:40:07.406761 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0423 17:40:07.406808 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.32.0.1:443/api/v1/namespaces/pod-network-test-9922/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.5.43+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0423 17:40:08.237109      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:40:08.439999 24 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0423 17:40:08.440134 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9922" for this suite. @ 04/23/25 17:40:08.443
• [16.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 04/23/25 17:40:08.448
  I0423 17:40:08.448244 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename statefulset @ 04/23/25 17:40:08.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:40:08.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:40:08.457
  STEP: Creating service test in namespace statefulset-309 @ 04/23/25 17:40:08.458
  STEP: Creating a new StatefulSet @ 04/23/25 17:40:08.462
  I0423 17:40:08.468533 24 wait.go:40] Found 0 stateful pods, waiting for 3
  E0423 17:40:09.237122      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:10.237239      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:11.237490      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:12.237750      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:13.237899      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:14.238683      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:15.239137      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:16.239378      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:17.239637      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:18.240086      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:40:18.470871 24 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0423 17:40:18.470909 24 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0423 17:40:18.470924 24 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0423 17:40:18.581326 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-309 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 17:40:18.665340 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 17:40:18.665385 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 17:40:18.665399 24 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0423 17:40:19.241040      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:20.241359      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:21.241921      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:22.243174      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:23.244061      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:24.245109      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:25.245831      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:26.246990      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:27.248180      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:28.248890      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/23/25 17:40:28.674
  I0423 17:40:28.680648 24 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 04/23/25 17:40:28.68
  E0423 17:40:29.249158      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:30.249902      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:31.250137      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:32.250799      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:33.251761      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:34.252670      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:35.252921      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:36.253626      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:37.254191      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:38.254513      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/23/25 17:40:38.685
  I0423 17:40:38.687905 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-309 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 17:40:38.767265 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 17:40:38.767293 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 17:40:38.767302 24 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0423 17:40:39.254788      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:40.255347      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:41.256042      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:42.256392      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:43.256767      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:44.257003      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:45.257334      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:46.258545      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:47.259540      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:48.259963      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/23/25 17:40:48.78
  I0423 17:40:48.780594 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-309 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0423 17:40:48.865109 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0423 17:40:48.865164 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0423 17:40:48.865184 24 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0423 17:40:49.260218      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:50.261953      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:51.262123      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:52.262332      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:53.262804      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:54.262956      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:55.263731      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:56.264489      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:57.265391      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:40:58.266146      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:40:58.894676 24 statefulset.go:2510] Updating stateful set ss2
  E0423 17:40:59.266274      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:00.266719      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:01.266814      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:02.267147      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:03.267799      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:04.267588      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:05.267713      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:06.269046      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:07.269084      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:08.270039      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/23/25 17:41:08.904
  I0423 17:41:08.908082 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=statefulset-309 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0423 17:41:08.986917 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0423 17:41:08.986955 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0423 17:41:08.986971 24 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0423 17:41:09.270723      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:10.271135      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:11.272738      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:12.274026      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:13.274298      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:14.274968      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:15.275089      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:16.276040      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:17.276657      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:18.276857      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:41:19.002514 24 statefulset.go:138] Deleting all statefulset in ns statefulset-309
  I0423 17:41:19.005060 24 rest.go:152] Scaling statefulset ss2 to 0
  E0423 17:41:19.277101      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:20.277653      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:21.278330      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:22.278963      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:23.280658      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:24.282316      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:25.282062      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:26.282123      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:27.284763      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:28.285581      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:41:29.025988 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0423 17:41:29.027947 24 rest.go:90] Deleting statefulset ss2
  I0423 17:41:29.045699 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-309" for this suite. @ 04/23/25 17:41:29.048
• [80.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/23/25 17:41:29.052
  I0423 17:41:29.052781 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename cronjob @ 04/23/25 17:41:29.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:41:29.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:41:29.061
  STEP: Creating a ReplaceConcurrent cronjob @ 04/23/25 17:41:29.062
  STEP: Ensuring a job is scheduled @ 04/23/25 17:41:29.064
  E0423 17:41:29.286624      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:30.287052      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:31.287212      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:32.288316      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:33.288878      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:34.289671      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:35.290249      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:36.290937      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:37.291356      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:38.291807      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:39.292610      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:40.293646      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:41.294567      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:42.294894      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:43.294861      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:44.295543      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:45.297163      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:46.297546      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:47.298119      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:48.298734      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:49.298903      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:50.299111      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:51.300108      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:52.299802      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:53.300121      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:54.300017      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:55.300586      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:56.300926      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:57.301095      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:58.302428      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:41:59.303243      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:00.303303      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/23/25 17:42:01.068
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/23/25 17:42:01.071
  STEP: Ensuring the job is replaced with a new one @ 04/23/25 17:42:01.073
  E0423 17:42:01.304518      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:02.304720      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:03.305825      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:04.305909      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:05.306169      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:06.306580      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:07.306896      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:08.307336      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:09.308239      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:10.309634      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:11.310374      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:12.310469      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:13.311461      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:14.312115      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:15.313521      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:16.314017      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:17.314936      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:18.315790      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:19.316636      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:20.316839      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:21.317891      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:22.318455      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:23.318414      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:24.319053      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:25.319236      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:26.320805      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:27.322227      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:28.322903      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:29.323135      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:30.323954      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:31.325725      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:32.326117      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:33.327094      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:34.327606      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:35.327787      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:36.328575      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:37.329633      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:38.330055      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:39.330760      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:40.331579      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:41.331893      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:42.332801      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:43.332939      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:44.333377      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:45.334131      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:46.335158      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:47.336053      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:48.336285      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:49.336571      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:50.337523      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:51.338569      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:52.339296      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:53.340746      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:54.340434      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:55.341385      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:56.342859      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:57.342970      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:58.343806      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:42:59.344030      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:00.344629      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/23/25 17:43:01.078
  I0423 17:43:01.086401 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8837" for this suite. @ 04/23/25 17:43:01.093
• [92.047 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/23/25 17:43:01.1
  I0423 17:43:01.100239 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename subpath @ 04/23/25 17:43:01.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:01.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:01.13
  STEP: Setting up data @ 04/23/25 17:43:01.132
  STEP: Creating pod pod-subpath-test-projected-9klx @ 04/23/25 17:43:01.138
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 17:43:01.138
  E0423 17:43:01.345136      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:02.345518      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:03.346148      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:04.346721      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:05.347962      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:06.348398      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:07.349589      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:08.351091      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:09.351195      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:10.351495      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:11.353248      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:12.354583      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:13.355121      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:14.355879      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:15.357118      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:16.358743      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:17.360035      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:18.361162      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:19.361129      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:20.362051      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:21.363070      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:22.364252      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:23.364638      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:24.364772      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:43:25.192
  I0423 17:43:25.194555 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-projected-9klx container test-container-subpath-projected-9klx: <nil>
  STEP: delete the pod @ 04/23/25 17:43:25.199
  STEP: Deleting pod pod-subpath-test-projected-9klx @ 04/23/25 17:43:25.205
  I0423 17:43:25.205204 24 delete.go:62] Deleting pod "pod-subpath-test-projected-9klx" in namespace "subpath-739"
  I0423 17:43:25.206646 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-739" for this suite. @ 04/23/25 17:43:25.208
• [24.110 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 04/23/25 17:43:25.21
  I0423 17:43:25.210192 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:43:25.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:25.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:25.217
  STEP: Setting up server cert @ 04/23/25 17:43:25.225
  E0423 17:43:25.365047      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:43:25.377
  STEP: Deploying the webhook pod @ 04/23/25 17:43:25.381
  STEP: Wait for the deployment to be ready @ 04/23/25 17:43:25.386
  I0423 17:43:25.390849 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 17:43:26.365800      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:27.366290      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 17:43:27.396
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:43:27.41
  E0423 17:43:28.367211      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:43:28.411202 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/23/25 17:43:28.414
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 17:43:28.433
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/23/25 17:43:28.438
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 17:43:28.443
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/23/25 17:43:28.447
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/23/25 17:43:28.45
  I0423 17:43:28.474889 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1116" for this suite. @ 04/23/25 17:43:28.477
  STEP: Destroying namespace "webhook-markers-5718" for this suite. @ 04/23/25 17:43:28.482
• [3.278 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/23/25 17:43:28.489
  I0423 17:43:28.489453 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename events @ 04/23/25 17:43:28.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:28.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:28.496
  STEP: Create set of events @ 04/23/25 17:43:28.498
  I0423 17:43:28.499976 24 core_events.go:198] created test-event-1
  I0423 17:43:28.501298 24 core_events.go:198] created test-event-2
  I0423 17:43:28.502661 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/23/25 17:43:28.502
  STEP: delete collection of events @ 04/23/25 17:43:28.503
  I0423 17:43:28.503999 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/23/25 17:43:28.512
  I0423 17:43:28.512533 24 core_events.go:230] requesting list of events to confirm quantity
  I0423 17:43:28.513905 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-299" for this suite. @ 04/23/25 17:43:28.58
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/23/25 17:43:28.591
  I0423 17:43:28.591997 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:43:28.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:28.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:28.604
  STEP: Creating a pod to test downward api env vars @ 04/23/25 17:43:28.605
  E0423 17:43:29.368876      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:30.370259      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:31.370610      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:32.370995      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:43:32.626
  I0423 17:43:32.630299 24 output.go:207] Trying to get logs from node worker01 pod downward-api-f050d4a5-d002-4ab4-b633-14972513db15 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 17:43:32.642
  I0423 17:43:32.652207 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7606" for this suite. @ 04/23/25 17:43:32.654
• [4.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/23/25 17:43:32.658
  I0423 17:43:32.658107 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename configmap @ 04/23/25 17:43:32.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:32.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:32.668
  STEP: creating a ConfigMap @ 04/23/25 17:43:32.669
  STEP: fetching the ConfigMap @ 04/23/25 17:43:32.672
  STEP: patching the ConfigMap @ 04/23/25 17:43:32.674
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/23/25 17:43:32.676
  STEP: deleting the ConfigMap by collection with a label selector @ 04/23/25 17:43:32.678
  STEP: listing all ConfigMaps in test namespace @ 04/23/25 17:43:32.681
  I0423 17:43:32.682343 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2976" for this suite. @ 04/23/25 17:43:32.758
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 04/23/25 17:43:32.767
  I0423 17:43:32.768127 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename fake-node @ 04/23/25 17:43:32.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:32.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:32.782
  STEP: Create "e2e-fake-node-vfkq2" @ 04/23/25 17:43:32.784
  STEP: Getting "e2e-fake-node-vfkq2" @ 04/23/25 17:43:32.791
  STEP: Patching "e2e-fake-node-vfkq2" @ 04/23/25 17:43:32.796
  STEP: Listing nodes with LabelSelector "e2e-fake-node-vfkq2=patched" @ 04/23/25 17:43:32.809
  STEP: Updating "e2e-fake-node-vfkq2" @ 04/23/25 17:43:32.861
  STEP: Delete "e2e-fake-node-vfkq2" @ 04/23/25 17:43:32.87
  STEP: Confirm deletion of "e2e-fake-node-vfkq2" @ 04/23/25 17:43:32.876
  I0423 17:43:32.880296 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-4828" for this suite. @ 04/23/25 17:43:32.883
• [0.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/23/25 17:43:32.887
  I0423 17:43:32.887715 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename emptydir @ 04/23/25 17:43:32.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:32.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:32.899
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/23/25 17:43:32.902
  E0423 17:43:33.371941      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:34.372316      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:35.372741      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:36.373294      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:43:36.921
  I0423 17:43:36.924838 24 output.go:207] Trying to get logs from node worker00 pod pod-e6803b58-6b41-437a-a28c-fd14d6bda2ee container test-container: <nil>
  STEP: delete the pod @ 04/23/25 17:43:36.929
  I0423 17:43:36.947173 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7674" for this suite. @ 04/23/25 17:43:36.949
• [4.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/23/25 17:43:36.952
  I0423 17:43:36.952156 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename sched-pred @ 04/23/25 17:43:36.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:36.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:36.96
  I0423 17:43:36.961695 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0423 17:43:37.056297 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0423 17:43:37.060720 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker00 before test
  I0423 17:43:37.064198 24 predicates.go:957] etcd-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064221 24 predicates.go:959] 	Container etcd ready: true, restart count 0
  I0423 17:43:37.064231 24 predicates.go:957] gobetween-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064238 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 17:43:37.064246 24 predicates.go:957] kube-apiserver-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064253 24 predicates.go:959] 	Container kube-apiserver ready: true, restart count 0
  I0423 17:43:37.064267 24 predicates.go:957] kube-controller-manager-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064274 24 predicates.go:959] 	Container kube-controller-manager ready: true, restart count 0
  I0423 17:43:37.064282 24 predicates.go:957] kube-proxy-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064289 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 17:43:37.064300 24 predicates.go:957] kube-scheduler-worker00 from kube-system started at 2025-04-23 16:01:54 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064307 24 predicates.go:959] 	Container kube-scheduler ready: true, restart count 0
  I0423 17:43:37.064315 24 predicates.go:957] calico-node-8wc69 from networking started at 2025-04-23 16:02:59 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064322 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 17:43:37.064330 24 predicates.go:957] metallb-speaker-d29d6 from networking started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064336 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 17:43:37.064344 24 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-23 16:07:17 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064351 24 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0423 17:43:37.064359 24 predicates.go:957] sonobuoy-e2e-job-b8c81cda7ba2451f from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 17:43:37.064366 24 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0423 17:43:37.064374 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 17:43:37.064382 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-v6sf4 from sonobuoy started at 2025-04-23 16:07:24 +0000 UTC (2 container statuses recorded)
  I0423 17:43:37.064391 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 17:43:37.064399 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 17:43:37.064406 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-x4jkj from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 17:43:37.064414 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 17:43:37.064421 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 17:43:37.064428 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.064435 24 predicates.go:957] ceph-csi-rbd-nodeplugin-rk497 from storage started at 2025-04-23 16:22:32 +0000 UTC (3 container statuses recorded)
  I0423 17:43:37.064442 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 17:43:37.064449 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 17:43:37.064456 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.064463 24 predicates.go:957] ceph-mon-worker00-5b7bb47bf6-b7m6x from storage started at 2025-04-23 16:22:32 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.064470 24 predicates.go:959] 	Container ceph-mon ready: true, restart count 0
  I0423 17:43:37.064477 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node worker01 before test
  I0423 17:43:37.069313 24 predicates.go:957] coredns-95979559b-ksl8k from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069332 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 17:43:37.069338 24 predicates.go:957] coredns-95979559b-l54c2 from kube-system started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069343 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0423 17:43:37.069351 24 predicates.go:957] gobetween-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069356 24 predicates.go:959] 	Container gobetween ready: true, restart count 0
  I0423 17:43:37.069361 24 predicates.go:957] kube-proxy-worker01 from kube-system started at 2025-04-23 16:02:05 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069365 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0423 17:43:37.069371 24 predicates.go:957] kubernetes-dashboard-api-75c8cc87b5-rmmnp from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069375 24 predicates.go:959] 	Container kubernetes-dashboard-api ready: true, restart count 0
  I0423 17:43:37.069380 24 predicates.go:957] kubernetes-dashboard-auth-84fdc98ddb-fvzk4 from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069384 24 predicates.go:959] 	Container kubernetes-dashboard-auth ready: true, restart count 0
  I0423 17:43:37.069437 24 predicates.go:957] kubernetes-dashboard-kong-78b4d69466-mtmwm from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069443 24 predicates.go:959] 	Container proxy ready: true, restart count 0
  I0423 17:43:37.069448 24 predicates.go:957] kubernetes-dashboard-metrics-scraper-7c444f8fcc-96vpq from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069929 24 predicates.go:959] 	Container kubernetes-dashboard-metrics-scraper ready: true, restart count 0
  I0423 17:43:37.069945 24 predicates.go:957] kubernetes-dashboard-web-79499dd8c4-m4zht from kube-system started at 2025-04-23 16:22:06 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.069960 24 predicates.go:959] 	Container kubernetes-dashboard-web ready: true, restart count 0
  I0423 17:43:37.069966 24 predicates.go:957] calico-kube-controllers-66d7f7ddc9-lxxbz from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.070035 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0423 17:43:37.070041 24 predicates.go:957] calico-node-bscw5 from networking started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.070063 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0423 17:43:37.070068 24 predicates.go:957] calico-typha-679bfcf946-fhbr8 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.070732 24 predicates.go:959] 	Container calico-typha ready: true, restart count 0
  I0423 17:43:37.070740 24 predicates.go:957] metallb-controller-86d658b89-ljvv5 from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.070746 24 predicates.go:959] 	Container controller ready: true, restart count 0
  I0423 17:43:37.070752 24 predicates.go:957] metallb-speaker-2b64r from networking started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.070758 24 predicates.go:959] 	Container speaker ready: true, restart count 0
  I0423 17:43:37.070867 24 predicates.go:957] sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-d9x28 from sonobuoy started at 2025-04-23 16:07:23 +0000 UTC (2 container statuses recorded)
  I0423 17:43:37.071302 24 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0423 17:43:37.071307 24 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0423 17:43:37.071314 24 predicates.go:957] ceph-csi-cephfs-nodeplugin-mr7dh from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 17:43:37.071788 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 17:43:37.071800 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 17:43:37.071805 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.071923 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-cffrm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 17:43:37.072107 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 17:43:37.072116 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 17:43:37.072132 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 17:43:37.072137 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 17:43:37.072142 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.072319 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-qcmwm from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 17:43:37.072325 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 17:43:37.072330 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 17:43:37.072334 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 17:43:37.072345 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 17:43:37.072350 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.072356 24 predicates.go:957] ceph-csi-cephfs-provisioner-bdbc9ff75-t6rp4 from storage started at 2025-04-23 16:02:58 +0000 UTC (5 container statuses recorded)
  I0423 17:43:37.072360 24 predicates.go:959] 	Container csi-cephfsplugin ready: true, restart count 0
  I0423 17:43:37.072365 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 17:43:37.072370 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 17:43:37.072375 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 17:43:37.072387 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.072392 24 predicates.go:957] ceph-csi-rbd-nodeplugin-sbzbz from storage started at 2025-04-23 16:02:58 +0000 UTC (3 container statuses recorded)
  I0423 17:43:37.072400 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 17:43:37.072405 24 predicates.go:959] 	Container driver-registrar ready: true, restart count 0
  I0423 17:43:37.072409 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.072428 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-64x2x from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 17:43:37.072433 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 17:43:37.072438 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 17:43:37.072443 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 17:43:37.072447 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 17:43:37.072452 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 17:43:37.072456 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 17:43:37.072462 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.073039 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-g6f5s from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 17:43:37.073052 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 17:43:37.073061 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 17:43:37.073066 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 17:43:37.073071 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 17:43:37.073076 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 17:43:37.073080 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 17:43:37.073085 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.073090 24 predicates.go:957] ceph-csi-rbd-provisioner-6687c7c766-hnbps from storage started at 2025-04-23 16:02:58 +0000 UTC (7 container statuses recorded)
  I0423 17:43:37.073099 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0423 17:43:37.073104 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0423 17:43:37.073109 24 predicates.go:959] 	Container csi-rbdplugin ready: true, restart count 0
  I0423 17:43:37.073114 24 predicates.go:959] 	Container csi-rbdplugin-controller ready: true, restart count 0
  I0423 17:43:37.073118 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0423 17:43:37.073130 24 predicates.go:959] 	Container csi-snapshotter ready: true, restart count 0
  I0423 17:43:37.073135 24 predicates.go:959] 	Container liveness-prometheus ready: true, restart count 0
  I0423 17:43:37.073140 24 predicates.go:957] ceph-mds-worker01-5cb6f4bd58-7kfbt from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073145 24 predicates.go:959] 	Container ceph-mds ready: true, restart count 0
  I0423 17:43:37.073150 24 predicates.go:957] ceph-mgr-worker01-7d4796dd6c-7hxcz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073155 24 predicates.go:959] 	Container ceph-mgr ready: true, restart count 0
  I0423 17:43:37.073169 24 predicates.go:957] ceph-osd-worker01-766bd958-tcsks from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073174 24 predicates.go:959] 	Container ceph-osd ready: true, restart count 0
  I0423 17:43:37.073441 24 predicates.go:957] ceph-rgw-worker01-755cf966f4-qcqjd from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073521 24 predicates.go:959] 	Container ceph-rgw ready: true, restart count 0
  I0423 17:43:37.073528 24 predicates.go:957] ceph-setup-hgggz from storage started at 2025-04-23 16:02:58 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073537 24 predicates.go:959] 	Container ceph ready: false, restart count 0
  I0423 17:43:37.073559 24 predicates.go:957] snapshot-controller-546c95687-dskm5 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073564 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 17:43:37.073610 24 predicates.go:957] snapshot-controller-546c95687-ps84s from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073615 24 predicates.go:959] 	Container snapshot-controller ready: true, restart count 0
  I0423 17:43:37.073650 24 predicates.go:957] snapshot-validation-webhook-c58ddd547-gl285 from storage started at 2025-04-23 16:03:14 +0000 UTC (1 container statuses recorded)
  I0423 17:43:37.073699 24 predicates.go:959] 	Container snapshot-validation-webhook ready: true, restart count 0
  STEP: verifying the node has the label node worker00 @ 04/23/25 17:43:37.086
  STEP: verifying the node has the label node worker01 @ 04/23/25 17:43:37.098
  I0423 17:43:37.169389 24 predicates.go:372] Pod coredns-95979559b-ksl8k requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169411 24 predicates.go:372] Pod coredns-95979559b-l54c2 requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169417 24 predicates.go:372] Pod etcd-worker00 requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169422 24 predicates.go:372] Pod gobetween-worker00 requesting resource cpu=100m on Node worker00
  I0423 17:43:37.169427 24 predicates.go:372] Pod gobetween-worker01 requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169432 24 predicates.go:372] Pod kube-apiserver-worker00 requesting resource cpu=250m on Node worker00
  I0423 17:43:37.169437 24 predicates.go:372] Pod kube-controller-manager-worker00 requesting resource cpu=200m on Node worker00
  I0423 17:43:37.169448 24 predicates.go:372] Pod kube-proxy-worker00 requesting resource cpu=200m on Node worker00
  I0423 17:43:37.169453 24 predicates.go:372] Pod kube-proxy-worker01 requesting resource cpu=200m on Node worker01
  I0423 17:43:37.169457 24 predicates.go:372] Pod kube-scheduler-worker00 requesting resource cpu=100m on Node worker00
  I0423 17:43:37.169463 24 predicates.go:372] Pod kubernetes-dashboard-api-75c8cc87b5-rmmnp requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169468 24 predicates.go:372] Pod kubernetes-dashboard-auth-84fdc98ddb-fvzk4 requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169475 24 predicates.go:372] Pod kubernetes-dashboard-kong-78b4d69466-mtmwm requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169481 24 predicates.go:372] Pod kubernetes-dashboard-metrics-scraper-7c444f8fcc-96vpq requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169486 24 predicates.go:372] Pod kubernetes-dashboard-web-79499dd8c4-m4zht requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169491 24 predicates.go:372] Pod calico-kube-controllers-66d7f7ddc9-lxxbz requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169496 24 predicates.go:372] Pod calico-node-8wc69 requesting resource cpu=250m on Node worker00
  I0423 17:43:37.169501 24 predicates.go:372] Pod calico-node-bscw5 requesting resource cpu=250m on Node worker01
  I0423 17:43:37.169507 24 predicates.go:372] Pod calico-typha-679bfcf946-fhbr8 requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169514 24 predicates.go:372] Pod metallb-controller-86d658b89-ljvv5 requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169519 24 predicates.go:372] Pod metallb-speaker-2b64r requesting resource cpu=100m on Node worker01
  I0423 17:43:37.169528 24 predicates.go:372] Pod metallb-speaker-d29d6 requesting resource cpu=100m on Node worker00
  I0423 17:43:37.169533 24 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169539 24 predicates.go:372] Pod sonobuoy-e2e-job-b8c81cda7ba2451f requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169550 24 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-d9x28 requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169555 24 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-5507d4fd73f1459d-v6sf4 requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169562 24 predicates.go:372] Pod ceph-csi-cephfs-nodeplugin-mr7dh requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169567 24 predicates.go:372] Pod ceph-csi-cephfs-nodeplugin-x4jkj requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169572 24 predicates.go:372] Pod ceph-csi-cephfs-provisioner-bdbc9ff75-cffrm requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169578 24 predicates.go:372] Pod ceph-csi-cephfs-provisioner-bdbc9ff75-qcmwm requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169583 24 predicates.go:372] Pod ceph-csi-cephfs-provisioner-bdbc9ff75-t6rp4 requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169588 24 predicates.go:372] Pod ceph-csi-rbd-nodeplugin-rk497 requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169596 24 predicates.go:372] Pod ceph-csi-rbd-nodeplugin-sbzbz requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169601 24 predicates.go:372] Pod ceph-csi-rbd-provisioner-6687c7c766-64x2x requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169607 24 predicates.go:372] Pod ceph-csi-rbd-provisioner-6687c7c766-g6f5s requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169613 24 predicates.go:372] Pod ceph-csi-rbd-provisioner-6687c7c766-hnbps requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169618 24 predicates.go:372] Pod ceph-mds-worker01-5cb6f4bd58-7kfbt requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169623 24 predicates.go:372] Pod ceph-mgr-worker01-7d4796dd6c-7hxcz requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169628 24 predicates.go:372] Pod ceph-mon-worker00-5b7bb47bf6-b7m6x requesting resource cpu=0m on Node worker00
  I0423 17:43:37.169641 24 predicates.go:372] Pod ceph-osd-worker01-766bd958-tcsks requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169646 24 predicates.go:372] Pod ceph-rgw-worker01-755cf966f4-qcqjd requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169659 24 predicates.go:372] Pod snapshot-controller-546c95687-dskm5 requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169665 24 predicates.go:372] Pod snapshot-controller-546c95687-ps84s requesting resource cpu=0m on Node worker01
  I0423 17:43:37.169672 24 predicates.go:372] Pod snapshot-validation-webhook-c58ddd547-gl285 requesting resource cpu=0m on Node worker01
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/23/25 17:43:37.169
  I0423 17:43:37.169708 24 predicates.go:382] Creating a pod which consumes cpu=1960m on Node worker00
  I0423 17:43:37.176296 24 predicates.go:382] Creating a pod which consumes cpu=1855m on Node worker01
  E0423 17:43:37.374995      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:38.375804      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/23/25 17:43:39.188
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c.18390388eb312575], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4740/filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c to worker00] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c.18390389070e6838], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c.1839038907b159aa], Reason = [Created], Message = [Created container filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c.183903890a960452], Reason = [Started], Message = [Started container filler-pod-64b3515a-1d96-4272-b9c1-32178b4e8f3c] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f202540e-957a-4bed-b827-e7f5a18db946.18390388eb87be34], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4740/filler-pod-f202540e-957a-4bed-b827-e7f5a18db946 to worker01] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f202540e-957a-4bed-b827-e7f5a18db946.1839038907d0e9e6], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f202540e-957a-4bed-b827-e7f5a18db946.1839038908546fd9], Reason = [Created], Message = [Created container filler-pod-f202540e-957a-4bed-b827-e7f5a18db946] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f202540e-957a-4bed-b827-e7f5a18db946.183903890b42918d], Reason = [Started], Message = [Started container filler-pod-f202540e-957a-4bed-b827-e7f5a18db946] @ 04/23/25 17:43:39.19
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1839038963532863], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 04/23/25 17:43:39.197
  E0423 17:43:39.375697      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label node off the node worker01 @ 04/23/25 17:43:40.202
  STEP: verifying the node doesn't have the label node @ 04/23/25 17:43:40.212
  STEP: removing the label node off the node worker00 @ 04/23/25 17:43:40.216
  STEP: verifying the node doesn't have the label node @ 04/23/25 17:43:40.226
  I0423 17:43:40.229961 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4740" for this suite. @ 04/23/25 17:43:40.233
• [3.286 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/23/25 17:43:40.238
  I0423 17:43:40.238160 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename subpath @ 04/23/25 17:43:40.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:43:40.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:43:40.251
  STEP: Setting up data @ 04/23/25 17:43:40.252
  STEP: Creating pod pod-subpath-test-configmap-gsvm @ 04/23/25 17:43:40.26
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 17:43:40.26
  E0423 17:43:40.377215      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:41.377618      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:42.378981      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:43.378694      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:44.380127      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:45.380703      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:46.381259      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:47.381672      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:48.381583      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:49.381843      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:50.382506      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:51.383086      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:52.383909      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:53.384805      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:54.385782      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:55.386508      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:56.386975      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:57.388006      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:58.389111      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:43:59.389573      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:00.389889      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:01.390231      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:02.391139      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:03.392666      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:44:04.33
  I0423 17:44:04.334071 24 output.go:207] Trying to get logs from node worker01 pod pod-subpath-test-configmap-gsvm container test-container-subpath-configmap-gsvm: <nil>
  STEP: delete the pod @ 04/23/25 17:44:04.341
  STEP: Deleting pod pod-subpath-test-configmap-gsvm @ 04/23/25 17:44:04.351
  I0423 17:44:04.351177 24 delete.go:62] Deleting pod "pod-subpath-test-configmap-gsvm" in namespace "subpath-8931"
  I0423 17:44:04.352819 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8931" for this suite. @ 04/23/25 17:44:04.354
• [24.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 04/23/25 17:44:04.357
  I0423 17:44:04.357922 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubectl @ 04/23/25 17:44:04.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:04.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:04.369
  STEP: creating all guestbook components @ 04/23/25 17:44:04.37
  I0423 17:44:04.370686 24 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0423 17:44:04.370776 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 create -f -'
  E0423 17:44:04.394264      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:44:04.447881 24 builder.go:146] stderr: ""
  I0423 17:44:04.447910 24 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0423 17:44:04.447938 24 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0423 17:44:04.448008 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 create -f -'
  I0423 17:44:04.526865 24 builder.go:146] stderr: ""
  I0423 17:44:04.526893 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0423 17:44:04.526978 24 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0423 17:44:04.527063 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 create -f -'
  I0423 17:44:04.606121 24 builder.go:146] stderr: ""
  I0423 17:44:04.606184 24 builder.go:147] stdout: "service/frontend created\n"
  I0423 17:44:04.607244 24 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0423 17:44:04.608102 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 create -f -'
  I0423 17:44:04.667112 24 builder.go:146] stderr: ""
  I0423 17:44:04.667167 24 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0423 17:44:04.667202 24 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0423 17:44:04.667540 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 create -f -'
  I0423 17:44:04.753093 24 builder.go:146] stderr: ""
  I0423 17:44:04.753156 24 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0423 17:44:04.753200 24 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0423 17:44:04.753292 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 create -f -'
  I0423 17:44:04.818798 24 builder.go:146] stderr: ""
  I0423 17:44:04.818827 24 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/23/25 17:44:04.818
  I0423 17:44:04.818862 24 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0423 17:44:05.394854      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:06.395817      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:07.396132      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:08.396820      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:09.396942      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:44:09.869607 24 kubectl.go:2283] Waiting for frontend to serve content.
  I0423 17:44:09.884814 24 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0423 17:44:09.895933 24 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/23/25 17:44:09.903
  I0423 17:44:09.903199 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 delete --grace-period=0 --force -f -'
  I0423 17:44:09.952434 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:44:09.952462 24 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 17:44:09.952
  I0423 17:44:09.952540 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 delete --grace-period=0 --force -f -'
  I0423 17:44:09.999988 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:44:10.000014 24 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 17:44:10
  I0423 17:44:10.000210 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 delete --grace-period=0 --force -f -'
  I0423 17:44:10.062490 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:44:10.062517 24 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 17:44:10.062
  I0423 17:44:10.062790 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 delete --grace-period=0 --force -f -'
  I0423 17:44:10.103183 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:44:10.103220 24 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 17:44:10.104
  I0423 17:44:10.104202 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 delete --grace-period=0 --force -f -'
  I0423 17:44:10.171673 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:44:10.171816 24 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/23/25 17:44:10.172
  I0423 17:44:10.172289 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4136744265 --namespace=kubectl-9543 delete --grace-period=0 --force -f -'
  I0423 17:44:10.247116 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0423 17:44:10.247148 24 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0423 17:44:10.249501 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9543" for this suite. @ 04/23/25 17:44:10.257
• [5.910 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/23/25 17:44:10.267
  I0423 17:44:10.268043 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename pods @ 04/23/25 17:44:10.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:10.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:10.287
  STEP: creating the pod @ 04/23/25 17:44:10.293
  STEP: setting up watch @ 04/23/25 17:44:10.293
  STEP: submitting the pod to kubernetes @ 04/23/25 17:44:10.396
  E0423 17:44:10.398861      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/23/25 17:44:10.409
  STEP: verifying pod creation was observed @ 04/23/25 17:44:10.419
  E0423 17:44:11.399537      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:12.399610      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/23/25 17:44:12.435
  STEP: verifying pod deletion was observed @ 04/23/25 17:44:12.45
  E0423 17:44:13.400350      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:44:14.153198 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8671" for this suite. @ 04/23/25 17:44:14.155
• [3.890 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 04/23/25 17:44:14.158
  I0423 17:44:14.158043 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename daemonsets @ 04/23/25 17:44:14.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:14.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:14.166
  STEP: Creating simple DaemonSet "daemon-set" @ 04/23/25 17:44:14.264
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/23/25 17:44:14.267
  I0423 17:44:14.361903 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0423 17:44:14.361948 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 17:44:14.401336      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:44:15.277663 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0423 17:44:15.277700 24 fixtures.go:131] Node worker00 is running 0 daemon pod, expected 1
  E0423 17:44:15.402364      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:44:16.277076 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0423 17:44:16.277131 24 fixtures.go:136] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/23/25 17:44:16.28
  STEP: DeleteCollection of the DaemonSets @ 04/23/25 17:44:16.283
  STEP: Verify that ReplicaSets have been deleted @ 04/23/25 17:44:16.286
  I0423 17:44:16.384074 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53855"},"items":null}

  I0423 17:44:16.386300 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53855"},"items":[{"metadata":{"name":"daemon-set-2glv7","generateName":"daemon-set-","namespace":"daemonsets-3346","uid":"dc988176-5fd7-4799-9c9a-fc71a3cf34de","resourceVersion":"53855","creationTimestamp":"2025-04-23T17:44:14Z","deletionTimestamp":"2025-04-23T17:44:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"c32a4c701c51b88fe83833bb36fed263ffd68afdc6e3cf3b79ae54676014f05f","cni.projectcalico.org/podIP":"10.200.131.150/32","cni.projectcalico.org/podIPs":"10.200.131.150/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"52c0c15f-1d1a-4cbf-b550-801f0f64e7b1","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-04-23T17:44:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-23T17:44:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"52c0c15f-1d1a-4cbf-b550-801f0f64e7b1\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-23T17:44:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.131.150\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-487qz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-487qz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker00","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker00"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:14Z"}],"hostIP":"192.168.58.100","hostIPs":[{"ip":"192.168.58.100"}],"podIP":"10.200.131.150","podIPs":[{"ip":"10.200.131.150"}],"startTime":"2025-04-23T17:44:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-23T17:44:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://affe9e3a9eb14f6486fc6ba26729f4d2890984cf1e19ee375c89ca135057d410","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ld9rx","generateName":"daemon-set-","namespace":"daemonsets-3346","uid":"6427eb65-1d7f-4ef5-9a1d-f7e1b5ae75dc","resourceVersion":"53854","creationTimestamp":"2025-04-23T17:44:14Z","deletionTimestamp":"2025-04-23T17:44:46Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"1b25d53d6424958e966b945dc38e42842b0dcd221a015e76a29e06d9cb1061f2","cni.projectcalico.org/podIP":"10.200.5.37/32","cni.projectcalico.org/podIPs":"10.200.5.37/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"52c0c15f-1d1a-4cbf-b550-801f0f64e7b1","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-04-23T17:44:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-23T17:44:14Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"52c0c15f-1d1a-4cbf-b550-801f0f64e7b1\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-23T17:44:15Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.5.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-cph5s","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-cph5s","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:15Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:15Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:15Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-23T17:44:14Z"}],"hostIP":"192.168.58.101","hostIPs":[{"ip":"192.168.58.101"}],"podIP":"10.200.5.37","podIPs":[{"ip":"10.200.5.37"}],"startTime":"2025-04-23T17:44:14Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-23T17:44:14Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://6017101d65a20d389ddfe352b83095dd90d4ccee1042c210e4f3f49b6e4ae6d5","started":true}],"qosClass":"BestEffort"}}]}

  I0423 17:44:16.390295 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3346" for this suite. @ 04/23/25 17:44:16.391
• [2.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/23/25 17:44:16.395
  I0423 17:44:16.395293 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename var-expansion @ 04/23/25 17:44:16.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:16.402
  E0423 17:44:16.402732      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:16.405
  STEP: Creating a pod to test env composition @ 04/23/25 17:44:16.406
  E0423 17:44:17.403777      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:18.404651      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:19.404894      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:20.405657      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:44:20.419
  I0423 17:44:20.423247 24 output.go:207] Trying to get logs from node worker00 pod var-expansion-bea1411d-1178-4576-b9c3-29031cc9bee6 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 17:44:20.427
  I0423 17:44:20.444889 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-801" for this suite. @ 04/23/25 17:44:20.446
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/23/25 17:44:20.449
  I0423 17:44:20.449192 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename podtemplate @ 04/23/25 17:44:20.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:20.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:20.457
  STEP: Create a pod template @ 04/23/25 17:44:20.458
  STEP: Replace a pod template @ 04/23/25 17:44:20.461
  I0423 17:44:20.463908 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0423 17:44:20.464152 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6211" for this suite. @ 04/23/25 17:44:20.551
• [0.110 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/23/25 17:44:20.559
  I0423 17:44:20.559023 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/23/25 17:44:20.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:20.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:20.571
  STEP: mirroring a new custom Endpoint @ 04/23/25 17:44:20.578
  I0423 17:44:20.585030 24 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0423 17:44:21.406679      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:22.406917      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/23/25 17:44:22.59
  STEP: mirroring deletion of a custom Endpoint @ 04/23/25 17:44:22.609
  I0423 17:44:22.617886 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9300" for this suite. @ 04/23/25 17:44:22.62
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 04/23/25 17:44:22.623
  I0423 17:44:22.623951 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename taint-single-pod @ 04/23/25 17:44:22.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:44:22.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:44:22.632
  I0423 17:44:22.636543 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0423 17:44:23.407146      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:24.407604      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:25.408102      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:26.408240      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:27.408933      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:28.409107      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:29.410882      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:30.411270      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:31.411880      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:32.412728      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:33.412734      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:34.414113      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:35.414410      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:36.415102      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:37.415244      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:38.415453      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:39.415698      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:40.416111      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:41.417274      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:42.417774      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:43.418221      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:44.418468      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:45.418895      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:46.420236      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:47.421105      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:48.421333      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:49.422093      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:50.422408      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:51.422610      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:52.423036      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:53.424439      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:54.425040      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:55.425227      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:56.425936      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:57.425959      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:58.426876      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:44:59.427121      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:00.427976      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:01.428277      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:02.429118      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:03.429601      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:04.429789      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:05.430501      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:06.430976      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:07.431153      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:08.431858      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:09.432666      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:10.433300      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:11.433870      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:12.434138      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:13.434957      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:14.435522      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:15.435911      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:16.436052      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:17.437159      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:18.437279      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:19.437676      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:20.438717      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:21.439020      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:22.440386      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:45:22.637907 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0423 17:45:22.644360 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 04/23/25 17:45:22.644
  I0423 17:45:22.865639 24 taints.go:294] Pod is running on worker00. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/23/25 17:45:22.865
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 17:45:22.891
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/23/25 17:45:22.894
  I0423 17:45:22.894680 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0423 17:45:22.894732 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/23/25 17:45:22.917
  STEP: Waiting some time to make sure that toleration time passed. @ 04/23/25 17:45:22.937
  E0423 17:45:23.440577      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:24.440945      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:25.441622      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:26.441394      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:27.442799      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:28.443653      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:29.443750      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:30.444700      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:31.445020      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:32.445638      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:33.446544      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:34.447357      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:35.447736      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:36.447917      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:37.448966      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:38.449587      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:39.450028      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:40.450484      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:41.450607      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:42.451055      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:43.451746      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:44.452654      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:45.453490      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:46.453993      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:47.454568      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:48.454592      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:49.454679      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:50.454820      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:51.455838      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:52.456076      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:53.456853      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:54.457644      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:55.459054      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:56.459750      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:57.460566      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:58.460667      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:45:59.460935      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:00.461662      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:01.461837      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:02.462004      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:03.462330      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:04.463288      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:05.463814      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:06.464195      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:07.464377      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:08.465002      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:09.465165      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:10.465808      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:11.465827      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:12.466129      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:13.467043      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:14.468103      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:15.468489      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:16.469030      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:17.469602      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:18.470259      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:19.471320      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:20.471648      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:21.472204      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:22.473043      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:23.473188      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:24.474053      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:25.474540      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:26.474997      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:27.476235      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:28.476839      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:29.477984      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:30.478603      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:31.478681      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:32.478844      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:33.479657      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:34.479759      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:35.480374      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:36.480627      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:37.481677      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:46:37.938499 24 taints.go:329] Pod wasn't evicted. Test successful
  I0423 17:46:37.939248 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-1678" for this suite. @ 04/23/25 17:46:37.945
• [135.337 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 04/23/25 17:46:37.961
  I0423 17:46:37.961592 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename resourcequota @ 04/23/25 17:46:37.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:46:37.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:46:37.972
  STEP: Creating a ResourceQuota @ 04/23/25 17:46:37.973
  STEP: Getting a ResourceQuota @ 04/23/25 17:46:37.975
  STEP: Updating a ResourceQuota @ 04/23/25 17:46:37.977
  STEP: Verifying a ResourceQuota was modified @ 04/23/25 17:46:37.979
  STEP: Deleting a ResourceQuota @ 04/23/25 17:46:37.981
  STEP: Verifying the deleted ResourceQuota @ 04/23/25 17:46:37.985
  I0423 17:46:37.987027 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9890" for this suite. @ 04/23/25 17:46:38.048
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/23/25 17:46:38.061
  I0423 17:46:38.061592 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename subpath @ 04/23/25 17:46:38.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:46:38.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:46:38.075
  STEP: Setting up data @ 04/23/25 17:46:38.077
  STEP: Creating pod pod-subpath-test-downwardapi-q944 @ 04/23/25 17:46:38.081
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 17:46:38.081
  E0423 17:46:38.481766      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:39.482978      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:40.483437      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:41.483816      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:42.484100      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:43.485457      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:44.485585      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:45.486414      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:46.487115      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:47.487399      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:48.488746      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:49.489610      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:50.491141      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:51.491675      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:52.492107      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:53.492647      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:54.492962      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:55.493028      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:56.493788      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:57.494888      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:58.496035      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:46:59.498693      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:47:00.148
  I0423 17:47:00.150348 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-downwardapi-q944 container test-container-subpath-downwardapi-q944: <nil>
  STEP: delete the pod @ 04/23/25 17:47:00.155
  STEP: Deleting pod pod-subpath-test-downwardapi-q944 @ 04/23/25 17:47:00.163
  I0423 17:47:00.163285 24 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-q944" in namespace "subpath-2464"
  I0423 17:47:00.164474 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2464" for this suite. @ 04/23/25 17:47:00.166
• [22.109 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/23/25 17:47:00.171
  I0423 17:47:00.171327 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename projected @ 04/23/25 17:47:00.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:00.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:00.18
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:47:00.182
  E0423 17:47:00.497660      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:01.497989      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:47:02.193
  I0423 17:47:02.196231 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-c45b53ac-6cfe-4b16-86ad-6a27c3ccd151 container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:47:02.2
  I0423 17:47:02.210030 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8605" for this suite. @ 04/23/25 17:47:02.212
• [2.045 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/23/25 17:47:02.216
  I0423 17:47:02.216367 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename kubelet-test @ 04/23/25 17:47:02.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:02.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:02.229
  E0423 17:47:02.498085      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:03.498316      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:04.498659      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:05.498925      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:47:06.241549 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7549" for this suite. @ 04/23/25 17:47:06.243
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 04/23/25 17:47:06.247
  I0423 17:47:06.247271 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename webhook @ 04/23/25 17:47:06.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:06.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:06.253
  STEP: Setting up server cert @ 04/23/25 17:47:06.262
  E0423 17:47:06.499528      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/23/25 17:47:06.58
  STEP: Deploying the webhook pod @ 04/23/25 17:47:06.595
  STEP: Wait for the deployment to be ready @ 04/23/25 17:47:06.604
  I0423 17:47:06.609809 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0423 17:47:07.499825      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:08.500147      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/23/25 17:47:08.623
  STEP: Verifying the service has paired with the endpoint @ 04/23/25 17:47:08.644
  E0423 17:47:09.500456      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:47:09.645022 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/23/25 17:47:09.654
  STEP: create a namespace for the webhook @ 04/23/25 17:47:09.675
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/23/25 17:47:09.681
  I0423 17:47:09.716609 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3543" for this suite. @ 04/23/25 17:47:09.722
  STEP: Destroying namespace "webhook-markers-9846" for this suite. @ 04/23/25 17:47:09.736
  STEP: Destroying namespace "fail-closed-namespace-6131" for this suite. @ 04/23/25 17:47:09.745
• [3.502 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 04/23/25 17:47:09.749
  I0423 17:47:09.749700 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:47:09.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:09.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:09.763
  STEP: Creating a pod to test downward api env vars @ 04/23/25 17:47:09.765
  E0423 17:47:10.500988      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:11.502046      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:12.503418      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:13.504389      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:47:13.787
  I0423 17:47:13.789106 24 output.go:207] Trying to get logs from node worker00 pod downward-api-3543f39e-f5bc-4e16-981d-089a08727fa0 container dapi-container: <nil>
  STEP: delete the pod @ 04/23/25 17:47:13.791
  I0423 17:47:13.798117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2380" for this suite. @ 04/23/25 17:47:13.799
• [4.052 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/23/25 17:47:13.802
  I0423 17:47:13.802496 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename subpath @ 04/23/25 17:47:13.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:13.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:13.809
  STEP: Setting up data @ 04/23/25 17:47:13.811
  STEP: Creating pod pod-subpath-test-secret-247t @ 04/23/25 17:47:13.815
  STEP: Creating a pod to test atomic-volume-subpath @ 04/23/25 17:47:13.815
  E0423 17:47:14.505094      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:15.505528      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:16.505958      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:17.506398      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:18.507371      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:19.507529      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:20.508536      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:21.508699      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:22.508805      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:23.509299      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:24.509498      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:25.509572      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:26.510112      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:27.510290      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:28.511437      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:29.511979      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:30.511997      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:31.512443      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:32.512843      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:33.513909      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:34.514964      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:35.515697      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:36.516725      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:37.517087      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:47:37.89
  I0423 17:47:37.894923 24 output.go:207] Trying to get logs from node worker00 pod pod-subpath-test-secret-247t container test-container-subpath-secret-247t: <nil>
  STEP: delete the pod @ 04/23/25 17:47:37.9
  STEP: Deleting pod pod-subpath-test-secret-247t @ 04/23/25 17:47:37.919
  I0423 17:47:37.919545 24 delete.go:62] Deleting pod "pod-subpath-test-secret-247t" in namespace "subpath-1860"
  I0423 17:47:37.921443 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1860" for this suite. @ 04/23/25 17:47:37.923
• [24.123 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 04/23/25 17:47:37.925
  I0423 17:47:37.925721 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename containers @ 04/23/25 17:47:37.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:37.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:37.932
  E0423 17:47:38.518603      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:39.519034      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0423 17:47:39.952598 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3415" for this suite. @ 04/23/25 17:47:39.955
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/23/25 17:47:39.972
  I0423 17:47:39.972964 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-4136744265
  STEP: Building a namespace api object, basename downward-api @ 04/23/25 17:47:39.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/23/25 17:47:39.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/23/25 17:47:39.984
  STEP: Creating a pod to test downward API volume plugin @ 04/23/25 17:47:39.985
  E0423 17:47:40.519513      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:41.520286      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:42.520666      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0423 17:47:43.521634      24 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/23/25 17:47:44.004
  I0423 17:47:44.006625 24 output.go:207] Trying to get logs from node worker00 pod downwardapi-volume-08a1f196-8881-4a40-96f7-da60d40fc03b container client-container: <nil>
  STEP: delete the pod @ 04/23/25 17:47:44.009
  I0423 17:47:44.027902 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1704" for this suite. @ 04/23/25 17:47:44.03
• [4.062 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0423 17:47:44.034210 24 suites.go:34] Running AfterSuite actions on node 1
  I0423 17:47:44.034234 24 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.024 seconds]
------------------------------

Ran 411 of 6625 Specs in 5982.990 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6214 Skipped
PASS

Ginkgo ran 1 suite in 1h39m44.082724655s
Test Suite Passed
