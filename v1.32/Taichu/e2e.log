  I0427 06:12:30.788649      25 e2e.go:109] Starting e2e run "f5a930d4-38d4-4eb5-806f-b09a3e3a12df" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1745734350 - will randomize all specs

Will run 411 of 6624 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0427 06:12:30.887458 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:12:30.888140 25 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0427 06:12:30.903583 25 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0427 06:12:30.905764 25 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0427 06:12:30.905800 25 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I0427 06:12:30.905813 25 e2e.go:245] e2e test version: v1.32.3
  I0427 06:12:30.906791 25 e2e.go:254] kube-apiserver version: v1.32.3
  I0427 06:12:30.906868 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:12:30.909015 25 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.022 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/27/25 06:12:30.982
  I0427 06:12:30.982118 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:12:30.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:12:30.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:12:30.992
  STEP: Creating the pod @ 04/27/25 06:12:30.995
  I0427 06:12:33.526840 25 pod_client.go:173] Successfully updated pod "annotationupdateb1a9b95a-6016-45bd-bc09-755e2e23f6bd"
  I0427 06:12:35.538278 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7139" for this suite. @ 04/27/25 06:12:35.54
• [4.562 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 04/27/25 06:12:35.544
  I0427 06:12:35.544309 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 06:12:35.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:12:35.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:12:35.555
  STEP: Creating simple DaemonSet "daemon-set" @ 04/27/25 06:12:35.649
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/27/25 06:12:35.652
  I0427 06:12:35.744461 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:12:35.744498 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:12:36.659109 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:12:36.659144 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:12:37.658708 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:12:37.658753 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:12:38.659324 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0427 06:12:38.659371 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  I0427 06:12:39.658717 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 06:12:39.658757 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/27/25 06:12:39.66
  I0427 06:12:39.663599 25 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/27/25 06:12:39.663
  I0427 06:12:39.669723 25 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/27/25 06:12:39.669
  I0427 06:12:39.671621 25 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0427 06:12:39.671700 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.671745 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.671906 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.671961 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.672002 25 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.672019 25 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-8873 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0427 06:12:39.672030 25 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/27/25 06:12:39.672
  STEP: watching for the daemon set status to be patched @ 04/27/25 06:12:39.676
  I0427 06:12:39.678732 25 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0427 06:12:39.678838 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.678932 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.679221 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.679374 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.679493 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.679613 25 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-8873 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0427 06:12:39.679701 25 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0427 06:12:39.679718 25 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-8873 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0427 06:12:39.679728 25 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/27/25 06:12:39.682
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8873, will wait for the garbage collector to delete the pods @ 04/27/25 06:12:39.682
  I0427 06:12:39.740502 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 3.797869ms
  I0427 06:12:39.840969 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.465407ms
  I0427 06:12:42.644157 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:12:42.644195 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0427 06:12:42.646409 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20710"},"items":null}

  I0427 06:12:42.648387 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20710"},"items":null}

  I0427 06:12:42.656670 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8873" for this suite. @ 04/27/25 06:12:42.658
• [7.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/27/25 06:12:42.661
  I0427 06:12:42.661635 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 06:12:42.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:12:42.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:12:42.672
  I0427 06:12:42.704009 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6271" for this suite. @ 04/27/25 06:12:42.752
• [0.096 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 04/27/25 06:12:42.757
  I0427 06:12:42.757540 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 06:12:42.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:12:42.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:12:42.769
  STEP: Creating a ResourceQuota @ 04/27/25 06:12:42.774
  STEP: Getting a ResourceQuota @ 04/27/25 06:12:42.778
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/27/25 06:12:42.781
  STEP: Patching the ResourceQuota @ 04/27/25 06:12:42.783
  STEP: Deleting a Collection of ResourceQuotas @ 04/27/25 06:12:42.789
  STEP: Verifying the deleted ResourceQuota @ 04/27/25 06:12:42.794
  I0427 06:12:42.796068 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2556" for this suite. @ 04/27/25 06:12:42.855
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/27/25 06:12:42.859
  I0427 06:12:42.859939 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:12:42.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:12:42.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:12:42.873
  STEP: Creating secret with name s-test-opt-del-d9045d06-be64-4a69-8b13-ffe3a5e84c0a @ 04/27/25 06:12:42.953
  STEP: Creating secret with name s-test-opt-upd-c047e658-acf8-415b-b888-30d325e40b77 @ 04/27/25 06:12:42.956
  STEP: Creating the pod @ 04/27/25 06:12:42.958
  STEP: Deleting secret s-test-opt-del-d9045d06-be64-4a69-8b13-ffe3a5e84c0a @ 04/27/25 06:12:46.986
  STEP: Updating secret s-test-opt-upd-c047e658-acf8-415b-b888-30d325e40b77 @ 04/27/25 06:12:46.989
  STEP: Creating secret with name s-test-opt-create-beabfa70-3a44-491f-830e-3773069afc0d @ 04/27/25 06:12:46.992
  STEP: waiting to observe update in volume @ 04/27/25 06:12:46.995
  I0427 06:14:17.342902 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8220" for this suite. @ 04/27/25 06:14:17.345
• [94.490 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/27/25 06:14:17.349
  I0427 06:14:17.349736 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename discovery @ 04/27/25 06:14:17.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:14:17.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:14:17.359
  STEP: Setting up server cert @ 04/27/25 06:14:17.363
  I0427 06:14:17.533428 25 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0427 06:14:17.534718 25 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0427 06:14:17.534744 25 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0427 06:14:17.534752 25 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0427 06:14:17.534760 25 discovery.go:139] Checking APIGroup: apps
  I0427 06:14:17.536141 25 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0427 06:14:17.536166 25 discovery.go:148] Versions found [{apps/v1 v1}]
  I0427 06:14:17.536175 25 discovery.go:154] apps/v1 matches apps/v1
  I0427 06:14:17.536182 25 discovery.go:139] Checking APIGroup: events.k8s.io
  I0427 06:14:17.537466 25 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0427 06:14:17.537500 25 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0427 06:14:17.537508 25 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0427 06:14:17.537545 25 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0427 06:14:17.539007 25 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0427 06:14:17.539044 25 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0427 06:14:17.539052 25 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0427 06:14:17.539060 25 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0427 06:14:17.540080 25 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0427 06:14:17.540103 25 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0427 06:14:17.540111 25 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0427 06:14:17.540118 25 discovery.go:139] Checking APIGroup: autoscaling
  I0427 06:14:17.541112 25 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0427 06:14:17.541141 25 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0427 06:14:17.541150 25 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0427 06:14:17.541157 25 discovery.go:139] Checking APIGroup: batch
  I0427 06:14:17.542007 25 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0427 06:14:17.542036 25 discovery.go:148] Versions found [{batch/v1 v1}]
  I0427 06:14:17.542045 25 discovery.go:154] batch/v1 matches batch/v1
  I0427 06:14:17.542052 25 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0427 06:14:17.542888 25 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0427 06:14:17.543012 25 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0427 06:14:17.543022 25 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0427 06:14:17.543030 25 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0427 06:14:17.544305 25 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0427 06:14:17.544337 25 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0427 06:14:17.544348 25 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0427 06:14:17.544388 25 discovery.go:139] Checking APIGroup: policy
  I0427 06:14:17.545519 25 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0427 06:14:17.545541 25 discovery.go:148] Versions found [{policy/v1 v1}]
  I0427 06:14:17.545550 25 discovery.go:154] policy/v1 matches policy/v1
  I0427 06:14:17.545558 25 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0427 06:14:17.546458 25 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0427 06:14:17.546479 25 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0427 06:14:17.546488 25 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0427 06:14:17.546496 25 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0427 06:14:17.547318 25 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0427 06:14:17.547348 25 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0427 06:14:17.547357 25 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0427 06:14:17.547364 25 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0427 06:14:17.548798 25 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0427 06:14:17.548830 25 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0427 06:14:17.548840 25 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0427 06:14:17.548849 25 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0427 06:14:17.550065 25 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0427 06:14:17.550100 25 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0427 06:14:17.550108 25 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0427 06:14:17.550116 25 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0427 06:14:17.551151 25 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0427 06:14:17.551176 25 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0427 06:14:17.551184 25 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0427 06:14:17.551192 25 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0427 06:14:17.552057 25 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0427 06:14:17.552083 25 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0427 06:14:17.552091 25 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0427 06:14:17.552099 25 discovery.go:139] Checking APIGroup: node.k8s.io
  I0427 06:14:17.553285 25 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0427 06:14:17.553316 25 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0427 06:14:17.553325 25 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0427 06:14:17.553332 25 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0427 06:14:17.554236 25 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0427 06:14:17.554266 25 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0427 06:14:17.554274 25 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0427 06:14:17.554283 25 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0427 06:14:17.555623 25 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0427 06:14:17.555658 25 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0427 06:14:17.555666 25 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0427 06:14:17.555674 25 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0427 06:14:17.556540 25 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0427 06:14:17.556567 25 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0427 06:14:17.556576 25 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0427 06:14:17.556638 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2581" for this suite. @ 04/27/25 06:14:17.563
• [0.218 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/27/25 06:14:17.567
  I0427 06:14:17.567680 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 06:14:17.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:14:17.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:14:17.58
  STEP: Creating configMap with name cm-test-opt-del-60fba00c-eb5f-4433-8ee3-a14d0bd4e3fa @ 04/27/25 06:14:17.663
  STEP: Creating configMap with name cm-test-opt-upd-8f354073-0248-43fa-8768-c8ed0eb29528 @ 04/27/25 06:14:17.666
  STEP: Creating the pod @ 04/27/25 06:14:17.669
  STEP: Deleting configmap cm-test-opt-del-60fba00c-eb5f-4433-8ee3-a14d0bd4e3fa @ 04/27/25 06:14:19.692
  STEP: Updating configmap cm-test-opt-upd-8f354073-0248-43fa-8768-c8ed0eb29528 @ 04/27/25 06:14:19.695
  STEP: Creating configMap with name cm-test-opt-create-a20b3966-6da2-4cd0-906e-35cda5f28bf2 @ 04/27/25 06:14:19.698
  STEP: waiting to observe update in volume @ 04/27/25 06:14:19.701
  I0427 06:15:37.943200 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4818" for this suite. @ 04/27/25 06:15:37.946
• [80.382 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 04/27/25 06:15:37.95
  I0427 06:15:37.950364 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename security-context @ 04/27/25 06:15:37.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:15:37.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:15:37.96
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/27/25 06:15:37.962
  STEP: Saw pod success @ 04/27/25 06:15:41.976
  I0427 06:15:41.978192 25 output.go:207] Trying to get logs from node node3 pod security-context-e3e22630-3aa6-4c94-8b58-8b4df1bff2b0 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:15:41.982
  I0427 06:15:41.992111 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9808" for this suite. @ 04/27/25 06:15:41.995
• [4.049 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/27/25 06:15:41.999
  I0427 06:15:41.999169 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-runtime @ 04/27/25 06:15:41.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:15:42.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:15:42.01
  STEP: create the container @ 04/27/25 06:15:42.014
  W0427 06:15:42.022581      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/27/25 06:15:42.022
  STEP: get the container status @ 04/27/25 06:15:45.035
  STEP: the container should be terminated @ 04/27/25 06:15:45.038
  STEP: the termination message should be set @ 04/27/25 06:15:45.038
  I0427 06:15:45.038055 25 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/27/25 06:15:45.038
  I0427 06:15:45.047998 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8261" for this suite. @ 04/27/25 06:15:45.051
• [3.056 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/27/25 06:15:45.055
  I0427 06:15:45.055168 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename subpath @ 04/27/25 06:15:45.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:15:45.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:15:45.067
  STEP: Setting up data @ 04/27/25 06:15:45.069
  STEP: Creating pod pod-subpath-test-secret-mdmm @ 04/27/25 06:15:45.078
  STEP: Creating a pod to test atomic-volume-subpath @ 04/27/25 06:15:45.078
  STEP: Saw pod success @ 04/27/25 06:16:07.122
  I0427 06:16:07.125180 25 output.go:207] Trying to get logs from node node1 pod pod-subpath-test-secret-mdmm container test-container-subpath-secret-mdmm: <nil>
  STEP: delete the pod @ 04/27/25 06:16:07.13
  STEP: Deleting pod pod-subpath-test-secret-mdmm @ 04/27/25 06:16:07.139
  I0427 06:16:07.139931 25 delete.go:62] Deleting pod "pod-subpath-test-secret-mdmm" in namespace "subpath-7205"
  I0427 06:16:07.143802 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7205" for this suite. @ 04/27/25 06:16:07.146
• [22.095 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/27/25 06:16:07.15
  I0427 06:16:07.150214 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replication-controller @ 04/27/25 06:16:07.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:07.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:07.163
  STEP: Creating replication controller my-hostname-basic-05cef25a-a80c-410c-a6f7-9f34417f62b3 @ 04/27/25 06:16:07.167
  I0427 06:16:07.180485 25 resource.go:87] Pod name my-hostname-basic-05cef25a-a80c-410c-a6f7-9f34417f62b3: Found 0 pods out of 1
  I0427 06:16:12.184524 25 resource.go:87] Pod name my-hostname-basic-05cef25a-a80c-410c-a6f7-9f34417f62b3: Found 1 pods out of 1
  I0427 06:16:12.184565 25 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-05cef25a-a80c-410c-a6f7-9f34417f62b3" are running
  I0427 06:16:12.186408 25 rc.go:523] Pod "my-hostname-basic-05cef25a-a80c-410c-a6f7-9f34417f62b3-2tqwv" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 06:16:07 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 06:16:07 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 06:16:07 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 06:16:07 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 06:16:07 +0000 UTC Reason: Message:}])
  I0427 06:16:12.186443 25 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/27/25 06:16:12.186
  I0427 06:16:12.192613 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4014" for this suite. @ 04/27/25 06:16:12.196
• [5.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/27/25 06:16:12.201
  I0427 06:16:12.201113 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:16:12.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:12.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:12.215
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:16:12.218
  STEP: Saw pod success @ 04/27/25 06:16:16.236
  I0427 06:16:16.238144 25 output.go:207] Trying to get logs from node node3 pod downwardapi-volume-65edf50f-0fa3-4c31-bd1c-171fbf2069d5 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:16:16.242
  I0427 06:16:16.253460 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-431" for this suite. @ 04/27/25 06:16:16.257
• [4.061 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/27/25 06:16:16.262
  I0427 06:16:16.262081 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename init-container @ 04/27/25 06:16:16.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:16.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:16.275
  STEP: creating the pod @ 04/27/25 06:16:16.278
  I0427 06:16:16.278076 25 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0427 06:16:20.681554 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7138" for this suite. @ 04/27/25 06:16:20.685
• [4.428 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 04/27/25 06:16:20.69
  I0427 06:16:20.690101 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:16:20.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:20.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:20.703
  STEP: Setting up server cert @ 04/27/25 06:16:20.721
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:16:20.925
  STEP: Deploying the webhook pod @ 04/27/25 06:16:20.928
  STEP: Wait for the deployment to be ready @ 04/27/25 06:16:20.937
  I0427 06:16:20.942420 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/27/25 06:16:22.95
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:16:22.956
  I0427 06:16:23.957180 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/27/25 06:16:23.999
  STEP: Creating a configMap that should be mutated @ 04/27/25 06:16:24.008
  STEP: Deleting the collection of validation webhooks @ 04/27/25 06:16:24.026
  STEP: Creating a configMap that should not be mutated @ 04/27/25 06:16:24.051
  I0427 06:16:24.089965 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1351" for this suite. @ 04/27/25 06:16:24.096
  STEP: Destroying namespace "webhook-markers-9507" for this suite. @ 04/27/25 06:16:24.102
• [3.423 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/27/25 06:16:24.113
  I0427 06:16:24.113388 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:16:24.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:24.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:24.131
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/27/25 06:16:24.136
  STEP: Saw pod success @ 04/27/25 06:16:28.172
  I0427 06:16:28.177164 25 output.go:207] Trying to get logs from node node1 pod pod-ae2b3624-a9c2-4b43-b92c-6b8d54f858cc container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:16:28.182
  I0427 06:16:28.196181 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1696" for this suite. @ 04/27/25 06:16:28.202
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 04/27/25 06:16:28.211
  I0427 06:16:28.211181 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:16:28.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:28.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:28.23
  STEP: creating service nodeport-test with type=NodePort in namespace services-846 @ 04/27/25 06:16:28.235
  STEP: creating replication controller nodeport-test in namespace services-846 @ 04/27/25 06:16:28.251
  I0427 06:16:28.259655      25 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-846, replica count: 2
  I0427 06:16:31.311596      25 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:16:31.311634 25 resource.go:361] Creating new exec pod
  I0427 06:16:34.326743 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0427 06:16:34.424673 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.68.148.244) 80 port [tcp/http] succeeded!\n"
  I0427 06:16:34.424718 25 builder.go:147] stdout: "nodeport-test-7lwpg"
  I0427 06:16:34.424780 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.148.244 80'
  I0427 06:16:34.507453 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.148.244 80\nConnection to 10.68.148.244 80 port [tcp/http] succeeded!\n"
  I0427 06:16:34.507501 25 builder.go:147] stdout: ""
  I0427 06:16:35.425610 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.148.244 80'
  I0427 06:16:35.511341 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.148.244 80\nConnection to 10.68.148.244 80 port [tcp/http] succeeded!\n"
  I0427 06:16:35.511404 25 builder.go:147] stdout: ""
  I0427 06:16:36.425709 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.148.244 80'
  I0427 06:16:36.520769 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.148.244 80\nConnection to 10.68.148.244 80 port [tcp/http] succeeded!\n"
  I0427 06:16:36.520814 25 builder.go:147] stdout: "nodeport-test-r77x9"
  I0427 06:16:36.520878 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.151 32115'
  I0427 06:16:36.606121 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.151 32115\nConnection to 192.168.227.151 32115 port [tcp/*] succeeded!\n"
  I0427 06:16:36.606167 25 builder.go:147] stdout: ""
  I0427 06:16:37.521501 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.151 32115'
  I0427 06:16:37.623016 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.151 32115\nConnection to 192.168.227.151 32115 port [tcp/*] succeeded!\n"
  I0427 06:16:37.623061 25 builder.go:147] stdout: ""
  I0427 06:16:38.521138 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.151 32115'
  I0427 06:16:38.606321 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.151 32115\nConnection to 192.168.227.151 32115 port [tcp/*] succeeded!\n"
  I0427 06:16:38.606364 25 builder.go:147] stdout: ""
  I0427 06:16:39.521078 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.151 32115'
  I0427 06:16:39.607558 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.151 32115\nConnection to 192.168.227.151 32115 port [tcp/*] succeeded!\n"
  I0427 06:16:39.607602 25 builder.go:147] stdout: "nodeport-test-r77x9"
  I0427 06:16:39.607663 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.153 32115'
  I0427 06:16:39.692116 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.153 32115\nConnection to 192.168.227.153 32115 port [tcp/*] succeeded!\n"
  I0427 06:16:39.692184 25 builder.go:147] stdout: ""
  I0427 06:16:40.607944 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-846 exec execpodntd77 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.153 32115'
  I0427 06:16:40.693717 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.153 32115\nConnection to 192.168.227.153 32115 port [tcp/*] succeeded!\n"
  I0427 06:16:40.693761 25 builder.go:147] stdout: "nodeport-test-r77x9"
  I0427 06:16:40.693841 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-846" for this suite. @ 04/27/25 06:16:40.697
• [12.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 04/27/25 06:16:40.702
  I0427 06:16:40.703015 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 06:16:40.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:16:40.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:16:40.714
  STEP: Creating pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606 @ 04/27/25 06:16:40.719
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 06:16:42.734
  I0427 06:16:42.737169 25 container_probe.go:1749] Initial restart count of pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 is 0
  I0427 06:16:42.742983 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:44.745839 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:46.748513 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:48.751904 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:50.754858 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:52.757651 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:54.762101 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:56.765842 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:16:58.770654 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:00.776876 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:02.780729 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:04.785933 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:06.790574 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:08.796475 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:10.803028 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:12.806147 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:14.809912 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:16.812849 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:18.817001 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:20.820730 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:22.825336 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:24.828828 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:26.834818 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:28.839149 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:30.844081 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:32.851947 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:34.854956 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:36.858692 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:38.862984 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:40.867194 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:42.874778 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:44.877933 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:46.883402 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:48.888527 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:50.895128 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:52.902102 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:54.908084 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:56.913277 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:17:58.918003 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:00.925041 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:02.929880 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:04.935355 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:06.939408 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:08.942819 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:10.947652 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:12.951406 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:14.955018 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:16.958451 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:18.962346 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:20.966650 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:22.971170 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:24.975202 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:26.979860 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:28.984787 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:30.989404 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:32.993621 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:34.997594 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:37.001138 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:39.004815 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:41.008645 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:43.012489 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:45.015477 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:47.019215 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:49.023128 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:51.028190 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:53.032687 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:55.036234 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:57.040989 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:18:59.045397 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:01.048725 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:03.053784 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:05.058252 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:07.062542 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:09.066123 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:11.069571 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:13.073806 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:15.077735 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:17.080927 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:19.084853 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:21.089868 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:23.093851 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:25.097697 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:27.102222 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:29.106672 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:31.112538 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:33.115979 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:35.118893 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:37.123603 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:39.126843 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:41.129736 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:43.134036 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:45.137279 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:47.145154 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:49.151920 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:51.156113 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:53.162726 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:55.167472 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:57.171417 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:19:59.175676 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:01.179211 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:03.182918 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:05.187157 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:07.192376 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:09.195671 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:11.198914 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:13.203077 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:15.206770 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:17.211594 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:19.216253 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:21.222997 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:23.226066 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:25.230306 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:27.235639 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:29.238236 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:31.243028 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:33.247450 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:35.250472 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:37.254909 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:39.258167 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  I0427 06:20:41.262414 25 container_probe.go:1759] Get pod test-grpc-e2514122-b3dc-49a1-8022-36706679a825 in namespace container-probe-606
  STEP: deleting the pod @ 04/27/25 06:20:43.264
  I0427 06:20:43.289939 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-606" for this suite. @ 04/27/25 06:20:43.297
• [242.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189
  STEP: Creating a kubernetes client @ 04/27/25 06:20:43.308
  I0427 06:20:43.308063 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:20:43.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:20:43.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:20:43.332
  STEP: creating an Endpoint @ 04/27/25 06:20:43.345
  STEP: waiting for available Endpoint @ 04/27/25 06:20:43.351
  STEP: listing all Endpoints @ 04/27/25 06:20:43.357
  STEP: updating the Endpoint @ 04/27/25 06:20:43.363
  STEP: fetching the Endpoint @ 04/27/25 06:20:43.376
  STEP: patching the Endpoint @ 04/27/25 06:20:43.382
  STEP: fetching the Endpoint @ 04/27/25 06:20:43.395
  STEP: deleting the Endpoint by Collection @ 04/27/25 06:20:43.399
  STEP: waiting for Endpoint deletion @ 04/27/25 06:20:43.406
  STEP: fetching the Endpoint @ 04/27/25 06:20:43.408
  I0427 06:20:43.411043 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5537" for this suite. @ 04/27/25 06:20:43.415
• [0.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/27/25 06:20:43.42
  I0427 06:20:43.420771 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/27/25 06:20:43.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:20:43.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:20:43.437
  STEP: create the container to handle the HTTPGet hook request. @ 04/27/25 06:20:43.517
  STEP: create the pod with lifecycle hook @ 04/27/25 06:20:45.534
  STEP: delete the pod with lifecycle hook @ 04/27/25 06:20:47.545
  STEP: check prestop hook @ 04/27/25 06:20:49.555
  I0427 06:20:49.562220 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3320" for this suite. @ 04/27/25 06:20:49.565
• [6.148 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/27/25 06:20:49.568
  I0427 06:20:49.568991 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 06:20:49.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:20:49.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:20:49.585
  STEP: Creating configMap that has name configmap-test-emptyKey-e83d3bd3-aa28-4513-95a6-8c2fb325e82e @ 04/27/25 06:20:49.59
  I0427 06:20:49.595254 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8352" for this suite. @ 04/27/25 06:20:49.666
• [0.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/27/25 06:20:49.671
  I0427 06:20:49.671066 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename controllerrevisions @ 04/27/25 06:20:49.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:20:49.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:20:49.688
  STEP: Creating DaemonSet "e2e-tbqq6-daemon-set" @ 04/27/25 06:20:49.775
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/27/25 06:20:49.78
  I0427 06:20:49.869705 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tbqq6-daemon-set: 0
  I0427 06:20:49.869748 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:20:50.786080 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tbqq6-daemon-set: 1
  I0427 06:20:50.786116 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  I0427 06:20:51.788856 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tbqq6-daemon-set: 2
  I0427 06:20:51.788891 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  I0427 06:20:52.788194 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tbqq6-daemon-set: 3
  I0427 06:20:52.788238 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-tbqq6-daemon-set
  STEP: Confirm DaemonSet "e2e-tbqq6-daemon-set" successfully created with "daemonset-name=e2e-tbqq6-daemon-set" label @ 04/27/25 06:20:52.79
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-tbqq6-daemon-set" @ 04/27/25 06:20:52.795
  I0427 06:20:52.798913 25 controller_revision.go:162] Located ControllerRevision: "e2e-tbqq6-daemon-set-64dcbffd78"
  STEP: Patching ControllerRevision "e2e-tbqq6-daemon-set-64dcbffd78" @ 04/27/25 06:20:52.801
  I0427 06:20:52.806574 25 controller_revision.go:173] e2e-tbqq6-daemon-set-64dcbffd78 has been patched
  STEP: Create a new ControllerRevision @ 04/27/25 06:20:52.806
  I0427 06:20:52.812461 25 controller_revision.go:191] Created ControllerRevision: e2e-tbqq6-daemon-set-66b9d75764
  STEP: Confirm that there are two ControllerRevisions @ 04/27/25 06:20:52.812
  I0427 06:20:52.812726 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0427 06:20:52.816940 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-tbqq6-daemon-set-64dcbffd78" @ 04/27/25 06:20:52.816
  STEP: Confirm that there is only one ControllerRevision @ 04/27/25 06:20:52.82
  I0427 06:20:52.820618 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0427 06:20:52.824035 25 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-tbqq6-daemon-set-66b9d75764" @ 04/27/25 06:20:52.826
  I0427 06:20:52.837441 25 controller_revision.go:220] e2e-tbqq6-daemon-set-66b9d75764 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/27/25 06:20:52.837
  W0427 06:20:52.845075      25 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/27/25 06:20:52.845
  I0427 06:20:52.845519 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0427 06:20:52.876412 25 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-tbqq6-daemon-set-66b9d75764=updated" @ 04/27/25 06:20:52.876
  STEP: Confirm that there is only one ControllerRevision @ 04/27/25 06:20:52.885
  I0427 06:20:52.885643 25 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0427 06:20:52.891521 25 controller_revision.go:265] Found 1 ControllerRevisions
  I0427 06:20:52.901101 25 controller_revision.go:246] ControllerRevision "e2e-tbqq6-daemon-set-795f698fbf" has revision 3
  STEP: Deleting DaemonSet "e2e-tbqq6-daemon-set" @ 04/27/25 06:20:52.907
  STEP: deleting DaemonSet.extensions e2e-tbqq6-daemon-set in namespace controllerrevisions-1321, will wait for the garbage collector to delete the pods @ 04/27/25 06:20:52.907
  I0427 06:20:52.974741 25 resources.go:139] Deleting DaemonSet.extensions e2e-tbqq6-daemon-set took: 9.763881ms
  I0427 06:20:53.075781 25 resources.go:163] Terminating DaemonSet.extensions e2e-tbqq6-daemon-set pods took: 101.036286ms
  I0427 06:20:54.478738 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-tbqq6-daemon-set: 0
  I0427 06:20:54.478776 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-tbqq6-daemon-set
  I0427 06:20:54.482216 25 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22297"},"items":null}

  I0427 06:20:54.484545 25 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22298"},"items":null}

  I0427 06:20:54.492679 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-1321" for this suite. @ 04/27/25 06:20:54.494
• [4.828 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 04/27/25 06:20:54.499
  I0427 06:20:54.499342 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:20:54.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:20:54.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:20:54.508
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4787 @ 04/27/25 06:20:54.512
  STEP: changing the ExternalName service to type=ClusterIP @ 04/27/25 06:20:54.515
  STEP: creating replication controller externalname-service in namespace services-4787 @ 04/27/25 06:20:54.521
  I0427 06:20:54.527853      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4787, replica count: 2
  I0427 06:20:57.578489      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:20:57.578538 25 resource.go:361] Creating new exec pod
  I0427 06:21:00.589453 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4787 exec execpodh9p59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0427 06:21:00.697947 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.90.214) 80 port [tcp/http] succeeded!\n"
  I0427 06:21:00.698063 25 builder.go:147] stdout: "externalname-service-dwq8f"
  I0427 06:21:00.698144 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4787 exec execpodh9p59 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.90.214 80'
  I0427 06:21:00.791333 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.90.214 80\nConnection to 10.68.90.214 80 port [tcp/http] succeeded!\n"
  I0427 06:21:00.791402 25 builder.go:147] stdout: "externalname-service-9jwh2"
  I0427 06:21:00.791515 25 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0427 06:21:00.802301 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4787" for this suite. @ 04/27/25 06:21:00.807
• [6.314 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 04/27/25 06:21:00.813
  I0427 06:21:00.813882 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 06:21:00.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:21:00.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:21:00.842
  STEP: Counting existing ResourceQuota @ 04/27/25 06:21:00.846
  STEP: Creating a ResourceQuota @ 04/27/25 06:21:05.849
  STEP: Ensuring resource quota status is calculated @ 04/27/25 06:21:05.852
  STEP: Creating a ReplicaSet @ 04/27/25 06:21:07.859
  STEP: Ensuring resource quota status captures replicaset creation @ 04/27/25 06:21:07.883
  STEP: Deleting a ReplicaSet @ 04/27/25 06:21:09.887
  STEP: Ensuring resource quota status released usage @ 04/27/25 06:21:09.89
  I0427 06:21:11.895100 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-435" for this suite. @ 04/27/25 06:21:11.9
• [11.096 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/27/25 06:21:11.911
  I0427 06:21:11.911190 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename proxy @ 04/27/25 06:21:11.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:21:11.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:21:11.931
  I0427 06:21:11.934844 25 proxy.go:387] Creating pod...
  I0427 06:21:13.950450 25 proxy.go:411] Creating service...
  I0427 06:21:13.957133 25 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=DELETE
  I0427 06:21:13.964183 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0427 06:21:13.964226 25 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=OPTIONS
  I0427 06:21:13.967659 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0427 06:21:13.967701 25 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=PATCH
  I0427 06:21:13.971388 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0427 06:21:13.971530 25 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=POST
  I0427 06:21:13.974985 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0427 06:21:13.975031 25 proxy.go:448] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=PUT
  I0427 06:21:13.978118 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0427 06:21:13.978175 25 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=DELETE
  I0427 06:21:13.983644 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0427 06:21:13.983686 25 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0427 06:21:13.988617 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0427 06:21:13.988670 25 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=PATCH
  I0427 06:21:13.992722 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0427 06:21:13.992780 25 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=POST
  I0427 06:21:14.000537 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0427 06:21:14.000583 25 proxy.go:459] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=PUT
  I0427 06:21:14.005247 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0427 06:21:14.005320 25 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=GET
  I0427 06:21:14.008671 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0427 06:21:14.008716 25 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=GET
  I0427 06:21:14.015256 25 proxy.go:487] http.Client request:GET StatusCode:301
  I0427 06:21:14.015314 25 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/pods/agnhost/proxy?method=HEAD
  I0427 06:21:14.019447 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0427 06:21:14.019600 25 proxy.go:479] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5623/services/e2e-proxy-test-service/proxy?method=HEAD
  I0427 06:21:14.025797 25 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0427 06:21:14.026101 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5623" for this suite. @ 04/27/25 06:21:14.032
• [2.130 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 04/27/25 06:21:14.041
  I0427 06:21:14.041378 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:21:14.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:21:14.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:21:14.065
  STEP: creating service endpoint-test2 in namespace services-3598 @ 04/27/25 06:21:14.073
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3598 to expose endpoints map[] @ 04/27/25 06:21:14.084
  I0427 06:21:14.090125 25 service.go:4428] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0427 06:21:15.096788 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3598 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3598 @ 04/27/25 06:21:15.096
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3598 to expose endpoints map[pod1:[80]] @ 04/27/25 06:21:17.109
  I0427 06:21:17.116546 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3598 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/27/25 06:21:17.116
  I0427 06:21:17.116613 25 resource.go:361] Creating new exec pod
  I0427 06:21:20.126576 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-3598 exec execpodnvpv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0427 06:21:20.215171 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.99.204) 80 port [tcp/http] succeeded!\n"
  I0427 06:21:20.215217 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:21:20.215518 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-3598 exec execpodnvpv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.99.204 80'
  I0427 06:21:20.299227 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.99.204 80\nConnection to 10.68.99.204 80 port [tcp/http] succeeded!\n"
  I0427 06:21:20.299272 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3598 @ 04/27/25 06:21:20.299
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3598 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/27/25 06:21:22.312
  I0427 06:21:22.320360 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3598 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/27/25 06:21:22.32
  I0427 06:21:23.320836 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-3598 exec execpodnvpv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0427 06:21:23.407574 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.99.204) 80 port [tcp/http] succeeded!\n"
  I0427 06:21:23.407618 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:21:23.407701 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-3598 exec execpodnvpv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.99.204 80'
  I0427 06:21:23.500922 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.99.204 80\nConnection to 10.68.99.204 80 port [tcp/http] succeeded!\n"
  I0427 06:21:23.500966 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3598 @ 04/27/25 06:21:23.5
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3598 to expose endpoints map[pod2:[80]] @ 04/27/25 06:21:23.508
  I0427 06:21:24.572950 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3598 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/27/25 06:21:24.573
  I0427 06:21:25.573479 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-3598 exec execpodnvpv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0427 06:21:25.662268 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.68.99.204) 80 port [tcp/http] succeeded!\n"
  I0427 06:21:25.662331 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:21:25.662441 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-3598 exec execpodnvpv8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.99.204 80'
  I0427 06:21:25.751832 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.99.204 80\nConnection to 10.68.99.204 80 port [tcp/http] succeeded!\n"
  I0427 06:21:25.751911 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3598 @ 04/27/25 06:21:25.751
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3598 to expose endpoints map[] @ 04/27/25 06:21:25.765
  I0427 06:21:25.774943 25 service.go:4460] successfully validated that service endpoint-test2 in namespace services-3598 exposes endpoints map[]
  I0427 06:21:25.792090 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3598" for this suite. @ 04/27/25 06:21:25.799
• [11.766 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/27/25 06:21:25.807
  I0427 06:21:25.807858 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:21:25.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:21:25.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:21:25.829
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:21:25.835
  STEP: Saw pod success @ 04/27/25 06:21:29.857
  I0427 06:21:29.860030 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-e35e3986-7977-455a-9b67-10238cdfdee3 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:21:29.867
  I0427 06:21:29.875487 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8074" for this suite. @ 04/27/25 06:21:29.881
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/27/25 06:21:29.886
  I0427 06:21:29.886056 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename cronjob @ 04/27/25 06:21:29.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:21:29.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:21:29.899
  STEP: Creating a suspended cronjob @ 04/27/25 06:21:29.902
  STEP: Ensuring no jobs are scheduled @ 04/27/25 06:21:29.906
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/27/25 06:26:29.908
  STEP: Removing cronjob @ 04/27/25 06:26:29.911
  I0427 06:26:29.915235 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2414" for this suite. @ 04/27/25 06:26:29.918
• [300.035 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/27/25 06:26:29.921
  I0427 06:26:29.921559 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:26:29.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:26:29.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:26:29.931
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:26:29.934
  STEP: Saw pod success @ 04/27/25 06:26:33.95
  I0427 06:26:33.952540 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-b85f8c84-3a89-45bf-bc20-406f14161522 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:26:33.957
  I0427 06:26:33.965855 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7161" for this suite. @ 04/27/25 06:26:33.968
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 04/27/25 06:26:33.971
  I0427 06:26:33.972010 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 06:26:33.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:26:33.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:26:33.983
  STEP: Creating pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615 @ 04/27/25 06:26:33.986
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 06:26:35.995
  I0427 06:26:35.999359 25 container_probe.go:1749] Initial restart count of pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 is 0
  I0427 06:26:36.002245 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:38.005711 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:40.009207 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:42.013274 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:44.017501 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:46.020998 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:48.025380 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:50.029317 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:52.032957 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:54.037212 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:56.040472 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:26:58.045033 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:00.047717 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:02.051137 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:04.054748 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:06.059616 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:08.063969 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:10.067387 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:12.070984 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:14.074866 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:16.079503 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:18.087484 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:20.091844 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:22.096828 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:24.100508 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:26.103882 25 container_probe.go:1759] Get pod busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 in namespace container-probe-2615
  I0427 06:27:26.103914 25 container_probe.go:1763] Restart count of pod container-probe-2615/busybox-d927c20a-9e47-4f23-bd33-a4cc270e4238 is now 1 (50.104457613s elapsed)
  STEP: deleting the pod @ 04/27/25 06:27:26.103
  I0427 06:27:26.111176 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2615" for this suite. @ 04/27/25 06:27:26.114
• [52.147 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/27/25 06:27:26.118
  I0427 06:27:26.118949 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:27:26.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:27:26.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:27:26.132
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/27/25 06:27:26.136
  STEP: Saw pod success @ 04/27/25 06:27:30.153
  I0427 06:27:30.156013 25 output.go:207] Trying to get logs from node node1 pod pod-d6344129-c929-4a7f-bcf7-a0f4315f773c container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:27:30.161
  I0427 06:27:30.172693 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3656" for this suite. @ 04/27/25 06:27:30.175
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/27/25 06:27:30.181
  I0427 06:27:30.181911 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 06:27:30.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:27:30.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:27:30.198
  STEP: create the rc1 @ 04/27/25 06:27:30.278
  STEP: create the rc2 @ 04/27/25 06:27:30.285
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/27/25 06:27:36.295
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/27/25 06:27:37.6
  STEP: wait for the rc to be deleted @ 04/27/25 06:27:37.609
  I0427 06:27:42.640271 25 garbage_collector.go:762] 71 pods remaining
  I0427 06:27:42.640359 25 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I0427 06:27:42.640373 25 garbage_collector.go:770] 
  STEP: Gathering metrics @ 04/27/25 06:27:47.618
  W0427 06:27:47.622012      25 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0427 06:27:47.622056 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0427 06:27:47.622146 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-22bnk" in namespace "gc-5342"
  I0427 06:27:47.630093 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28f95" in namespace "gc-5342"
  I0427 06:27:47.644487 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2dvzk" in namespace "gc-5342"
  I0427 06:27:47.657401 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2hkqp" in namespace "gc-5342"
  I0427 06:27:47.677434 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2vv2g" in namespace "gc-5342"
  I0427 06:27:47.696350 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4m2bs" in namespace "gc-5342"
  I0427 06:27:47.708554 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tjp7" in namespace "gc-5342"
  I0427 06:27:47.725403 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-572z5" in namespace "gc-5342"
  I0427 06:27:47.743022 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hg2g" in namespace "gc-5342"
  I0427 06:27:47.764572 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nrb7" in namespace "gc-5342"
  I0427 06:27:47.789606 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nz96" in namespace "gc-5342"
  I0427 06:27:47.805744 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5svv6" in namespace "gc-5342"
  I0427 06:27:47.833112 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64wc2" in namespace "gc-5342"
  I0427 06:27:47.854696 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-697dp" in namespace "gc-5342"
  I0427 06:27:47.872134 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6b5nq" in namespace "gc-5342"
  I0427 06:27:47.891135 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lp2f" in namespace "gc-5342"
  I0427 06:27:47.912825 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lz9d" in namespace "gc-5342"
  I0427 06:27:47.945694 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6nz59" in namespace "gc-5342"
  I0427 06:27:47.965387 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zxz5" in namespace "gc-5342"
  I0427 06:27:47.986194 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fzc7" in namespace "gc-5342"
  I0427 06:27:48.013430 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7wd8b" in namespace "gc-5342"
  I0427 06:27:48.039290 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8w2n2" in namespace "gc-5342"
  I0427 06:27:48.073963 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8x6nm" in namespace "gc-5342"
  I0427 06:27:48.099577 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9d6c8" in namespace "gc-5342"
  I0427 06:27:48.134414 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9fcgz" in namespace "gc-5342"
  I0427 06:27:48.162376 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9p2lx" in namespace "gc-5342"
  I0427 06:27:48.206691 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xvvn" in namespace "gc-5342"
  I0427 06:27:48.234547 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b28zh" in namespace "gc-5342"
  I0427 06:27:48.309120 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b7zf4" in namespace "gc-5342"
  I0427 06:27:48.361873 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b8zzz" in namespace "gc-5342"
  I0427 06:27:48.441674 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bd7sz" in namespace "gc-5342"
  I0427 06:27:48.504694 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bj9tc" in namespace "gc-5342"
  I0427 06:27:48.553787 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bq8sj" in namespace "gc-5342"
  I0427 06:27:48.693200 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvsn8" in namespace "gc-5342"
  I0427 06:27:48.775986 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c5c4m" in namespace "gc-5342"
  I0427 06:27:48.822080 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cc56m" in namespace "gc-5342"
  I0427 06:27:48.882443 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cg92f" in namespace "gc-5342"
  I0427 06:27:48.961450 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjzcr" in namespace "gc-5342"
  I0427 06:27:49.077951 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cm427" in namespace "gc-5342"
  I0427 06:27:49.234527 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d9wvc" in namespace "gc-5342"
  I0427 06:27:49.341713 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dcg6b" in namespace "gc-5342"
  I0427 06:27:49.394725 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtbcs" in namespace "gc-5342"
  I0427 06:27:49.556778 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f22m4" in namespace "gc-5342"
  I0427 06:27:49.650136 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgvqx" in namespace "gc-5342"
  I0427 06:27:49.736052 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq77g" in namespace "gc-5342"
  I0427 06:27:49.882634 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fvzfg" in namespace "gc-5342"
  I0427 06:27:49.982892 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g2p9z" in namespace "gc-5342"
  I0427 06:27:50.037848 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gb7rd" in namespace "gc-5342"
  I0427 06:27:50.088275 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gh6hc" in namespace "gc-5342"
  I0427 06:27:50.171443 25 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gm7lh" in namespace "gc-5342"
  I0427 06:27:50.283072 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5342" for this suite. @ 04/27/25 06:27:50.306
• [20.165 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/27/25 06:27:50.347
  I0427 06:27:50.347910 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename subpath @ 04/27/25 06:27:50.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:27:50.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:27:50.466
  STEP: Setting up data @ 04/27/25 06:27:50.481
  STEP: Creating pod pod-subpath-test-downwardapi-4ccn @ 04/27/25 06:27:50.518
  STEP: Creating a pod to test atomic-volume-subpath @ 04/27/25 06:27:50.518
  STEP: Saw pod success @ 04/27/25 06:28:14.659
  I0427 06:28:14.664458 25 output.go:207] Trying to get logs from node node1 pod pod-subpath-test-downwardapi-4ccn container test-container-subpath-downwardapi-4ccn: <nil>
  STEP: delete the pod @ 04/27/25 06:28:14.673
  STEP: Deleting pod pod-subpath-test-downwardapi-4ccn @ 04/27/25 06:28:14.693
  I0427 06:28:14.693492 25 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-4ccn" in namespace "subpath-1002"
  I0427 06:28:14.701077 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1002" for this suite. @ 04/27/25 06:28:14.71
• [24.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/27/25 06:28:14.721
  I0427 06:28:14.721179 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:28:14.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:14.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:14.752
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:28:14.759
  STEP: Saw pod success @ 04/27/25 06:28:18.79
  I0427 06:28:18.792275 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-d9970d86-9fec-42fa-a8f6-8037a7b1f202 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:28:18.796
  I0427 06:28:18.808668 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1762" for this suite. @ 04/27/25 06:28:18.812
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/27/25 06:28:18.817
  I0427 06:28:18.817176 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 06:28:18.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:18.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:18.829
  I0427 06:28:18.833868 25 deployment.go:1196] Creating deployment "webserver-deployment"
  I0427 06:28:18.838518 25 deployment.go:1200] Waiting for observed generation 1
  I0427 06:28:20.843498 25 deployment.go:1205] Waiting for all required pods to come up
  I0427 06:28:20.849561 25 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/27/25 06:28:20.849
  I0427 06:28:20.858138 25 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0427 06:28:20.860335 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:10, UpdatedReplicas:10, ReadyReplicas:8, AvailableReplicas:8, UnavailableReplicas:2, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 6, 28, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 6, 28, 20, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 6, 28, 20, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 6, 28, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"webserver-deployment-74c94d7b6b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 06:28:22.866148 25 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0427 06:28:22.873112 25 deployment.go:314] Updating deployment webserver-deployment
  I0427 06:28:22.873158 25 deployment.go:1224] Waiting for observed generation 2
  I0427 06:28:24.879637 25 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0427 06:28:24.882340 25 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0427 06:28:24.884615 25 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0427 06:28:24.892461 25 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0427 06:28:24.892513 25 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0427 06:28:24.895130 25 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0427 06:28:24.899264 25 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0427 06:28:24.899338 25 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0427 06:28:24.907636 25 deployment.go:314] Updating deployment webserver-deployment
  I0427 06:28:24.907722 25 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0427 06:28:24.914882 25 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0427 06:28:26.947446 25 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0427 06:28:26.964652 25 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f78e5416-ac17-43df-8d10-f73c74e53b73",
      ResourceVersion: (string) (len=5) "26308",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 13,
      AvailableReplicas: (int32) 13,
      UnavailableReplicas: (int32) 20,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 06:28:27.002035 25 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
      ResourceVersion: (string) (len=5) "26165",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f78e5416-ac17-43df-8d10-f73c74e53b73",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 38 65 35 34  31 36 2d 61 63 31 37 2d  |\"f78e5416-ac17-|
              00000120  34 33 64 66 2d 38 64 31  30 2d 66 37 33 63 37 34  |43df-8d10-f73c74|
              00000130  65 35 33 62 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e53b73\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 06:28:27.006101 25 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0427 06:28:27.006534 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
      ResourceVersion: (string) (len=5) "26311",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "f78e5416-ac17-43df-8d10-f73c74e53b73",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 37 38 65 35 34  31 36 2d 61 63 31 37 2d  |\"f78e5416-ac17-|
              00000120  34 33 64 66 2d 38 64 31  30 2d 66 37 33 63 37 34  |43df-8d10-f73c74|
              00000130  65 35 33 62 37 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e53b73\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 06:28:27.033959 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-66h6k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-66h6k",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f131a2a-42b3-4b80-bb4c-b14de5d08e0c",
      ResourceVersion: (string) (len=5) "26164",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xhptx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xhptx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xhptx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.040788 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-br6dr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-br6dr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27f5f4e8-948a-47c2-b135-5bd1554c8bd6",
      ResourceVersion: (string) (len=5) "26176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x7jmg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x7jmg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-x7jmg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.044672 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-drlbm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-drlbm",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c368c530-b887-43f4-93ee-2ca2ada1e3b1",
      ResourceVersion: (string) (len=5) "26142",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xrw5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xrw5z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xrw5z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.048361 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-hr242" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-hr242",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "276818d3-b76f-4c6c-88f3-0da98ad6bcf0",
      ResourceVersion: (string) (len=5) "26108",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mt8kr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mt8kr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mt8kr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.051968 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jflrx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jflrx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "117f4a68-cee9-4e06-b007-a68f964a910a",
      ResourceVersion: (string) (len=5) "26182",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fsnk5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fsnk5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fsnk5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.055980 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-jpcs2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-jpcs2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdea910c-c476-4b56-bb28-e4ac19c7a8d6",
      ResourceVersion: (string) (len=5) "26172",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hfgg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hfgg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6hfgg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.060958 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-pv2l6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-pv2l6",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c0cbcfa-7dbf-4a8e-8f93-8e01d0f173e1",
      ResourceVersion: (string) (len=5) "26005",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8ckd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8ckd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k8ckd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.064811 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-qhcdp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-qhcdp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d58ae825-c925-40cf-a926-ad4407fe93f8",
      ResourceVersion: (string) (len=5) "26015",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pvs7f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pvs7f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pvs7f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.068715 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-rgqn2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-rgqn2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd7224bf-031f-4914-80a1-e6b825575b02",
      ResourceVersion: (string) (len=5) "26120",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nnrqd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nnrqd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nnrqd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.073202 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-s8hcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-s8hcx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a745fa8-c635-4d36-8693-19e19f784d5d",
      ResourceVersion: (string) (len=5) "26179",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pcx7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pcx7l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pcx7l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.076969 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-sp675" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-sp675",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d848992b-ca9f-4e0f-bbb3-2766e3e31a50",
      ResourceVersion: (string) (len=5) "26032",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fx87n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fx87n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fx87n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.080742 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-v5lbz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-v5lbz",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b5114db-4540-4592-8cc0-2004c7ed1765",
      ResourceVersion: (string) (len=5) "26180",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t2qq2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t2qq2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-t2qq2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.084402 25 deployment.go:68] Pod "webserver-deployment-6fc69b9478-vt2xx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-vt2xx",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2eefe8b-7bb9-42f9-ad3c-f5d8a34ce839",
      ResourceVersion: (string) (len=5) "26178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "0781f88c-aab9-4675-85d7-20509478d284",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 37  38 31 66 38 38 63 2d 61  |d\":\"0781f88c-a|
              00000090  61 62 39 2d 34 36 37 35  2d 38 35 64 37 2d 32 30  |ab9-4675-85d7-20|
              000000a0  35 30 39 34 37 38 64 32  38 34 5c 22 7d 22 3a 7b  |509478d284\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brdxk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brdxk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-brdxk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.088388 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-4zgft" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-4zgft",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bd71db8-fcf0-430d-b517-3ac4629f62c9",
      ResourceVersion: (string) (len=5) "26181",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6sgvc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6sgvc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6sgvc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.094893 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-5f9wp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-5f9wp",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "692e5ddf-c14f-4fab-a1b3-ab5fddaed69a",
      ResourceVersion: (string) (len=5) "26109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lhpfw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lhpfw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-lhpfw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.102635 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-5rqcs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-5rqcs",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c6fdd18f-9cfe-4170-b2c3-fbe795c83788",
      ResourceVersion: (string) (len=5) "25964",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 35 31 5c 22 7d 22 3a  |2.20.135.51\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-crrl5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-crrl5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://4393559da46694fa8c13018d73597a7492e04a3105bb1a16f44ec01ebab9f678",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-crrl5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.109705 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-5rww2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-5rww2",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe19d652-f18d-4cae-8002-1f877759c67b",
      ResourceVersion: (string) (len=5) "26302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 30 34  2e 34 35 5c 22 7d 22 3a  |2.20.104.45\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ff2r7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ff2r7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) (len=13) "172.20.104.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.104.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://005bca71d75a6d5ad6a8bf124fdc429b03876e79b8e74cddc764cceda9624e70",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ff2r7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.116539 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-8n9bw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-8n9bw",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca280558-bf48-4f57-8dc2-55369cf05b0c",
      ResourceVersion: (string) (len=5) "26174",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5kxtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5kxtg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5kxtg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.125119 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-9v6hq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-9v6hq",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f65efeb-494b-4f82-9a09-f73fe477371f",
      ResourceVersion: (string) (len=5) "26291",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 36 31 5c 22 7d 22 3a  |2.20.135.61\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bjzz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bjzz6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://e632d3fa865389883a6b25d7b245a5a859b46a3f70ef05dde94c2db333216966",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bjzz6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.133268 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-brcsw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-brcsw",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb69d1f1-8d05-4f12-ad7d-9f07c744ef54",
      ResourceVersion: (string) (len=5) "25982",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 38 37 5c 22 7d 22  |2.20.166.187\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrbkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrbkk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.187",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.187"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332100,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://82b903b118651c41cf0f6b3d401af1a339d7c9c17869ef92b6344fbed8f15aeb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zrbkk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.138750 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-c2867" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-c2867",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d0ed57d-0b42-4776-bfb6-826b9dcf9680",
      ResourceVersion: (string) (len=5) "26184",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wftqx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wftqx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wftqx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.144100 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-l6fcw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-l6fcw",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b65e7291-ce39-482b-85bf-77fe4ef2353a",
      ResourceVersion: (string) (len=5) "26298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 36 30 5c 22 7d 22 3a  |2.20.135.60\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gqs4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gqs4c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.60",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.60"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://40813f500d3bded8d389b502ecb98cd5ee6375920c544ed3a7aef5acabdad132",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gqs4c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.149103 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-lrv8x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-lrv8x",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46b36189-e9ad-4cfa-abf5-45bf1ae0c2d0",
      ResourceVersion: (string) (len=5) "25968",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 30 34  2e 34 31 5c 22 7d 22 3a  |2.20.104.41\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rh5hl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rh5hl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) (len=13) "172.20.104.41",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.104.41"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://d2bdfd2bf69b25ab7cc3c04835ae803b1da7f4b74bea6b2c93f52832eaa73f5f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rh5hl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.154617 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-ls7c4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-ls7c4",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ff9e24a-2fba-4480-b9a7-a8d3ff2504c8",
      ResourceVersion: (string) (len=5) "26295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 35 38 5c 22 7d 22 3a  |2.20.135.58\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pfjmn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pfjmn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.58",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.58"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://405eb2c768b89909f3c77f3175954b4c9debf5634ecb7fbef0c7027d5cd07b65",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pfjmn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.160993 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-m5gvb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-m5gvb",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da5a9c3b-dd5d-4e93-bd8c-d9b1c75a3824",
      ResourceVersion: (string) (len=5) "26168",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zw6p9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zw6p9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zw6p9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.166941 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-n5k28" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-n5k28",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41a0c494-51ce-4c3c-8488-1592d78303d3",
      ResourceVersion: (string) (len=5) "25961",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 35 33 5c 22 7d 22 3a  |2.20.135.53\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zbxkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zbxkg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.53",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.53"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://a0a64c3b3e887b28f407b5e981e838185bfdacdb2e43c24b54aad81223b0b577",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zbxkg",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.172823 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-nbl6l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-nbl6l",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a822dee-6e39-4a9a-8494-e21bcebf639f",
      ResourceVersion: (string) (len=5) "25974",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 30 34  2e 34 30 5c 22 7d 22 3a  |2.20.104.40\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2gqsn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2gqsn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) (len=13) "172.20.104.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.104.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://590e0c0caa2041599633365c68b102fbc24152bb7054aa06b7f365e18f226bb4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2gqsn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.179003 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-qq6pv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-qq6pv",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2512676-71aa-4d59-9077-b259c31d10f8",
      ResourceVersion: (string) (len=5) "25970",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 30 34  2e 33 39 5c 22 7d 22 3a  |2.20.104.39\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xrfr2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xrfr2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) (len=13) "172.20.104.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.104.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://de53e208a90f3b6ff196f38171832aa654363e57e8c910f015a70b850c4558b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xrfr2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.186752 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-r8967" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-r8967",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "98f32584-6832-45fa-8451-0c7d2a8fc671",
      ResourceVersion: (string) (len=5) "25985",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 38 39 5c 22 7d 22  |2.20.166.189\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r7zw5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r7zw5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.189",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.189"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332100,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://895bda378d863601390fb3873b6e25544ac0bfa3e9e650698cd1ae9986c5751e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r7zw5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.196406 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-rg2hl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-rg2hl",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "251a6bb8-6780-45be-8989-a5d946706bc1",
      ResourceVersion: (string) (len=5) "25959",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 35 32 5c 22 7d 22 3a  |2.20.135.52\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g6pgc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g6pgc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://b75ffbfcbbc615cb670bdaaa5de2cef0f4eb4475ccf81393c8e646b089e078df",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-g6pgc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.207570 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-tstth" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-tstth",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "235230f7-0654-485f-b350-164d1d0a01d7",
      ResourceVersion: (string) (len=5) "26309",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 30 34  2e 34 34 5c 22 7d 22 3a  |2.20.104.44\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7skg9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7skg9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) (len=13) "172.20.104.44",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.104.44"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://d3c36d317100725d1bb6f3b68dcab3d72fd79e5b99801fca93759035f9896bf3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7skg9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.230275 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-wnqm4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-wnqm4",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a6ed7f3-a04f-4ec7-9db0-9145aaa36bc4",
      ResourceVersion: (string) (len=5) "26296",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 30 34  2e 34 36 5c 22 7d 22 3a  |2.20.104.46\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fv5bs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fv5bs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.152",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.152"
        }
      },
      PodIP: (string) (len=13) "172.20.104.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.104.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://b28ee97e573ffefc86501c2abcb25c3782ff47799ebea656b543faac5980d9fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fv5bs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.239450 25 deployment.go:68] Pod "webserver-deployment-74c94d7b6b-zkjb2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-74c94d7b6b-zkjb2",
      GenerateName: (string) (len=32) "webserver-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-249",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c12b627-b3c2-4a7d-ad59-62bb3c1c890c",
      ResourceVersion: (string) (len=5) "26301",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "b3a5d965-9f3b-4cfe-8e39-65150e043a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 33  61 35 64 39 36 35 2d 39  |d\":\"b3a5d965-9|
              00000090  66 33 62 2d 34 63 66 65  2d 38 65 33 39 2d 36 35  |f3b-4cfe-8e39-65|
              000000a0  31 35 30 65 30 34 33 61  36 65 5c 22 7d 22 3a 7b  |150e043a6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 35 36 5c 22 7d 22 3a  |2.20.135.56\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w44fx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w44fx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332106,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://fdab864a986de21a5410785672db393502971cad0c34a398124b8aefd919ebba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w44fx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:28:27.251768 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-249" for this suite. @ 04/27/25 06:28:27.272
• [8.497 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 04/27/25 06:28:27.316
  I0427 06:28:27.316573 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:28:27.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:27.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:27.406
  I0427 06:28:27.422478 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/27/25 06:28:28.833
  I0427 06:28:28.834032 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 create -f -'
  I0427 06:28:30.920920 25 builder.go:146] stderr: ""
  I0427 06:28:30.920971 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0427 06:28:30.921045 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 delete e2e-test-crd-publish-openapi-4229-crds test-foo'
  I0427 06:28:30.973207 25 builder.go:146] stderr: ""
  I0427 06:28:30.973260 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0427 06:28:30.973337 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 apply -f -'
  I0427 06:28:31.034054 25 builder.go:146] stderr: ""
  I0427 06:28:31.034126 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0427 06:28:31.034208 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 delete e2e-test-crd-publish-openapi-4229-crds test-foo'
  I0427 06:28:31.088183 25 builder.go:146] stderr: ""
  I0427 06:28:31.088235 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4229-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/27/25 06:28:31.088
  I0427 06:28:31.088891 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 create -f -'
  I0427 06:28:31.147291 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/27/25 06:28:31.147
  I0427 06:28:31.147475 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 create -f -'
  I0427 06:28:31.205862 25 builder.go:135] rc: 1
  I0427 06:28:31.205976 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 apply -f -'
  I0427 06:28:31.283522 25 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/27/25 06:28:31.283
  I0427 06:28:31.283657 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 create -f -'
  I0427 06:28:31.352192 25 builder.go:135] rc: 1
  I0427 06:28:31.352351 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 --namespace=crd-publish-openapi-6898 apply -f -'
  I0427 06:28:31.414038 25 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/27/25 06:28:31.414
  I0427 06:28:31.414155 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 explain e2e-test-crd-publish-openapi-4229-crds'
  I0427 06:28:31.466513 25 builder.go:146] stderr: ""
  I0427 06:28:31.466573 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4229-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/27/25 06:28:31.466
  I0427 06:28:31.466835 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 explain e2e-test-crd-publish-openapi-4229-crds.metadata'
  I0427 06:28:31.526229 25 builder.go:146] stderr: ""
  I0427 06:28:31.526364 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4229-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0427 06:28:31.526551 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 explain e2e-test-crd-publish-openapi-4229-crds.spec'
  I0427 06:28:31.612318 25 builder.go:146] stderr: ""
  I0427 06:28:31.612430 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4229-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0427 06:28:31.612580 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 explain e2e-test-crd-publish-openapi-4229-crds.spec.bars'
  I0427 06:28:31.688045 25 builder.go:146] stderr: ""
  I0427 06:28:31.688123 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4229-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/27/25 06:28:31.688
  I0427 06:28:31.688316 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6898 explain e2e-test-crd-publish-openapi-4229-crds.spec.bars2'
  I0427 06:28:31.755157 25 builder.go:135] rc: 1
  I0427 06:28:33.810449 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6898" for this suite. @ 04/27/25 06:28:33.84
• [6.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/27/25 06:28:33.886
  I0427 06:28:33.886321 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 06:28:33.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:33.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:33.974
  STEP: Saw pod success @ 04/27/25 06:28:38.062
  I0427 06:28:38.065289 25 output.go:207] Trying to get logs from node node3 pod client-envvars-5f7301d2-24b3-4ab2-adb8-9555e2248bfe container env3cont: <nil>
  STEP: delete the pod @ 04/27/25 06:28:38.076
  I0427 06:28:38.088540 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7371" for this suite. @ 04/27/25 06:28:38.092
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/27/25 06:28:38.098
  I0427 06:28:38.098521 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:28:38.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:38.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:38.117
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/27/25 06:28:38.123
  STEP: Saw pod success @ 04/27/25 06:28:40.142
  I0427 06:28:40.144233 25 output.go:207] Trying to get logs from node node3 pod pod-dafbb7ac-f621-464f-a590-ae8d8dc01c9b container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:28:40.148
  I0427 06:28:40.161912 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1365" for this suite. @ 04/27/25 06:28:40.165
• [2.073 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/27/25 06:28:40.172
  I0427 06:28:40.172758 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 06:28:40.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:40.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:40.189
  STEP: Creating secret with name secret-test-map-164e7637-fc83-4960-83a8-da1dc85a3b1f @ 04/27/25 06:28:40.194
  STEP: Creating a pod to test consume secrets @ 04/27/25 06:28:40.197
  STEP: Saw pod success @ 04/27/25 06:28:42.213
  I0427 06:28:42.215467 25 output.go:207] Trying to get logs from node node3 pod pod-secrets-4e5bf1fc-d91d-4402-86ae-e1b560c84763 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 06:28:42.222
  I0427 06:28:42.233321 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4556" for this suite. @ 04/27/25 06:28:42.237
• [2.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/27/25 06:28:42.244
  I0427 06:28:42.244530 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 06:28:42.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:42.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:42.263
  STEP: create the rc @ 04/27/25 06:28:42.268
  W0427 06:28:42.277112      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/27/25 06:28:47.28
  STEP: wait for all pods to be garbage collected @ 04/27/25 06:28:47.284
  STEP: Gathering metrics @ 04/27/25 06:28:52.291
  W0427 06:28:52.299335      25 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0427 06:28:52.299501 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0427 06:28:52.299923 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2582" for this suite. @ 04/27/25 06:28:52.306
• [10.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/27/25 06:28:52.314
  I0427 06:28:52.314413 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-pred @ 04/27/25 06:28:52.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:52.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:52.347
  I0427 06:28:52.363829 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0427 06:28:52.412214 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0427 06:28:52.417253 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node1 before test
  I0427 06:28:52.423369 25 predicates.go:957] calico-node-5mcpm from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.423411 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:28:52.423425 25 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-gt9hk from kube-system started at 2025-04-27 02:46:29 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.423435 25 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0427 06:28:52.423445 25 predicates.go:957] metrics-server-74f6d6fdd5-vt289 from kube-system started at 2025-04-27 02:46:25 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.423456 25 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0427 06:28:52.423466 25 predicates.go:957] node-local-dns-r5bs2 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.423475 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:28:52.423485 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-jqbpf from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:28:52.423495 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:28:52.423504 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 06:28:52.423514 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node2 before test
  I0427 06:28:52.429153 25 predicates.go:957] calico-kube-controllers-54cdc99cb-8qvqn from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.429236 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0427 06:28:52.429258 25 predicates.go:957] calico-node-9m6qt from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.429273 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:28:52.429358 25 predicates.go:957] kubernetes-dashboard-75c65df89-zttnz from kube-system started at 2025-04-27 02:46:29 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.429401 25 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0427 06:28:52.429417 25 predicates.go:957] node-local-dns-m7nj5 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.429428 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:28:52.429442 25 predicates.go:957] sonobuoy-e2e-job-919a1c48d6024b67 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:28:52.429582 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0427 06:28:52.429599 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:28:52.429614 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-6mvvk from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:28:52.429627 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:28:52.429640 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 06:28:52.429655 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node3 before test
  I0427 06:28:52.435659 25 predicates.go:957] calico-node-zs89m from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.435706 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:28:52.435724 25 predicates.go:957] coredns-75dd46b86b-vq9nh from kube-system started at 2025-04-27 02:46:22 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.435737 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0427 06:28:52.435751 25 predicates.go:957] node-local-dns-zkd98 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.435764 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:28:52.435778 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (1 container statuses recorded)
  I0427 06:28:52.435791 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0427 06:28:52.435805 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-l4m65 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:28:52.435817 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:28:52.435830 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/27/25 06:28:52.435
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.183a19091bf863bc], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 04/27/25 06:28:52.473
  I0427 06:28:53.470140 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9006" for this suite. @ 04/27/25 06:28:53.474
• [1.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 04/27/25 06:28:53.481
  I0427 06:28:53.481303 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:28:53.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:28:53.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:28:53.501
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/27/25 06:28:53.506
  I0427 06:28:53.506932 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/27/25 06:28:58.927
  I0427 06:28:58.927928 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:29:00.240224 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:29:04.908189 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1221" for this suite. @ 04/27/25 06:29:04.915
• [11.438 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/27/25 06:29:04.919
  I0427 06:29:04.919072 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pod-network-test @ 04/27/25 06:29:04.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:04.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:04.934
  STEP: Performing setup for networking test in namespace pod-network-test-5315 @ 04/27/25 06:29:04.938
  STEP: creating a selector @ 04/27/25 06:29:04.939
  STEP: Creating the service pods in kubernetes @ 04/27/25 06:29:04.939
  I0427 06:29:04.939062 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/27/25 06:29:19.07
  I0427 06:29:21.081982 25 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0427 06:29:21.082020 25 networking.go:42] Breadth first check of 172.20.166.141 on host 192.168.227.151...
  I0427 06:29:21.085100 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.166.142:9080/dial?request=hostname&protocol=udp&host=172.20.166.141&port=8081&tries=1'] Namespace:pod-network-test-5315 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:29:21.085157 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:29:21.085217 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-5315/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.166.142%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.166.141%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0427 06:29:21.138857 25 utils.go:356] Waiting for responses: map[]
  I0427 06:29:21.138918 25 utils.go:360] reached 172.20.166.141 after 0/1 tries
  I0427 06:29:21.138931 25 networking.go:42] Breadth first check of 172.20.104.49 on host 192.168.227.152...
  I0427 06:29:21.141725 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.166.142:9080/dial?request=hostname&protocol=udp&host=172.20.104.49&port=8081&tries=1'] Namespace:pod-network-test-5315 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:29:21.141769 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:29:21.141821 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-5315/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.166.142%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.104.49%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0427 06:29:21.188023 25 utils.go:356] Waiting for responses: map[]
  I0427 06:29:21.188087 25 utils.go:360] reached 172.20.104.49 after 0/1 tries
  I0427 06:29:21.188100 25 networking.go:42] Breadth first check of 172.20.135.5 on host 192.168.227.153...
  I0427 06:29:21.190727 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.166.142:9080/dial?request=hostname&protocol=udp&host=172.20.135.5&port=8081&tries=1'] Namespace:pod-network-test-5315 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:29:21.190766 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:29:21.190804 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-5315/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.166.142%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.20.135.5%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0427 06:29:21.238680 25 utils.go:356] Waiting for responses: map[]
  I0427 06:29:21.238733 25 utils.go:360] reached 172.20.135.5 after 0/1 tries
  I0427 06:29:21.238746 25 networking.go:53] Going to retry 0 out of 3 pods....
  I0427 06:29:21.238872 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5315" for this suite. @ 04/27/25 06:29:21.243
• [16.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 04/27/25 06:29:21.247
  I0427 06:29:21.247204 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 06:29:21.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:21.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:21.26
  I0427 06:29:21.263393 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  W0427 06:29:23.788207      25 warnings.go:70] unknown field "alpha"
  W0427 06:29:23.788288      25 warnings.go:70] unknown field "beta"
  W0427 06:29:23.788323      25 warnings.go:70] unknown field "delta"
  W0427 06:29:23.788329      25 warnings.go:70] unknown field "epsilon"
  W0427 06:29:23.788334      25 warnings.go:70] unknown field "gamma"
  I0427 06:29:24.313577 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5736" for this suite. @ 04/27/25 06:29:24.316
• [3.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 04/27/25 06:29:24.319
  I0427 06:29:24.319898 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:29:24.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:24.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:24.332
  STEP: Setting up server cert @ 04/27/25 06:29:24.349
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:29:24.478
  STEP: Deploying the webhook pod @ 04/27/25 06:29:24.481
  STEP: Wait for the deployment to be ready @ 04/27/25 06:29:24.489
  I0427 06:29:24.495895 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:29:26.517
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:29:26.54
  I0427 06:29:27.541115 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:29:27.547127 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7787-crds.webhook.example.com via the AdmissionRegistration API @ 04/27/25 06:29:28.053
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/27/25 06:29:28.064
  I0427 06:29:30.632007 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4271" for this suite. @ 04/27/25 06:29:30.635
  STEP: Destroying namespace "webhook-markers-276" for this suite. @ 04/27/25 06:29:30.639
• [6.323 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/27/25 06:29:30.642
  I0427 06:29:30.642748 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubelet-test @ 04/27/25 06:29:30.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:30.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:30.657
  STEP: Waiting for pod completion @ 04/27/25 06:29:30.668
  I0427 06:29:32.679607 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9683" for this suite. @ 04/27/25 06:29:32.683
• [2.044 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 04/27/25 06:29:32.687
  I0427 06:29:32.687060 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:29:32.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:32.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:32.701
  STEP: creating service in namespace services-5249 @ 04/27/25 06:29:32.705
  STEP: creating service affinity-nodeport in namespace services-5249 @ 04/27/25 06:29:32.705
  STEP: creating replication controller affinity-nodeport in namespace services-5249 @ 04/27/25 06:29:32.713
  I0427 06:29:32.723339      25 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-5249, replica count: 3
  I0427 06:29:35.774385      25 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:29:35.781095 25 resource.go:361] Creating new exec pod
  I0427 06:29:38.799006 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5249 exec execpod-affinityc9sf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0427 06:29:38.951362 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.68.176.176) 80 port [tcp/http] succeeded!\n"
  I0427 06:29:38.951468 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:29:38.951587 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5249 exec execpod-affinityc9sf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.176.176 80'
  I0427 06:29:39.117497 25 builder.go:146] stderr: "+ + ncecho -v -t hostName -w\n 2 10.68.176.176 80\nConnection to 10.68.176.176 80 port [tcp/http] succeeded!\n"
  I0427 06:29:39.117649 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:29:39.117866 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5249 exec execpod-affinityc9sf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.151 32633'
  I0427 06:29:39.260121 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.151 32633\nConnection to 192.168.227.151 32633 port [tcp/*] succeeded!\n"
  I0427 06:29:39.260177 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:29:39.260255 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5249 exec execpod-affinityc9sf8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.152 32633'
  I0427 06:29:39.410015 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.152 32633\nConnection to 192.168.227.152 32633 port [tcp/*] succeeded!\n"
  I0427 06:29:39.410154 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:29:39.410538 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5249 exec execpod-affinityc9sf8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.151:32633/ ; done'
  I0427 06:29:39.690695 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:32633/\n"
  I0427 06:29:39.690808 25 builder.go:147] stdout: "\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt\naffinity-nodeport-nv8mt"
  I0427 06:29:39.690850 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.690917 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.690945 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.690986 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.690997 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691007 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691017 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691027 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691037 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691047 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691057 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691066 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691076 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691085 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691095 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691105 25 service.go:242] Received response from host: affinity-nodeport-nv8mt
  I0427 06:29:39.691174 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5249, will wait for the garbage collector to delete the pods @ 04/27/25 06:29:39.703
  I0427 06:29:39.763507 25 resources.go:139] Deleting ReplicationController affinity-nodeport took: 5.414452ms
  I0427 06:29:39.864375 25 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.85171ms
  I0427 06:29:42.482158 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5249" for this suite. @ 04/27/25 06:29:42.49
• [9.809 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 04/27/25 06:29:42.496
  I0427 06:29:42.496557 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:29:42.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:42.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:42.516
  STEP: set up a multi version CRD @ 04/27/25 06:29:42.525
  I0427 06:29:42.525780 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: mark a version not serverd @ 04/27/25 06:29:45.486
  STEP: check the unserved version gets removed @ 04/27/25 06:29:45.499
  STEP: check the other version is not changed @ 04/27/25 06:29:46.145
  I0427 06:29:48.473478 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3670" for this suite. @ 04/27/25 06:29:48.479
• [5.987 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/27/25 06:29:48.483
  I0427 06:29:48.483349 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename events @ 04/27/25 06:29:48.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:48.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:48.5
  STEP: Create set of events @ 04/27/25 06:29:48.507
  STEP: get a list of Events with a label in the current namespace @ 04/27/25 06:29:48.524
  STEP: delete a list of events @ 04/27/25 06:29:48.529
  I0427 06:29:48.529094 25 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/27/25 06:29:48.544
  I0427 06:29:48.547589 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4351" for this suite. @ 04/27/25 06:29:48.58
• [0.102 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/27/25 06:29:48.585
  I0427 06:29:48.585341 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 06:29:48.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:48.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:48.602
  STEP: creating the pod @ 04/27/25 06:29:48.605
  STEP: setting up watch @ 04/27/25 06:29:48.605
  STEP: submitting the pod to kubernetes @ 04/27/25 06:29:48.709
  STEP: verifying the pod is in kubernetes @ 04/27/25 06:29:48.716
  STEP: verifying pod creation was observed @ 04/27/25 06:29:48.728
  STEP: deleting the pod gracefully @ 04/27/25 06:29:50.736
  STEP: verifying pod deletion was observed @ 04/27/25 06:29:50.74
  I0427 06:29:52.468762 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5394" for this suite. @ 04/27/25 06:29:52.471
• [3.891 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/27/25 06:29:52.476
  I0427 06:29:52.476079 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename ingressclass @ 04/27/25 06:29:52.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:52.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:52.488
  STEP: getting /apis @ 04/27/25 06:29:52.491
  STEP: getting /apis/networking.k8s.io @ 04/27/25 06:29:52.495
  STEP: getting /apis/networking.k8s.iov1 @ 04/27/25 06:29:52.498
  STEP: creating @ 04/27/25 06:29:52.499
  STEP: getting @ 04/27/25 06:29:52.512
  STEP: listing @ 04/27/25 06:29:52.518
  STEP: watching @ 04/27/25 06:29:52.523
  I0427 06:29:52.523742 25 ingressclass.go:348] starting watch
  STEP: patching @ 04/27/25 06:29:52.525
  STEP: updating @ 04/27/25 06:29:52.529
  I0427 06:29:52.533795 25 ingressclass.go:364] waiting for watch events with expected annotations
  I0427 06:29:52.533850 25 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/27/25 06:29:52.533
  STEP: deleting a collection @ 04/27/25 06:29:52.544
  I0427 06:29:52.554384 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8098" for this suite. @ 04/27/25 06:29:52.573
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 04/27/25 06:29:52.581
  I0427 06:29:52.581395 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:29:52.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:52.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:52.595
  I0427 06:29:52.602673 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-468" for this suite. @ 04/27/25 06:29:52.673
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 04/27/25 06:29:52.679
  I0427 06:29:52.679203 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename disruption @ 04/27/25 06:29:52.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:52.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:52.692
  STEP: Waiting for the pdb to be processed @ 04/27/25 06:29:52.699
  STEP: Waiting for all pods to be running @ 04/27/25 06:29:54.717
  I0427 06:29:54.725179 25 disruption.go:691] running pods: 0 < 3
  I0427 06:29:56.723460 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2881" for this suite. @ 04/27/25 06:29:56.726
• [4.050 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/27/25 06:29:56.729
  I0427 06:29:56.729559 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename endpointslice @ 04/27/25 06:29:56.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:29:56.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:29:56.741
  STEP: referencing a single matching pod @ 04/27/25 06:29:58.791
  STEP: referencing matching pods with named port @ 04/27/25 06:29:58.795
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/27/25 06:29:58.799
  STEP: recreating EndpointSlices after they've been deleted @ 04/27/25 06:29:58.804
  I0427 06:29:58.815927 25 endpointslice.go:938] EndpointSlice for Service endpointslice-5519/example-named-port not found
  I0427 06:30:00.822264 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5519" for this suite. @ 04/27/25 06:30:00.828
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 04/27/25 06:30:00.834
  I0427 06:30:00.834057 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:30:00.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:00.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:00.855
  STEP: creating service multi-endpoint-test in namespace services-4927 @ 04/27/25 06:30:00.862
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4927 to expose endpoints map[] @ 04/27/25 06:30:00.872
  I0427 06:30:00.890017 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-4927 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4927 @ 04/27/25 06:30:00.89
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4927 to expose endpoints map[pod1:[100]] @ 04/27/25 06:30:02.914
  I0427 06:30:02.925283 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-4927 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4927 @ 04/27/25 06:30:02.925
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4927 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/27/25 06:30:04.939
  I0427 06:30:04.951550 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-4927 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/27/25 06:30:04.951
  I0427 06:30:04.951613 25 resource.go:361] Creating new exec pod
  I0427 06:30:07.963853 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4927 exec execpod8bblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0427 06:30:08.051170 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.68.105.61) 80 port [tcp/http] succeeded!\n"
  I0427 06:30:08.051215 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:30:08.051344 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4927 exec execpod8bblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.105.61 80'
  I0427 06:30:08.137396 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.105.61 80\nConnection to 10.68.105.61 80 port [tcp/http] succeeded!\n"
  I0427 06:30:08.137442 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:30:08.137506 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4927 exec execpod8bblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0427 06:30:08.222328 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.68.105.61) 81 port [tcp/*] succeeded!\n"
  I0427 06:30:08.222372 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 06:30:08.222609 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4927 exec execpod8bblj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.105.61 81'
  I0427 06:30:08.302471 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.105.61 81\nConnection to 10.68.105.61 81 port [tcp/*] succeeded!\n"
  I0427 06:30:08.302516 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4927 @ 04/27/25 06:30:08.302
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4927 to expose endpoints map[pod2:[101]] @ 04/27/25 06:30:08.31
  I0427 06:30:08.324285 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-4927 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4927 @ 04/27/25 06:30:08.324
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4927 to expose endpoints map[] @ 04/27/25 06:30:08.337
  I0427 06:30:09.359248 25 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-4927 exposes endpoints map[]
  I0427 06:30:09.371719 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4927" for this suite. @ 04/27/25 06:30:09.376
• [8.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/27/25 06:30:09.384
  I0427 06:30:09.384044 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:30:09.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:09.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:09.404
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:30:09.409
  STEP: Saw pod success @ 04/27/25 06:30:11.425
  I0427 06:30:11.427819 25 output.go:207] Trying to get logs from node node3 pod downwardapi-volume-04935839-1fb5-4e68-93f1-6cfcd99c7d8c container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:30:11.434
  I0427 06:30:11.444654 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2534" for this suite. @ 04/27/25 06:30:11.448
• [2.069 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/27/25 06:30:11.452
  I0427 06:30:11.452993 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 06:30:11.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:11.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:11.467
  STEP: Creating configMap with name configmap-test-volume-9bf9f50c-0bfa-436a-91c3-e55fd0bb62b6 @ 04/27/25 06:30:11.472
  STEP: Creating a pod to test consume configMaps @ 04/27/25 06:30:11.476
  STEP: Saw pod success @ 04/27/25 06:30:13.494
  I0427 06:30:13.496463 25 output.go:207] Trying to get logs from node node3 pod pod-configmaps-7610177e-db3e-49cc-aabb-2127f768928b container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 06:30:13.503
  I0427 06:30:13.512380 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6485" for this suite. @ 04/27/25 06:30:13.517
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/27/25 06:30:13.523
  I0427 06:30:13.523258 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:30:13.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:13.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:13.539
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:30:13.543
  STEP: Saw pod success @ 04/27/25 06:30:15.561
  I0427 06:30:15.563560 25 output.go:207] Trying to get logs from node node3 pod downwardapi-volume-00a3e71e-8b73-4742-b482-3b214a37b633 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:30:15.569
  I0427 06:30:15.579418 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7585" for this suite. @ 04/27/25 06:30:15.583
• [2.066 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/27/25 06:30:15.588
  I0427 06:30:15.588923 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 06:30:15.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:15.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:15.601
  STEP: reading a file in the container @ 04/27/25 06:30:17.634
  I0427 06:30:17.634520 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4776 pod-service-account-057231be-8ebb-498b-819f-c338cea5590c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/27/25 06:30:17.72
  I0427 06:30:17.720652 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4776 pod-service-account-057231be-8ebb-498b-819f-c338cea5590c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/27/25 06:30:17.808
  I0427 06:30:17.808638 25 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-4776 pod-service-account-057231be-8ebb-498b-819f-c338cea5590c -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0427 06:30:17.941683 25 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-4776"
  I0427 06:30:17.944113 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4776" for this suite. @ 04/27/25 06:30:17.948
• [2.367 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 04/27/25 06:30:17.956
  I0427 06:30:17.956181 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename security-context-test @ 04/27/25 06:30:17.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:17.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:17.976
  I0427 06:30:22.012437 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2363" for this suite. @ 04/27/25 06:30:22.018
• [4.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 04/27/25 06:30:22.032
  I0427 06:30:22.032665 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename volumeattachment @ 04/27/25 06:30:22.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:22.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:22.07
  STEP: Create VolumeAttachment "va-e2e-4lj27" on node "node3" @ 04/27/25 06:30:22.119
  STEP: Patch VolumeAttachment "va-e2e-4lj27" on node "node3" @ 04/27/25 06:30:22.127
  STEP: Reading "va-e2e-4lj27" Status @ 04/27/25 06:30:22.134
  STEP: Patching "va-e2e-4lj27" Status @ 04/27/25 06:30:22.141
  I0427 06:30:22.148042 25 volume_attachment.go:224] "va-e2e-4lj27" Status.Attached: true
  STEP: Updating "va-e2e-4lj27" Status @ 04/27/25 06:30:22.148
  I0427 06:30:22.160212 25 volume_attachment.go:240] "va-e2e-4lj27" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-4lj27" on node "node3" @ 04/27/25 06:30:22.16
  STEP: Confirm deletion of VolumeAttachment "va-e2e-4lj27" on node "node3" @ 04/27/25 06:30:22.168
  I0427 06:30:22.174924 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4210" for this suite. @ 04/27/25 06:30:22.22
• [0.198 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 04/27/25 06:30:22.231
  I0427 06:30:22.231152 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:30:22.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:22.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:22.256
  STEP: set up a multi version CRD @ 04/27/25 06:30:22.263
  I0427 06:30:22.263577 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: rename a version @ 04/27/25 06:30:25.563
  STEP: check the new version name is served @ 04/27/25 06:30:25.58
  STEP: check the old version name is removed @ 04/27/25 06:30:26.257
  STEP: check the other version is not changed @ 04/27/25 06:30:26.887
  I0427 06:30:29.306111 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7699" for this suite. @ 04/27/25 06:30:29.312
• [7.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/27/25 06:30:29.317
  I0427 06:30:29.317648 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 06:30:29.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:29.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:29.336
  STEP: Creating configMap with name configmap-test-volume-03dc2a55-6948-4b70-80ea-292f8bb56a05 @ 04/27/25 06:30:29.34
  STEP: Creating a pod to test consume configMaps @ 04/27/25 06:30:29.345
  STEP: Saw pod success @ 04/27/25 06:30:33.368
  I0427 06:30:33.371461 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-ce05fda6-a795-4646-941a-cfd5ebc6408c container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 06:30:33.375
  I0427 06:30:33.384600 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7055" for this suite. @ 04/27/25 06:30:33.387
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/27/25 06:30:33.391
  I0427 06:30:33.391473 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubelet-test @ 04/27/25 06:30:33.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:33.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:33.419
  I0427 06:30:35.441179 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4860" for this suite. @ 04/27/25 06:30:35.444
• [2.057 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/27/25 06:30:35.448
  I0427 06:30:35.448841 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:30:35.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:35.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:35.461
  STEP: Creating projection with secret that has name projected-secret-test-map-46595fa9-903b-410a-8217-d4350f55f840 @ 04/27/25 06:30:35.465
  STEP: Creating a pod to test consume secrets @ 04/27/25 06:30:35.47
  STEP: Saw pod success @ 04/27/25 06:30:37.486
  I0427 06:30:37.488270 25 output.go:207] Trying to get logs from node node3 pod pod-projected-secrets-66a38e46-2ab2-4a3b-b9ab-567a1bf0a878 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 06:30:37.493
  I0427 06:30:37.505110 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2152" for this suite. @ 04/27/25 06:30:37.509
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/27/25 06:30:37.515
  I0427 06:30:37.515465 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/27/25 06:30:37.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:37.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:37.533
  STEP: Creating two CSIDrivers @ 04/27/25 06:30:37.537
  STEP: Getting "inline-driver-09548035-11ff-4822-a15d-9dd2be299835" & "inline-driver-6e94673b-6149-4473-925b-3920a4161242" @ 04/27/25 06:30:37.552
  STEP: Patching the CSIDriver "inline-driver-6e94673b-6149-4473-925b-3920a4161242" @ 04/27/25 06:30:37.558
  STEP: Updating the CSIDriver "inline-driver-6e94673b-6149-4473-925b-3920a4161242" @ 04/27/25 06:30:37.565
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1139" @ 04/27/25 06:30:37.575
  STEP: Deleting CSIDriver "inline-driver-09548035-11ff-4822-a15d-9dd2be299835" @ 04/27/25 06:30:37.578
  STEP: Confirm deletion of CSIDriver "inline-driver-09548035-11ff-4822-a15d-9dd2be299835" @ 04/27/25 06:30:37.585
  STEP: Deleting CSIDriver "inline-driver-6e94673b-6149-4473-925b-3920a4161242" via DeleteCollection @ 04/27/25 06:30:37.588
  STEP: Confirm deletion of CSIDriver "inline-driver-6e94673b-6149-4473-925b-3920a4161242" @ 04/27/25 06:30:37.594
  I0427 06:30:37.597924 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1139" for this suite. @ 04/27/25 06:30:37.61
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306
  STEP: Creating a kubernetes client @ 04/27/25 06:30:37.618
  I0427 06:30:37.618630 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 06:30:37.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:37.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:37.638
  STEP: Creating a pod to test service account token:  @ 04/27/25 06:30:37.641
  STEP: Saw pod success @ 04/27/25 06:30:39.657
  I0427 06:30:39.660084 25 output.go:207] Trying to get logs from node node3 pod test-pod-526ea445-16b8-430c-9f94-8d2d1c812eb6 container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 06:30:39.665
  I0427 06:30:39.677194 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3288" for this suite. @ 04/27/25 06:30:39.682
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 04/27/25 06:30:39.689
  I0427 06:30:39.689613 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:30:39.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:39.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:39.708
  I0427 06:30:39.714019 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/27/25 06:30:40.879
  I0427 06:30:40.879934 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 create -f -'
  I0427 06:30:42.940965 25 builder.go:146] stderr: ""
  I0427 06:30:42.941036 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8123-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0427 06:30:42.941084 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 delete e2e-test-crd-publish-openapi-8123-crds test-cr'
  I0427 06:30:42.986240 25 builder.go:146] stderr: ""
  I0427 06:30:42.986288 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8123-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0427 06:30:42.986390 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 apply -f -'
  I0427 06:30:43.038008 25 builder.go:146] stderr: ""
  I0427 06:30:43.038047 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8123-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0427 06:30:43.038088 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-1845 --namespace=crd-publish-openapi-1845 delete e2e-test-crd-publish-openapi-8123-crds test-cr'
  I0427 06:30:43.084009 25 builder.go:146] stderr: ""
  I0427 06:30:43.084054 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8123-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/27/25 06:30:43.084
  I0427 06:30:43.084321 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-1845 explain e2e-test-crd-publish-openapi-8123-crds'
  I0427 06:30:43.127064 25 builder.go:146] stderr: ""
  I0427 06:30:43.127111 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8123-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0427 06:30:44.293991 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1845" for this suite. @ 04/27/25 06:30:44.299
• [4.614 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/27/25 06:30:44.303
  I0427 06:30:44.303931 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename apf @ 04/27/25 06:30:44.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:44.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:44.318
  STEP: getting /apis @ 04/27/25 06:30:44.325
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/27/25 06:30:44.334
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/27/25 06:30:44.336
  STEP: creating @ 04/27/25 06:30:44.337
  STEP: getting @ 04/27/25 06:30:44.351
  STEP: listing @ 04/27/25 06:30:44.353
  STEP: watching @ 04/27/25 06:30:44.358
  I0427 06:30:44.358085 25 flowcontrol.go:620] starting watch
  STEP: patching @ 04/27/25 06:30:44.36
  STEP: updating @ 04/27/25 06:30:44.364
  I0427 06:30:44.370461 25 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/27/25 06:30:44.37
  STEP: patching /status @ 04/27/25 06:30:44.374
  STEP: updating /status @ 04/27/25 06:30:44.378
  STEP: deleting @ 04/27/25 06:30:44.386
  STEP: deleting a collection @ 04/27/25 06:30:44.396
  I0427 06:30:44.408931 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-1353" for this suite. @ 04/27/25 06:30:44.413
• [0.115 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/27/25 06:30:44.418
  I0427 06:30:44.418933 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename endpointslice @ 04/27/25 06:30:44.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:44.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:44.433
  I0427 06:30:46.472057 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-566" for this suite. @ 04/27/25 06:30:46.476
• [2.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 04/27/25 06:30:46.48
  I0427 06:30:46.481001 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename security-context @ 04/27/25 06:30:46.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:46.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:46.498
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/27/25 06:30:46.502
  STEP: Saw pod success @ 04/27/25 06:30:48.524
  I0427 06:30:48.527681 25 output.go:207] Trying to get logs from node node3 pod security-context-e6500f4f-035b-4dd4-bea3-28cff5225f91 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:30:48.533
  I0427 06:30:48.545834 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5769" for this suite. @ 04/27/25 06:30:48.551
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/27/25 06:30:48.558
  I0427 06:30:48.558716 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-runtime @ 04/27/25 06:30:48.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:48.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:48.575
  STEP: create the container @ 04/27/25 06:30:48.581
  W0427 06:30:48.589371      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/27/25 06:30:48.589
  STEP: get the container status @ 04/27/25 06:30:50.599
  STEP: the container should be terminated @ 04/27/25 06:30:50.601
  STEP: the termination message should be set @ 04/27/25 06:30:50.601
  I0427 06:30:50.601817 25 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/27/25 06:30:50.601
  I0427 06:30:50.611042 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8449" for this suite. @ 04/27/25 06:30:50.615
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/27/25 06:30:50.619
  I0427 06:30:50.619506 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replication-controller @ 04/27/25 06:30:50.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:50.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:50.634
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/27/25 06:30:50.637
  STEP: When a replication controller with a matching selector is created @ 04/27/25 06:30:52.653
  STEP: Then the orphan pod is adopted @ 04/27/25 06:30:52.656
  I0427 06:30:53.662078 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2432" for this suite. @ 04/27/25 06:30:53.665
• [3.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 04/27/25 06:30:53.671
  I0427 06:30:53.671466 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:30:53.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:53.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:53.686
  STEP: Setting up server cert @ 04/27/25 06:30:53.708
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:30:54.011
  STEP: Deploying the webhook pod @ 04/27/25 06:30:54.016
  STEP: Wait for the deployment to be ready @ 04/27/25 06:30:54.026
  I0427 06:30:54.033979 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:30:56.04
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:30:56.048
  I0427 06:30:57.049739 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/27/25 06:30:57.055
  STEP: create a configmap that should be updated by the webhook @ 04/27/25 06:30:57.065
  I0427 06:30:57.109377 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-354" for this suite. @ 04/27/25 06:30:57.114
  STEP: Destroying namespace "webhook-markers-1836" for this suite. @ 04/27/25 06:30:57.12
• [3.456 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 04/27/25 06:30:57.128
  I0427 06:30:57.128092 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:30:57.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:30:57.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:30:57.153
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/27/25 06:30:57.16
  I0427 06:30:57.161189 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:30:58.374917 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:31:03.226283 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9477" for this suite. @ 04/27/25 06:31:03.235
• [6.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1372
  STEP: Creating a kubernetes client @ 04/27/25 06:31:03.244
  I0427 06:31:03.244740 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 06:31:03.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:03.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:03.269
  STEP: validating cluster-info @ 04/27/25 06:31:03.278
  I0427 06:31:03.278839 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-7745 cluster-info'
  I0427 06:31:03.360043 25 builder.go:146] stderr: ""
  I0427 06:31:03.360131 25 builder.go:147] stdout: "Kubernetes control plane is running at https://10.68.0.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0427 06:31:03.360618 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7745" for this suite. @ 04/27/25 06:31:03.368
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/27/25 06:31:03.376
  I0427 06:31:03.376859 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 06:31:03.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:03.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:03.401
  STEP: Creating secret with name secret-test-d1ad8571-d146-42a0-8c29-7b9c53d769be @ 04/27/25 06:31:03.412
  STEP: Creating a pod to test consume secrets @ 04/27/25 06:31:03.42
  STEP: Saw pod success @ 04/27/25 06:31:07.448
  I0427 06:31:07.450375 25 output.go:207] Trying to get logs from node node3 pod pod-secrets-f067979c-79df-4460-bab2-24fc8256b0af container secret-env-test: <nil>
  STEP: delete the pod @ 04/27/25 06:31:07.455
  I0427 06:31:07.466606 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7904" for this suite. @ 04/27/25 06:31:07.47
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/27/25 06:31:07.476
  I0427 06:31:07.476408 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename security-context-test @ 04/27/25 06:31:07.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:07.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:07.489
  I0427 06:31:11.515142 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1255" for this suite. @ 04/27/25 06:31:11.518
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/27/25 06:31:11.524
  I0427 06:31:11.524369 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/27/25 06:31:11.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:11.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:11.535
  STEP: create the container to handle the HTTPGet hook request. @ 04/27/25 06:31:11.618
  STEP: create the pod with lifecycle hook @ 04/27/25 06:31:13.635
  STEP: check poststart hook @ 04/27/25 06:31:15.652
  STEP: delete the pod with lifecycle hook @ 04/27/25 06:31:15.663
  I0427 06:31:17.681556 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3478" for this suite. @ 04/27/25 06:31:17.684
• [6.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968
  STEP: Creating a kubernetes client @ 04/27/25 06:31:17.689
  I0427 06:31:17.689431 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 06:31:17.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:17.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:17.703
  STEP: Creating service test in namespace statefulset-4679 @ 04/27/25 06:31:17.706
  I0427 06:31:17.716661 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0427 06:31:27.718271 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/27/25 06:31:27.723
  I0427 06:31:27.741928 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 06:31:27.741994 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0427 06:31:37.742131 25 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 06:31:37.742573 25 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/27/25 06:31:37.749
  STEP: Delete all of the StatefulSets @ 04/27/25 06:31:37.754
  STEP: Verify that StatefulSets have been deleted @ 04/27/25 06:31:37.759
  I0427 06:31:37.761763 25 statefulset.go:138] Deleting all statefulset in ns statefulset-4679
  I0427 06:31:37.771613 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4679" for this suite. @ 04/27/25 06:31:37.78
• [20.100 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/27/25 06:31:37.789
  I0427 06:31:37.789768 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:31:37.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:37.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:37.812
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:31:37.816
  STEP: Saw pod success @ 04/27/25 06:31:41.843
  I0427 06:31:41.845458 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-660f57d5-1440-4f2a-9c34-0a63f33adcff container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:31:41.851
  I0427 06:31:41.863729 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9199" for this suite. @ 04/27/25 06:31:41.867
• [4.084 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/27/25 06:31:41.874
  I0427 06:31:41.874525 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename watch @ 04/27/25 06:31:41.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:41.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:41.89
  STEP: creating a watch on configmaps @ 04/27/25 06:31:41.894
  STEP: creating a new configmap @ 04/27/25 06:31:41.898
  STEP: modifying the configmap once @ 04/27/25 06:31:41.904
  STEP: closing the watch once it receives two notifications @ 04/27/25 06:31:41.912
  I0427 06:31:41.912246 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5664  692c3130-f7ed-4ddf-8628-fd56e2b1e20b 28930 0 2025-04-27 06:31:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-27 06:31:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:31:41.912360 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5664  692c3130-f7ed-4ddf-8628-fd56e2b1e20b 28931 0 2025-04-27 06:31:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-27 06:31:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/27/25 06:31:41.912
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/27/25 06:31:41.921
  STEP: deleting the configmap @ 04/27/25 06:31:41.923
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/27/25 06:31:41.928
  I0427 06:31:41.928645 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5664  692c3130-f7ed-4ddf-8628-fd56e2b1e20b 28932 0 2025-04-27 06:31:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-27 06:31:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:31:41.928782 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5664  692c3130-f7ed-4ddf-8628-fd56e2b1e20b 28933 0 2025-04-27 06:31:41 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-04-27 06:31:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:31:41.928919 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5664" for this suite. @ 04/27/25 06:31:41.968
• [0.100 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/27/25 06:31:41.974
  I0427 06:31:41.974871 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replication-controller @ 04/27/25 06:31:41.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:41.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:41.994
  STEP: Creating ReplicationController "e2e-rc-bk6kq" @ 04/27/25 06:31:41.998
  I0427 06:31:42.004098 25 rc.go:792] Get Replication Controller "e2e-rc-bk6kq" to confirm replicas
  I0427 06:31:43.004579 25 rc.go:792] Get Replication Controller "e2e-rc-bk6kq" to confirm replicas
  I0427 06:31:43.007142 25 rc.go:801] Found 1 replicas for "e2e-rc-bk6kq" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-bk6kq" @ 04/27/25 06:31:43.007
  STEP: Updating a scale subresource @ 04/27/25 06:31:43.009
  STEP: Verifying replicas where modified for replication controller "e2e-rc-bk6kq" @ 04/27/25 06:31:43.012
  I0427 06:31:43.012917 25 rc.go:792] Get Replication Controller "e2e-rc-bk6kq" to confirm replicas
  I0427 06:31:44.013363 25 rc.go:792] Get Replication Controller "e2e-rc-bk6kq" to confirm replicas
  I0427 06:31:44.016444 25 rc.go:801] Found 2 replicas for "e2e-rc-bk6kq" replication controller
  I0427 06:31:44.016549 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3176" for this suite. @ 04/27/25 06:31:44.019
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/27/25 06:31:44.024
  I0427 06:31:44.024906 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 06:31:44.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:44.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:44.041
  I0427 06:31:46.059630 25 delete.go:62] Deleting pod "var-expansion-09df66bb-556a-46f6-b395-dfb8481433fb" in namespace "var-expansion-115"
  I0427 06:31:46.069973 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-09df66bb-556a-46f6-b395-dfb8481433fb" to be fully deleted
  I0427 06:31:48.078830 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-115" for this suite. @ 04/27/25 06:31:48.082
• [4.061 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/27/25 06:31:48.086
  I0427 06:31:48.086395 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:31:48.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:48.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:48.096
  STEP: Creating configMap with name projected-configmap-test-volume-a200c190-95f2-4fa7-a47e-2c20db53fcf3 @ 04/27/25 06:31:48.101
  STEP: Creating a pod to test consume configMaps @ 04/27/25 06:31:48.104
  STEP: Saw pod success @ 04/27/25 06:31:52.13
  I0427 06:31:52.133519 25 output.go:207] Trying to get logs from node node3 pod pod-projected-configmaps-857df993-0b93-479a-9685-157e49404eae container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 06:31:52.141
  I0427 06:31:52.167956 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6076" for this suite. @ 04/27/25 06:31:52.173
• [4.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/27/25 06:31:52.181
  I0427 06:31:52.181876 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:31:52.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:52.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:52.207
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/27/25 06:31:52.213
  STEP: Saw pod success @ 04/27/25 06:31:56.238
  I0427 06:31:56.240941 25 output.go:207] Trying to get logs from node node1 pod pod-bdcc0526-1b98-4761-b5e2-46465628050c container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:31:56.245
  I0427 06:31:56.263594 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5487" for this suite. @ 04/27/25 06:31:56.268
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/27/25 06:31:56.273
  I0427 06:31:56.273111 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:31:56.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:31:56.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:31:56.288
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:31:56.292
  STEP: Saw pod success @ 04/27/25 06:32:00.313
  I0427 06:32:00.316025 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-8205a1a0-e781-4af8-92ab-33e9f767afc3 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:32:00.322
  I0427 06:32:00.341135 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6874" for this suite. @ 04/27/25 06:32:00.348
• [4.084 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/27/25 06:32:00.356
  I0427 06:32:00.356969 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename subpath @ 04/27/25 06:32:00.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:32:00.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:32:00.378
  STEP: Setting up data @ 04/27/25 06:32:00.386
  STEP: Creating pod pod-subpath-test-projected-jt29 @ 04/27/25 06:32:00.398
  STEP: Creating a pod to test atomic-volume-subpath @ 04/27/25 06:32:00.398
  STEP: Saw pod success @ 04/27/25 06:32:24.461
  I0427 06:32:24.464229 25 output.go:207] Trying to get logs from node node1 pod pod-subpath-test-projected-jt29 container test-container-subpath-projected-jt29: <nil>
  STEP: delete the pod @ 04/27/25 06:32:24.472
  STEP: Deleting pod pod-subpath-test-projected-jt29 @ 04/27/25 06:32:24.485
  I0427 06:32:24.485433 25 delete.go:62] Deleting pod "pod-subpath-test-projected-jt29" in namespace "subpath-3003"
  I0427 06:32:24.488922 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3003" for this suite. @ 04/27/25 06:32:24.494
• [24.144 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/27/25 06:32:24.5
  I0427 06:32:24.500829 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-pred @ 04/27/25 06:32:24.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:32:24.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:32:24.522
  I0427 06:32:24.528406 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0427 06:32:24.602647 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0427 06:32:24.607122 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node1 before test
  I0427 06:32:24.614657 25 predicates.go:957] calico-node-5mcpm from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.614736 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:32:24.614828 25 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-gt9hk from kube-system started at 2025-04-27 02:46:29 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.614966 25 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0427 06:32:24.614998 25 predicates.go:957] metrics-server-74f6d6fdd5-vt289 from kube-system started at 2025-04-27 02:46:25 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.615014 25 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0427 06:32:24.615038 25 predicates.go:957] node-local-dns-r5bs2 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.615054 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:32:24.615074 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-jqbpf from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:32:24.615089 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:32:24.615102 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 06:32:24.615118 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node2 before test
  I0427 06:32:24.625083 25 predicates.go:957] calico-kube-controllers-54cdc99cb-8qvqn from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.625155 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0427 06:32:24.625182 25 predicates.go:957] calico-node-9m6qt from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.625198 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:32:24.625215 25 predicates.go:957] kubernetes-dashboard-75c65df89-zttnz from kube-system started at 2025-04-27 02:46:29 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.625229 25 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0427 06:32:24.625244 25 predicates.go:957] node-local-dns-m7nj5 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.625258 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:32:24.625273 25 predicates.go:957] sonobuoy-e2e-job-919a1c48d6024b67 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:32:24.625286 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0427 06:32:24.625315 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:32:24.625331 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-6mvvk from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:32:24.625345 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:32:24.625358 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 06:32:24.625372 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node3 before test
  I0427 06:32:24.715568 25 predicates.go:957] calico-node-zs89m from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.715639 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:32:24.715659 25 predicates.go:957] coredns-75dd46b86b-vq9nh from kube-system started at 2025-04-27 02:46:22 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.715674 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0427 06:32:24.715694 25 predicates.go:957] node-local-dns-zkd98 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.715710 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:32:24.715725 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (1 container statuses recorded)
  I0427 06:32:24.715739 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0427 06:32:24.715754 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-l4m65 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:32:24.715771 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:32:24.715784 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/27/25 06:32:24.715
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/27/25 06:32:26.737
  STEP: Trying to apply a random label on the found node. @ 04/27/25 06:32:26.747
  STEP: verifying the node has the label kubernetes.io/e2e-8d71aa41-5537-4e1b-9f8b-701834d346f4 95 @ 04/27/25 06:32:26.753
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/27/25 06:32:26.761
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.227.151 on the node which pod4 resides and expect not scheduled @ 04/27/25 06:32:28.773
  STEP: removing the label kubernetes.io/e2e-8d71aa41-5537-4e1b-9f8b-701834d346f4 off the node node1 @ 04/27/25 06:37:28.782
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-8d71aa41-5537-4e1b-9f8b-701834d346f4 @ 04/27/25 06:37:28.791
  I0427 06:37:28.795481 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2401" for this suite. @ 04/27/25 06:37:28.802
• [304.306 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/27/25 06:37:28.807
  I0427 06:37:28.807366 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/27/25 06:37:28.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:37:28.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:37:28.826
  I0427 06:37:28.832674 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:37:29.362397 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5691" for this suite. @ 04/27/25 06:37:29.365
• [0.562 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/27/25 06:37:29.369
  I0427 06:37:29.369568 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 06:37:29.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:37:29.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:37:29.383
  I0427 06:37:29.385507 25 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0427 06:37:29.391877 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0427 06:37:34.396097 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/27/25 06:37:34.396
  I0427 06:37:34.396199 25 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0427 06:37:34.400111 25 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0427 06:37:34.406947 25 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0427 06:37:36.413098 25 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0427 06:37:36.414970 25 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0427 06:37:36.423865 25 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cf917133-7e5d-45ba-b923-79ffb228aa7f",
      ResourceVersion: (string) (len=5) "29914",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-774f4dfbb6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 06:37:36.429587 25 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-774f4dfbb6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-774f4dfbb6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eaffa911-bf06-4a80-8dbd-f23edf9dba41",
      ResourceVersion: (string) (len=5) "29904",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "774f4dfbb6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cf917133-7e5d-45ba-b923-79ffb228aa7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 66 39 31 37 31  33 33 2d 37 65 35 64 2d  |\"cf917133-7e5d-|
              00000120  34 35 62 61 2d 62 39 32  33 2d 37 39 66 66 62 32  |45ba-b923-79ffb2|
              00000130  32 38 61 61 37 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |28aa7f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "774f4dfbb6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "774f4dfbb6",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 06:37:36.431772 25 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0427 06:37:36.431969 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ef70a8e-afc4-45ba-8ac8-da214a35c17e",
      ResourceVersion: (string) (len=5) "29913",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332649,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cf917133-7e5d-45ba-b923-79ffb228aa7f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332649,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 66 39 31 37 31 33  |"uid\":\"cf91713|
              000000b0  33 2d 37 65 35 64 2d 34  35 62 61 2d 62 39 32 33  |3-7e5d-45ba-b923|
              000000c0  2d 37 39 66 66 62 32 32  38 61 61 37 66 5c 22 7d  |-79ffb228aa7f\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 06:37:36.436912 25 deployment.go:68] Pod "test-rolling-update-deployment-774f4dfbb6-dkl6d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-774f4dfbb6-dkl6d",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-774f4dfbb6-",
      Namespace: (string) (len=15) "deployment-6278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e76bca2-6277-46b1-85b3-0b93b98fc7f2",
      ResourceVersion: (string) (len=5) "29903",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "774f4dfbb6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-774f4dfbb6",
          UID: (types.UID) (len=36) "eaffa911-bf06-4a80-8dbd-f23edf9dba41",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 61  66 66 61 39 31 31 2d 62  |d\":\"eaffa911-b|
              00000090  66 30 36 2d 34 61 38 30  2d 38 64 62 64 2d 66 32  |f06-4a80-8dbd-f2|
              000000a0  33 65 64 66 39 64 62 61  34 31 5c 22 7d 22 3a 7b  |3edf9dba41\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 37 32 5c 22 7d 22  |2.20.166.172\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrlsq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrlsq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881332654,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881332654,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881332654,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=133) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost@sha256:291f9faa53606adffc37a52c7ef58bd74b742b1c49e68331bc481be521a3672b",
          ContainerID: (string) (len=77) "containerd://800dd9ff4db9f6a01b84dafadcf2ea926774c28e5f52a9cd07c7442b59631c6e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wrlsq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:37:36.439126 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6278" for this suite. @ 04/27/25 06:37:36.442
• [7.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/27/25 06:37:36.446
  I0427 06:37:36.446563 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 06:37:36.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:37:36.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:37:36.471
  STEP: Creating configMap with name configmap-test-volume-map-45a9f130-85cb-461f-a7f5-32e824ef1c6f @ 04/27/25 06:37:36.474
  STEP: Creating a pod to test consume configMaps @ 04/27/25 06:37:36.478
  STEP: Saw pod success @ 04/27/25 06:37:40.502
  I0427 06:37:40.506575 25 output.go:207] Trying to get logs from node node3 pod pod-configmaps-0b6f7c48-608e-4ac7-8141-36c4a67e090d container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 06:37:40.518
  I0427 06:37:40.534469 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1203" for this suite. @ 04/27/25 06:37:40.542
• [4.104 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/27/25 06:37:40.551
  I0427 06:37:40.551336 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 06:37:40.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:37:40.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:37:40.58
  STEP: creating the pod @ 04/27/25 06:37:40.592
  STEP: waiting for pod running @ 04/27/25 06:37:40.606
  STEP: creating a file in subpath @ 04/27/25 06:37:42.615
  I0427 06:37:42.617596 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-6080 PodName:var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:37:42.617634 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:37:42.617735 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-6080/pods/var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/27/25 06:37:42.679
  I0427 06:37:42.683361 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-6080 PodName:var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:37:42.683403 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:37:42.683452 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/var-expansion-6080/pods/var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/27/25 06:37:42.748
  I0427 06:37:43.258091 25 pod_client.go:173] Successfully updated pod "var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170"
  STEP: waiting for annotated pod running @ 04/27/25 06:37:43.258
  STEP: deleting the pod gracefully @ 04/27/25 06:37:43.26
  I0427 06:37:43.260552 25 delete.go:62] Deleting pod "var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170" in namespace "var-expansion-6080"
  I0427 06:37:43.265554 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-b514ed3f-ee9f-4d1b-91f6-ea9be5ba1170" to be fully deleted
  I0427 06:38:17.328677 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6080" for this suite. @ 04/27/25 06:38:17.332
• [36.786 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/27/25 06:38:17.337
  I0427 06:38:17.337023 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 06:38:17.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:38:17.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:38:17.351
  STEP: Creating a pod to test env composition @ 04/27/25 06:38:17.356
  STEP: Saw pod success @ 04/27/25 06:38:21.375
  I0427 06:38:21.378079 25 output.go:207] Trying to get logs from node node1 pod var-expansion-10b64393-69a7-4511-ba98-dbbde1da579d container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 06:38:21.384
  I0427 06:38:21.395007 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3975" for this suite. @ 04/27/25 06:38:21.398
• [4.067 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/27/25 06:38:21.403
  I0427 06:38:21.403705 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename subpath @ 04/27/25 06:38:21.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:38:21.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:38:21.417
  STEP: Setting up data @ 04/27/25 06:38:21.419
  STEP: Creating pod pod-subpath-test-configmap-mchr @ 04/27/25 06:38:21.427
  STEP: Creating a pod to test atomic-volume-subpath @ 04/27/25 06:38:21.427
  STEP: Saw pod success @ 04/27/25 06:38:45.484
  I0427 06:38:45.486858 25 output.go:207] Trying to get logs from node node1 pod pod-subpath-test-configmap-mchr container test-container-subpath-configmap-mchr: <nil>
  STEP: delete the pod @ 04/27/25 06:38:45.492
  STEP: Deleting pod pod-subpath-test-configmap-mchr @ 04/27/25 06:38:45.502
  I0427 06:38:45.502994 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-mchr" in namespace "subpath-6623"
  I0427 06:38:45.505248 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6623" for this suite. @ 04/27/25 06:38:45.51
• [24.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/27/25 06:38:45.515
  I0427 06:38:45.515834 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 06:38:45.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:38:45.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:38:45.529
  STEP: Creating simple DaemonSet "daemon-set" @ 04/27/25 06:38:45.617
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/27/25 06:38:45.62
  I0427 06:38:45.714314 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:38:45.714352 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:38:46.627793 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0427 06:38:46.627833 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:38:47.701324 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 06:38:47.701366 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/27/25 06:38:47.703
  I0427 06:38:47.728628 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 06:38:47.728665 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  I0427 06:38:48.718082 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 06:38:48.718139 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  I0427 06:38:49.719066 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 06:38:49.719109 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  I0427 06:38:50.716728 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 06:38:50.716815 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/27/25 06:38:50.718
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-587, will wait for the garbage collector to delete the pods @ 04/27/25 06:38:50.718
  I0427 06:38:50.775127 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 2.586994ms
  I0427 06:38:50.876285 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.153333ms
  I0427 06:38:52.279481 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:38:52.279526 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0427 06:38:52.282241 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30306"},"items":null}

  I0427 06:38:52.284304 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30306"},"items":null}

  I0427 06:38:52.293383 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-587" for this suite. @ 04/27/25 06:38:52.296
• [6.787 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771
  STEP: Creating a kubernetes client @ 04/27/25 06:38:52.302
  I0427 06:38:52.302101 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 06:38:52.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:38:52.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:38:52.313
  I0427 06:38:52.319877 25 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-7387"
  I0427 06:38:52.324889 25 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-7387"
  STEP: waiting for a new root ca configmap created @ 04/27/25 06:38:52.831
  I0427 06:38:52.835610 25 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-7387"
  I0427 06:38:52.867903 25 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-7387"
  STEP: waiting for the root ca configmap reconciled @ 04/27/25 06:38:53.368
  I0427 06:38:53.372161 25 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-7387"
  I0427 06:38:53.372290 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7387" for this suite. @ 04/27/25 06:38:53.394
• [1.118 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118
  STEP: Creating a kubernetes client @ 04/27/25 06:38:53.427
  I0427 06:38:53.427244 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:38:53.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:38:53.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:38:53.502
  STEP: Creating a pod to test downward api env vars @ 04/27/25 06:38:53.546
  STEP: Saw pod success @ 04/27/25 06:38:57.583
  I0427 06:38:57.586180 25 output.go:207] Trying to get logs from node node3 pod downward-api-78701571-ad66-4565-841d-508c63ce5e5f container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 06:38:57.592
  I0427 06:38:57.604200 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-173" for this suite. @ 04/27/25 06:38:57.607
• [4.185 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 04/27/25 06:38:57.612
  I0427 06:38:57.612982 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 06:38:57.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:38:57.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:38:57.629
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6937 @ 04/27/25 06:38:57.635
  STEP: changing the ExternalName service to type=NodePort @ 04/27/25 06:38:57.64
  STEP: creating replication controller externalname-service in namespace services-6937 @ 04/27/25 06:38:57.658
  I0427 06:38:57.665780      25 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6937, replica count: 2
  I0427 06:39:00.718242      25 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:39:00.718395 25 resource.go:361] Creating new exec pod
  I0427 06:39:03.756680 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-6937 exec execpodcfnd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0427 06:39:03.865063 25 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 externalname-service 80\nConnection to externalname-service (10.68.198.95) 80 port [tcp/http] succeeded!\n"
  I0427 06:39:03.865138 25 builder.go:147] stdout: "externalname-service-gnktb"
  I0427 06:39:03.865216 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-6937 exec execpodcfnd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.198.95 80'
  I0427 06:39:03.964398 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.198.95 80\nConnection to 10.68.198.95 80 port [tcp/http] succeeded!\n"
  I0427 06:39:03.964460 25 builder.go:147] stdout: ""
  I0427 06:39:04.865618 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-6937 exec execpodcfnd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.198.95 80'
  I0427 06:39:04.945853 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.198.95 80\nConnection to 10.68.198.95 80 port [tcp/http] succeeded!\n"
  I0427 06:39:04.945912 25 builder.go:147] stdout: "externalname-service-gnktb"
  I0427 06:39:04.946022 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-6937 exec execpodcfnd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.151 32047'
  I0427 06:39:05.033237 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.151 32047\nConnection to 192.168.227.151 32047 port [tcp/*] succeeded!\n"
  I0427 06:39:05.033279 25 builder.go:147] stdout: "externalname-service-gnktb"
  I0427 06:39:05.033348 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-6937 exec execpodcfnd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.152 32047'
  I0427 06:39:05.117540 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.152 32047\nConnection to 192.168.227.152 32047 port [tcp/*] succeeded!\n"
  I0427 06:39:05.117587 25 builder.go:147] stdout: "externalname-service-gnktb"
  I0427 06:39:05.117644 25 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0427 06:39:05.133942 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6937" for this suite. @ 04/27/25 06:39:05.141
• [7.536 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/27/25 06:39:05.148
  I0427 06:39:05.149003 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename proxy @ 04/27/25 06:39:05.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:39:05.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:39:05.166
  STEP: starting an echo server on multiple ports @ 04/27/25 06:39:05.184
  STEP: creating replication controller proxy-service-vlsgw in namespace proxy-6967 @ 04/27/25 06:39:05.184
  I0427 06:39:05.198134      25 runners.go:193] Created replication controller with name: proxy-service-vlsgw, namespace: proxy-6967, replica count: 1
  I0427 06:39:06.249867      25 runners.go:193] proxy-service-vlsgw Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:39:07.250061      25 runners.go:193] proxy-service-vlsgw Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:39:07.252989 25 proxy.go:230] setup took 2.079353616s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/27/25 06:39:07.253
  I0427 06:39:07.266557 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 13.332034ms)
  I0427 06:39:07.270625 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 17.438585ms)
  I0427 06:39:07.273243 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 19.944988ms)
  I0427 06:39:07.273265 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 20.01474ms)
  I0427 06:39:07.273327 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 20.066393ms)
  I0427 06:39:07.273349 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 20.071002ms)
  I0427 06:39:07.273353 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 20.235607ms)
  I0427 06:39:07.273367 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 20.156382ms)
  I0427 06:39:07.273398 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 20.1745ms)
  I0427 06:39:07.273420 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 20.186885ms)
  I0427 06:39:07.274321 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 20.977708ms)
  I0427 06:39:07.274335 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 21.164286ms)
  I0427 06:39:07.274393 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 21.28074ms)
  I0427 06:39:07.275712 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 22.610121ms)
  I0427 06:39:07.276275 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 23.069814ms)
  I0427 06:39:07.276384 25 proxy.go:558] (0) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 23.203766ms)
  I0427 06:39:07.283451 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.030361ms)
  I0427 06:39:07.283447 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 6.630072ms)
  I0427 06:39:07.283511 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 6.584095ms)
  I0427 06:39:07.283514 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 6.634896ms)
  I0427 06:39:07.283852 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 6.926392ms)
  I0427 06:39:07.283883 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 7.467165ms)
  I0427 06:39:07.283903 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 7.206886ms)
  I0427 06:39:07.283925 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.190528ms)
  I0427 06:39:07.283942 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 7.077166ms)
  I0427 06:39:07.284037 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 7.263972ms)
  I0427 06:39:07.284524 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 7.616266ms)
  I0427 06:39:07.284707 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 8.057969ms)
  I0427 06:39:07.284709 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.127019ms)
  I0427 06:39:07.284726 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 8.261364ms)
  I0427 06:39:07.284989 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 8.153962ms)
  I0427 06:39:07.286689 25 proxy.go:558] (1) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 10.068402ms)
  I0427 06:39:07.294265 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 7.506669ms)
  I0427 06:39:07.294265 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 6.981979ms)
  I0427 06:39:07.294366 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 7.125087ms)
  I0427 06:39:07.295119 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 7.471884ms)
  I0427 06:39:07.295187 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 7.677913ms)
  I0427 06:39:07.296028 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 8.672931ms)
  I0427 06:39:07.296080 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 9.151438ms)
  I0427 06:39:07.296049 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 8.729072ms)
  I0427 06:39:07.296067 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 8.631061ms)
  I0427 06:39:07.296105 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.57221ms)
  I0427 06:39:07.296122 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.648663ms)
  I0427 06:39:07.296867 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 9.281378ms)
  I0427 06:39:07.296921 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 9.247984ms)
  I0427 06:39:07.296948 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 9.335316ms)
  I0427 06:39:07.297113 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 9.696038ms)
  I0427 06:39:07.297716 25 proxy.go:558] (2) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 10.337945ms)
  I0427 06:39:07.305629 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 7.658758ms)
  I0427 06:39:07.305691 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 7.545302ms)
  I0427 06:39:07.306973 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.449ms)
  I0427 06:39:07.307102 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 9.012393ms)
  I0427 06:39:07.308079 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 9.68029ms)
  I0427 06:39:07.308196 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 9.622063ms)
  I0427 06:39:07.308205 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 10.168093ms)
  I0427 06:39:07.308222 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 9.899603ms)
  I0427 06:39:07.308780 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 10.897179ms)
  I0427 06:39:07.308889 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 10.626589ms)
  I0427 06:39:07.308905 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 10.009303ms)
  I0427 06:39:07.308918 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 10.705344ms)
  I0427 06:39:07.308938 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 11.177379ms)
  I0427 06:39:07.308991 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 10.298916ms)
  I0427 06:39:07.309008 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 10.549609ms)
  I0427 06:39:07.309178 25 proxy.go:558] (3) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 10.552356ms)
  I0427 06:39:07.315658 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 5.869652ms)
  I0427 06:39:07.317865 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.836432ms)
  I0427 06:39:07.318094 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 8.041109ms)
  I0427 06:39:07.318209 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 8.988961ms)
  I0427 06:39:07.318332 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.162995ms)
  I0427 06:39:07.318409 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 8.187816ms)
  I0427 06:39:07.318530 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 8.411554ms)
  I0427 06:39:07.318542 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.339341ms)
  I0427 06:39:07.318564 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 9.117191ms)
  I0427 06:39:07.318573 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 8.585279ms)
  I0427 06:39:07.318601 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 8.439922ms)
  I0427 06:39:07.318598 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.521209ms)
  I0427 06:39:07.318614 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 8.678047ms)
  I0427 06:39:07.318969 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.916245ms)
  I0427 06:39:07.320248 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 10.148025ms)
  I0427 06:39:07.320249 25 proxy.go:558] (4) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 10.429227ms)
  I0427 06:39:07.328626 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.010436ms)
  I0427 06:39:07.330335 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 9.586278ms)
  I0427 06:39:07.331673 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 10.859397ms)
  I0427 06:39:07.331723 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 10.816435ms)
  I0427 06:39:07.331718 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 10.847554ms)
  I0427 06:39:07.331720 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 10.866402ms)
  I0427 06:39:07.331739 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 10.903396ms)
  I0427 06:39:07.331752 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 10.856473ms)
  I0427 06:39:07.331742 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 10.804572ms)
  I0427 06:39:07.331790 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 11.070833ms)
  I0427 06:39:07.333685 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 12.732607ms)
  I0427 06:39:07.333691 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 12.808808ms)
  I0427 06:39:07.333726 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 12.813515ms)
  I0427 06:39:07.333733 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 12.807728ms)
  I0427 06:39:07.335453 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 14.668917ms)
  I0427 06:39:07.337839 25 proxy.go:558] (5) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 16.877484ms)
  I0427 06:39:07.345674 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 7.295602ms)
  I0427 06:39:07.346190 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 7.915477ms)
  I0427 06:39:07.347192 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.61119ms)
  I0427 06:39:07.347713 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.981231ms)
  I0427 06:39:07.350677 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 11.872784ms)
  I0427 06:39:07.350864 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 12.884966ms)
  I0427 06:39:07.350757 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 12.009843ms)
  I0427 06:39:07.351994 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 13.153616ms)
  I0427 06:39:07.352087 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 13.8301ms)
  I0427 06:39:07.352108 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 13.265847ms)
  I0427 06:39:07.352129 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 13.618823ms)
  I0427 06:39:07.352193 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 13.303253ms)
  I0427 06:39:07.352219 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 13.512736ms)
  I0427 06:39:07.352265 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 13.398537ms)
  I0427 06:39:07.352290 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 13.51803ms)
  I0427 06:39:07.352910 25 proxy.go:558] (6) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 14.133384ms)
  I0427 06:39:07.358691 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 5.701428ms)
  I0427 06:39:07.358791 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 5.241055ms)
  I0427 06:39:07.359232 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 5.762936ms)
  I0427 06:39:07.360510 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 7.297178ms)
  I0427 06:39:07.361142 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 7.193058ms)
  I0427 06:39:07.361138 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 7.878195ms)
  I0427 06:39:07.361600 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 7.874166ms)
  I0427 06:39:07.361632 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 7.829578ms)
  I0427 06:39:07.361667 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.613143ms)
  I0427 06:39:07.361741 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 8.121999ms)
  I0427 06:39:07.362113 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 8.544943ms)
  I0427 06:39:07.362135 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.24406ms)
  I0427 06:39:07.362211 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 7.944553ms)
  I0427 06:39:07.363733 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 9.300573ms)
  I0427 06:39:07.365705 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 11.371142ms)
  I0427 06:39:07.365869 25 proxy.go:558] (7) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 11.698804ms)
  I0427 06:39:07.371495 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 5.395609ms)
  I0427 06:39:07.374010 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 7.772163ms)
  I0427 06:39:07.374016 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 7.838447ms)
  I0427 06:39:07.374079 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 8.015266ms)
  I0427 06:39:07.374107 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 8.112301ms)
  I0427 06:39:07.374123 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 7.983557ms)
  I0427 06:39:07.374171 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.060832ms)
  I0427 06:39:07.374194 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.035809ms)
  I0427 06:39:07.374215 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 8.003498ms)
  I0427 06:39:07.374249 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 7.991576ms)
  I0427 06:39:07.374402 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 7.986213ms)
  I0427 06:39:07.374459 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 8.147815ms)
  I0427 06:39:07.374540 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.416657ms)
  I0427 06:39:07.374581 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.612389ms)
  I0427 06:39:07.374643 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 8.443448ms)
  I0427 06:39:07.380705 25 proxy.go:558] (8) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 14.766967ms)
  I0427 06:39:07.388327 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 7.185145ms)
  I0427 06:39:07.388359 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 7.531642ms)
  I0427 06:39:07.388431 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 7.468368ms)
  I0427 06:39:07.388813 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.592625ms)
  I0427 06:39:07.388822 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 7.232422ms)
  I0427 06:39:07.388897 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 7.612079ms)
  I0427 06:39:07.389900 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 8.444362ms)
  I0427 06:39:07.389946 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.181591ms)
  I0427 06:39:07.390868 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 9.146874ms)
  I0427 06:39:07.390927 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 9.278831ms)
  I0427 06:39:07.390936 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 9.065745ms)
  I0427 06:39:07.390965 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 9.934691ms)
  I0427 06:39:07.391532 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 10.368111ms)
  I0427 06:39:07.391604 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 10.096509ms)
  I0427 06:39:07.391638 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 9.825421ms)
  I0427 06:39:07.394605 25 proxy.go:558] (9) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 13.246881ms)
  I0427 06:39:07.402666 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 7.248373ms)
  I0427 06:39:07.402694 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.554547ms)
  I0427 06:39:07.403477 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 7.956702ms)
  I0427 06:39:07.403482 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 8.060744ms)
  I0427 06:39:07.403533 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.182982ms)
  I0427 06:39:07.403581 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 8.817245ms)
  I0427 06:39:07.403818 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.643143ms)
  I0427 06:39:07.403888 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 8.931432ms)
  I0427 06:39:07.403929 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.490131ms)
  I0427 06:39:07.403965 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.371032ms)
  I0427 06:39:07.406529 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 10.954289ms)
  I0427 06:39:07.406637 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 11.150964ms)
  I0427 06:39:07.406658 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 11.610315ms)
  I0427 06:39:07.407135 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 11.644639ms)
  I0427 06:39:07.407162 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 12.134031ms)
  I0427 06:39:07.407164 25 proxy.go:558] (10) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 11.891397ms)
  I0427 06:39:07.413313 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 6.062181ms)
  I0427 06:39:07.414670 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 7.252678ms)
  I0427 06:39:07.414805 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 7.445539ms)
  I0427 06:39:07.414940 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 7.449536ms)
  I0427 06:39:07.414986 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 7.637344ms)
  I0427 06:39:07.416026 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 8.344843ms)
  I0427 06:39:07.416057 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.481629ms)
  I0427 06:39:07.416083 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 8.616338ms)
  I0427 06:39:07.416136 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 8.634036ms)
  I0427 06:39:07.416276 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.675414ms)
  I0427 06:39:07.417200 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 9.575138ms)
  I0427 06:39:07.417230 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 9.582345ms)
  I0427 06:39:07.417200 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 9.658105ms)
  I0427 06:39:07.417259 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 9.779761ms)
  I0427 06:39:07.418815 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 11.25203ms)
  I0427 06:39:07.419289 25 proxy.go:558] (11) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 11.660305ms)
  I0427 06:39:07.427172 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 7.820025ms)
  I0427 06:39:07.428577 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.82208ms)
  I0427 06:39:07.432130 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 11.968788ms)
  I0427 06:39:07.432853 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 13.002168ms)
  I0427 06:39:07.432842 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 13.023404ms)
  I0427 06:39:07.432919 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 13.143645ms)
  I0427 06:39:07.432953 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 13.005465ms)
  I0427 06:39:07.433059 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 13.425522ms)
  I0427 06:39:07.433084 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 13.086882ms)
  I0427 06:39:07.433804 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 14.094147ms)
  I0427 06:39:07.433857 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 13.982854ms)
  I0427 06:39:07.433902 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 14.222172ms)
  I0427 06:39:07.433971 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 13.895193ms)
  I0427 06:39:07.433913 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 14.415862ms)
  I0427 06:39:07.433949 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 14.042941ms)
  I0427 06:39:07.434897 25 proxy.go:558] (12) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 15.313242ms)
  I0427 06:39:07.440112 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 5.0588ms)
  I0427 06:39:07.440869 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 5.899647ms)
  I0427 06:39:07.443467 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.263991ms)
  I0427 06:39:07.443679 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.608657ms)
  I0427 06:39:07.445600 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 10.473896ms)
  I0427 06:39:07.445673 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 10.248561ms)
  I0427 06:39:07.446074 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 10.585525ms)
  I0427 06:39:07.446024 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 10.661426ms)
  I0427 06:39:07.446067 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 10.7504ms)
  I0427 06:39:07.446116 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 10.895459ms)
  I0427 06:39:07.446117 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 10.670946ms)
  I0427 06:39:07.446154 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 10.911825ms)
  I0427 06:39:07.446464 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 11.229859ms)
  I0427 06:39:07.447918 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 12.634465ms)
  I0427 06:39:07.449368 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 13.962943ms)
  I0427 06:39:07.450877 25 proxy.go:558] (13) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 15.520821ms)
  I0427 06:39:07.458619 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.0645ms)
  I0427 06:39:07.458740 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 7.299096ms)
  I0427 06:39:07.458641 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.377957ms)
  I0427 06:39:07.460461 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 9.316227ms)
  I0427 06:39:07.460443 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 9.128002ms)
  I0427 06:39:07.462239 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 10.359576ms)
  I0427 06:39:07.463174 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 11.354374ms)
  I0427 06:39:07.463289 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 11.495179ms)
  I0427 06:39:07.463345 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 11.870082ms)
  I0427 06:39:07.463356 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 11.600149ms)
  I0427 06:39:07.463377 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 11.427133ms)
  I0427 06:39:07.463386 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 11.728517ms)
  I0427 06:39:07.463395 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 11.792102ms)
  I0427 06:39:07.463415 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 11.949979ms)
  I0427 06:39:07.463431 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 11.635229ms)
  I0427 06:39:07.463425 25 proxy.go:558] (14) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 11.57459ms)
  I0427 06:39:07.471450 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 7.313637ms)
  I0427 06:39:07.471489 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 7.458075ms)
  I0427 06:39:07.471513 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 7.717638ms)
  I0427 06:39:07.472678 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.594792ms)
  I0427 06:39:07.473356 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 8.819637ms)
  I0427 06:39:07.473413 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 8.999978ms)
  I0427 06:39:07.473450 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 9.594443ms)
  I0427 06:39:07.475625 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 11.263234ms)
  I0427 06:39:07.475726 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 11.471575ms)
  I0427 06:39:07.477378 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 13.827233ms)
  I0427 06:39:07.478901 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 15.224075ms)
  I0427 06:39:07.478939 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 14.333697ms)
  I0427 06:39:07.479284 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 15.083564ms)
  I0427 06:39:07.479364 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 15.418249ms)
  I0427 06:39:07.479741 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 15.995416ms)
  I0427 06:39:07.480328 25 proxy.go:558] (15) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 15.64637ms)
  I0427 06:39:07.489098 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 8.663122ms)
  I0427 06:39:07.489125 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 8.598667ms)
  I0427 06:39:07.491016 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 10.494878ms)
  I0427 06:39:07.494990 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 14.304527ms)
  I0427 06:39:07.496245 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 15.634963ms)
  I0427 06:39:07.496405 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 15.711897ms)
  I0427 06:39:07.496435 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 15.697342ms)
  I0427 06:39:07.496409 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 15.645996ms)
  I0427 06:39:07.496611 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 15.963678ms)
  I0427 06:39:07.496716 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 16.076118ms)
  I0427 06:39:07.500148 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 19.461961ms)
  I0427 06:39:07.500325 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 19.836422ms)
  I0427 06:39:07.500650 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 19.926189ms)
  I0427 06:39:07.504526 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 23.740479ms)
  I0427 06:39:07.504553 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 23.973829ms)
  I0427 06:39:07.506675 25 proxy.go:558] (16) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 26.008627ms)
  I0427 06:39:07.519200 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 11.567123ms)
  I0427 06:39:07.520524 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 12.838367ms)
  I0427 06:39:07.521582 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 14.039726ms)
  I0427 06:39:07.521674 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 14.939339ms)
  I0427 06:39:07.522858 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 15.740286ms)
  I0427 06:39:07.523251 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 15.728956ms)
  I0427 06:39:07.523848 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 16.088917ms)
  I0427 06:39:07.524145 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 16.354905ms)
  I0427 06:39:07.524196 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 16.76434ms)
  I0427 06:39:07.524356 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 16.761481ms)
  I0427 06:39:07.524403 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 17.219933ms)
  I0427 06:39:07.524434 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 17.115308ms)
  I0427 06:39:07.525247 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 18.313415ms)
  I0427 06:39:07.525304 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 18.061857ms)
  I0427 06:39:07.526833 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 19.446721ms)
  I0427 06:39:07.527109 25 proxy.go:558] (17) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 19.372464ms)
  I0427 06:39:07.543114 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 14.854ms)
  I0427 06:39:07.543862 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 15.493558ms)
  I0427 06:39:07.543975 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 16.023356ms)
  I0427 06:39:07.544069 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 15.958632ms)
  I0427 06:39:07.544149 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 15.955406ms)
  I0427 06:39:07.544203 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 16.625942ms)
  I0427 06:39:07.544243 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 16.922196ms)
  I0427 06:39:07.544320 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 16.046713ms)
  I0427 06:39:07.544376 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 16.050243ms)
  I0427 06:39:07.550783 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 23.333553ms)
  I0427 06:39:07.550845 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 22.374289ms)
  I0427 06:39:07.550892 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 22.478901ms)
  I0427 06:39:07.550908 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 21.680362ms)
  I0427 06:39:07.550928 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 23.090633ms)
  I0427 06:39:07.550945 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 23.06608ms)
  I0427 06:39:07.550962 25 proxy.go:558] (18) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 22.957926ms)
  I0427 06:39:07.558809 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f/proxy/rewriteme">test</a> (200; 7.578306ms)
  I0427 06:39:07.561192 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:462/proxy/: tls qux (200; 9.807492ms)
  I0427 06:39:07.561322 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:443/proxy/tlsrewritem... (200; 9.968971ms)
  I0427 06:39:07.562884 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 11.210262ms)
  I0427 06:39:07.563356 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/https:proxy-service-vlsgw-bqk4f:460/proxy/: tls baz (200; 11.609585ms)
  I0427 06:39:07.563802 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:162/proxy/: bar (200; 12.128163ms)
  I0427 06:39:07.565543 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 14.251626ms)
  I0427 06:39:07.565764 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname2/proxy/: bar (200; 14.390323ms)
  I0427 06:39:07.565830 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname2/proxy/: bar (200; 14.427874ms)
  I0427 06:39:07.565883 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/services/proxy-service-vlsgw:portname1/proxy/: foo (200; 14.415434ms)
  I0427 06:39:07.565913 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">test<... (200; 14.420846ms)
  I0427 06:39:07.565965 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/proxy-service-vlsgw-bqk4f:160/proxy/: foo (200; 14.401233ms)
  I0427 06:39:07.566382 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/: <a href="/api/v1/namespaces/proxy-6967/pods/http:proxy-service-vlsgw-bqk4f:1080/proxy/rewriteme">... (200; 13.79429ms)
  I0427 06:39:07.566846 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname1/proxy/: tls baz (200; 15.411405ms)
  I0427 06:39:07.567661 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/services/http:proxy-service-vlsgw:portname1/proxy/: foo (200; 16.044523ms)
  I0427 06:39:07.569264 25 proxy.go:558] (19) /api/v1/namespaces/proxy-6967/services/https:proxy-service-vlsgw:tlsportname2/proxy/: tls qux (200; 17.669826ms)
  STEP: deleting ReplicationController proxy-service-vlsgw in namespace proxy-6967, will wait for the garbage collector to delete the pods @ 04/27/25 06:39:07.569
  I0427 06:39:07.632790 25 resources.go:139] Deleting ReplicationController proxy-service-vlsgw took: 7.091939ms
  I0427 06:39:07.733567 25 resources.go:163] Terminating ReplicationController proxy-service-vlsgw pods took: 100.776816ms
  I0427 06:39:10.534654 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6967" for this suite. @ 04/27/25 06:39:10.542
• [5.402 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 04/27/25 06:39:10.552
  I0427 06:39:10.552168 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 06:39:10.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:39:10.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:39:10.588
  STEP: Creating service test in namespace statefulset-5771 @ 04/27/25 06:39:10.593
  STEP: Creating a new StatefulSet @ 04/27/25 06:39:10.602
  I0427 06:39:10.615718 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0427 06:39:20.615333 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 06:39:20.615366 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0427 06:39:20.615376 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0427 06:39:20.623455 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-5771 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 06:39:20.712754 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 06:39:20.712826 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 06:39:20.712847 25 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 to registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.39-4 @ 04/27/25 06:39:30.723
  I0427 06:39:30.737223 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 04/27/25 06:39:30.737
  STEP: Updating Pods in reverse ordinal order @ 04/27/25 06:39:40.748
  I0427 06:39:40.752183 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-5771 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 06:39:40.890664 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 06:39:40.890714 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 06:39:40.891033 25 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 06:39:50.904267 25 wait.go:158] Waiting for StatefulSet statefulset-5771/ss2 to complete update
  STEP: Rolling back to a previous revision @ 04/27/25 06:40:00.905
  I0427 06:40:00.905994 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-5771 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 06:40:01.032434 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 06:40:01.032477 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 06:40:01.032491 25 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 06:40:11.046784 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 04/27/25 06:40:21.08
  I0427 06:40:21.085634 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-5771 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 06:40:21.253390 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 06:40:21.253510 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 06:40:21.253530 25 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 06:40:31.264105 25 statefulset.go:138] Deleting all statefulset in ns statefulset-5771
  I0427 06:40:31.266329 25 rest.go:152] Scaling statefulset ss2 to 0
  I0427 06:40:41.274685 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 06:40:41.276549 25 rest.go:90] Deleting statefulset ss2
  I0427 06:40:41.284829 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5771" for this suite. @ 04/27/25 06:40:41.289
• [90.741 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:401
  STEP: Creating a kubernetes client @ 04/27/25 06:40:41.292
  I0427 06:40:41.293006 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename namespaces @ 04/27/25 06:40:41.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:41.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:41.307
  STEP: Creating namespace "e2e-ns-q6595" @ 04/27/25 06:40:41.31
  I0427 06:40:41.318411 25 namespace.go:412] Namespace "e2e-ns-q6595-232" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-q6595-232" @ 04/27/25 06:40:41.318
  I0427 06:40:41.327767 25 namespace.go:435] Namespace "e2e-ns-q6595-232" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-q6595-232" @ 04/27/25 06:40:41.327
  I0427 06:40:41.335093 25 namespace.go:464] Namespace "e2e-ns-q6595-232" has []v1.FinalizerName{"kubernetes"}
  I0427 06:40:41.335216 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8629" for this suite. @ 04/27/25 06:40:41.39
  STEP: Destroying namespace "e2e-ns-q6595-232" for this suite. @ 04/27/25 06:40:41.394
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 04/27/25 06:40:41.398
  I0427 06:40:41.398888 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/27/25 06:40:41.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:41.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:41.413
  STEP: getting /apis @ 04/27/25 06:40:41.424
  STEP: getting /apis/admissionregistration.k8s.io @ 04/27/25 06:40:41.429
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/27/25 06:40:41.43
  STEP: creating @ 04/27/25 06:40:41.433
  STEP: getting @ 04/27/25 06:40:41.462
  STEP: listing @ 04/27/25 06:40:41.465
  STEP: watching @ 04/27/25 06:40:41.467
  I0427 06:40:41.467899 25 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 04/27/25 06:40:41.47
  STEP: updating @ 04/27/25 06:40:41.475
  I0427 06:40:41.482920 25 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 04/27/25 06:40:41.483
  STEP: patching /status @ 04/27/25 06:40:41.493
  STEP: updating /status @ 04/27/25 06:40:41.503
  STEP: deleting @ 04/27/25 06:40:41.514
  STEP: deleting a collection @ 04/27/25 06:40:41.524
  I0427 06:40:41.535991 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-697" for this suite. @ 04/27/25 06:40:41.543
• [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 04/27/25 06:40:41.547
  I0427 06:40:41.547758 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename containers @ 04/27/25 06:40:41.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:41.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:41.566
  I0427 06:40:43.591252 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1496" for this suite. @ 04/27/25 06:40:43.594
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/27/25 06:40:43.599
  I0427 06:40:43.599117 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename events @ 04/27/25 06:40:43.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:43.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:43.615
  STEP: creating a test event @ 04/27/25 06:40:43.618
  STEP: listing all events in all namespaces @ 04/27/25 06:40:43.622
  STEP: patching the test event @ 04/27/25 06:40:43.627
  STEP: fetching the test event @ 04/27/25 06:40:43.63
  STEP: updating the test event @ 04/27/25 06:40:43.633
  STEP: getting the test event @ 04/27/25 06:40:43.642
  STEP: deleting the test event @ 04/27/25 06:40:43.645
  STEP: listing all events in all namespaces @ 04/27/25 06:40:43.651
  I0427 06:40:43.655232 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2518" for this suite. @ 04/27/25 06:40:43.696
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/27/25 06:40:43.7
  I0427 06:40:43.700967 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:40:43.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:43.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:43.719
  STEP: Creating configMap with name projected-configmap-test-volume-map-6b846bb8-f46d-4f46-b587-8eb852a06832 @ 04/27/25 06:40:43.725
  STEP: Creating a pod to test consume configMaps @ 04/27/25 06:40:43.73
  STEP: Saw pod success @ 04/27/25 06:40:47.749
  I0427 06:40:47.753424 25 output.go:207] Trying to get logs from node node3 pod pod-projected-configmaps-7de1696f-e47b-41bd-99f2-af4bbebc8409 container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 06:40:47.76
  I0427 06:40:47.775928 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8476" for this suite. @ 04/27/25 06:40:47.783
• [4.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/27/25 06:40:47.791
  I0427 06:40:47.791114 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/27/25 06:40:47.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:47.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:47.813
  STEP: creating the policy @ 04/27/25 06:40:47.825
  STEP: waiting until the marker is denied @ 04/27/25 06:40:47.847
  STEP: testing a replicated Deployment to be allowed @ 04/27/25 06:40:48.465
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/27/25 06:40:48.483
  I0427 06:40:48.567053 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6131" for this suite. @ 04/27/25 06:40:48.583
• [0.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295
  STEP: Creating a kubernetes client @ 04/27/25 06:40:48.602
  I0427 06:40:48.602595 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:40:48.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:48.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:48.632
  STEP: Creating a pod to test downward api env vars @ 04/27/25 06:40:48.641
  STEP: Saw pod success @ 04/27/25 06:40:52.675
  I0427 06:40:52.677667 25 output.go:207] Trying to get logs from node node3 pod downward-api-35a4fdce-22d0-40c0-a5b2-18ae3225ec09 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 06:40:52.684
  I0427 06:40:52.694209 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8205" for this suite. @ 04/27/25 06:40:52.7
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 04/27/25 06:40:52.705
  I0427 06:40:52.705777 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 06:40:52.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:52.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:52.723
  I0427 06:40:52.729009 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/27/25 06:40:54.177
  I0427 06:40:54.177665 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6630 --namespace=crd-publish-openapi-6630 create -f -'
  I0427 06:40:54.681407 25 builder.go:146] stderr: ""
  I0427 06:40:54.681520 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9862-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0427 06:40:54.682212 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6630 --namespace=crd-publish-openapi-6630 delete e2e-test-crd-publish-openapi-9862-crds test-cr'
  I0427 06:40:54.965079 25 builder.go:146] stderr: ""
  I0427 06:40:54.965219 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9862-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0427 06:40:54.965376 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6630 --namespace=crd-publish-openapi-6630 apply -f -'
  I0427 06:40:55.130063 25 builder.go:146] stderr: ""
  I0427 06:40:55.130160 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9862-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0427 06:40:55.130235 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6630 --namespace=crd-publish-openapi-6630 delete e2e-test-crd-publish-openapi-9862-crds test-cr'
  I0427 06:40:55.273245 25 builder.go:146] stderr: ""
  I0427 06:40:55.273489 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9862-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/27/25 06:40:55.273
  I0427 06:40:55.273678 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-6630 explain e2e-test-crd-publish-openapi-9862-crds'
  I0427 06:40:55.426142 25 builder.go:146] stderr: ""
  I0427 06:40:55.426243 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-9862-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0427 06:40:56.678106 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6630" for this suite. @ 04/27/25 06:40:56.693
• [3.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008
  STEP: Creating a kubernetes client @ 04/27/25 06:40:56.704
  I0427 06:40:56.704827 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 06:40:56.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:40:56.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:40:56.734
  STEP: Creating a job @ 04/27/25 06:40:56.742
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/27/25 06:40:56.751
  STEP: patching /status @ 04/27/25 06:41:00.771
  STEP: updating /status @ 04/27/25 06:41:00.776
  STEP: get /status @ 04/27/25 06:41:00.782
  I0427 06:41:00.785221 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6367" for this suite. @ 04/27/25 06:41:00.791
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 04/27/25 06:41:00.796
  I0427 06:41:00.796577 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename fake-node @ 04/27/25 06:41:00.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:41:00.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:41:00.81
  STEP: Create "e2e-fake-node-hsdkm" @ 04/27/25 06:41:00.813
  STEP: Getting "e2e-fake-node-hsdkm" @ 04/27/25 06:41:00.817
  STEP: Patching "e2e-fake-node-hsdkm" @ 04/27/25 06:41:00.819
  STEP: Listing nodes with LabelSelector "e2e-fake-node-hsdkm=patched" @ 04/27/25 06:41:00.831
  STEP: Updating "e2e-fake-node-hsdkm" @ 04/27/25 06:41:00.841
  STEP: Delete "e2e-fake-node-hsdkm" @ 04/27/25 06:41:00.852
  STEP: Confirm deletion of "e2e-fake-node-hsdkm" @ 04/27/25 06:41:00.86
  I0427 06:41:00.863041 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-8899" for this suite. @ 04/27/25 06:41:00.866
• [0.076 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 04/27/25 06:41:00.872
  I0427 06:41:00.872355 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 06:41:00.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:41:00.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:41:00.885
  STEP: Creating pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865 @ 04/27/25 06:41:00.891
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 06:41:02.935
  I0427 06:41:02.937937 25 container_probe.go:1749] Initial restart count of pod liveness-68858442-86c1-415d-b47f-13595f8c50ef is 0
  I0427 06:41:02.941290 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:04.946181 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:06.949080 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:08.952784 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:10.956482 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:12.961751 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:14.965528 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:16.968849 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:18.972789 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:20.977604 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:22.981166 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:24.984905 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:26.987816 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:28.991395 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:30.996239 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:33.001364 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:35.004781 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:37.009002 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:39.012745 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:41.015409 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:43.019349 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:45.023151 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:47.027391 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:49.032335 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:51.035476 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:53.039657 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:55.043333 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:57.047201 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:41:59.050759 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:01.053699 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:03.059178 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:05.063169 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:07.066615 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:09.069643 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:11.072355 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:13.077855 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:15.082314 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:17.087222 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:19.090747 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:21.094266 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:23.097811 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:25.102382 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:27.106098 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:29.110379 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:31.114252 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:33.118430 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:35.123337 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:37.126828 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:39.130631 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:41.134321 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:43.138739 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:45.143682 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:47.147103 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:49.151067 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:51.155780 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:53.161161 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:55.164806 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:57.169898 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:42:59.173794 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:01.178892 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:03.183935 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:05.188639 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:07.193698 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:09.197917 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:11.201161 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:13.204504 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:15.208279 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:17.212075 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:19.214811 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:21.217863 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:23.221011 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:25.224711 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:27.228135 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:29.232231 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:31.235755 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:33.240084 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:35.243433 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:37.247420 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:39.250917 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:41.254968 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:43.258410 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:45.263737 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:47.267389 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:49.270932 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:51.273940 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:53.278321 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:55.283252 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:57.286770 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:43:59.289958 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:01.292698 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:03.296197 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:05.299867 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:07.304076 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:09.307865 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:11.311223 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:13.315876 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:15.319799 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:17.322760 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:19.325494 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:21.328795 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:23.332703 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:25.335402 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:27.340755 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:29.343690 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:31.349892 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:33.352732 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:35.355514 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:37.360150 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:39.363346 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:41.365915 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:43.369164 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:45.373016 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:47.375593 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:49.379397 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:51.382460 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:53.385841 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:55.388743 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:57.392368 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:44:59.397784 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  I0427 06:45:01.401388 25 container_probe.go:1759] Get pod liveness-68858442-86c1-415d-b47f-13595f8c50ef in namespace container-probe-5865
  STEP: deleting the pod @ 04/27/25 06:45:03.401
  I0427 06:45:03.413656 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5865" for this suite. @ 04/27/25 06:45:03.418
• [242.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799
  STEP: Creating a kubernetes client @ 04/27/25 06:45:03.425
  I0427 06:45:03.425825 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 06:45:03.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:45:03.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:45:03.447
  STEP: Creating service test in namespace statefulset-4982 @ 04/27/25 06:45:03.452
  STEP: Looking for a node to schedule stateful set and pod @ 04/27/25 06:45:03.457
  STEP: Creating pod with conflicting port in namespace statefulset-4982 @ 04/27/25 06:45:03.519
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4982 @ 04/27/25 06:45:03.53
  STEP: Creating statefulset with conflicting port in namespace statefulset-4982 @ 04/27/25 06:45:05.539
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4982 @ 04/27/25 06:45:05.543
  I0427 06:45:05.552867 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-4982, name: ss-0, uid: 4f3ea675-f432-4605-a584-f08445c3c51e, status phase: Pending. Waiting for statefulset controller to delete.
  I0427 06:45:05.565383 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-4982, name: ss-0, uid: 4f3ea675-f432-4605-a584-f08445c3c51e, status phase: Failed. Waiting for statefulset controller to delete.
  I0427 06:45:05.577148 25 statefulset.go:872] Observed stateful pod in namespace: statefulset-4982, name: ss-0, uid: 4f3ea675-f432-4605-a584-f08445c3c51e, status phase: Failed. Waiting for statefulset controller to delete.
  I0427 06:45:05.581472 25 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-4982
  STEP: Removing pod with conflicting port in namespace statefulset-4982 @ 04/27/25 06:45:05.581
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4982 and will be in running state @ 04/27/25 06:45:05.592
  I0427 06:45:07.600026 25 statefulset.go:138] Deleting all statefulset in ns statefulset-4982
  I0427 06:45:07.602494 25 rest.go:152] Scaling statefulset ss to 0
  I0427 06:45:17.612748 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 06:45:17.615173 25 rest.go:90] Deleting statefulset ss
  I0427 06:45:17.625937 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4982" for this suite. @ 04/27/25 06:45:17.629
• [14.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 04/27/25 06:45:17.633
  I0427 06:45:17.633848 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:45:17.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:45:17.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:45:17.646
  STEP: Setting up server cert @ 04/27/25 06:45:17.666
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:45:17.97
  STEP: Deploying the webhook pod @ 04/27/25 06:45:17.974
  STEP: Wait for the deployment to be ready @ 04/27/25 06:45:17.981
  I0427 06:45:17.986367 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0427 06:45:19.995420 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 6, 45, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 6, 45, 18, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 6, 45, 18, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 6, 45, 18, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5c9896898\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/27/25 06:45:21.998
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:45:22.006
  I0427 06:45:23.007115 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/27/25 06:45:23.047
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/27/25 06:45:23.071
  STEP: Deleting the collection of validation webhooks @ 04/27/25 06:45:23.092
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/27/25 06:45:23.112
  I0427 06:45:23.142528 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9223" for this suite. @ 04/27/25 06:45:23.146
  STEP: Destroying namespace "webhook-markers-9171" for this suite. @ 04/27/25 06:45:23.153
• [5.527 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/27/25 06:45:23.16
  I0427 06:45:23.160609 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 06:45:23.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:45:23.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:45:23.179
  STEP: Creating secret with name secret-test-80a1781d-6da1-446e-8014-041c742e33f6 @ 04/27/25 06:45:23.183
  STEP: Creating a pod to test consume secrets @ 04/27/25 06:45:23.187
  STEP: Saw pod success @ 04/27/25 06:45:27.206
  I0427 06:45:27.209067 25 output.go:207] Trying to get logs from node node1 pod pod-secrets-e508200b-78d1-42e0-afc2-076b26885c24 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 06:45:27.216
  I0427 06:45:27.227392 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4875" for this suite. @ 04/27/25 06:45:27.23
• [4.075 seconds]
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861
  STEP: Creating a kubernetes client @ 04/27/25 06:45:27.235
  I0427 06:45:27.235326 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 06:45:27.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:45:27.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:45:27.248
  STEP: Creating a job @ 04/27/25 06:45:27.251
  STEP: Ensuring active pods == parallelism @ 04/27/25 06:45:27.255
  STEP: Orphaning one of the Job's Pods @ 04/27/25 06:45:29.263
  I0427 06:45:29.773563 25 pod_client.go:173] Successfully updated pod "adopt-release-l6rjj"
  STEP: Checking that the Job readopts the Pod @ 04/27/25 06:45:29.773
  STEP: Removing the labels from the Job's Pod @ 04/27/25 06:45:31.783
  I0427 06:45:32.290087 25 pod_client.go:173] Successfully updated pod "adopt-release-l6rjj"
  STEP: Checking that the Job releases the Pod @ 04/27/25 06:45:32.29
  I0427 06:45:34.297380 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5909" for this suite. @ 04/27/25 06:45:34.303
• [7.072 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 04/27/25 06:45:34.307
  I0427 06:45:34.307852 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename taint-single-pod @ 04/27/25 06:45:34.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:45:34.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:45:34.326
  I0427 06:45:34.330370 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0427 06:46:34.331548 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0427 06:46:34.336769 25 taints.go:144] Starting informer...
  STEP: Starting pod... @ 04/27/25 06:46:34.336
  I0427 06:46:34.551507 25 taints.go:294] Pod is running on node1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/27/25 06:46:34.551
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/27/25 06:46:34.561
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/27/25 06:46:34.568
  I0427 06:46:34.568251 25 taints.go:313] Pod wasn't evicted. Proceeding
  I0427 06:46:34.568267 25 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/27/25 06:46:34.589
  STEP: Waiting some time to make sure that toleration time passed. @ 04/27/25 06:46:34.593
  I0427 06:47:49.596162 25 taints.go:329] Pod wasn't evicted. Test successful
  I0427 06:47:49.596481 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-3566" for this suite. @ 04/27/25 06:47:49.6
• [135.296 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678
  STEP: Creating a kubernetes client @ 04/27/25 06:47:49.604
  I0427 06:47:49.604094 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 06:47:49.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:47:49.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:47:49.617
  STEP: creating a ServiceAccount @ 04/27/25 06:47:49.619
  STEP: watching for the ServiceAccount to be added @ 04/27/25 06:47:49.624
  STEP: patching the ServiceAccount @ 04/27/25 06:47:49.626
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/27/25 06:47:49.63
  STEP: deleting the ServiceAccount @ 04/27/25 06:47:49.632
  I0427 06:47:49.639437 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-605" for this suite. @ 04/27/25 06:47:49.701
• [0.101 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/27/25 06:47:49.705
  I0427 06:47:49.705389 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/27/25 06:47:49.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:47:49.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:47:49.72
  STEP: Creating 50 configmaps @ 04/27/25 06:47:49.722
  STEP: Creating RC which spawns configmap-volume pods @ 04/27/25 06:47:49.96
  I0427 06:47:50.062205 25 resource.go:87] Pod name wrapped-volume-race-0487b19e-0528-4505-8a81-8c4cf7f43cda: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/27/25 06:47:50.062
  STEP: Creating RC which spawns configmap-volume pods @ 04/27/25 06:47:52.128
  I0427 06:47:52.136076 25 resource.go:87] Pod name wrapped-volume-race-35b54fe3-d6b3-477b-8e5b-df5b577dc2f1: Found 0 pods out of 5
  I0427 06:47:57.142442 25 resource.go:87] Pod name wrapped-volume-race-35b54fe3-d6b3-477b-8e5b-df5b577dc2f1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/27/25 06:47:57.142
  STEP: Creating RC which spawns configmap-volume pods @ 04/27/25 06:47:57.157
  I0427 06:47:57.167670 25 resource.go:87] Pod name wrapped-volume-race-b030db7e-fae8-4f4f-9d07-cb12738c509d: Found 1 pods out of 5
  I0427 06:48:02.173457 25 resource.go:87] Pod name wrapped-volume-race-b030db7e-fae8-4f4f-9d07-cb12738c509d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/27/25 06:48:02.173
  STEP: deleting ReplicationController wrapped-volume-race-b030db7e-fae8-4f4f-9d07-cb12738c509d in namespace emptydir-wrapper-3258, will wait for the garbage collector to delete the pods @ 04/27/25 06:48:02.184
  I0427 06:48:02.240601 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-b030db7e-fae8-4f4f-9d07-cb12738c509d took: 3.950124ms
  I0427 06:48:02.346776 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-b030db7e-fae8-4f4f-9d07-cb12738c509d pods took: 106.174322ms
  STEP: deleting ReplicationController wrapped-volume-race-35b54fe3-d6b3-477b-8e5b-df5b577dc2f1 in namespace emptydir-wrapper-3258, will wait for the garbage collector to delete the pods @ 04/27/25 06:48:02.946
  I0427 06:48:03.008200 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-35b54fe3-d6b3-477b-8e5b-df5b577dc2f1 took: 5.523922ms
  I0427 06:48:03.108873 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-35b54fe3-d6b3-477b-8e5b-df5b577dc2f1 pods took: 100.6709ms
  STEP: deleting ReplicationController wrapped-volume-race-0487b19e-0528-4505-8a81-8c4cf7f43cda in namespace emptydir-wrapper-3258, will wait for the garbage collector to delete the pods @ 04/27/25 06:48:04.009
  I0427 06:48:04.066214 25 resources.go:139] Deleting ReplicationController wrapped-volume-race-0487b19e-0528-4505-8a81-8c4cf7f43cda took: 4.15182ms
  I0427 06:48:04.167234 25 resources.go:163] Terminating ReplicationController wrapped-volume-race-0487b19e-0528-4505-8a81-8c4cf7f43cda pods took: 101.015077ms
  STEP: Cleaning up the configMaps @ 04/27/25 06:48:04.968
  I0427 06:48:05.107460 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3258" for this suite. @ 04/27/25 06:48:05.11
• [15.409 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/27/25 06:48:05.114
  I0427 06:48:05.114352 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replicaset @ 04/27/25 06:48:05.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:05.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:05.127
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/27/25 06:48:05.13
  I0427 06:48:05.137430 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0427 06:48:10.146507 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/27/25 06:48:10.146
  STEP: getting scale subresource @ 04/27/25 06:48:10.146
  STEP: updating a scale subresource @ 04/27/25 06:48:10.15
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/27/25 06:48:10.155
  STEP: Patch a scale subresource @ 04/27/25 06:48:10.159
  I0427 06:48:10.179772 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5493" for this suite. @ 04/27/25 06:48:10.185
• [5.084 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/27/25 06:48:10.198
  I0427 06:48:10.198746 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:48:10.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:10.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:10.223
  STEP: Creating configMap with name cm-test-opt-del-40d35124-68a8-465e-b9dc-034229a40378 @ 04/27/25 06:48:10.286
  STEP: Creating configMap with name cm-test-opt-upd-ab1a489a-d4fa-422e-9fbc-5042dc63859f @ 04/27/25 06:48:10.291
  STEP: Creating the pod @ 04/27/25 06:48:10.299
  STEP: Deleting configmap cm-test-opt-del-40d35124-68a8-465e-b9dc-034229a40378 @ 04/27/25 06:48:12.329
  STEP: Updating configmap cm-test-opt-upd-ab1a489a-d4fa-422e-9fbc-5042dc63859f @ 04/27/25 06:48:12.333
  STEP: Creating configMap with name cm-test-opt-create-874c5051-8632-45e0-bdb2-d9733fe80123 @ 04/27/25 06:48:12.336
  STEP: waiting to observe update in volume @ 04/27/25 06:48:12.338
  I0427 06:48:16.360672 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3862" for this suite. @ 04/27/25 06:48:16.364
• [6.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 04/27/25 06:48:16.369
  I0427 06:48:16.369528 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 06:48:16.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:16.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:16.379
  STEP: Creating a ResourceQuota with terminating scope @ 04/27/25 06:48:16.381
  STEP: Ensuring ResourceQuota status is calculated @ 04/27/25 06:48:16.384
  STEP: Creating a ResourceQuota with not terminating scope @ 04/27/25 06:48:18.389
  STEP: Ensuring ResourceQuota status is calculated @ 04/27/25 06:48:18.391
  STEP: Creating a long running pod @ 04/27/25 06:48:20.394
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/27/25 06:48:20.402
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/27/25 06:48:22.406
  STEP: Deleting the pod @ 04/27/25 06:48:24.41
  STEP: Ensuring resource quota status released the pod usage @ 04/27/25 06:48:24.417
  STEP: Creating a terminating pod @ 04/27/25 06:48:26.42
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/27/25 06:48:26.427
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/27/25 06:48:28.431
  STEP: Deleting the pod @ 04/27/25 06:48:30.434
  STEP: Ensuring resource quota status released the pod usage @ 04/27/25 06:48:30.44
  I0427 06:48:32.445237 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8277" for this suite. @ 04/27/25 06:48:32.449
• [16.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245
  STEP: Creating a kubernetes client @ 04/27/25 06:48:32.454
  I0427 06:48:32.454564 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:48:32.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:32.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:32.467
  STEP: Creating a pod to test downward api env vars @ 04/27/25 06:48:32.471
  STEP: Saw pod success @ 04/27/25 06:48:34.483
  I0427 06:48:34.486099 25 output.go:207] Trying to get logs from node node1 pod downward-api-81d06f08-7c09-4caa-9090-a0b92c751af4 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 06:48:34.49
  I0427 06:48:34.497392 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9151" for this suite. @ 04/27/25 06:48:34.5
• [2.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1631
  STEP: Creating a kubernetes client @ 04/27/25 06:48:34.504
  I0427 06:48:34.504321 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 06:48:34.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:34.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:34.513
  STEP: creating the pod @ 04/27/25 06:48:34.516
  I0427 06:48:34.516267 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 create -f -'
  I0427 06:48:34.619053 25 builder.go:146] stderr: ""
  I0427 06:48:34.619104 25 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/27/25 06:48:36.626
  I0427 06:48:36.626754 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 label pods pause testing-label=testing-label-value'
  I0427 06:48:36.675272 25 builder.go:146] stderr: ""
  I0427 06:48:36.675339 25 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/27/25 06:48:36.675
  I0427 06:48:36.675440 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 get pod pause -L testing-label'
  I0427 06:48:36.719164 25 builder.go:146] stderr: ""
  I0427 06:48:36.719209 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/27/25 06:48:36.719
  I0427 06:48:36.719281 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 label pods pause testing-label-'
  I0427 06:48:36.766619 25 builder.go:146] stderr: ""
  I0427 06:48:36.766675 25 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/27/25 06:48:36.766
  I0427 06:48:36.766757 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 get pod pause -L testing-label'
  I0427 06:48:36.816015 25 builder.go:146] stderr: ""
  I0427 06:48:36.816059 25 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/27/25 06:48:36.816
  I0427 06:48:36.816155 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 delete --grace-period=0 --force -f -'
  I0427 06:48:36.870624 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 06:48:36.870667 25 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0427 06:48:36.870775 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 get rc,svc -l name=pause --no-headers'
  I0427 06:48:36.917244 25 builder.go:146] stderr: "No resources found in kubectl-4336 namespace.\n"
  I0427 06:48:36.917512 25 builder.go:147] stdout: ""
  I0427 06:48:36.917591 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4336 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0427 06:48:36.961100 25 builder.go:146] stderr: ""
  I0427 06:48:36.961141 25 builder.go:147] stdout: ""
  I0427 06:48:36.961216 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4336" for this suite. @ 04/27/25 06:48:36.964
• [2.463 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 04/27/25 06:48:36.967
  I0427 06:48:36.967824 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:48:36.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:36.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:36.978
  STEP: Setting up server cert @ 04/27/25 06:48:36.99
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:48:37.093
  STEP: Deploying the webhook pod @ 04/27/25 06:48:37.096
  STEP: Wait for the deployment to be ready @ 04/27/25 06:48:37.103
  I0427 06:48:37.108545 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:48:39.117
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:48:39.123
  I0427 06:48:40.124513 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/27/25 06:48:40.129
  STEP: create a pod that should be denied by the webhook @ 04/27/25 06:48:40.137
  STEP: create a pod that causes the webhook to hang @ 04/27/25 06:48:40.143
  STEP: create a configmap that should be denied by the webhook @ 04/27/25 06:48:50.148
  STEP: create a configmap that should be admitted by the webhook @ 04/27/25 06:48:50.163
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/27/25 06:48:50.169
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/27/25 06:48:50.174
  STEP: create a namespace that bypass the webhook @ 04/27/25 06:48:50.179
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/27/25 06:48:50.185
  I0427 06:48:50.226175 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1303" for this suite. @ 04/27/25 06:48:50.231
  STEP: Destroying namespace "webhook-markers-5397" for this suite. @ 04/27/25 06:48:50.241
  STEP: Destroying namespace "exempted-namespace-4467" for this suite. @ 04/27/25 06:48:50.245
• [13.283 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 04/27/25 06:48:50.251
  I0427 06:48:50.251043 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:48:50.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:50.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:50.272
  STEP: Setting up server cert @ 04/27/25 06:48:50.347
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:48:50.597
  STEP: Deploying the webhook pod @ 04/27/25 06:48:50.601
  STEP: Wait for the deployment to be ready @ 04/27/25 06:48:50.607
  I0427 06:48:50.611532 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:48:52.619
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:48:52.623
  I0427 06:48:53.623884 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/27/25 06:48:53.628
  I0427 06:48:53.653693 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7922" for this suite. @ 04/27/25 06:48:53.657
  STEP: Destroying namespace "webhook-markers-8852" for this suite. @ 04/27/25 06:48:53.666
• [3.420 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908
  STEP: Creating a kubernetes client @ 04/27/25 06:48:53.67
  I0427 06:48:53.670824 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 06:48:53.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:48:53.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:48:53.687
  STEP: Creating service test in namespace statefulset-2027 @ 04/27/25 06:48:53.692
  STEP: Creating statefulset ss in namespace statefulset-2027 @ 04/27/25 06:48:53.698
  I0427 06:48:53.707587 25 wait.go:40] Found 0 stateful pods, waiting for 1
  I0427 06:49:03.711356 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/27/25 06:49:03.715
  STEP: updating a scale subresource @ 04/27/25 06:49:03.717
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/27/25 06:49:03.72
  STEP: Patch a scale subresource @ 04/27/25 06:49:03.723
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/27/25 06:49:03.729
  I0427 06:49:03.735826 25 statefulset.go:138] Deleting all statefulset in ns statefulset-2027
  I0427 06:49:03.738903 25 rest.go:152] Scaling statefulset ss to 0
  I0427 06:49:13.775011 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 06:49:13.777770 25 rest.go:90] Deleting statefulset ss
  I0427 06:49:13.785874 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2027" for this suite. @ 04/27/25 06:49:13.788
• [20.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934
  STEP: Creating a kubernetes client @ 04/27/25 06:49:13.791
  I0427 06:49:13.791665 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption @ 04/27/25 06:49:13.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:49:13.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:49:13.802
  I0427 06:49:13.811853 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0427 06:50:13.816366 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/27/25 06:50:13.819
  I0427 06:50:13.819034 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/27/25 06:50:13.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:50:13.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:50:13.828
  I0427 06:50:13.839069 25 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0427 06:50:13.840968 25 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 04/27/25 06:50:13.862
  STEP: Removing a custom resource @ 04/27/25 06:50:13.867
  STEP: Removing a custom resource @ 04/27/25 06:50:13.873
  I0427 06:50:13.878995 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9847" for this suite. @ 04/27/25 06:50:13.916
  I0427 06:50:13.919772 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3099" for this suite. @ 04/27/25 06:50:14.018
• [60.232 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/27/25 06:50:14.023
  I0427 06:50:14.023760 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-pred @ 04/27/25 06:50:14.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:50:14.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:50:14.033
  I0427 06:50:14.036401 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0427 06:50:14.120602 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0427 06:50:14.123083 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node1 before test
  I0427 06:50:14.125718 25 predicates.go:957] calico-node-5mcpm from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.125751 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:50:14.125761 25 predicates.go:957] metrics-server-74f6d6fdd5-pqsjn from kube-system started at 2025-04-27 06:46:34 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.125768 25 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0427 06:50:14.125775 25 predicates.go:957] node-local-dns-r5bs2 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.125782 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:50:14.125789 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-jqbpf from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:50:14.125796 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:50:14.125802 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 06:50:14.125810 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node2 before test
  I0427 06:50:14.128466 25 predicates.go:957] calico-kube-controllers-54cdc99cb-8qvqn from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.128491 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0427 06:50:14.128500 25 predicates.go:957] calico-node-9m6qt from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.128507 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:50:14.128515 25 predicates.go:957] kubernetes-dashboard-75c65df89-zttnz from kube-system started at 2025-04-27 02:46:29 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.128522 25 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0427 06:50:14.128529 25 predicates.go:957] node-local-dns-m7nj5 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.128536 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:50:14.128543 25 predicates.go:957] sonobuoy-e2e-job-919a1c48d6024b67 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:50:14.128550 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0427 06:50:14.128556 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:50:14.128564 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-6mvvk from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:50:14.128570 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:50:14.128577 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 06:50:14.128583 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node3 before test
  I0427 06:50:14.131233 25 predicates.go:957] calico-node-zs89m from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.131264 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 06:50:14.131274 25 predicates.go:957] coredns-75dd46b86b-vq9nh from kube-system started at 2025-04-27 02:46:22 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.131281 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0427 06:50:14.131289 25 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-fr2hb from kube-system started at 2025-04-27 06:46:34 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.131326 25 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0427 06:50:14.131335 25 predicates.go:957] node-local-dns-zkd98 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.131343 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 06:50:14.131350 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (1 container statuses recorded)
  I0427 06:50:14.131357 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0427 06:50:14.131365 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-l4m65 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 06:50:14.131371 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 06:50:14.131378 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node node1 @ 04/27/25 06:50:14.141
  STEP: verifying the node has the label node node2 @ 04/27/25 06:50:14.158
  STEP: verifying the node has the label node node3 @ 04/27/25 06:50:14.171
  I0427 06:50:14.228202 25 predicates.go:372] Pod calico-kube-controllers-54cdc99cb-8qvqn requesting resource cpu=0m on Node node2
  I0427 06:50:14.228242 25 predicates.go:372] Pod calico-node-5mcpm requesting resource cpu=250m on Node node1
  I0427 06:50:14.228256 25 predicates.go:372] Pod calico-node-9m6qt requesting resource cpu=250m on Node node2
  I0427 06:50:14.228268 25 predicates.go:372] Pod calico-node-zs89m requesting resource cpu=250m on Node node3
  I0427 06:50:14.228280 25 predicates.go:372] Pod coredns-75dd46b86b-vq9nh requesting resource cpu=100m on Node node3
  I0427 06:50:14.228292 25 predicates.go:372] Pod dashboard-metrics-scraper-65c7c4ffff-fr2hb requesting resource cpu=0m on Node node3
  I0427 06:50:14.228319 25 predicates.go:372] Pod kubernetes-dashboard-75c65df89-zttnz requesting resource cpu=0m on Node node2
  I0427 06:50:14.228331 25 predicates.go:372] Pod metrics-server-74f6d6fdd5-pqsjn requesting resource cpu=100m on Node node1
  I0427 06:50:14.228342 25 predicates.go:372] Pod node-local-dns-m7nj5 requesting resource cpu=25m on Node node2
  I0427 06:50:14.228354 25 predicates.go:372] Pod node-local-dns-r5bs2 requesting resource cpu=25m on Node node1
  I0427 06:50:14.228366 25 predicates.go:372] Pod node-local-dns-zkd98 requesting resource cpu=25m on Node node3
  I0427 06:50:14.228377 25 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node node3
  I0427 06:50:14.228416 25 predicates.go:372] Pod sonobuoy-e2e-job-919a1c48d6024b67 requesting resource cpu=0m on Node node2
  I0427 06:50:14.228433 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-6mvvk requesting resource cpu=0m on Node node2
  I0427 06:50:14.228479 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-jqbpf requesting resource cpu=0m on Node node1
  I0427 06:50:14.228492 25 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-l4m65 requesting resource cpu=0m on Node node3
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/27/25 06:50:14.228
  I0427 06:50:14.228542 25 predicates.go:382] Creating a pod which consumes cpu=2537m on Node node3
  I0427 06:50:14.240092 25 predicates.go:382] Creating a pod which consumes cpu=2537m on Node node1
  I0427 06:50:14.245162 25 predicates.go:382] Creating a pod which consumes cpu=2607m on Node node2
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/27/25 06:50:16.264
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e.183a1a338d0cf986], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5771/filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e to node3] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e.183a1a33ab2d93a1], Reason = [Pulled], Message = [Container image "registry.dev.rdev.tech:18093/sonobuoy/pause:3.10" already present on machine] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e.183a1a33abe8b6f3], Reason = [Created], Message = [Created container: filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e.183a1a33b0cc3dce], Reason = [Started], Message = [Started container filler-pod-49b29b7d-5bac-4cc0-b504-565f3fe65e7e] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb.183a1a338d437e20], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5771/filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb to node2] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb.183a1a33abdf3b08], Reason = [Pulled], Message = [Container image "registry.dev.rdev.tech:18093/sonobuoy/pause:3.10" already present on machine] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb.183a1a33ac9c5575], Reason = [Created], Message = [Created container: filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb.183a1a33b12a8a86], Reason = [Started], Message = [Started container filler-pod-dd8be30e-1d00-4d1e-a857-bfae8aed1fbb] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c.183a1a338d0fcd61], Reason = [Scheduled], Message = [Successfully assigned sched-pred-5771/filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c to node1] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c.183a1a33adac372d], Reason = [Pulled], Message = [Container image "registry.dev.rdev.tech:18093/sonobuoy/pause:3.10" already present on machine] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c.183a1a33ae9ba1be], Reason = [Created], Message = [Created container: filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c.183a1a33b38057f9], Reason = [Started], Message = [Started container filler-pod-e87c0d1c-146f-4591-b96b-21960b44605c] @ 04/27/25 06:50:16.267
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.183a1a34056181a3], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 04/27/25 06:50:16.276
  STEP: removing the label node off the node node2 @ 04/27/25 06:50:17.277
  STEP: verifying the node doesn't have the label node @ 04/27/25 06:50:17.284
  STEP: removing the label node off the node node3 @ 04/27/25 06:50:17.288
  STEP: verifying the node doesn't have the label node @ 04/27/25 06:50:17.296
  STEP: removing the label node off the node node1 @ 04/27/25 06:50:17.298
  STEP: verifying the node doesn't have the label node @ 04/27/25 06:50:17.309
  I0427 06:50:17.312144 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5771" for this suite. @ 04/27/25 06:50:17.32
• [3.301 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/27/25 06:50:17.325
  I0427 06:50:17.325251 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename limitrange @ 04/27/25 06:50:17.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:50:17.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:50:17.346
  STEP: Creating LimitRange "e2e-limitrange-92zh7" in namespace "limitrange-2014" @ 04/27/25 06:50:17.351
  STEP: Creating another limitRange in another namespace @ 04/27/25 06:50:17.357
  I0427 06:50:17.368408 25 limit_range.go:299] Namespace "e2e-limitrange-92zh7-4760" created
  I0427 06:50:17.368533 25 limit_range.go:300] Creating LimitRange "e2e-limitrange-92zh7" in namespace "e2e-limitrange-92zh7-4760"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-92zh7" @ 04/27/25 06:50:17.374
  I0427 06:50:17.380584 25 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-92zh7" in "limitrange-2014" namespace @ 04/27/25 06:50:17.38
  I0427 06:50:17.388529 25 limit_range.go:335] LimitRange "e2e-limitrange-92zh7" has been patched
  STEP: Delete LimitRange "e2e-limitrange-92zh7" by Collection with labelSelector: "e2e-limitrange-92zh7=patched" @ 04/27/25 06:50:17.388
  STEP: Confirm that the limitRange "e2e-limitrange-92zh7" has been deleted @ 04/27/25 06:50:17.396
  I0427 06:50:17.396502 25 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0427 06:50:17.399591 25 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-92zh7=patched"
  I0427 06:50:17.399655 25 limit_range.go:344] LimitRange "e2e-limitrange-92zh7" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-92zh7" @ 04/27/25 06:50:17.399
  I0427 06:50:17.403331 25 limit_range.go:350] Found 1 limitRange
  I0427 06:50:17.403439 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2014" for this suite. @ 04/27/25 06:50:17.418
  STEP: Destroying namespace "e2e-limitrange-92zh7-4760" for this suite. @ 04/27/25 06:50:17.425
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 04/27/25 06:50:17.433
  I0427 06:50:17.433504 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 06:50:17.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:50:17.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:50:17.456
  STEP: Counting existing ResourceQuota @ 04/27/25 06:50:17.461
  STEP: Creating a ResourceQuota @ 04/27/25 06:50:22.487
  STEP: Ensuring resource quota status is calculated @ 04/27/25 06:50:22.494
  STEP: Creating a Pod that fits quota @ 04/27/25 06:50:24.498
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/27/25 06:50:24.507
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/27/25 06:50:26.511
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/27/25 06:50:26.513
  STEP: Ensuring a pod cannot update its resource requirements @ 04/27/25 06:50:26.516
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/27/25 06:50:26.519
  STEP: Deleting the pod @ 04/27/25 06:50:28.523
  STEP: Ensuring resource quota status released the pod usage @ 04/27/25 06:50:28.53
  I0427 06:50:30.534221 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9927" for this suite. @ 04/27/25 06:50:30.537
• [13.107 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 04/27/25 06:50:30.54
  I0427 06:50:30.540974 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 06:50:30.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:50:30.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:50:30.55
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5856.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-5856.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 04/27/25 06:50:30.553
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5856.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5856.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/27/25 06:50:30.553
  STEP: creating a pod to probe /etc/hosts @ 04/27/25 06:50:30.553
  STEP: submitting the pod to kubernetes @ 04/27/25 06:50:30.553
  STEP: retrieving the pod @ 04/27/25 06:50:36.577
  STEP: looking for the results for each expected name from probers @ 04/27/25 06:50:36.581
  I0427 06:50:36.599708 25 dns_common.go:546] DNS probes using dns-5856/dns-test-6fa6ee5f-9579-4504-9d42-3da8835ba8fc succeeded

  STEP: deleting the pod @ 04/27/25 06:50:36.599
  I0427 06:50:36.611432 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5856" for this suite. @ 04/27/25 06:50:36.617
• [6.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 04/27/25 06:50:36.626
  I0427 06:50:36.626163 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 06:50:36.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:50:36.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:50:36.646
  STEP: Creating a test headless service @ 04/27/25 06:50:36.654
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local;sleep 1; done
   @ 04/27/25 06:50:36.661
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3394.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local;sleep 1; done
   @ 04/27/25 06:50:36.661
  STEP: creating a pod to probe DNS @ 04/27/25 06:50:36.661
  STEP: submitting the pod to kubernetes @ 04/27/25 06:50:36.661
  STEP: retrieving the pod @ 04/27/25 06:50:38.688
  STEP: looking for the results for each expected name from probers @ 04/27/25 06:50:38.692
  I0427 06:50:38.697523 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.707802 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.733816 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.742566 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.748425 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.755788 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.762285 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.768482 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:38.768562 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:50:38.785184 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:50:38.799356 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:50:38.816346 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:50:43.701092 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.706488 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.711515 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.717685 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.724348 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.730650 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.736255 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.742824 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:43.742934 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:50:43.753778 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:50:43.766275 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:50:43.778034 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:50:48.698094 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.700386 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.703478 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.705671 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.708281 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.710866 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.714521 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.717435 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:48.717479 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:50:48.721762 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:50:48.725391 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:50:48.731745 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:50:53.699497 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.705520 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.709689 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.712309 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.715576 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.719390 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.723342 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.727550 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:53.727598 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:50:53.732340 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:50:53.738290 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:50:53.745385 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:50:58.697507 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.699878 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.703136 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.706005 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.708116 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.710428 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.712979 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.715536 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:50:58.715577 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:50:58.721106 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:50:58.725491 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:50:58.729867 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:51:03.697842 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.700035 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.702150 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.704617 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.707886 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.710869 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.713430 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.716023 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:03.716070 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:51:03.720447 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:51:03.725796 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:51:03.731488 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:51:08.701639 25 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.705343 25 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.708589 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.713121 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.717642 25 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.721550 25 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.724881 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.728799 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local from pod dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127: the server could not find the requested resource (get pods dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127)
  I0427 06:51:08.728897 25 dns_common.go:506] Lookups using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3394.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3394.svc.cluster.local jessie_udp@dns-test-service-2.dns-3394.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3394.svc.cluster.local]

  I0427 06:51:08.735682 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 06:51:08.742033 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 06:51:08.749881 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 06:51:13.712954 25 dns_common.go:546] DNS probes using dns-3394/dns-test-c8dc7281-ce3b-45bc-a3a0-6a582c079127 succeeded

  STEP: deleting the pod @ 04/27/25 06:51:13.713
  STEP: deleting the test headless service @ 04/27/25 06:51:13.725
  I0427 06:51:13.739803 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3394" for this suite. @ 04/27/25 06:51:13.747
• [37.130 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 04/27/25 06:51:13.756
  I0427 06:51:13.756202 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:51:13.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:51:13.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:51:13.777
  STEP: Setting up server cert @ 04/27/25 06:51:13.807
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:51:14.003
  STEP: Deploying the webhook pod @ 04/27/25 06:51:14.006
  STEP: Wait for the deployment to be ready @ 04/27/25 06:51:14.017
  I0427 06:51:14.033290 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:51:16.041
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:51:16.047
  I0427 06:51:17.048643 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/27/25 06:51:17.054
  STEP: create the configmap with a random name @ 04/27/25 06:51:17.068
  STEP: verify the configmap is mutated @ 04/27/25 06:51:17.076
  STEP: create the configmap with 'skip-me' name @ 04/27/25 06:51:17.076
  I0427 06:51:17.106625 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7808" for this suite. @ 04/27/25 06:51:17.11
  STEP: Destroying namespace "webhook-markers-171" for this suite. @ 04/27/25 06:51:17.12
• [3.370 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/27/25 06:51:17.127
  I0427 06:51:17.127135 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:51:17.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:51:17.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:51:17.152
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/27/25 06:51:17.158
  STEP: Saw pod success @ 04/27/25 06:51:21.181
  I0427 06:51:21.183370 25 output.go:207] Trying to get logs from node node1 pod pod-b4e97a6c-3048-4c88-99ae-0e42529d9f8a container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:51:21.188
  I0427 06:51:21.200198 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3250" for this suite. @ 04/27/25 06:51:21.203
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 04/27/25 06:51:21.209
  I0427 06:51:21.209862 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 06:51:21.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:51:21.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:51:21.223
  STEP: Counting existing ResourceQuota @ 04/27/25 06:51:38.231
  STEP: Creating a ResourceQuota @ 04/27/25 06:51:43.235
  STEP: Ensuring resource quota status is calculated @ 04/27/25 06:51:43.239
  STEP: Creating a ConfigMap @ 04/27/25 06:51:45.243
  STEP: Ensuring resource quota status captures configMap creation @ 04/27/25 06:51:45.249
  STEP: Deleting a ConfigMap @ 04/27/25 06:51:47.253
  STEP: Ensuring resource quota status released usage @ 04/27/25 06:51:47.256
  I0427 06:51:49.260110 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6811" for this suite. @ 04/27/25 06:51:49.264
• [28.059 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 04/27/25 06:51:49.269
  I0427 06:51:49.269194 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pv @ 04/27/25 06:51:49.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:51:49.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:51:49.286
  STEP: Creating initial PV and PVC @ 04/27/25 06:51:49.291
  I0427 06:51:49.291763 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6178" @ 04/27/25 06:51:49.307
  STEP: Listing PVCs in namespace "pv-6178" @ 04/27/25 06:51:49.312
  STEP: Patching the PV "pv-6178-vchjx" @ 04/27/25 06:51:49.316
  STEP: Patching the PVC "pvc-wc6ps" @ 04/27/25 06:51:49.327
  STEP: Getting PV "pv-6178-vchjx" @ 04/27/25 06:51:49.335
  STEP: Getting PVC "pvc-wc6ps" @ 04/27/25 06:51:49.338
  STEP: Deleting PVC "pvc-wc6ps" @ 04/27/25 06:51:49.342
  STEP: Confirm deletion of PVC "pvc-wc6ps" @ 04/27/25 06:51:49.349
  STEP: Deleting PV "pv-6178-vchjx" @ 04/27/25 06:51:51.356
  STEP: Confirm deletion of PV "pv-6178-vchjx" @ 04/27/25 06:51:51.359
  STEP: Recreating another PV & PVC @ 04/27/25 06:51:53.366
  I0427 06:51:53.366948 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6178-s2tcj" @ 04/27/25 06:51:53.373
  STEP: Updating the PVC "pvc-8jvwb" @ 04/27/25 06:51:53.379
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-8jvwb=updated" @ 04/27/25 06:51:53.386
  STEP: Deleting PVC "pvc-8jvwb" via DeleteCollection @ 04/27/25 06:51:53.389
  STEP: Confirm deletion of PVC "pvc-8jvwb" @ 04/27/25 06:51:53.395
  STEP: Deleting PV "pv-6178-s2tcj" via DeleteCollection @ 04/27/25 06:51:55.41
  STEP: Confirm deletion of PV "pv-6178-s2tcj" @ 04/27/25 06:51:55.415
  I0427 06:51:57.424075 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0427 06:51:57.424115 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-8jvwb"
  I0427 06:51:57.426436 25 pv.go:193] Deleting PersistentVolume "pv-6178-s2tcj"
  I0427 06:51:57.429576 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6178" for this suite. @ 04/27/25 06:51:57.433
• [8.173 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/27/25 06:51:57.441
  I0427 06:51:57.441973 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename cronjob @ 04/27/25 06:51:57.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:51:57.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:51:57.462
  STEP: Creating a cronjob @ 04/27/25 06:51:57.467
  STEP: Ensuring more than one job is running at a time @ 04/27/25 06:51:57.476
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/27/25 06:53:01.479
  STEP: Removing cronjob @ 04/27/25 06:53:01.481
  I0427 06:53:01.484808 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2546" for this suite. @ 04/27/25 06:53:01.489
• [64.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 04/27/25 06:53:01.495
  I0427 06:53:01.495283 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:53:01.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:01.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:01.513
  STEP: Setting up server cert @ 04/27/25 06:53:01.537
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:53:01.723
  STEP: Deploying the webhook pod @ 04/27/25 06:53:01.727
  STEP: Wait for the deployment to be ready @ 04/27/25 06:53:01.736
  I0427 06:53:01.742460 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:53:03.75
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:53:03.756
  I0427 06:53:04.756173 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/27/25 06:53:04.762
  I0427 06:53:04.798166 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2869" for this suite. @ 04/27/25 06:53:04.803
  STEP: Destroying namespace "webhook-markers-7878" for this suite. @ 04/27/25 06:53:04.811
• [3.324 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/27/25 06:53:04.819
  I0427 06:53:04.819671 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 06:53:04.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:04.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:04.841
  I0427 06:53:04.852874 25 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0427 06:53:09.859096 25 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/27/25 06:53:09.859
  I0427 06:53:09.859173 25 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/27/25 06:53:09.865
  I0427 06:53:11.877619 25 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8546",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a56fcd9-8bdc-49f5-8d5d-92b16dcf9537",
      ResourceVersion: (string) (len=5) "34929",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881333589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-747c587b64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 06:53:11.883287 25 deployment.go:40] New ReplicaSet "test-cleanup-deployment-747c587b64" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-747c587b64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8546",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bf44eb4-16f4-449a-b4a0-caef214c60c7",
      ResourceVersion: (string) (len=5) "34919",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881333589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "747c587b64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "8a56fcd9-8bdc-49f5-8d5d-92b16dcf9537",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 61 35 36 66 63  64 39 2d 38 62 64 63 2d  |\"8a56fcd9-8bdc-|
              00000120  34 39 66 35 2d 38 64 35  64 2d 39 32 62 31 36 64  |49f5-8d5d-92b16d|
              00000130  63 66 39 35 33 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cf9537\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "747c587b64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "747c587b64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 06:53:11.890750 25 deployment.go:68] Pod "test-cleanup-deployment-747c587b64-5n5kx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-747c587b64-5n5kx",
      GenerateName: (string) (len=35) "test-cleanup-deployment-747c587b64-",
      Namespace: (string) (len=15) "deployment-8546",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c33e02a-2c26-4431-85ea-5099a0951e58",
      ResourceVersion: (string) (len=5) "34918",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881333589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "747c587b64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-747c587b64",
          UID: (types.UID) (len=36) "9bf44eb4-16f4-449a-b4a0-caef214c60c7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 62  66 34 34 65 62 34 2d 31  |d\":\"9bf44eb4-1|
              00000090  36 66 34 2d 34 34 39 61  2d 62 34 61 30 2d 63 61  |6f4-449a-b4a0-ca|
              000000a0  65 66 32 31 34 63 36 30  63 37 5c 22 7d 22 3a 7b  |ef214c60c7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 33 37 5c 22 7d 22  |2.20.166.137\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26kv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26kv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881333589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881333589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881333590,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=133) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost@sha256:291f9faa53606adffc37a52c7ef58bd74b742b1c49e68331bc481be521a3672b",
          ContainerID: (string) (len=77) "containerd://cedb8ae96f52be00bacfed37781dd7608e093e16a14473190c03b23a2031d574",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-26kv5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 06:53:11.893704 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8546" for this suite. @ 04/27/25 06:53:11.903
• [7.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 04/27/25 06:53:11.916
  I0427 06:53:11.916822 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename csinodes @ 04/27/25 06:53:11.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:11.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:11.934
  STEP: Creating initial csiNode "e2e-csinode-t5b47" @ 04/27/25 06:53:11.942
  STEP: Getting initial csiNode "e2e-csinode-t5b47" @ 04/27/25 06:53:11.946
  STEP: Patching initial csiNode: "e2e-csinode-t5b47" @ 04/27/25 06:53:11.949
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-t5b47=patched" @ 04/27/25 06:53:11.952
  STEP: Delete initial csiNode: "e2e-csinode-t5b47" @ 04/27/25 06:53:11.954
  STEP: Confirm deletion of csiNode "e2e-csinode-t5b47" @ 04/27/25 06:53:11.959
  STEP: Creating replacement csiNode "e2e-csinode-v5tt4" @ 04/27/25 06:53:11.962
  STEP: Getting replacement csiNode "e2e-csinode-v5tt4" @ 04/27/25 06:53:11.966
  STEP: Updating replacement csiNode "e2e-csinode-v5tt4" @ 04/27/25 06:53:11.969
  STEP: DeleteCollection of CSINodes with "e2e-csinode-v5tt4=updated" label @ 04/27/25 06:53:11.983
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-v5tt4=updated" @ 04/27/25 06:53:11.988
  I0427 06:53:11.991802 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-7499" for this suite. @ 04/27/25 06:53:12.002
• [0.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/27/25 06:53:12.007
  I0427 06:53:12.007696 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:53:12.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:12.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:12.023
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 06:53:12.028
  STEP: Saw pod success @ 04/27/25 06:53:16.045
  I0427 06:53:16.048285 25 output.go:207] Trying to get logs from node node3 pod downwardapi-volume-a89eb80c-9a60-4e1e-a2a5-a33e466a7928 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 06:53:16.056
  I0427 06:53:16.067839 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1746" for this suite. @ 04/27/25 06:53:16.071
• [4.068 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 04/27/25 06:53:16.075
  I0427 06:53:16.075616 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 06:53:16.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:16.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:16.087
  STEP: creating a replication controller @ 04/27/25 06:53:16.091
  I0427 06:53:16.091197 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 create -f -'
  I0427 06:53:16.177187 25 builder.go:146] stderr: ""
  I0427 06:53:16.177229 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/27/25 06:53:16.177
  I0427 06:53:16.177316 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 06:53:16.242589 25 builder.go:146] stderr: ""
  I0427 06:53:16.242631 25 builder.go:147] stdout: "update-demo-nautilus-qvcw6 update-demo-nautilus-vs25j "
  I0427 06:53:16.242675 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-qvcw6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:16.304478 25 builder.go:146] stderr: ""
  I0427 06:53:16.304554 25 builder.go:147] stdout: ""
  I0427 06:53:16.304576 25 kubectl.go:2509] update-demo-nautilus-qvcw6 is created but not running
  I0427 06:53:21.306043 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 06:53:21.379394 25 builder.go:146] stderr: ""
  I0427 06:53:21.379446 25 builder.go:147] stdout: "update-demo-nautilus-qvcw6 update-demo-nautilus-vs25j "
  I0427 06:53:21.379539 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-qvcw6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:21.449834 25 builder.go:146] stderr: ""
  I0427 06:53:21.449902 25 builder.go:147] stdout: "true"
  I0427 06:53:21.449959 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-qvcw6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 06:53:21.539932 25 builder.go:146] stderr: ""
  I0427 06:53:21.539994 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 06:53:21.540012 25 kubectl.go:2400] validating pod update-demo-nautilus-qvcw6
  I0427 06:53:21.552568 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 06:53:21.552658 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 06:53:21.552673 25 kubectl.go:2527] update-demo-nautilus-qvcw6 is verified up and running
  I0427 06:53:21.552718 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-vs25j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:21.616104 25 builder.go:146] stderr: ""
  I0427 06:53:21.616157 25 builder.go:147] stdout: "true"
  I0427 06:53:21.616214 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-vs25j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 06:53:21.673288 25 builder.go:146] stderr: ""
  I0427 06:53:21.673428 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 06:53:21.673443 25 kubectl.go:2400] validating pod update-demo-nautilus-vs25j
  I0427 06:53:21.683338 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 06:53:21.683408 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 06:53:21.683422 25 kubectl.go:2527] update-demo-nautilus-vs25j is verified up and running
  STEP: scaling down the replication controller @ 04/27/25 06:53:21.683
  I0427 06:53:21.685368 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0427 06:53:21.685435 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0427 06:53:22.756001 25 builder.go:146] stderr: ""
  I0427 06:53:22.756176 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/27/25 06:53:22.756
  I0427 06:53:22.756423 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 06:53:22.842689 25 builder.go:146] stderr: ""
  I0427 06:53:22.842732 25 builder.go:147] stdout: "update-demo-nautilus-vs25j "
  I0427 06:53:22.842808 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-vs25j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:22.929560 25 builder.go:146] stderr: ""
  I0427 06:53:22.929639 25 builder.go:147] stdout: "true"
  I0427 06:53:22.929691 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-vs25j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 06:53:23.004923 25 builder.go:146] stderr: ""
  I0427 06:53:23.004974 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 06:53:23.004990 25 kubectl.go:2400] validating pod update-demo-nautilus-vs25j
  I0427 06:53:23.011682 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 06:53:23.011755 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 06:53:23.011770 25 kubectl.go:2527] update-demo-nautilus-vs25j is verified up and running
  STEP: scaling up the replication controller @ 04/27/25 06:53:23.011
  I0427 06:53:23.013974 25 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0427 06:53:23.014048 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0427 06:53:24.149293 25 builder.go:146] stderr: ""
  I0427 06:53:24.149374 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/27/25 06:53:24.149
  I0427 06:53:24.149531 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 06:53:24.267662 25 builder.go:146] stderr: ""
  I0427 06:53:24.267835 25 builder.go:147] stdout: "update-demo-nautilus-pcdd2 update-demo-nautilus-vs25j "
  I0427 06:53:24.268003 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-pcdd2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:24.365649 25 builder.go:146] stderr: ""
  I0427 06:53:24.365711 25 builder.go:147] stdout: ""
  I0427 06:53:24.365773 25 kubectl.go:2509] update-demo-nautilus-pcdd2 is created but not running
  I0427 06:53:29.368852 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 06:53:29.412547 25 builder.go:146] stderr: ""
  I0427 06:53:29.412591 25 builder.go:147] stdout: "update-demo-nautilus-pcdd2 update-demo-nautilus-vs25j "
  I0427 06:53:29.412638 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-pcdd2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:29.454360 25 builder.go:146] stderr: ""
  I0427 06:53:29.454405 25 builder.go:147] stdout: "true"
  I0427 06:53:29.454444 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-pcdd2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 06:53:29.499852 25 builder.go:146] stderr: ""
  I0427 06:53:29.499884 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 06:53:29.499896 25 kubectl.go:2400] validating pod update-demo-nautilus-pcdd2
  I0427 06:53:29.503033 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 06:53:29.503088 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 06:53:29.503100 25 kubectl.go:2527] update-demo-nautilus-pcdd2 is verified up and running
  I0427 06:53:29.503161 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-vs25j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 06:53:29.548984 25 builder.go:146] stderr: ""
  I0427 06:53:29.549025 25 builder.go:147] stdout: "true"
  I0427 06:53:29.549068 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods update-demo-nautilus-vs25j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 06:53:29.592673 25 builder.go:146] stderr: ""
  I0427 06:53:29.592717 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 06:53:29.592730 25 kubectl.go:2400] validating pod update-demo-nautilus-vs25j
  I0427 06:53:29.595440 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 06:53:29.595501 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 06:53:29.595513 25 kubectl.go:2527] update-demo-nautilus-vs25j is verified up and running
  STEP: using delete to clean up resources @ 04/27/25 06:53:29.595
  I0427 06:53:29.595611 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 delete --grace-period=0 --force -f -'
  I0427 06:53:29.643211 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 06:53:29.643321 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0427 06:53:29.643407 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get rc,svc -l name=update-demo --no-headers'
  I0427 06:53:29.738059 25 builder.go:146] stderr: "No resources found in kubectl-9081 namespace.\n"
  I0427 06:53:29.738224 25 builder.go:147] stdout: ""
  I0427 06:53:29.738338 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-9081 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0427 06:53:29.852724 25 builder.go:146] stderr: ""
  I0427 06:53:29.852778 25 builder.go:147] stdout: ""
  I0427 06:53:29.852934 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9081" for this suite. @ 04/27/25 06:53:29.858
• [13.792 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/27/25 06:53:29.868
  I0427 06:53:29.868028 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename watch @ 04/27/25 06:53:29.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:29.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:29.893
  STEP: creating a watch on configmaps with a certain label @ 04/27/25 06:53:29.899
  STEP: creating a new configmap @ 04/27/25 06:53:29.902
  STEP: modifying the configmap once @ 04/27/25 06:53:29.908
  STEP: changing the label value of the configmap @ 04/27/25 06:53:29.917
  STEP: Expecting to observe a delete notification for the watched object @ 04/27/25 06:53:29.926
  I0427 06:53:29.926199 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3849  a7390a25-f81a-4a26-be5d-82b1de2363b9 35120 0 2025-04-27 06:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-27 06:53:29 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:53:29.926324 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3849  a7390a25-f81a-4a26-be5d-82b1de2363b9 35121 0 2025-04-27 06:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-27 06:53:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:53:29.926369 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3849  a7390a25-f81a-4a26-be5d-82b1de2363b9 35122 0 2025-04-27 06:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-27 06:53:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/27/25 06:53:29.926
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/27/25 06:53:29.934
  STEP: changing the label value of the configmap back @ 04/27/25 06:53:39.938
  STEP: modifying the configmap a third time @ 04/27/25 06:53:39.944
  STEP: deleting the configmap @ 04/27/25 06:53:39.954
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/27/25 06:53:39.96
  I0427 06:53:39.960127 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3849  a7390a25-f81a-4a26-be5d-82b1de2363b9 35192 0 2025-04-27 06:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-27 06:53:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:53:39.960209 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3849  a7390a25-f81a-4a26-be5d-82b1de2363b9 35193 0 2025-04-27 06:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-27 06:53:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:53:39.960245 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3849  a7390a25-f81a-4a26-be5d-82b1de2363b9 35194 0 2025-04-27 06:53:29 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-04-27 06:53:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:53:39.960333 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3849" for this suite. @ 04/27/25 06:53:39.966
• [10.104 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/27/25 06:53:39.972
  I0427 06:53:39.972234 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:53:39.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:53:39.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:53:39.988
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-38bf2658-a965-4969-88ec-d102b01db018 @ 04/27/25 06:53:40.067
  STEP: Creating the pod @ 04/27/25 06:53:40.07
  STEP: Updating configmap projected-configmap-test-upd-38bf2658-a965-4969-88ec-d102b01db018 @ 04/27/25 06:53:42.087
  STEP: waiting to observe update in volume @ 04/27/25 06:53:42.091
  I0427 06:54:56.330922 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4447" for this suite. @ 04/27/25 06:54:56.333
• [76.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/27/25 06:54:56.338
  I0427 06:54:56.338467 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/27/25 06:54:56.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:54:56.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:54:56.349
  I0427 06:54:56.352544 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:55:02.478628 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4626" for this suite. @ 04/27/25 06:55:02.481
• [6.147 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/27/25 06:55:02.485
  I0427 06:55:02.485324 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svc-latency @ 04/27/25 06:55:02.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:02.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:02.495
  I0427 06:55:02.497620 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2793 @ 04/27/25 06:55:02.498
  I0427 06:55:02.501099      25 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2793, replica count: 1
  I0427 06:55:03.552351      25 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:55:04.552555      25 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 06:55:04.658478 25 service_latency.go:356] Created: latency-svc-cjxk9
  I0427 06:55:04.667190 25 service_latency.go:363] Got endpoints: latency-svc-cjxk9 [14.278084ms]
  I0427 06:55:04.678192 25 service_latency.go:356] Created: latency-svc-56clx
  I0427 06:55:04.684394 25 service_latency.go:356] Created: latency-svc-fcf7c
  I0427 06:55:04.688639 25 service_latency.go:363] Got endpoints: latency-svc-56clx [20.957358ms]
  I0427 06:55:04.693872 25 service_latency.go:356] Created: latency-svc-2fgtn
  I0427 06:55:04.695998 25 service_latency.go:363] Got endpoints: latency-svc-fcf7c [28.270068ms]
  I0427 06:55:04.702070 25 service_latency.go:363] Got endpoints: latency-svc-2fgtn [33.954712ms]
  I0427 06:55:04.704467 25 service_latency.go:356] Created: latency-svc-k5d5g
  I0427 06:55:04.709343 25 service_latency.go:356] Created: latency-svc-6wkgc
  I0427 06:55:04.711024 25 service_latency.go:363] Got endpoints: latency-svc-k5d5g [42.851807ms]
  I0427 06:55:04.718609 25 service_latency.go:356] Created: latency-svc-7j4jz
  I0427 06:55:04.720936 25 service_latency.go:363] Got endpoints: latency-svc-6wkgc [52.892072ms]
  I0427 06:55:04.721003 25 service_latency.go:356] Created: latency-svc-982mm
  I0427 06:55:04.729657 25 service_latency.go:363] Got endpoints: latency-svc-7j4jz [61.366911ms]
  I0427 06:55:04.730785 25 service_latency.go:363] Got endpoints: latency-svc-982mm [61.902833ms]
  I0427 06:55:04.730931 25 service_latency.go:356] Created: latency-svc-z75c9
  I0427 06:55:04.735335 25 service_latency.go:363] Got endpoints: latency-svc-z75c9 [65.645973ms]
  I0427 06:55:04.737293 25 service_latency.go:356] Created: latency-svc-nt2l2
  I0427 06:55:04.739821 25 service_latency.go:363] Got endpoints: latency-svc-nt2l2 [70.074873ms]
  I0427 06:55:04.741239 25 service_latency.go:356] Created: latency-svc-rk6t8
  I0427 06:55:04.746191 25 service_latency.go:363] Got endpoints: latency-svc-rk6t8 [76.415468ms]
  I0427 06:55:04.751041 25 service_latency.go:356] Created: latency-svc-fctql
  I0427 06:55:04.753217 25 service_latency.go:356] Created: latency-svc-4dpp2
  I0427 06:55:04.761726 25 service_latency.go:356] Created: latency-svc-2mj4r
  I0427 06:55:04.763772 25 service_latency.go:363] Got endpoints: latency-svc-4dpp2 [93.948465ms]
  I0427 06:55:04.764082 25 service_latency.go:363] Got endpoints: latency-svc-fctql [94.286408ms]
  I0427 06:55:04.766763 25 service_latency.go:356] Created: latency-svc-txfw6
  I0427 06:55:04.769747 25 service_latency.go:363] Got endpoints: latency-svc-2mj4r [101.00882ms]
  I0427 06:55:04.776210 25 service_latency.go:363] Got endpoints: latency-svc-txfw6 [107.572012ms]
  I0427 06:55:04.780065 25 service_latency.go:356] Created: latency-svc-4g4w4
  I0427 06:55:04.783906 25 service_latency.go:356] Created: latency-svc-sknm8
  I0427 06:55:04.791007 25 service_latency.go:356] Created: latency-svc-9w2vm
  I0427 06:55:04.791086 25 service_latency.go:363] Got endpoints: latency-svc-4g4w4 [121.248422ms]
  I0427 06:55:04.791143 25 service_latency.go:363] Got endpoints: latency-svc-sknm8 [102.425181ms]
  I0427 06:55:04.796714 25 service_latency.go:363] Got endpoints: latency-svc-9w2vm [100.667322ms]
  I0427 06:55:04.800725 25 service_latency.go:356] Created: latency-svc-dcdmp
  I0427 06:55:04.805749 25 service_latency.go:363] Got endpoints: latency-svc-dcdmp [103.641385ms]
  I0427 06:55:04.811625 25 service_latency.go:356] Created: latency-svc-mg9sb
  I0427 06:55:04.814903 25 service_latency.go:356] Created: latency-svc-h9hpg
  I0427 06:55:04.818608 25 service_latency.go:363] Got endpoints: latency-svc-mg9sb [107.510991ms]
  I0427 06:55:04.822962 25 service_latency.go:363] Got endpoints: latency-svc-h9hpg [101.906012ms]
  I0427 06:55:04.823956 25 service_latency.go:356] Created: latency-svc-bsh58
  I0427 06:55:04.832069 25 service_latency.go:356] Created: latency-svc-ftlbf
  I0427 06:55:04.834048 25 service_latency.go:363] Got endpoints: latency-svc-bsh58 [104.330571ms]
  I0427 06:55:04.842056 25 service_latency.go:356] Created: latency-svc-2h7fm
  I0427 06:55:04.844170 25 service_latency.go:363] Got endpoints: latency-svc-ftlbf [113.327849ms]
  I0427 06:55:04.845902 25 service_latency.go:363] Got endpoints: latency-svc-2h7fm [110.517584ms]
  I0427 06:55:04.851988 25 service_latency.go:356] Created: latency-svc-mqvhl
  I0427 06:55:04.854507 25 service_latency.go:356] Created: latency-svc-kfslc
  I0427 06:55:04.858907 25 service_latency.go:363] Got endpoints: latency-svc-mqvhl [119.010979ms]
  I0427 06:55:04.861786 25 service_latency.go:363] Got endpoints: latency-svc-kfslc [115.545205ms]
  I0427 06:55:04.865697 25 service_latency.go:356] Created: latency-svc-th9qw
  I0427 06:55:04.869971 25 service_latency.go:363] Got endpoints: latency-svc-th9qw [106.155904ms]
  I0427 06:55:04.870237 25 service_latency.go:356] Created: latency-svc-4b9lw
  I0427 06:55:04.878884 25 service_latency.go:363] Got endpoints: latency-svc-4b9lw [114.767877ms]
  I0427 06:55:04.886477 25 service_latency.go:356] Created: latency-svc-46v4p
  I0427 06:55:04.888915 25 service_latency.go:356] Created: latency-svc-t858v
  I0427 06:55:04.893079 25 service_latency.go:363] Got endpoints: latency-svc-46v4p [116.826389ms]
  I0427 06:55:04.895410 25 service_latency.go:356] Created: latency-svc-fxq8w
  I0427 06:55:04.897876 25 service_latency.go:363] Got endpoints: latency-svc-t858v [106.752245ms]
  I0427 06:55:04.902188 25 service_latency.go:363] Got endpoints: latency-svc-fxq8w [111.011743ms]
  I0427 06:55:04.902382 25 service_latency.go:356] Created: latency-svc-mlqb4
  I0427 06:55:04.909093 25 service_latency.go:356] Created: latency-svc-xks5w
  I0427 06:55:04.911476 25 service_latency.go:363] Got endpoints: latency-svc-mlqb4 [114.714588ms]
  I0427 06:55:04.914720 25 service_latency.go:363] Got endpoints: latency-svc-xks5w [108.918974ms]
  I0427 06:55:04.917966 25 service_latency.go:356] Created: latency-svc-49pfh
  I0427 06:55:04.920258 25 service_latency.go:356] Created: latency-svc-6cb8w
  I0427 06:55:04.922589 25 service_latency.go:363] Got endpoints: latency-svc-49pfh [103.920326ms]
  I0427 06:55:04.930619 25 service_latency.go:363] Got endpoints: latency-svc-6cb8w [107.614331ms]
  I0427 06:55:04.931782 25 service_latency.go:356] Created: latency-svc-6qltn
  I0427 06:55:04.936408 25 service_latency.go:356] Created: latency-svc-ldfsd
  I0427 06:55:04.941044 25 service_latency.go:356] Created: latency-svc-2dhc7
  I0427 06:55:04.946846 25 service_latency.go:356] Created: latency-svc-gn6hg
  I0427 06:55:04.949379 25 service_latency.go:356] Created: latency-svc-d5xs7
  I0427 06:55:04.954669 25 service_latency.go:356] Created: latency-svc-hfmq7
  I0427 06:55:04.954729 25 service_latency.go:356] Created: latency-svc-cm9b9
  I0427 06:55:04.959081 25 service_latency.go:356] Created: latency-svc-h2gcz
  I0427 06:55:04.962677 25 service_latency.go:363] Got endpoints: latency-svc-6qltn [128.547195ms]
  I0427 06:55:04.966024 25 service_latency.go:356] Created: latency-svc-zlqc4
  I0427 06:55:04.969727 25 service_latency.go:356] Created: latency-svc-wj4ss
  I0427 06:55:04.976031 25 service_latency.go:356] Created: latency-svc-lcg74
  I0427 06:55:04.984467 25 service_latency.go:356] Created: latency-svc-99r6j
  I0427 06:55:04.986446 25 service_latency.go:356] Created: latency-svc-zx4vv
  I0427 06:55:04.988040 25 service_latency.go:356] Created: latency-svc-gvvwl
  I0427 06:55:04.994225 25 service_latency.go:356] Created: latency-svc-5glhl
  I0427 06:55:04.998866 25 service_latency.go:356] Created: latency-svc-mk9ql
  I0427 06:55:05.013646 25 service_latency.go:363] Got endpoints: latency-svc-ldfsd [169.399148ms]
  I0427 06:55:05.022414 25 service_latency.go:356] Created: latency-svc-7pzm8
  I0427 06:55:05.063545 25 service_latency.go:363] Got endpoints: latency-svc-2dhc7 [217.595338ms]
  I0427 06:55:05.071298 25 service_latency.go:356] Created: latency-svc-5vm56
  I0427 06:55:05.112757 25 service_latency.go:363] Got endpoints: latency-svc-gn6hg [253.798137ms]
  I0427 06:55:05.119300 25 service_latency.go:356] Created: latency-svc-fzlv5
  I0427 06:55:05.162835 25 service_latency.go:363] Got endpoints: latency-svc-d5xs7 [300.97183ms]
  I0427 06:55:05.170823 25 service_latency.go:356] Created: latency-svc-czm57
  I0427 06:55:05.214371 25 service_latency.go:363] Got endpoints: latency-svc-hfmq7 [344.360168ms]
  I0427 06:55:05.220232 25 service_latency.go:356] Created: latency-svc-nnqdk
  I0427 06:55:05.262539 25 service_latency.go:363] Got endpoints: latency-svc-cm9b9 [492.740242ms]
  I0427 06:55:05.269171 25 service_latency.go:356] Created: latency-svc-rhwgz
  I0427 06:55:05.313916 25 service_latency.go:363] Got endpoints: latency-svc-h2gcz [434.967246ms]
  I0427 06:55:05.319453 25 service_latency.go:356] Created: latency-svc-9k4fz
  I0427 06:55:05.362708 25 service_latency.go:363] Got endpoints: latency-svc-zlqc4 [469.58987ms]
  I0427 06:55:05.369784 25 service_latency.go:356] Created: latency-svc-97jg2
  I0427 06:55:05.414766 25 service_latency.go:363] Got endpoints: latency-svc-wj4ss [516.823149ms]
  I0427 06:55:05.421610 25 service_latency.go:356] Created: latency-svc-rrtp7
  I0427 06:55:05.464464 25 service_latency.go:363] Got endpoints: latency-svc-lcg74 [562.234464ms]
  I0427 06:55:05.472955 25 service_latency.go:356] Created: latency-svc-crbxt
  I0427 06:55:05.513922 25 service_latency.go:363] Got endpoints: latency-svc-zx4vv [602.407697ms]
  I0427 06:55:05.522497 25 service_latency.go:356] Created: latency-svc-fkgcj
  I0427 06:55:05.563512 25 service_latency.go:363] Got endpoints: latency-svc-99r6j [648.752369ms]
  I0427 06:55:05.572393 25 service_latency.go:356] Created: latency-svc-c4vd4
  I0427 06:55:05.618313 25 service_latency.go:363] Got endpoints: latency-svc-gvvwl [695.636217ms]
  I0427 06:55:05.626215 25 service_latency.go:356] Created: latency-svc-lq52g
  I0427 06:55:05.664721 25 service_latency.go:363] Got endpoints: latency-svc-5glhl [734.041109ms]
  I0427 06:55:05.674608 25 service_latency.go:356] Created: latency-svc-dvs4d
  I0427 06:55:05.712697 25 service_latency.go:363] Got endpoints: latency-svc-mk9ql [749.941571ms]
  I0427 06:55:05.724958 25 service_latency.go:356] Created: latency-svc-dzzdz
  I0427 06:55:05.762908 25 service_latency.go:363] Got endpoints: latency-svc-7pzm8 [749.21329ms]
  I0427 06:55:05.772983 25 service_latency.go:356] Created: latency-svc-dfd66
  I0427 06:55:05.813676 25 service_latency.go:363] Got endpoints: latency-svc-5vm56 [750.085497ms]
  I0427 06:55:05.824490 25 service_latency.go:356] Created: latency-svc-vkskm
  I0427 06:55:05.864500 25 service_latency.go:363] Got endpoints: latency-svc-fzlv5 [751.700447ms]
  I0427 06:55:05.870804 25 service_latency.go:356] Created: latency-svc-94479
  I0427 06:55:05.913358 25 service_latency.go:363] Got endpoints: latency-svc-czm57 [750.471511ms]
  I0427 06:55:05.928000 25 service_latency.go:356] Created: latency-svc-2mst2
  I0427 06:55:05.963932 25 service_latency.go:363] Got endpoints: latency-svc-nnqdk [749.508032ms]
  I0427 06:55:05.973599 25 service_latency.go:356] Created: latency-svc-vj5kc
  I0427 06:55:06.013537 25 service_latency.go:363] Got endpoints: latency-svc-rhwgz [750.947397ms]
  I0427 06:55:06.022074 25 service_latency.go:356] Created: latency-svc-bpjhx
  I0427 06:55:06.064519 25 service_latency.go:363] Got endpoints: latency-svc-9k4fz [750.551236ms]
  I0427 06:55:06.071797 25 service_latency.go:356] Created: latency-svc-mrg45
  I0427 06:55:06.114365 25 service_latency.go:363] Got endpoints: latency-svc-97jg2 [751.613816ms]
  I0427 06:55:06.120980 25 service_latency.go:356] Created: latency-svc-964sx
  I0427 06:55:06.162576 25 service_latency.go:363] Got endpoints: latency-svc-rrtp7 [747.687336ms]
  I0427 06:55:06.169076 25 service_latency.go:356] Created: latency-svc-fcqjm
  I0427 06:55:06.214295 25 service_latency.go:363] Got endpoints: latency-svc-crbxt [749.776735ms]
  I0427 06:55:06.223224 25 service_latency.go:356] Created: latency-svc-wmgz4
  I0427 06:55:06.263282 25 service_latency.go:363] Got endpoints: latency-svc-fkgcj [749.290738ms]
  I0427 06:55:06.269846 25 service_latency.go:356] Created: latency-svc-hrzjp
  I0427 06:55:06.312868 25 service_latency.go:363] Got endpoints: latency-svc-c4vd4 [749.311285ms]
  I0427 06:55:06.321579 25 service_latency.go:356] Created: latency-svc-j2d94
  I0427 06:55:06.362865 25 service_latency.go:363] Got endpoints: latency-svc-lq52g [744.507601ms]
  I0427 06:55:06.370097 25 service_latency.go:356] Created: latency-svc-rgz2n
  I0427 06:55:06.413103 25 service_latency.go:363] Got endpoints: latency-svc-dvs4d [748.285458ms]
  I0427 06:55:06.421495 25 service_latency.go:356] Created: latency-svc-dfbnt
  I0427 06:55:06.464008 25 service_latency.go:363] Got endpoints: latency-svc-dzzdz [751.269123ms]
  I0427 06:55:06.476411 25 service_latency.go:356] Created: latency-svc-79qn2
  I0427 06:55:06.513451 25 service_latency.go:363] Got endpoints: latency-svc-dfd66 [750.489396ms]
  I0427 06:55:06.520588 25 service_latency.go:356] Created: latency-svc-z4xw9
  I0427 06:55:06.564635 25 service_latency.go:363] Got endpoints: latency-svc-vkskm [750.920527ms]
  I0427 06:55:06.572436 25 service_latency.go:356] Created: latency-svc-6ttxq
  I0427 06:55:06.614675 25 service_latency.go:363] Got endpoints: latency-svc-94479 [750.137676ms]
  I0427 06:55:06.621389 25 service_latency.go:356] Created: latency-svc-v97x5
  I0427 06:55:06.664886 25 service_latency.go:363] Got endpoints: latency-svc-2mst2 [751.455225ms]
  I0427 06:55:06.671642 25 service_latency.go:356] Created: latency-svc-mkkfr
  I0427 06:55:06.714119 25 service_latency.go:363] Got endpoints: latency-svc-vj5kc [750.129137ms]
  I0427 06:55:06.722668 25 service_latency.go:356] Created: latency-svc-cvnj7
  I0427 06:55:06.765766 25 service_latency.go:363] Got endpoints: latency-svc-bpjhx [752.024801ms]
  I0427 06:55:06.773825 25 service_latency.go:356] Created: latency-svc-dgd97
  I0427 06:55:06.815766 25 service_latency.go:363] Got endpoints: latency-svc-mrg45 [750.997877ms]
  I0427 06:55:06.825554 25 service_latency.go:356] Created: latency-svc-42dp2
  I0427 06:55:06.865410 25 service_latency.go:363] Got endpoints: latency-svc-964sx [750.992423ms]
  I0427 06:55:06.875503 25 service_latency.go:356] Created: latency-svc-m5bp8
  I0427 06:55:06.913672 25 service_latency.go:363] Got endpoints: latency-svc-fcqjm [751.037062ms]
  I0427 06:55:06.922654 25 service_latency.go:356] Created: latency-svc-xskrj
  I0427 06:55:06.965965 25 service_latency.go:363] Got endpoints: latency-svc-wmgz4 [751.60787ms]
  I0427 06:55:06.975869 25 service_latency.go:356] Created: latency-svc-gqs5p
  I0427 06:55:07.015674 25 service_latency.go:363] Got endpoints: latency-svc-hrzjp [752.322405ms]
  I0427 06:55:07.024917 25 service_latency.go:356] Created: latency-svc-98pwv
  I0427 06:55:07.062882 25 service_latency.go:363] Got endpoints: latency-svc-j2d94 [749.966119ms]
  I0427 06:55:07.070121 25 service_latency.go:356] Created: latency-svc-xc6k5
  I0427 06:55:07.114472 25 service_latency.go:363] Got endpoints: latency-svc-rgz2n [751.548433ms]
  I0427 06:55:07.124244 25 service_latency.go:356] Created: latency-svc-xljjp
  I0427 06:55:07.163438 25 service_latency.go:363] Got endpoints: latency-svc-dfbnt [750.281998ms]
  I0427 06:55:07.172089 25 service_latency.go:356] Created: latency-svc-tzc2p
  I0427 06:55:07.213930 25 service_latency.go:363] Got endpoints: latency-svc-79qn2 [749.80874ms]
  I0427 06:55:07.223933 25 service_latency.go:356] Created: latency-svc-stbqm
  I0427 06:55:07.266198 25 service_latency.go:363] Got endpoints: latency-svc-z4xw9 [752.686813ms]
  I0427 06:55:07.274355 25 service_latency.go:356] Created: latency-svc-lmrf8
  I0427 06:55:07.314200 25 service_latency.go:363] Got endpoints: latency-svc-6ttxq [749.518913ms]
  I0427 06:55:07.326028 25 service_latency.go:356] Created: latency-svc-8267x
  I0427 06:55:07.363744 25 service_latency.go:363] Got endpoints: latency-svc-v97x5 [749.020303ms]
  I0427 06:55:07.374987 25 service_latency.go:356] Created: latency-svc-2xc4h
  I0427 06:55:07.414359 25 service_latency.go:363] Got endpoints: latency-svc-mkkfr [749.423793ms]
  I0427 06:55:07.424607 25 service_latency.go:356] Created: latency-svc-6gklt
  I0427 06:55:07.464517 25 service_latency.go:363] Got endpoints: latency-svc-cvnj7 [750.295948ms]
  I0427 06:55:07.473128 25 service_latency.go:356] Created: latency-svc-lntwv
  I0427 06:55:07.520703 25 service_latency.go:363] Got endpoints: latency-svc-dgd97 [754.86443ms]
  I0427 06:55:07.530187 25 service_latency.go:356] Created: latency-svc-dtr2k
  I0427 06:55:07.565796 25 service_latency.go:363] Got endpoints: latency-svc-42dp2 [749.907599ms]
  I0427 06:55:07.576187 25 service_latency.go:356] Created: latency-svc-zfv29
  I0427 06:55:07.615439 25 service_latency.go:363] Got endpoints: latency-svc-m5bp8 [749.986031ms]
  I0427 06:55:07.626811 25 service_latency.go:356] Created: latency-svc-d982q
  I0427 06:55:07.663758 25 service_latency.go:363] Got endpoints: latency-svc-xskrj [750.034034ms]
  I0427 06:55:07.675253 25 service_latency.go:356] Created: latency-svc-sjx2c
  I0427 06:55:07.715456 25 service_latency.go:363] Got endpoints: latency-svc-gqs5p [749.276457ms]
  I0427 06:55:07.726442 25 service_latency.go:356] Created: latency-svc-n5ckd
  I0427 06:55:07.765605 25 service_latency.go:363] Got endpoints: latency-svc-98pwv [749.869879ms]
  I0427 06:55:07.775513 25 service_latency.go:356] Created: latency-svc-nvgkm
  I0427 06:55:07.814685 25 service_latency.go:363] Got endpoints: latency-svc-xc6k5 [751.753271ms]
  I0427 06:55:07.829519 25 service_latency.go:356] Created: latency-svc-zrlwq
  I0427 06:55:07.868156 25 service_latency.go:363] Got endpoints: latency-svc-xljjp [753.628056ms]
  I0427 06:55:07.882879 25 service_latency.go:356] Created: latency-svc-gdg4x
  I0427 06:55:07.918230 25 service_latency.go:363] Got endpoints: latency-svc-tzc2p [754.740876ms]
  I0427 06:55:07.941210 25 service_latency.go:356] Created: latency-svc-2xhjb
  I0427 06:55:07.969800 25 service_latency.go:363] Got endpoints: latency-svc-stbqm [755.802877ms]
  I0427 06:55:07.985863 25 service_latency.go:356] Created: latency-svc-k5nqv
  I0427 06:55:08.023158 25 service_latency.go:363] Got endpoints: latency-svc-lmrf8 [756.795756ms]
  I0427 06:55:08.039489 25 service_latency.go:356] Created: latency-svc-ncwmt
  I0427 06:55:08.066526 25 service_latency.go:363] Got endpoints: latency-svc-8267x [752.257715ms]
  I0427 06:55:08.080753 25 service_latency.go:356] Created: latency-svc-qp87p
  I0427 06:55:08.115094 25 service_latency.go:363] Got endpoints: latency-svc-2xc4h [751.289641ms]
  I0427 06:55:08.125281 25 service_latency.go:356] Created: latency-svc-pfxkj
  I0427 06:55:08.166792 25 service_latency.go:363] Got endpoints: latency-svc-6gklt [752.374982ms]
  I0427 06:55:08.178554 25 service_latency.go:356] Created: latency-svc-85z5x
  I0427 06:55:08.215814 25 service_latency.go:363] Got endpoints: latency-svc-lntwv [751.241456ms]
  I0427 06:55:08.231844 25 service_latency.go:356] Created: latency-svc-86xwg
  I0427 06:55:08.266651 25 service_latency.go:363] Got endpoints: latency-svc-dtr2k [745.899766ms]
  I0427 06:55:08.280500 25 service_latency.go:356] Created: latency-svc-v4hln
  I0427 06:55:08.318934 25 service_latency.go:363] Got endpoints: latency-svc-zfv29 [753.07567ms]
  I0427 06:55:08.330479 25 service_latency.go:356] Created: latency-svc-tqql6
  I0427 06:55:08.366317 25 service_latency.go:363] Got endpoints: latency-svc-d982q [750.746335ms]
  I0427 06:55:08.379629 25 service_latency.go:356] Created: latency-svc-nqvb5
  I0427 06:55:08.414648 25 service_latency.go:363] Got endpoints: latency-svc-sjx2c [750.815637ms]
  I0427 06:55:08.426114 25 service_latency.go:356] Created: latency-svc-rxjhn
  I0427 06:55:08.465730 25 service_latency.go:363] Got endpoints: latency-svc-n5ckd [750.161667ms]
  I0427 06:55:08.479776 25 service_latency.go:356] Created: latency-svc-nns9l
  I0427 06:55:08.514988 25 service_latency.go:363] Got endpoints: latency-svc-nvgkm [749.31382ms]
  I0427 06:55:08.525822 25 service_latency.go:356] Created: latency-svc-k4qmb
  I0427 06:55:08.565770 25 service_latency.go:363] Got endpoints: latency-svc-zrlwq [751.02654ms]
  I0427 06:55:08.575222 25 service_latency.go:356] Created: latency-svc-ft92c
  I0427 06:55:08.617080 25 service_latency.go:363] Got endpoints: latency-svc-gdg4x [748.782198ms]
  I0427 06:55:08.629932 25 service_latency.go:356] Created: latency-svc-6zkbx
  I0427 06:55:08.666234 25 service_latency.go:363] Got endpoints: latency-svc-2xhjb [747.932564ms]
  I0427 06:55:08.682205 25 service_latency.go:356] Created: latency-svc-h57g4
  I0427 06:55:08.715110 25 service_latency.go:363] Got endpoints: latency-svc-k5nqv [745.191058ms]
  I0427 06:55:08.729316 25 service_latency.go:356] Created: latency-svc-hf986
  I0427 06:55:08.767209 25 service_latency.go:363] Got endpoints: latency-svc-ncwmt [743.976482ms]
  I0427 06:55:08.781190 25 service_latency.go:356] Created: latency-svc-dzrqg
  I0427 06:55:08.814736 25 service_latency.go:363] Got endpoints: latency-svc-qp87p [748.14783ms]
  I0427 06:55:08.825036 25 service_latency.go:356] Created: latency-svc-7848t
  I0427 06:55:08.866284 25 service_latency.go:363] Got endpoints: latency-svc-pfxkj [750.87673ms]
  I0427 06:55:08.878049 25 service_latency.go:356] Created: latency-svc-nlqsk
  I0427 06:55:08.914642 25 service_latency.go:363] Got endpoints: latency-svc-85z5x [747.767504ms]
  I0427 06:55:08.927074 25 service_latency.go:356] Created: latency-svc-sl69h
  I0427 06:55:08.967286 25 service_latency.go:363] Got endpoints: latency-svc-86xwg [751.321986ms]
  I0427 06:55:08.980737 25 service_latency.go:356] Created: latency-svc-8nc29
  I0427 06:55:09.017586 25 service_latency.go:363] Got endpoints: latency-svc-v4hln [750.864587ms]
  I0427 06:55:09.034937 25 service_latency.go:356] Created: latency-svc-nhbn8
  I0427 06:55:09.065181 25 service_latency.go:363] Got endpoints: latency-svc-tqql6 [746.182183ms]
  I0427 06:55:09.076816 25 service_latency.go:356] Created: latency-svc-5n8q9
  I0427 06:55:09.115987 25 service_latency.go:363] Got endpoints: latency-svc-nqvb5 [749.614811ms]
  I0427 06:55:09.127191 25 service_latency.go:356] Created: latency-svc-czdc4
  I0427 06:55:09.165986 25 service_latency.go:363] Got endpoints: latency-svc-rxjhn [751.275152ms]
  I0427 06:55:09.177481 25 service_latency.go:356] Created: latency-svc-pjp9n
  I0427 06:55:09.215625 25 service_latency.go:363] Got endpoints: latency-svc-nns9l [749.804206ms]
  I0427 06:55:09.226952 25 service_latency.go:356] Created: latency-svc-h4wbj
  I0427 06:55:09.265610 25 service_latency.go:363] Got endpoints: latency-svc-k4qmb [750.538678ms]
  I0427 06:55:09.276169 25 service_latency.go:356] Created: latency-svc-lbzjd
  I0427 06:55:09.316836 25 service_latency.go:363] Got endpoints: latency-svc-ft92c [750.988666ms]
  I0427 06:55:09.326811 25 service_latency.go:356] Created: latency-svc-tgcb2
  I0427 06:55:09.365468 25 service_latency.go:363] Got endpoints: latency-svc-6zkbx [748.309118ms]
  I0427 06:55:09.384080 25 service_latency.go:356] Created: latency-svc-bjnvz
  I0427 06:55:09.417394 25 service_latency.go:363] Got endpoints: latency-svc-h57g4 [751.039689ms]
  I0427 06:55:09.428985 25 service_latency.go:356] Created: latency-svc-k5d4b
  I0427 06:55:09.465006 25 service_latency.go:363] Got endpoints: latency-svc-hf986 [749.805161ms]
  I0427 06:55:09.479751 25 service_latency.go:356] Created: latency-svc-cg4kj
  I0427 06:55:09.517506 25 service_latency.go:363] Got endpoints: latency-svc-dzrqg [750.095885ms]
  I0427 06:55:09.529756 25 service_latency.go:356] Created: latency-svc-8mjgh
  I0427 06:55:09.565139 25 service_latency.go:363] Got endpoints: latency-svc-7848t [750.286294ms]
  I0427 06:55:09.577259 25 service_latency.go:356] Created: latency-svc-q29dm
  I0427 06:55:09.615569 25 service_latency.go:363] Got endpoints: latency-svc-nlqsk [749.154504ms]
  I0427 06:55:09.627076 25 service_latency.go:356] Created: latency-svc-2zf72
  I0427 06:55:09.665070 25 service_latency.go:363] Got endpoints: latency-svc-sl69h [750.348289ms]
  I0427 06:55:09.675745 25 service_latency.go:356] Created: latency-svc-4f7ld
  I0427 06:55:09.715893 25 service_latency.go:363] Got endpoints: latency-svc-8nc29 [748.48658ms]
  I0427 06:55:09.733434 25 service_latency.go:356] Created: latency-svc-cgqtp
  I0427 06:55:09.764913 25 service_latency.go:363] Got endpoints: latency-svc-nhbn8 [747.247019ms]
  I0427 06:55:09.776702 25 service_latency.go:356] Created: latency-svc-ft6xj
  I0427 06:55:09.816358 25 service_latency.go:363] Got endpoints: latency-svc-5n8q9 [751.062928ms]
  I0427 06:55:09.826806 25 service_latency.go:356] Created: latency-svc-nhjrx
  I0427 06:55:09.865173 25 service_latency.go:363] Got endpoints: latency-svc-czdc4 [749.072825ms]
  I0427 06:55:09.874254 25 service_latency.go:356] Created: latency-svc-zzgfl
  I0427 06:55:09.917198 25 service_latency.go:363] Got endpoints: latency-svc-pjp9n [751.146832ms]
  I0427 06:55:09.925522 25 service_latency.go:356] Created: latency-svc-9p2g4
  I0427 06:55:09.965935 25 service_latency.go:363] Got endpoints: latency-svc-h4wbj [750.221931ms]
  I0427 06:55:09.976858 25 service_latency.go:356] Created: latency-svc-h5ndk
  I0427 06:55:10.017550 25 service_latency.go:363] Got endpoints: latency-svc-lbzjd [751.879147ms]
  I0427 06:55:10.027342 25 service_latency.go:356] Created: latency-svc-rj296
  I0427 06:55:10.072110 25 service_latency.go:363] Got endpoints: latency-svc-tgcb2 [755.201528ms]
  I0427 06:55:10.083039 25 service_latency.go:356] Created: latency-svc-kt5xd
  I0427 06:55:10.114035 25 service_latency.go:363] Got endpoints: latency-svc-bjnvz [748.480129ms]
  I0427 06:55:10.124170 25 service_latency.go:356] Created: latency-svc-qqchc
  I0427 06:55:10.166393 25 service_latency.go:363] Got endpoints: latency-svc-k5d4b [748.921515ms]
  I0427 06:55:10.175138 25 service_latency.go:356] Created: latency-svc-8kjn6
  I0427 06:55:10.217077 25 service_latency.go:363] Got endpoints: latency-svc-cg4kj [751.946437ms]
  I0427 06:55:10.229972 25 service_latency.go:356] Created: latency-svc-mfvx5
  I0427 06:55:10.265622 25 service_latency.go:363] Got endpoints: latency-svc-8mjgh [748.02358ms]
  I0427 06:55:10.279507 25 service_latency.go:356] Created: latency-svc-4rdwx
  I0427 06:55:10.314631 25 service_latency.go:363] Got endpoints: latency-svc-q29dm [749.327209ms]
  I0427 06:55:10.324699 25 service_latency.go:356] Created: latency-svc-vzcv4
  I0427 06:55:10.367499 25 service_latency.go:363] Got endpoints: latency-svc-2zf72 [751.793552ms]
  I0427 06:55:10.377185 25 service_latency.go:356] Created: latency-svc-nt4gg
  I0427 06:55:10.415492 25 service_latency.go:363] Got endpoints: latency-svc-4f7ld [750.314482ms]
  I0427 06:55:10.428649 25 service_latency.go:356] Created: latency-svc-dx2bv
  I0427 06:55:10.463481 25 service_latency.go:363] Got endpoints: latency-svc-cgqtp [747.482137ms]
  I0427 06:55:10.476792 25 service_latency.go:356] Created: latency-svc-7c8t9
  I0427 06:55:10.514274 25 service_latency.go:363] Got endpoints: latency-svc-ft6xj [749.289706ms]
  I0427 06:55:10.526195 25 service_latency.go:356] Created: latency-svc-z5hsl
  I0427 06:55:10.563864 25 service_latency.go:363] Got endpoints: latency-svc-nhjrx [747.280437ms]
  I0427 06:55:10.575068 25 service_latency.go:356] Created: latency-svc-hltnt
  I0427 06:55:10.614771 25 service_latency.go:363] Got endpoints: latency-svc-zzgfl [749.495493ms]
  I0427 06:55:10.629131 25 service_latency.go:356] Created: latency-svc-9w9cl
  I0427 06:55:10.663955 25 service_latency.go:363] Got endpoints: latency-svc-9p2g4 [746.702263ms]
  I0427 06:55:10.674185 25 service_latency.go:356] Created: latency-svc-ldlcw
  I0427 06:55:10.715082 25 service_latency.go:363] Got endpoints: latency-svc-h5ndk [749.07804ms]
  I0427 06:55:10.728192 25 service_latency.go:356] Created: latency-svc-wkhhh
  I0427 06:55:10.766878 25 service_latency.go:363] Got endpoints: latency-svc-rj296 [749.246878ms]
  I0427 06:55:10.780355 25 service_latency.go:356] Created: latency-svc-n59lg
  I0427 06:55:10.819833 25 service_latency.go:363] Got endpoints: latency-svc-kt5xd [747.673162ms]
  I0427 06:55:10.840004 25 service_latency.go:356] Created: latency-svc-wj95d
  I0427 06:55:10.865353 25 service_latency.go:363] Got endpoints: latency-svc-qqchc [751.210581ms]
  I0427 06:55:10.878480 25 service_latency.go:356] Created: latency-svc-lc26x
  I0427 06:55:10.913768 25 service_latency.go:363] Got endpoints: latency-svc-8kjn6 [747.265094ms]
  I0427 06:55:10.926793 25 service_latency.go:356] Created: latency-svc-x69pd
  I0427 06:55:10.965927 25 service_latency.go:363] Got endpoints: latency-svc-mfvx5 [748.792744ms]
  I0427 06:55:10.980093 25 service_latency.go:356] Created: latency-svc-slr2d
  I0427 06:55:11.015387 25 service_latency.go:363] Got endpoints: latency-svc-4rdwx [749.694885ms]
  I0427 06:55:11.030041 25 service_latency.go:356] Created: latency-svc-j95td
  I0427 06:55:11.067120 25 service_latency.go:363] Got endpoints: latency-svc-vzcv4 [752.436352ms]
  I0427 06:55:11.079738 25 service_latency.go:356] Created: latency-svc-x46sc
  I0427 06:55:11.116237 25 service_latency.go:363] Got endpoints: latency-svc-nt4gg [748.659483ms]
  I0427 06:55:11.128403 25 service_latency.go:356] Created: latency-svc-v6dvt
  I0427 06:55:11.168677 25 service_latency.go:363] Got endpoints: latency-svc-dx2bv [753.074432ms]
  I0427 06:55:11.183209 25 service_latency.go:356] Created: latency-svc-9ftdz
  I0427 06:55:11.219861 25 service_latency.go:363] Got endpoints: latency-svc-7c8t9 [756.145565ms]
  I0427 06:55:11.234887 25 service_latency.go:356] Created: latency-svc-w47wz
  I0427 06:55:11.263740 25 service_latency.go:363] Got endpoints: latency-svc-z5hsl [749.397076ms]
  I0427 06:55:11.283740 25 service_latency.go:356] Created: latency-svc-24z97
  I0427 06:55:11.314764 25 service_latency.go:363] Got endpoints: latency-svc-hltnt [750.772014ms]
  I0427 06:55:11.326720 25 service_latency.go:356] Created: latency-svc-45pdz
  I0427 06:55:11.365787 25 service_latency.go:363] Got endpoints: latency-svc-9w9cl [750.959052ms]
  I0427 06:55:11.374008 25 service_latency.go:356] Created: latency-svc-7jtdh
  I0427 06:55:11.414060 25 service_latency.go:363] Got endpoints: latency-svc-ldlcw [750.039272ms]
  I0427 06:55:11.429807 25 service_latency.go:356] Created: latency-svc-kmbsm
  I0427 06:55:11.463735 25 service_latency.go:363] Got endpoints: latency-svc-wkhhh [748.558395ms]
  I0427 06:55:11.476558 25 service_latency.go:356] Created: latency-svc-5hjth
  I0427 06:55:11.514685 25 service_latency.go:363] Got endpoints: latency-svc-n59lg [747.713526ms]
  I0427 06:55:11.526430 25 service_latency.go:356] Created: latency-svc-nmtfw
  I0427 06:55:11.566479 25 service_latency.go:363] Got endpoints: latency-svc-wj95d [746.573314ms]
  I0427 06:55:11.581174 25 service_latency.go:356] Created: latency-svc-b8r28
  I0427 06:55:11.614407 25 service_latency.go:363] Got endpoints: latency-svc-lc26x [748.987641ms]
  I0427 06:55:11.626625 25 service_latency.go:356] Created: latency-svc-m28xd
  I0427 06:55:11.666661 25 service_latency.go:363] Got endpoints: latency-svc-x69pd [752.833238ms]
  I0427 06:55:11.678458 25 service_latency.go:356] Created: latency-svc-qvntq
  I0427 06:55:11.713824 25 service_latency.go:363] Got endpoints: latency-svc-slr2d [747.835636ms]
  I0427 06:55:11.723367 25 service_latency.go:356] Created: latency-svc-kxlk5
  I0427 06:55:11.764514 25 service_latency.go:363] Got endpoints: latency-svc-j95td [749.046343ms]
  I0427 06:55:11.774155 25 service_latency.go:356] Created: latency-svc-tfsxd
  I0427 06:55:11.814598 25 service_latency.go:363] Got endpoints: latency-svc-x46sc [747.426097ms]
  I0427 06:55:11.825419 25 service_latency.go:356] Created: latency-svc-b9w5x
  I0427 06:55:11.864632 25 service_latency.go:363] Got endpoints: latency-svc-v6dvt [748.225606ms]
  I0427 06:55:11.874870 25 service_latency.go:356] Created: latency-svc-qrtws
  I0427 06:55:11.918667 25 service_latency.go:363] Got endpoints: latency-svc-9ftdz [749.906477ms]
  I0427 06:55:11.933290 25 service_latency.go:356] Created: latency-svc-pg8zb
  I0427 06:55:11.967562 25 service_latency.go:363] Got endpoints: latency-svc-w47wz [747.627893ms]
  I0427 06:55:11.976342 25 service_latency.go:356] Created: latency-svc-7tljw
  I0427 06:55:12.014204 25 service_latency.go:363] Got endpoints: latency-svc-24z97 [750.385326ms]
  I0427 06:55:12.028641 25 service_latency.go:356] Created: latency-svc-mrwgt
  I0427 06:55:12.063748 25 service_latency.go:363] Got endpoints: latency-svc-45pdz [748.910465ms]
  I0427 06:55:12.075492 25 service_latency.go:356] Created: latency-svc-fds92
  I0427 06:55:12.114932 25 service_latency.go:363] Got endpoints: latency-svc-7jtdh [749.076284ms]
  I0427 06:55:12.127977 25 service_latency.go:356] Created: latency-svc-hbb4b
  I0427 06:55:12.164858 25 service_latency.go:363] Got endpoints: latency-svc-kmbsm [750.559897ms]
  I0427 06:55:12.178577 25 service_latency.go:356] Created: latency-svc-gq9v7
  I0427 06:55:12.214486 25 service_latency.go:363] Got endpoints: latency-svc-5hjth [750.695845ms]
  I0427 06:55:12.226697 25 service_latency.go:356] Created: latency-svc-nlgwv
  I0427 06:55:12.268375 25 service_latency.go:363] Got endpoints: latency-svc-nmtfw [753.619628ms]
  I0427 06:55:12.283024 25 service_latency.go:356] Created: latency-svc-t6pcd
  I0427 06:55:12.314623 25 service_latency.go:363] Got endpoints: latency-svc-b8r28 [748.083693ms]
  I0427 06:55:12.325474 25 service_latency.go:356] Created: latency-svc-7rsmj
  I0427 06:55:12.367118 25 service_latency.go:363] Got endpoints: latency-svc-m28xd [752.360405ms]
  I0427 06:55:12.377149 25 service_latency.go:356] Created: latency-svc-n7hb2
  I0427 06:55:12.415606 25 service_latency.go:363] Got endpoints: latency-svc-qvntq [748.871708ms]
  I0427 06:55:12.425325 25 service_latency.go:356] Created: latency-svc-4rddv
  I0427 06:55:12.467844 25 service_latency.go:363] Got endpoints: latency-svc-kxlk5 [753.916836ms]
  I0427 06:55:12.481460 25 service_latency.go:356] Created: latency-svc-jjmmx
  I0427 06:55:12.516819 25 service_latency.go:363] Got endpoints: latency-svc-tfsxd [752.246158ms]
  I0427 06:55:12.565043 25 service_latency.go:363] Got endpoints: latency-svc-b9w5x [750.32058ms]
  I0427 06:55:12.615049 25 service_latency.go:363] Got endpoints: latency-svc-qrtws [750.325807ms]
  I0427 06:55:12.664719 25 service_latency.go:363] Got endpoints: latency-svc-pg8zb [745.974521ms]
  I0427 06:55:12.713636 25 service_latency.go:363] Got endpoints: latency-svc-7tljw [746.012332ms]
  I0427 06:55:12.765428 25 service_latency.go:363] Got endpoints: latency-svc-mrwgt [751.090036ms]
  I0427 06:55:12.815938 25 service_latency.go:363] Got endpoints: latency-svc-fds92 [752.123671ms]
  I0427 06:55:12.866703 25 service_latency.go:363] Got endpoints: latency-svc-hbb4b [751.695345ms]
  I0427 06:55:12.913920 25 service_latency.go:363] Got endpoints: latency-svc-gq9v7 [748.977969ms]
  I0427 06:55:12.965832 25 service_latency.go:363] Got endpoints: latency-svc-nlgwv [751.263601ms]
  I0427 06:55:13.016445 25 service_latency.go:363] Got endpoints: latency-svc-t6pcd [747.99287ms]
  I0427 06:55:13.067410 25 service_latency.go:363] Got endpoints: latency-svc-7rsmj [752.696102ms]
  I0427 06:55:13.113947 25 service_latency.go:363] Got endpoints: latency-svc-n7hb2 [746.771432ms]
  I0427 06:55:13.166531 25 service_latency.go:363] Got endpoints: latency-svc-4rddv [750.867655ms]
  I0427 06:55:13.213414 25 service_latency.go:363] Got endpoints: latency-svc-jjmmx [745.420438ms]
  I0427 06:55:13.213801 25 service_latency.go:114] Latencies: [20.957358ms 28.270068ms 33.954712ms 42.851807ms 52.892072ms 61.366911ms 61.902833ms 65.645973ms 70.074873ms 76.415468ms 93.948465ms 94.286408ms 100.667322ms 101.00882ms 101.906012ms 102.425181ms 103.641385ms 103.920326ms 104.330571ms 106.155904ms 106.752245ms 107.510991ms 107.572012ms 107.614331ms 108.918974ms 110.517584ms 111.011743ms 113.327849ms 114.714588ms 114.767877ms 115.545205ms 116.826389ms 119.010979ms 121.248422ms 128.547195ms 169.399148ms 217.595338ms 253.798137ms 300.97183ms 344.360168ms 434.967246ms 469.58987ms 492.740242ms 516.823149ms 562.234464ms 602.407697ms 648.752369ms 695.636217ms 734.041109ms 743.976482ms 744.507601ms 745.191058ms 745.420438ms 745.899766ms 745.974521ms 746.012332ms 746.182183ms 746.573314ms 746.702263ms 746.771432ms 747.247019ms 747.265094ms 747.280437ms 747.426097ms 747.482137ms 747.627893ms 747.673162ms 747.687336ms 747.713526ms 747.767504ms 747.835636ms 747.932564ms 747.99287ms 748.02358ms 748.083693ms 748.14783ms 748.225606ms 748.285458ms 748.309118ms 748.480129ms 748.48658ms 748.558395ms 748.659483ms 748.782198ms 748.792744ms 748.871708ms 748.910465ms 748.921515ms 748.977969ms 748.987641ms 749.020303ms 749.046343ms 749.072825ms 749.076284ms 749.07804ms 749.154504ms 749.21329ms 749.246878ms 749.276457ms 749.289706ms 749.290738ms 749.311285ms 749.31382ms 749.327209ms 749.397076ms 749.423793ms 749.495493ms 749.508032ms 749.518913ms 749.614811ms 749.694885ms 749.776735ms 749.804206ms 749.805161ms 749.80874ms 749.869879ms 749.906477ms 749.907599ms 749.941571ms 749.966119ms 749.986031ms 750.034034ms 750.039272ms 750.085497ms 750.095885ms 750.129137ms 750.137676ms 750.161667ms 750.221931ms 750.281998ms 750.286294ms 750.295948ms 750.314482ms 750.32058ms 750.325807ms 750.348289ms 750.385326ms 750.471511ms 750.489396ms 750.538678ms 750.551236ms 750.559897ms 750.695845ms 750.746335ms 750.772014ms 750.815637ms 750.864587ms 750.867655ms 750.87673ms 750.920527ms 750.947397ms 750.959052ms 750.988666ms 750.992423ms 750.997877ms 751.02654ms 751.037062ms 751.039689ms 751.062928ms 751.090036ms 751.146832ms 751.210581ms 751.241456ms 751.263601ms 751.269123ms 751.275152ms 751.289641ms 751.321986ms 751.455225ms 751.548433ms 751.60787ms 751.613816ms 751.695345ms 751.700447ms 751.753271ms 751.793552ms 751.879147ms 751.946437ms 752.024801ms 752.123671ms 752.246158ms 752.257715ms 752.322405ms 752.360405ms 752.374982ms 752.436352ms 752.686813ms 752.696102ms 752.833238ms 753.074432ms 753.07567ms 753.619628ms 753.628056ms 753.916836ms 754.740876ms 754.86443ms 755.201528ms 755.802877ms 756.145565ms 756.795756ms]
  I0427 06:55:13.213880 25 service_latency.go:118] 50 %ile: 749.290738ms
  I0427 06:55:13.213892 25 service_latency.go:119] 90 %ile: 752.246158ms
  I0427 06:55:13.213903 25 service_latency.go:120] 99 %ile: 756.145565ms
  I0427 06:55:13.213913 25 service_latency.go:121] Total sample count: 200
  I0427 06:55:13.214068 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2793" for this suite. @ 04/27/25 06:55:13.222
• [10.746 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 04/27/25 06:55:13.232
  I0427 06:55:13.232635 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:55:13.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:13.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:13.255
  STEP: Setting up server cert @ 04/27/25 06:55:13.278
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:55:13.684
  STEP: Deploying the webhook pod @ 04/27/25 06:55:13.692
  STEP: Wait for the deployment to be ready @ 04/27/25 06:55:13.71
  I0427 06:55:13.724541 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:55:15.732
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:55:15.737
  I0427 06:55:16.737730 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/27/25 06:55:16.742
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/27/25 06:55:16.743
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/27/25 06:55:16.743
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/27/25 06:55:16.743
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/27/25 06:55:16.744
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/27/25 06:55:16.744
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/27/25 06:55:16.745
  I0427 06:55:16.766845 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4271" for this suite. @ 04/27/25 06:55:16.77
  STEP: Destroying namespace "webhook-markers-7926" for this suite. @ 04/27/25 06:55:16.776
• [3.548 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/27/25 06:55:16.781
  I0427 06:55:16.781051 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubelet-test @ 04/27/25 06:55:16.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:16.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:16.795
  I0427 06:55:16.819706 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6694" for this suite. @ 04/27/25 06:55:16.871
• [0.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 04/27/25 06:55:16.876
  I0427 06:55:16.876574 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:55:16.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:16.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:16.896
  STEP: Setting up server cert @ 04/27/25 06:55:16.919
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:55:17.138
  STEP: Deploying the webhook pod @ 04/27/25 06:55:17.142
  STEP: Wait for the deployment to be ready @ 04/27/25 06:55:17.153
  I0427 06:55:17.161456 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:55:19.186
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:55:19.199
  I0427 06:55:20.199665 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:20.204250 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:21.200223 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:21.206094 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:22.199459 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:22.204356 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:23.199424 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:23.204056 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:24.199305 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:24.201837 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:25.199976 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:25.202619 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:26.199288 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:26.202717 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:27.199843 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:27.202401 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:28.199465 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:28.204773 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:29.199494 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 06:55:29.204089 25 util.go:426] Unexpected error trying to get Endpoints for e2e-test-webhook : endpoints "e2e-test-webhook" not found
  I0427 06:55:30.199721 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/27/25 06:55:30.211
  STEP: verifying the validating webhook match conditions @ 04/27/25 06:55:30.221
  STEP: updating the validating webhook match conditions @ 04/27/25 06:55:30.226
  STEP: verifying the validating webhook match conditions @ 04/27/25 06:55:30.235
  I0427 06:55:30.279697 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7555" for this suite. @ 04/27/25 06:55:30.285
  STEP: Destroying namespace "webhook-markers-6537" for this suite. @ 04/27/25 06:55:30.292
• [13.426 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/27/25 06:55:30.303
  I0427 06:55:30.303497 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 06:55:30.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:30.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:30.325
  STEP: creating the pod @ 04/27/25 06:55:30.331
  STEP: submitting the pod to kubernetes @ 04/27/25 06:55:30.331
  W0427 06:55:30.342378      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 04/27/25 06:55:32.356
  STEP: updating the pod @ 04/27/25 06:55:32.358
  I0427 06:55:32.924816 25 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-39c6e922-b571-49de-a78a-074fe4a4da2a"
  I0427 06:55:36.945257 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3032" for this suite. @ 04/27/25 06:55:36.948
• [6.648 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/27/25 06:55:36.951
  I0427 06:55:36.951874 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 06:55:36.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:36.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:36.963
  STEP: Create a pod @ 04/27/25 06:55:36.965
  STEP: patching /status @ 04/27/25 06:55:38.976
  I0427 06:55:38.990493 25 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0427 06:55:38.990637 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2877" for this suite. @ 04/27/25 06:55:38.995
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/27/25 06:55:39
  I0427 06:55:39.000186 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename events @ 04/27/25 06:55:39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:39.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:39.018
  STEP: Create set of events @ 04/27/25 06:55:39.022
  I0427 06:55:39.028130 25 core_events.go:198] created test-event-1
  I0427 06:55:39.031644 25 core_events.go:198] created test-event-2
  I0427 06:55:39.035915 25 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/27/25 06:55:39.035
  STEP: delete collection of events @ 04/27/25 06:55:39.039
  I0427 06:55:39.039837 25 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/27/25 06:55:39.051
  I0427 06:55:39.051067 25 core_events.go:230] requesting list of events to confirm quantity
  I0427 06:55:39.052961 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1397" for this suite. @ 04/27/25 06:55:39.096
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/27/25 06:55:39.102
  I0427 06:55:39.102480 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename endpointslice @ 04/27/25 06:55:39.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:39.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:39.115
  I0427 06:55:39.127285 25 endpointslice.go:1045] Endpoints addresses: [192.168.227.151] , ports: [6443]
  I0427 06:55:39.127338 25 endpointslice.go:1075] EndpointSlices addresses: [192.168.227.151] , ports: [6443]
  I0427 06:55:39.127429 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6423" for this suite. @ 04/27/25 06:55:39.196
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/27/25 06:55:39.201
  I0427 06:55:39.201273 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:55:39.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:39.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:39.214
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/27/25 06:55:39.22
  STEP: Saw pod success @ 04/27/25 06:55:43.236
  I0427 06:55:43.238718 25 output.go:207] Trying to get logs from node node1 pod pod-5500fbd0-5bb3-4fea-b4a9-4904514dc808 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:55:43.244
  I0427 06:55:43.253144 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6366" for this suite. @ 04/27/25 06:55:43.256
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/27/25 06:55:43.263
  I0427 06:55:43.263485 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/27/25 06:55:43.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:43.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:43.277
  STEP: create the container to handle the HTTPGet hook request. @ 04/27/25 06:55:43.357
  STEP: create the pod with lifecycle hook @ 04/27/25 06:55:45.377
  STEP: check poststart hook @ 04/27/25 06:55:47.4
  STEP: delete the pod with lifecycle hook @ 04/27/25 06:55:47.406
  I0427 06:55:49.423024 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9412" for this suite. @ 04/27/25 06:55:49.43
• [6.174 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 04/27/25 06:55:49.437
  I0427 06:55:49.437867 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 06:55:49.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:49.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:49.459
  I0427 06:55:49.466338 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  W0427 06:55:49.466854      25 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc003c8c5e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0427 06:55:52.002887      25 warnings.go:70] unknown field "alpha"
  W0427 06:55:52.002939      25 warnings.go:70] unknown field "beta"
  W0427 06:55:52.002951      25 warnings.go:70] unknown field "delta"
  W0427 06:55:52.002958      25 warnings.go:70] unknown field "epsilon"
  W0427 06:55:52.002964      25 warnings.go:70] unknown field "gamma"
  I0427 06:55:52.529678 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9242" for this suite. @ 04/27/25 06:55:52.532
• [3.099 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/27/25 06:55:52.537
  I0427 06:55:52.537042 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 06:55:52.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:52.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:52.549
  STEP: Creating projection with secret that has name projected-secret-test-2adb9c0e-ae43-4bab-8389-e32a24b45386 @ 04/27/25 06:55:52.553
  STEP: Creating a pod to test consume secrets @ 04/27/25 06:55:52.556
  STEP: Saw pod success @ 04/27/25 06:55:54.567
  I0427 06:55:54.570732 25 output.go:207] Trying to get logs from node node1 pod pod-projected-secrets-6c790883-fc4e-4eb3-a8aa-d6361b4ecd3f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 06:55:54.574
  I0427 06:55:54.589470 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-101" for this suite. @ 04/27/25 06:55:54.592
• [2.060 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/27/25 06:55:54.596
  I0427 06:55:54.596791 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 06:55:54.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:54.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:54.611
  STEP: Creating projection with secret that has name secret-emptykey-test-9cc64af3-58bc-4f33-b8b5-478531ea5c2e @ 04/27/25 06:55:54.615
  I0427 06:55:54.619228 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3055" for this suite. @ 04/27/25 06:55:54.694
• [0.106 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/27/25 06:55:54.704
  I0427 06:55:54.704079 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename watch @ 04/27/25 06:55:54.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:54.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:54.723
  STEP: creating a new configmap @ 04/27/25 06:55:54.731
  STEP: modifying the configmap once @ 04/27/25 06:55:54.736
  STEP: modifying the configmap a second time @ 04/27/25 06:55:54.747
  STEP: deleting the configmap @ 04/27/25 06:55:54.759
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/27/25 06:55:54.765
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/27/25 06:55:54.769
  I0427 06:55:54.770206 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7312  10d55522-7d7a-460a-95c7-f32dda1c20a3 37770 0 2025-04-27 06:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-27 06:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:55:54.770763 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7312  10d55522-7d7a-460a-95c7-f32dda1c20a3 37771 0 2025-04-27 06:55:54 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-04-27 06:55:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 06:55:54.771099 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7312" for this suite. @ 04/27/25 06:55:54.794
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/27/25 06:55:54.805
  I0427 06:55:54.806013 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replicaset @ 04/27/25 06:55:54.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:55:54.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:55:54.843
  I0427 06:55:54.875168 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0427 06:55:59.914649 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/27/25 06:55:59.914
  STEP: Scaling up "test-rs" replicaset @ 04/27/25 06:55:59.914
  I0427 06:55:59.928007 25 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/27/25 06:55:59.928
  I0427 06:55:59.940453 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7627 with ReadyReplicas 1, AvailableReplicas 1
  I0427 06:55:59.957779 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7627 with ReadyReplicas 1, AvailableReplicas 1
  I0427 06:55:59.986838 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7627 with ReadyReplicas 1, AvailableReplicas 1
  I0427 06:55:59.995653 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7627 with ReadyReplicas 1, AvailableReplicas 1
  I0427 06:56:00.852602 25 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7627 with ReadyReplicas 2, AvailableReplicas 2
  I0427 06:56:02.836933 25 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7627 with ReadyReplicas 3 found true
  I0427 06:56:02.837061 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7627" for this suite. @ 04/27/25 06:56:02.841
• [8.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/27/25 06:56:02.845
  I0427 06:56:02.845287 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename hostport @ 04/27/25 06:56:02.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:02.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:02.855
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/27/25 06:56:02.942
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.227.151 on the node which pod1 resides and expect scheduled @ 04/27/25 06:56:04.953
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.227.151 but use UDP protocol on the node which pod2 resides @ 04/27/25 06:56:06.964
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/27/25 06:56:10.998
  I0427 06:56:10.998134 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.227.151 http://127.0.0.1:54323/hostname] Namespace:hostport-7931 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:56:10.998151 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:56:10.998188 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-7931/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.227.151+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.227.151, port: 54323 @ 04/27/25 06:56:11.058
  I0427 06:56:11.058410 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.227.151:54323/hostname] Namespace:hostport-7931 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:56:11.058425 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:56:11.058473 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-7931/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.227.151%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.227.151, port: 54323 UDP @ 04/27/25 06:56:11.112
  I0427 06:56:11.112514 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.227.151 54323] Namespace:hostport-7931 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 06:56:11.112539 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 06:56:11.112581 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/hostport-7931/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.227.151+54323&container=e2e-host-exec&stderr=true&stdout=true)
  I0427 06:56:16.171681 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7931" for this suite. @ 04/27/25 06:56:16.178
• [13.339 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 04/27/25 06:56:16.184
  I0427 06:56:16.184205 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 06:56:16.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:16.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:16.208
  STEP: Setting up server cert @ 04/27/25 06:56:16.231
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 06:56:16.345
  STEP: Deploying the webhook pod @ 04/27/25 06:56:16.349
  STEP: Wait for the deployment to be ready @ 04/27/25 06:56:16.358
  I0427 06:56:16.368099 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 06:56:18.376
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 06:56:18.384
  I0427 06:56:19.385026 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/27/25 06:56:19.39
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/27/25 06:56:19.405
  I0427 06:56:19.405285 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 06:56:19.454160 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5633" for this suite. @ 04/27/25 06:56:19.461
  STEP: Destroying namespace "webhook-markers-7783" for this suite. @ 04/27/25 06:56:19.476
• [3.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/27/25 06:56:19.488
  I0427 06:56:19.488124 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 06:56:19.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:19.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:19.517
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/27/25 06:56:19.523
  STEP: Saw pod success @ 04/27/25 06:56:23.559
  I0427 06:56:23.565358 25 output.go:207] Trying to get logs from node node3 pod pod-f2868c95-36dc-49fb-ac4b-f8f1868f5b97 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 06:56:23.573
  I0427 06:56:23.591882 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6182" for this suite. @ 04/27/25 06:56:23.6
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 04/27/25 06:56:23.61
  I0427 06:56:23.610705 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 06:56:23.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:23.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:23.638
  STEP: Creating a ResourceQuota with best effort scope @ 04/27/25 06:56:23.643
  STEP: Ensuring ResourceQuota status is calculated @ 04/27/25 06:56:23.654
  STEP: Creating a ResourceQuota with not best effort scope @ 04/27/25 06:56:25.66
  STEP: Ensuring ResourceQuota status is calculated @ 04/27/25 06:56:25.669
  STEP: Creating a best-effort pod @ 04/27/25 06:56:27.676
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/27/25 06:56:27.712
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/27/25 06:56:29.719
  STEP: Deleting the pod @ 04/27/25 06:56:31.724
  STEP: Ensuring resource quota status released the pod usage @ 04/27/25 06:56:31.73
  STEP: Creating a not best-effort pod @ 04/27/25 06:56:33.738
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/27/25 06:56:33.747
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/27/25 06:56:35.751
  STEP: Deleting the pod @ 04/27/25 06:56:37.755
  STEP: Ensuring resource quota status released the pod usage @ 04/27/25 06:56:37.763
  I0427 06:56:39.768525 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5644" for this suite. @ 04/27/25 06:56:39.772
• [16.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1697
  STEP: Creating a kubernetes client @ 04/27/25 06:56:39.777
  I0427 06:56:39.777042 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 06:56:39.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:39.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:39.791
  STEP: creating Agnhost RC @ 04/27/25 06:56:39.794
  I0427 06:56:39.794416 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-1680 create -f -'
  I0427 06:56:39.936110 25 builder.go:146] stderr: ""
  I0427 06:56:39.936172 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/27/25 06:56:39.936
  I0427 06:56:40.942177 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 06:56:40.942232 25 framework.go:733] Found 0 / 1
  I0427 06:56:41.940873 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 06:56:41.940925 25 framework.go:733] Found 1 / 1
  I0427 06:56:41.940945 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/27/25 06:56:41.94
  I0427 06:56:41.943653 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 06:56:41.943696 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0427 06:56:41.943744 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-1680 patch pod agnhost-primary-g5274 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0427 06:56:42.012123 25 builder.go:146] stderr: ""
  I0427 06:56:42.012216 25 builder.go:147] stdout: "pod/agnhost-primary-g5274 patched\n"
  STEP: checking annotations @ 04/27/25 06:56:42.012
  I0427 06:56:42.018071 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 06:56:42.018110 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0427 06:56:42.018216 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1680" for this suite. @ 04/27/25 06:56:42.023
• [2.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/27/25 06:56:42.029
  I0427 06:56:42.029644 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename lease-test @ 04/27/25 06:56:42.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:42.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:42.047
  I0427 06:56:42.107583 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9407" for this suite. @ 04/27/25 06:56:42.123
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/27/25 06:56:42.13
  I0427 06:56:42.130401 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 06:56:42.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:42.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:42.147
  STEP: Creating the pod @ 04/27/25 06:56:42.15
  I0427 06:56:44.686836 25 pod_client.go:173] Successfully updated pod "labelsupdate7fc87cfa-b5d0-4d5a-8cc2-14d0f41a1948"
  I0427 06:56:46.700992 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8724" for this suite. @ 04/27/25 06:56:46.703
• [4.577 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560
  STEP: Creating a kubernetes client @ 04/27/25 06:56:46.707
  I0427 06:56:46.707637 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 06:56:46.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:56:46.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:56:46.719
  I0427 06:56:46.729105 25 service_accounts.go:647] created pod
  STEP: Saw pod success @ 04/27/25 06:56:48.733
  I0427 06:57:18.733800 25 service_accounts.go:653] polling logs
  I0427 06:57:18.741632 25 service_accounts.go:663] Pod logs: 
  I0427 06:56:47.334058       1 log.go:245] OK: Got token
  I0427 06:56:47.334277       1 log.go:245] validating with in-cluster discovery
  I0427 06:56:47.334509       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0427 06:56:47.334552       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1012:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00014b738), NotBefore:(*jwt.NumericDate)(0xc00014b820), IssuedAt:(*jwt.NumericDate)(0xc00014b748), ID:"d9404109-f34b-4b9e-a937-1e001d35644b"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1012", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"5ac5a452-d040-4b48-993c-a084e3d8da8d"}}}
  I0427 06:56:47.341983       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0427 06:56:47.345870       1 log.go:245] OK: Validated signature on JWT
  I0427 06:56:47.345923       1 log.go:245] OK: Got valid claims from token!
  I0427 06:56:47.345997       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-1012:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00014bd50), NotBefore:(*jwt.NumericDate)(0xc00014bd78), IssuedAt:(*jwt.NumericDate)(0xc00014bd58), ID:"d9404109-f34b-4b9e-a937-1e001d35644b"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1012", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"5ac5a452-d040-4b48-993c-a084e3d8da8d"}}}

  I0427 06:57:18.741698 25 service_accounts.go:667] completed pod
  I0427 06:57:18.745343 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1012" for this suite. @ 04/27/25 06:57:18.748
• [32.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:275
  STEP: Creating a kubernetes client @ 04/27/25 06:57:18.752
  I0427 06:57:18.752198 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename namespaces @ 04/27/25 06:57:18.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:57:18.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:57:18.763
  STEP: creating a Namespace @ 04/27/25 06:57:18.766
  STEP: patching the Namespace @ 04/27/25 06:57:18.774
  STEP: get the Namespace and ensuring it has the label @ 04/27/25 06:57:18.778
  I0427 06:57:18.780640 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9105" for this suite. @ 04/27/25 06:57:18.849
  STEP: Destroying namespace "nspatchtest-5602cdac-f5a8-4cc4-9dcc-2a36f5765d12-91" for this suite. @ 04/27/25 06:57:18.852
• [0.107 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/27/25 06:57:18.859
  I0427 06:57:18.859563 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 06:57:18.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:57:18.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:57:18.869
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/27/25 06:57:18.959
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/27/25 06:57:18.964
  I0427 06:57:19.054502 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:57:19.054542 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:57:19.973052 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:57:19.973113 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 06:57:20.971622 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 06:57:20.971669 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/27/25 06:57:20.973
  I0427 06:57:21.072209 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 06:57:21.072284 25 fixtures.go:131] Node node3 is running 0 daemon pod, expected 1
  I0427 06:57:21.989493 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 06:57:21.989538 25 fixtures.go:131] Node node3 is running 0 daemon pod, expected 1
  I0427 06:57:22.989052 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 06:57:22.989088 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/27/25 06:57:22.989
  STEP: Deleting DaemonSet "daemon-set" @ 04/27/25 06:57:22.994
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4745, will wait for the garbage collector to delete the pods @ 04/27/25 06:57:22.994
  I0427 06:57:23.052683 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.836944ms
  I0427 06:57:23.153225 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.537229ms
  I0427 06:57:24.156141 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 06:57:24.156173 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0427 06:57:24.241065 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38516"},"items":null}

  I0427 06:57:24.251093 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38516"},"items":null}

  I0427 06:57:24.260858 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4745" for this suite. @ 04/27/25 06:57:24.263
• [5.408 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/27/25 06:57:24.268
  I0427 06:57:24.268115 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 06:57:24.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:57:24.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:57:24.281
  STEP: creating the pod with failed condition @ 04/27/25 06:57:24.283
  STEP: updating the pod @ 04/27/25 06:59:24.351
  I0427 06:59:24.867864 25 pod_client.go:173] Successfully updated pod "var-expansion-c5d5b97a-7621-47b2-860b-1fb0352a8f36"
  STEP: waiting for pod running @ 04/27/25 06:59:24.867
  STEP: deleting the pod gracefully @ 04/27/25 06:59:26.878
  I0427 06:59:26.878464 25 delete.go:62] Deleting pod "var-expansion-c5d5b97a-7621-47b2-860b-1fb0352a8f36" in namespace "var-expansion-5014"
  I0427 06:59:26.888625 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-c5d5b97a-7621-47b2-860b-1fb0352a8f36" to be fully deleted
  I0427 06:59:58.962522 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5014" for this suite. @ 04/27/25 06:59:58.965
• [154.701 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/27/25 06:59:58.969
  I0427 06:59:58.969931 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/27/25 06:59:58.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 06:59:58.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 06:59:58.986
  I0427 06:59:58.990902 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 07:00:02.063621 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4041" for this suite. @ 04/27/25 07:00:02.073
• [3.114 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/27/25 07:00:02.084
  I0427 07:00:02.084107 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename runtimeclass @ 04/27/25 07:00:02.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:02.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:02.111
  I0427 07:00:02.170392 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4259" for this suite. @ 04/27/25 07:00:02.182
• [0.110 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 04/27/25 07:00:02.194
  I0427 07:00:02.194813 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:00:02.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:02.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:02.234
  STEP: Creating pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420 @ 04/27/25 07:00:02.243
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 07:00:04.269
  I0427 07:00:04.272890 25 container_probe.go:1749] Initial restart count of pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 is 0
  I0427 07:00:04.276962 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:06.283262 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:08.288670 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:10.297500 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:12.302350 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:14.306797 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:16.310803 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:18.316628 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:20.322130 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:22.326074 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:24.329890 25 container_probe.go:1759] Get pod liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 in namespace container-probe-2420
  I0427 07:00:24.329939 25 container_probe.go:1763] Restart count of pod container-probe-2420/liveness-f88cf553-83b9-4b71-be27-473fdcbff8e5 is now 1 (20.056998568s elapsed)
  STEP: deleting the pod @ 04/27/25 07:00:24.33
  I0427 07:00:24.339402 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2420" for this suite. @ 04/27/25 07:00:24.343
• [22.152 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/27/25 07:00:24.346
  I0427 07:00:24.346871 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:00:24.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:24.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:24.359
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:00:24.361
  STEP: Saw pod success @ 04/27/25 07:00:28.374
  I0427 07:00:28.376505 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-1eed8924-5724-4694-8236-d62f0ffaa4f0 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:00:28.38
  I0427 07:00:28.389913 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2216" for this suite. @ 04/27/25 07:00:28.392
• [4.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/27/25 07:00:28.395
  I0427 07:00:28.395620 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/27/25 07:00:28.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:28.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:28.409
  STEP: creating a target pod @ 04/27/25 07:00:28.412
  STEP: adding an ephemeral container @ 04/27/25 07:00:30.425
  STEP: checking pod container endpoints @ 04/27/25 07:00:34.446
  I0427 07:00:34.446167 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1943 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:00:34.446182 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:00:34.446213 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-1943/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0427 07:00:34.492769 25 exec_util.go:108] Exec stderr: ""
  I0427 07:00:34.497533 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1943" for this suite. @ 04/27/25 07:00:34.5
• [6.109 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/27/25 07:00:34.504
  I0427 07:00:34.504494 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 07:00:34.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:34.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:34.517
  STEP: create the deployment @ 04/27/25 07:00:34.52
  W0427 07:00:34.525049      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/27/25 07:00:34.525
  STEP: delete the deployment @ 04/27/25 07:00:35.029
  STEP: wait for all rs to be garbage collected @ 04/27/25 07:00:35.035
  STEP: expected 0 pods, got 2 pods @ 04/27/25 07:00:35.062
  STEP: Gathering metrics @ 04/27/25 07:00:35.544
  W0427 07:00:35.550862      25 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0427 07:00:35.550952 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0427 07:00:35.551377 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9055" for this suite. @ 04/27/25 07:00:35.556
• [1.058 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 04/27/25 07:00:35.562
  I0427 07:00:35.562160 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:00:35.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:35.573
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:35.578
  STEP: creating service in namespace services-7139 @ 04/27/25 07:00:35.582
  STEP: creating service affinity-clusterip in namespace services-7139 @ 04/27/25 07:00:35.582
  STEP: creating replication controller affinity-clusterip in namespace services-7139 @ 04/27/25 07:00:35.592
  I0427 07:00:35.599661      25 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7139, replica count: 3
  I0427 07:00:38.650950      25 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 07:00:38.658825 25 resource.go:361] Creating new exec pod
  I0427 07:00:41.680190 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-7139 exec execpod-affinitynp8w2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0427 07:00:41.896119 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.68.132.248) 80 port [tcp/http] succeeded!\n"
  I0427 07:00:41.896287 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:00:41.896493 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-7139 exec execpod-affinitynp8w2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.132.248 80'
  I0427 07:00:42.067363 25 builder.go:146] stderr: "+ nc -v -t -w 2 10.68.132.248 80\n+ echo hostName\nConnection to 10.68.132.248 80 port [tcp/http] succeeded!\n"
  I0427 07:00:42.067511 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:00:42.067743 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-7139 exec execpod-affinitynp8w2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.132.248:80/ ; done'
  I0427 07:00:42.379646 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.132.248:80/\n"
  I0427 07:00:42.379778 25 builder.go:147] stdout: "\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8\naffinity-clusterip-lr5l8"
  I0427 07:00:42.379821 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.379852 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.379873 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.379939 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.379971 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.379990 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380008 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380025 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380045 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380064 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380082 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380100 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380118 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380160 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380179 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380198 25 service.go:242] Received response from host: affinity-clusterip-lr5l8
  I0427 07:00:42.380375 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-7139, will wait for the garbage collector to delete the pods @ 04/27/25 07:00:42.403
  I0427 07:00:42.479053 25 resources.go:139] Deleting ReplicationController affinity-clusterip took: 18.858082ms
  I0427 07:00:42.579993 25 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.932125ms
  I0427 07:00:46.115900 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7139" for this suite. @ 04/27/25 07:00:46.132
• [10.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1054
  STEP: Creating a kubernetes client @ 04/27/25 07:00:46.144
  I0427 07:00:46.144080 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:00:46.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:46.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:46.183
  STEP: create deployment with httpd image @ 04/27/25 07:00:46.191
  I0427 07:00:46.191922 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4822 create -f -'
  I0427 07:00:46.383262 25 builder.go:146] stderr: ""
  I0427 07:00:46.383421 25 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/27/25 07:00:46.383
  I0427 07:00:46.383558 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4822 diff -f -'
  I0427 07:00:46.609656 25 builder.go:135] rc: 1
  I0427 07:00:46.609836 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-4822 delete -f -'
  I0427 07:00:46.733626 25 builder.go:146] stderr: ""
  I0427 07:00:46.733755 25 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0427 07:00:46.733979 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4822" for this suite. @ 04/27/25 07:00:46.742
• [0.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 04/27/25 07:00:46.764
  I0427 07:00:46.764743 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 07:00:46.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:46.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:46.828
  I0427 07:00:46.840762 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 07:00:49.915285 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9747" for this suite. @ 04/27/25 07:00:49.918
• [3.158 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/27/25 07:00:49.922
  I0427 07:00:49.922507 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:00:49.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:49.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:49.937
  STEP: Creating configMap with name configmap-test-upd-0fbc9587-2815-483c-b7d5-550305862a9d @ 04/27/25 07:00:50.022
  STEP: Creating the pod @ 04/27/25 07:00:50.026
  STEP: Waiting for pod with text data @ 04/27/25 07:00:52.051
  STEP: Waiting for pod with binary data @ 04/27/25 07:00:52.06
  I0427 07:00:52.066241 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3116" for this suite. @ 04/27/25 07:00:52.071
• [2.158 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/27/25 07:00:52.08
  I0427 07:00:52.080397 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:00:52.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:52.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:52.099
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/27/25 07:00:52.103
  STEP: Saw pod success @ 04/27/25 07:00:56.149
  I0427 07:00:56.154847 25 output.go:207] Trying to get logs from node node3 pod pod-60cbbcec-14e0-48d8-8b36-c95294c0698f container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:00:56.164
  I0427 07:00:56.175846 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-132" for this suite. @ 04/27/25 07:00:56.179
• [4.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/27/25 07:00:56.183
  I0427 07:00:56.183326 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/27/25 07:00:56.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:56.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:56.204
  I0427 07:00:56.208517 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 07:00:59.243272 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2023" for this suite. @ 04/27/25 07:00:59.246
• [3.067 seconds]
------------------------------
SSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/27/25 07:00:59.25
  I0427 07:00:59.250025 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename conformance-tests @ 04/27/25 07:00:59.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:59.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:59.262
  STEP: Getting node addresses @ 04/27/25 07:00:59.264
  I0427 07:00:59.264945 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0427 07:00:59.347454 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7197" for this suite. @ 04/27/25 07:00:59.35
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 04/27/25 07:00:59.354
  I0427 07:00:59.354632 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:00:59.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:00:59.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:00:59.366
  STEP: Setting up server cert @ 04/27/25 07:00:59.38
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:00:59.562
  STEP: Deploying the webhook pod @ 04/27/25 07:00:59.565
  STEP: Wait for the deployment to be ready @ 04/27/25 07:00:59.572
  I0427 07:00:59.576330 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 07:01:01.587
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:01:01.6
  I0427 07:01:02.600344 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/27/25 07:01:02.606
  STEP: create a pod @ 04/27/25 07:01:02.618
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/27/25 07:01:04.631
  I0427 07:01:04.631698 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=webhook-5790 attach --namespace=webhook-5790 to-be-attached-pod -i -c=container1'
  I0427 07:01:04.717773 25 builder.go:135] rc: 1
  I0427 07:01:04.767754 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5790" for this suite. @ 04/27/25 07:01:04.778
  STEP: Destroying namespace "webhook-markers-7764" for this suite. @ 04/27/25 07:01:04.789
• [5.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:255
  STEP: Creating a kubernetes client @ 04/27/25 07:01:04.805
  I0427 07:01:04.805682 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename namespaces @ 04/27/25 07:01:04.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:04.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:04.84
  STEP: Creating a test namespace @ 04/27/25 07:01:04.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:04.874
  STEP: Creating a service in the namespace @ 04/27/25 07:01:04.882
  STEP: Deleting the namespace @ 04/27/25 07:01:04.904
  STEP: Waiting for the namespace to be removed. @ 04/27/25 07:01:04.918
  STEP: Recreating the namespace @ 04/27/25 07:01:11.921
  STEP: Verifying there is no service in the namespace @ 04/27/25 07:01:11.93
  I0427 07:01:11.935653 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8869" for this suite. @ 04/27/25 07:01:11.944
  STEP: Destroying namespace "nsdeletetest-2349" for this suite. @ 04/27/25 07:01:11.949
  I0427 07:01:11.952730 25 framework.go:370] Namespace nsdeletetest-2349 was already deleted
  STEP: Destroying namespace "nsdeletetest-2040" for this suite. @ 04/27/25 07:01:11.952
• [7.152 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 04/27/25 07:01:11.957
  I0427 07:01:11.957775 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 07:01:11.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:11.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:11.975
  I0427 07:01:11.985002 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  W0427 07:01:14.518015      25 warnings.go:70] unknown field "alpha"
  W0427 07:01:14.518058      25 warnings.go:70] unknown field "beta"
  W0427 07:01:14.518066      25 warnings.go:70] unknown field "delta"
  W0427 07:01:14.518073      25 warnings.go:70] unknown field "epsilon"
  W0427 07:01:14.518080      25 warnings.go:70] unknown field "gamma"
  I0427 07:01:15.051145 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7317" for this suite. @ 04/27/25 07:01:15.056
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/27/25 07:01:15.061
  I0427 07:01:15.061063 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pod-network-test @ 04/27/25 07:01:15.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:15.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:15.073
  STEP: Performing setup for networking test in namespace pod-network-test-9548 @ 04/27/25 07:01:15.078
  STEP: creating a selector @ 04/27/25 07:01:15.078
  STEP: Creating the service pods in kubernetes @ 04/27/25 07:01:15.078
  I0427 07:01:15.078543 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/27/25 07:01:29.231
  I0427 07:01:31.260949 25 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0427 07:01:31.261041 25 utils.go:496] Going to poll 172.20.166.151 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0427 07:01:31.264467 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.166.151:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9548 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:01:31.264595 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:01:31.264776 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9548/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.166.151%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:01:31.352152 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0427 07:01:31.352196 25 utils.go:496] Going to poll 172.20.104.22 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0427 07:01:31.356259 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.104.22:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9548 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:01:31.356395 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:01:31.356500 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9548/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.104.22%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:01:31.441262 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0427 07:01:31.441323 25 utils.go:496] Going to poll 172.20.135.55 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0427 07:01:31.445876 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.20.135.55:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9548 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:01:31.445909 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:01:31.445957 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9548/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.20.135.55%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:01:31.503597 25 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0427 07:01:31.503743 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9548" for this suite. @ 04/27/25 07:01:31.508
• [16.456 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/27/25 07:01:31.516
  I0427 07:01:31.516820 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:01:31.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:31.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:31.532
  I0427 07:01:31.535661 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: creating the pod @ 04/27/25 07:01:31.536
  STEP: submitting the pod to kubernetes @ 04/27/25 07:01:31.536
  I0427 07:01:33.611744 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8207" for this suite. @ 04/27/25 07:01:33.614
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/27/25 07:01:33.619
  I0427 07:01:33.619433 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replicaset @ 04/27/25 07:01:33.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:33.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:33.628
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/27/25 07:01:33.631
  STEP: When a replicaset with a matching selector is created @ 04/27/25 07:01:35.642
  STEP: Then the orphan pod is adopted @ 04/27/25 07:01:35.645
  STEP: When the matched label of one of its pods change @ 04/27/25 07:01:36.651
  I0427 07:01:36.654251 25 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/27/25 07:01:36.659
  I0427 07:01:37.667758 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5687" for this suite. @ 04/27/25 07:01:37.675
• [4.064 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 04/27/25 07:01:37.683
  I0427 07:01:37.683760 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename disruption @ 04/27/25 07:01:37.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:37.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:37.701
  STEP: creating the pdb @ 04/27/25 07:01:37.707
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:01:37.712
  STEP: updating the pdb @ 04/27/25 07:01:39.715
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:01:39.72
  STEP: patching the pdb @ 04/27/25 07:01:39.727
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:01:39.732
  STEP: Waiting for the pdb to be deleted @ 04/27/25 07:01:41.738
  I0427 07:01:41.740607 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7597" for this suite. @ 04/27/25 07:01:41.743
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/27/25 07:01:41.75
  I0427 07:01:41.750098 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename init-container @ 04/27/25 07:01:41.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:01:41.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:01:41.761
  STEP: creating the pod @ 04/27/25 07:01:41.763
  I0427 07:01:41.763925 25 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0427 07:02:22.362891 25 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-beeb987a-f931-46a1-9d1c-72d26fc10b90", GenerateName:"", Namespace:"init-container-9484", SelfLink:"", UID:"0b938104-8931-4c9d-aee5-0bb002bb1344", ResourceVersion:"40080", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"763916680"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f0048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 2, 22, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f0078), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-t2dkt", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc005062040), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-t2dkt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-t2dkt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.dev.rdev.tech:18093/sonobuoy/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-t2dkt", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004cea0d8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"node1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00507c000), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004cea160)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004cea180)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004cea188), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004cea18c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004502070), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 27, 7, 1, 43, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.227.151", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.227.151"}}, PodIP:"172.20.166.174", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.20.166.174"}}, StartTime:time.Date(2025, time.April, 27, 7, 1, 41, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc005078070)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0050780e0)}, Ready:false, RestartCount:3, Image:"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox@sha256:ce452754de8eae3d468b03a225cd243380f313ff4c8df232f6818fe250630dc4", ContainerID:"containerd://aaffcc6f872295948ff92eb7e23e593f887cc013c0134d2a5371d3302c3d5982", Started:(*bool)(0xc004cea24a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-t2dkt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0045020a0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc005062100), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc004cea25d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-t2dkt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0045020b0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0050620c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.dev.rdev.tech:18093/sonobuoy/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc004cea204), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-t2dkt", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc004502090)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0427 07:02:22.363167 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9484" for this suite. @ 04/27/25 07:02:22.367
• [40.622 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/27/25 07:02:22.371
  I0427 07:02:22.371863 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:02:22.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:22.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:22.386
  STEP: Creating configMap with name configmap-test-volume-map-525d28ea-d72d-4197-ad61-77f6a724b580 @ 04/27/25 07:02:22.392
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:02:22.396
  STEP: Saw pod success @ 04/27/25 07:02:26.423
  I0427 07:02:26.427553 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-3c11d98b-10dc-461b-b9b5-f83fc438324f container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:02:26.438
  I0427 07:02:26.459008 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5147" for this suite. @ 04/27/25 07:02:26.466
• [4.106 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/27/25 07:02:26.477
  I0427 07:02:26.477818 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replication-controller @ 04/27/25 07:02:26.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:26.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:26.507
  STEP: Given a ReplicationController is created @ 04/27/25 07:02:26.516
  STEP: When the matched label of one of its pods change @ 04/27/25 07:02:26.526
  I0427 07:02:26.536048 25 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0427 07:02:31.541891 25 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/27/25 07:02:31.553
  I0427 07:02:32.565501 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1348" for this suite. @ 04/27/25 07:02:32.574
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 04/27/25 07:02:32.589
  I0427 07:02:32.589700 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:02:32.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:32.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:32.639
  STEP: Setting up server cert @ 04/27/25 07:02:32.696
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:02:33.201
  STEP: Deploying the webhook pod @ 04/27/25 07:02:33.213
  STEP: Wait for the deployment to be ready @ 04/27/25 07:02:33.23
  I0427 07:02:33.242726 25 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/27/25 07:02:35.25
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:02:35.258
  I0427 07:02:36.259141 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/27/25 07:02:36.264
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/27/25 07:02:36.272
  STEP: Creating a dummy validating-webhook-configuration object @ 04/27/25 07:02:36.28
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/27/25 07:02:36.285
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/27/25 07:02:36.288
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/27/25 07:02:36.293
  I0427 07:02:36.327348 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8966" for this suite. @ 04/27/25 07:02:36.332
  STEP: Destroying namespace "webhook-markers-4936" for this suite. @ 04/27/25 07:02:36.338
• [3.754 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/27/25 07:02:36.343
  I0427 07:02:36.343604 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replicaset @ 04/27/25 07:02:36.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:36.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:36.357
  STEP: Create a ReplicaSet @ 04/27/25 07:02:36.363
  STEP: Verify that the required pods have come up @ 04/27/25 07:02:36.368
  I0427 07:02:36.371075 25 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0427 07:02:41.449969 25 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/27/25 07:02:41.45
  I0427 07:02:41.452086 25 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/27/25 07:02:41.452
  STEP: DeleteCollection of the ReplicaSets @ 04/27/25 07:02:41.453
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/27/25 07:02:41.557
  I0427 07:02:41.559433 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6431" for this suite. @ 04/27/25 07:02:41.562
• [5.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/27/25 07:02:41.565
  I0427 07:02:41.565944 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename podtemplate @ 04/27/25 07:02:41.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:41.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:41.584
  STEP: Create a pod template @ 04/27/25 07:02:41.589
  STEP: Replace a pod template @ 04/27/25 07:02:41.592
  I0427 07:02:41.597621 25 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0427 07:02:41.597722 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2074" for this suite. @ 04/27/25 07:02:41.664
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 04/27/25 07:02:41.673
  I0427 07:02:41.673989 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:02:41.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:41.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:41.7
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7913 @ 04/27/25 07:02:41.704
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/27/25 07:02:41.722
  STEP: creating service externalsvc in namespace services-7913 @ 04/27/25 07:02:41.723
  STEP: creating replication controller externalsvc in namespace services-7913 @ 04/27/25 07:02:41.754
  I0427 07:02:41.779925      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7913, replica count: 2
  I0427 07:02:44.831426      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/27/25 07:02:44.833
  I0427 07:02:44.841708 25 resource.go:361] Creating new exec pod
  I0427 07:02:46.853971 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-7913 exec execpod44lgh -- /bin/sh -x -c nslookup clusterip-service.services-7913.svc.cluster.local'
  I0427 07:02:47.016766 25 builder.go:146] stderr: "+ nslookup clusterip-service.services-7913.svc.cluster.local\n"
  I0427 07:02:47.016824 25 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-7913.svc.cluster.local\tcanonical name = externalsvc.services-7913.svc.cluster.local.\nName:\texternalsvc.services-7913.svc.cluster.local\nAddress: 10.68.68.199\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7913, will wait for the garbage collector to delete the pods @ 04/27/25 07:02:47.017
  I0427 07:02:47.076024 25 resources.go:139] Deleting ReplicationController externalsvc took: 4.948469ms
  I0427 07:02:47.177073 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.016986ms
  I0427 07:02:50.091270 25 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0427 07:02:50.102088 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7913" for this suite. @ 04/27/25 07:02:50.107
• [8.438 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/27/25 07:02:50.112
  I0427 07:02:50.112030 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:02:50.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:50.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:50.141
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/27/25 07:02:50.147
  STEP: Saw pod success @ 04/27/25 07:02:54.17
  I0427 07:02:54.173362 25 output.go:207] Trying to get logs from node node1 pod pod-2a30c5fd-666a-4bc5-8070-06b35432223b container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:02:54.177
  I0427 07:02:54.187677 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8642" for this suite. @ 04/27/25 07:02:54.19
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1840
  STEP: Creating a kubernetes client @ 04/27/25 07:02:54.194
  I0427 07:02:54.194171 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:02:54.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:54.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:54.206
  STEP: starting the proxy server @ 04/27/25 07:02:54.209
  I0427 07:02:54.209255 25 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-1855 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/27/25 07:02:54.241
  I0427 07:02:54.246723 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0427 07:02:54.247638 25 kubectl.go:2231] kubectl proxy stdout: Starting to serve on 127.0.0.1:46063

  I0427 07:02:54.247650 25 kubectl.go:2236] kubectl proxy stderr: W0427 07:02:54.240671     722 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-1855" for this suite. @ 04/27/25 07:02:54.291
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 04/27/25 07:02:54.295
  I0427 07:02:54.295713 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 07:02:54.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:54.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:54.306
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/27/25 07:02:54.308
  I0427 07:02:54.313500 25 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4745  6cfaca13-9ef2-4903-b3dc-5c67931dc9f0 40562 0 2025-04-27 07:02:54 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-04-27 07:02:54 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bb79p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bb79p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/27/25 07:02:56.321
  I0427 07:02:56.321148 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4745 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:02:56.321162 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:02:56.321196 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-4745/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/27/25 07:02:56.373
  I0427 07:02:56.373551 25 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4745 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:02:56.373566 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:02:56.373609 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/dns-4745/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:02:56.425763 25 dns.go:450] Deleting pod test-dns-nameservers...
  I0427 07:02:56.435441 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4745" for this suite. @ 04/27/25 07:02:56.438
• [2.146 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742
  STEP: Creating a kubernetes client @ 04/27/25 07:02:56.441
  I0427 07:02:56.441487 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 07:02:56.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:02:56.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:02:56.451
  STEP: Creating a job @ 04/27/25 07:02:56.454
  STEP: Ensuring job reaches completions @ 04/27/25 07:02:56.457
  I0427 07:03:06.479450 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7415" for this suite. @ 04/27/25 07:03:06.482
• [10.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/27/25 07:03:06.488
  I0427 07:03:06.488363 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename chunking @ 04/27/25 07:03:06.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:03:06.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:03:06.5
  STEP: creating a large number of resources @ 04/27/25 07:03:06.503
  STEP: retrieving the first page @ 04/27/25 07:03:24.193
  I0427 07:03:24.244219 25 chunking.go:163] Retrieved 40/40 results with rv 41218 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 04/27/25 07:03:24.244
  I0427 07:03:44.252893 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:04:04.251111 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:04:24.251495 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:04:44.251588 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:05:04.252859 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:05:24.253001 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:05:44.251088 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:06:04.248621 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:06:24.254574 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:06:44.253123 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:07:04.251039 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:07:24.250657 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:07:44.251630 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:08:04.251491 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:08:24.249094 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:08:44.250664 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:09:04.251098 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:09:24.250967 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:09:44.251486 25 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDEyMTgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0427 07:10:04.247982 25 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0427 07:10:04.248021 25 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/27/25 07:10:04.248
  STEP: retrieving all remaining pages @ 04/27/25 07:10:04.251
  I0427 07:10:04.253839 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0427 07:10:04.256317 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0427 07:10:04.258805 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0427 07:10:04.262739 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0427 07:10:04.266742 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0427 07:10:04.269826 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0427 07:10:04.272352 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE4MzYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0427 07:10:04.274991 25 chunking.go:221] Retrieved 40/40 results with rv 41836 and continue 
  I0427 07:10:04.275168 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1651" for this suite. @ 04/27/25 07:10:04.278
• [417.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:888
  STEP: Creating a kubernetes client @ 04/27/25 07:10:04.283
  I0427 07:10:04.283422 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:10:04.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:04.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:04.293
  STEP: validating api versions @ 04/27/25 07:10:04.296
  I0427 07:10:04.296403 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-8845 api-versions'
  I0427 07:10:04.339541 25 builder.go:146] stderr: ""
  I0427 07:10:04.339585 25 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0427 07:10:04.339686 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8845" for this suite. @ 04/27/25 07:10:04.379
• [0.100 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/27/25 07:10:04.383
  I0427 07:10:04.383087 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename apf @ 04/27/25 07:10:04.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:04.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:04.392
  STEP: getting /apis @ 04/27/25 07:10:04.395
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/27/25 07:10:04.398
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/27/25 07:10:04.399
  STEP: creating @ 04/27/25 07:10:04.399
  STEP: getting @ 04/27/25 07:10:04.408
  STEP: listing @ 04/27/25 07:10:04.41
  STEP: watching @ 04/27/25 07:10:04.412
  I0427 07:10:04.412494 25 flowcontrol.go:394] starting watch
  STEP: patching @ 04/27/25 07:10:04.413
  STEP: updating @ 04/27/25 07:10:04.416
  I0427 07:10:04.420685 25 flowcontrol.go:422] waiting for watch events with expected annotations
  I0427 07:10:04.420728 25 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/27/25 07:10:04.42
  STEP: patching /status @ 04/27/25 07:10:04.423
  STEP: updating /status @ 04/27/25 07:10:04.426
  STEP: deleting @ 04/27/25 07:10:04.447
  STEP: deleting a collection @ 04/27/25 07:10:04.453
  I0427 07:10:04.462269 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6563" for this suite. @ 04/27/25 07:10:04.479
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/27/25 07:10:04.483
  I0427 07:10:04.483108 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:10:04.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:04.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:04.491
  STEP: Creating configMap with name configmap-test-volume-42287404-5f7d-45ac-b321-934a9796f81f @ 04/27/25 07:10:04.495
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:10:04.497
  STEP: Saw pod success @ 04/27/25 07:10:06.509
  I0427 07:10:06.512079 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-6da5dbd3-cc81-45b3-8fd7-c2e6a3019205 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:10:06.518
  I0427 07:10:06.530336 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3059" for this suite. @ 04/27/25 07:10:06.533
• [2.054 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/27/25 07:10:06.536
  I0427 07:10:06.536991 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename limitrange @ 04/27/25 07:10:06.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:06.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:06.553
  STEP: Creating a LimitRange @ 04/27/25 07:10:06.556
  STEP: Setting up watch @ 04/27/25 07:10:06.556
  STEP: Submitting a LimitRange @ 04/27/25 07:10:06.66
  STEP: Verifying LimitRange creation was observed @ 04/27/25 07:10:06.664
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/27/25 07:10:06.664
  I0427 07:10:06.666731 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0427 07:10:06.666780 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/27/25 07:10:06.666
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/27/25 07:10:06.672
  I0427 07:10:06.674779 25 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0427 07:10:06.674822 25 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/27/25 07:10:06.674
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/27/25 07:10:06.682
  I0427 07:10:06.690569 25 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0427 07:10:06.690627 25 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/27/25 07:10:06.69
  STEP: Failing to create a Pod with more than max resources @ 04/27/25 07:10:06.695
  STEP: Updating a LimitRange @ 04/27/25 07:10:06.699
  STEP: Verifying LimitRange updating is effective @ 04/27/25 07:10:06.705
  STEP: Creating a Pod with less than former min resources @ 04/27/25 07:10:08.709
  STEP: Failing to create a Pod with more than max resources @ 04/27/25 07:10:08.711
  STEP: Deleting a LimitRange @ 04/27/25 07:10:08.713
  STEP: Verifying the LimitRange was deleted @ 04/27/25 07:10:08.719
  I0427 07:10:13.724932 25 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/27/25 07:10:13.724
  I0427 07:10:13.730107 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7934" for this suite. @ 04/27/25 07:10:13.732
• [7.207 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/27/25 07:10:13.744
  I0427 07:10:13.744141 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:10:13.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:13.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:13.763
  STEP: Creating secret with name secret-test-5a2c24f8-ead4-414d-b438-4075aeb4b089 @ 04/27/25 07:10:13.789
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:10:13.793
  STEP: Saw pod success @ 04/27/25 07:10:17.839
  I0427 07:10:17.841510 25 output.go:207] Trying to get logs from node node2 pod pod-secrets-a1ba3ea8-cf69-434a-822d-23ac46d65958 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:10:17.847
  I0427 07:10:17.859180 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5572" for this suite. @ 04/27/25 07:10:17.863
  STEP: Destroying namespace "secret-namespace-2951" for this suite. @ 04/27/25 07:10:17.867
• [4.130 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/27/25 07:10:17.874
  I0427 07:10:17.874456 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 07:10:17.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:17.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:17.888
  STEP: Creating a pod to test substitution in container's args @ 04/27/25 07:10:17.893
  STEP: Saw pod success @ 04/27/25 07:10:21.91
  I0427 07:10:21.913325 25 output.go:207] Trying to get logs from node node2 pod var-expansion-62d18e38-6d78-4994-b84c-4bccc4371340 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 07:10:21.918
  I0427 07:10:21.934167 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9216" for this suite. @ 04/27/25 07:10:21.941
• [4.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/27/25 07:10:21.951
  I0427 07:10:21.951857 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:10:21.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:21.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:21.972
  I0427 07:10:21.979481 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: creating the pod @ 04/27/25 07:10:21.98
  STEP: submitting the pod to kubernetes @ 04/27/25 07:10:21.98
  I0427 07:10:24.008252 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9862" for this suite. @ 04/27/25 07:10:24.012
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/27/25 07:10:24.019
  I0427 07:10:24.019356 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename chunking @ 04/27/25 07:10:24.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:24.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:24.031
  STEP: creating a large number of resources @ 04/27/25 07:10:24.034
  STEP: retrieving those results in paged fashion several times @ 04/27/25 07:10:41.725
  I0427 07:10:41.775598 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0427 07:10:41.825903 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0427 07:10:41.874032 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0427 07:10:41.925476 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0427 07:10:41.975628 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0427 07:10:42.024787 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0427 07:10:42.073145 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0427 07:10:42.123757 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0427 07:10:42.174877 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0427 07:10:42.223703 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0427 07:10:42.276004 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0427 07:10:42.323552 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0427 07:10:42.375033 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0427 07:10:42.423453 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0427 07:10:42.474171 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0427 07:10:42.523685 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0427 07:10:42.574182 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0427 07:10:42.624135 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0427 07:10:42.673686 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0427 07:10:42.724167 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0427 07:10:42.773669 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0427 07:10:42.824824 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0427 07:10:42.873573 25 chunking.go:98] Retrieved 17/17 results with rv 42978 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5NzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0427 07:10:42.923959 25 chunking.go:98] Retrieved 9/17 results with rv 42978 and continue 
  I0427 07:10:42.973654 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0427 07:10:43.028459 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0427 07:10:43.079897 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0427 07:10:43.124898 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0427 07:10:43.177077 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0427 07:10:43.225608 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0427 07:10:43.275673 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0427 07:10:43.326809 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0427 07:10:43.375692 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0427 07:10:43.429951 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0427 07:10:43.474380 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0427 07:10:43.524723 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0427 07:10:43.576691 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0427 07:10:43.625526 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0427 07:10:43.674480 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0427 07:10:43.724897 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0427 07:10:43.803283 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0427 07:10:43.825824 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0427 07:10:43.877328 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0427 07:10:43.926378 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0427 07:10:43.978019 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0427 07:10:44.027162 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0427 07:10:44.074621 25 chunking.go:98] Retrieved 17/17 results with rv 42982 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0427 07:10:44.124752 25 chunking.go:98] Retrieved 9/17 results with rv 42982 and continue 
  I0427 07:10:44.174963 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0427 07:10:44.223870 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0427 07:10:44.273268 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0427 07:10:44.325527 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0427 07:10:44.375168 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0427 07:10:44.424431 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0427 07:10:44.474093 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0427 07:10:44.523772 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0427 07:10:44.575106 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0427 07:10:44.623921 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0427 07:10:44.673886 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0427 07:10:44.723680 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0427 07:10:44.774909 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0427 07:10:44.826084 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0427 07:10:44.874826 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0427 07:10:44.924224 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0427 07:10:44.974605 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0427 07:10:45.023697 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0427 07:10:45.074458 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0427 07:10:45.123854 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0427 07:10:45.173356 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0427 07:10:45.224597 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0427 07:10:45.277764 25 chunking.go:98] Retrieved 17/17 results with rv 42984 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDI5ODQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0427 07:10:45.325593 25 chunking.go:98] Retrieved 9/17 results with rv 42984 and continue 
  STEP: retrieving those results all at once @ 04/27/25 07:10:45.325
  I0427 07:10:45.385941 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1672" for this suite. @ 04/27/25 07:10:45.427
• [21.457 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 04/27/25 07:10:45.476
  I0427 07:10:45.476832 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename disruption @ 04/27/25 07:10:45.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:45.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:45.495
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/27/25 07:10:45.499
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:10:45.503
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/27/25 07:10:47.521
  STEP: Waiting for all pods to be running @ 04/27/25 07:10:47.521
  I0427 07:10:47.532615 25 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 04/27/25 07:10:49.525
  STEP: Updating the pdb to allow a pod to be evicted @ 04/27/25 07:10:49.534
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:10:49.54
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/27/25 07:10:49.544
  STEP: Waiting for all pods to be running @ 04/27/25 07:10:49.544
  STEP: Waiting for the pdb to observed all healthy pods @ 04/27/25 07:10:49.626
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/27/25 07:10:49.644
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:10:49.657
  STEP: Waiting for all pods to be running @ 04/27/25 07:10:51.66
  STEP: locating a running pod @ 04/27/25 07:10:51.67
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/27/25 07:10:51.682
  STEP: Waiting for the pdb to be deleted @ 04/27/25 07:10:51.688
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/27/25 07:10:51.691
  STEP: Waiting for all pods to be running @ 04/27/25 07:10:51.691
  I0427 07:10:51.781946 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1377" for this suite. @ 04/27/25 07:10:51.789
• [6.327 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/27/25 07:10:51.804
  I0427 07:10:51.804099 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:10:51.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:51.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:51.84
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:10:51.854
  STEP: Saw pod success @ 04/27/25 07:10:55.9
  I0427 07:10:55.904247 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-a573c813-ee31-461f-b215-fb2f07ee258a container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:10:55.913
  I0427 07:10:55.932414 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-685" for this suite. @ 04/27/25 07:10:55.938
• [4.141 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 04/27/25 07:10:55.945
  I0427 07:10:55.945160 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 07:10:55.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:10:55.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:10:55.962
  STEP: Counting existing ResourceQuota @ 04/27/25 07:10:55.967
  STEP: Creating a ResourceQuota @ 04/27/25 07:11:00.971
  STEP: Ensuring resource quota status is calculated @ 04/27/25 07:11:00.975
  STEP: Creating a Service @ 04/27/25 07:11:02.98
  STEP: Creating a NodePort Service @ 04/27/25 07:11:02.996
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/27/25 07:11:03.016
  STEP: Ensuring resource quota status captures service creation @ 04/27/25 07:11:03.041
  STEP: Deleting Services @ 04/27/25 07:11:05.046
  STEP: Ensuring resource quota status released usage @ 04/27/25 07:11:05.08
  I0427 07:11:07.083571 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7740" for this suite. @ 04/27/25 07:11:07.087
• [11.146 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 04/27/25 07:11:07.091
  I0427 07:11:07.091417 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 07:11:07.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:11:07.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:11:07.105
  STEP: Creating a ResourceQuota @ 04/27/25 07:11:07.111
  STEP: Getting a ResourceQuota @ 04/27/25 07:11:07.114
  STEP: Updating a ResourceQuota @ 04/27/25 07:11:07.116
  STEP: Verifying a ResourceQuota was modified @ 04/27/25 07:11:07.12
  STEP: Deleting a ResourceQuota @ 04/27/25 07:11:07.122
  STEP: Verifying the deleted ResourceQuota @ 04/27/25 07:11:07.126
  I0427 07:11:07.128725 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3420" for this suite. @ 04/27/25 07:11:07.205
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/27/25 07:11:07.226
  I0427 07:11:07.226574 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/27/25 07:11:07.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:11:07.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:11:07.304
  STEP: create the container to handle the HTTPGet hook request. @ 04/27/25 07:11:07.321
  STEP: create the pod with lifecycle hook @ 04/27/25 07:11:09.348
  STEP: delete the pod with lifecycle hook @ 04/27/25 07:11:11.36
  STEP: check prestop hook @ 04/27/25 07:11:13.374
  I0427 07:11:13.383342 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5379" for this suite. @ 04/27/25 07:11:13.391
• [6.171 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1537
  STEP: Creating a kubernetes client @ 04/27/25 07:11:13.398
  I0427 07:11:13.398127 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:11:13.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:11:13.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:11:13.415
  STEP: creating Agnhost RC @ 04/27/25 07:11:13.422
  I0427 07:11:13.422164 25 kubectl.go:1544] namespace kubectl-7052
  I0427 07:11:13.422222 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-7052 create -f -'
  I0427 07:11:13.624823 25 builder.go:146] stderr: ""
  I0427 07:11:13.624890 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/27/25 07:11:13.624
  I0427 07:11:14.629552 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 07:11:14.629597 25 framework.go:733] Found 1 / 1
  I0427 07:11:14.629615 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0427 07:11:14.632018 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 07:11:14.632065 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0427 07:11:14.632076 25 kubectl.go:1551] wait on agnhost-primary startup in kubectl-7052 
  I0427 07:11:14.632122 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-7052 logs agnhost-primary-cbm5s agnhost-primary'
  I0427 07:11:14.704656 25 builder.go:146] stderr: ""
  I0427 07:11:14.704742 25 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/27/25 07:11:14.704
  I0427 07:11:14.704861 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-7052 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0427 07:11:14.784957 25 builder.go:146] stderr: ""
  I0427 07:11:14.785054 25 builder.go:147] stdout: "service/rm2 exposed\n"
  I0427 07:11:14.793589 25 utils.go:1203] Service rm2 in namespace kubectl-7052 found.
  STEP: exposing service @ 04/27/25 07:11:16.8
  I0427 07:11:16.800328 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-7052 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0427 07:11:16.872962 25 builder.go:146] stderr: ""
  I0427 07:11:16.873026 25 builder.go:147] stdout: "service/rm3 exposed\n"
  I0427 07:11:16.879553 25 utils.go:1203] Service rm3 in namespace kubectl-7052 found.
  I0427 07:11:18.888441 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7052" for this suite. @ 04/27/25 07:11:18.894
• [5.505 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469
  STEP: Creating a kubernetes client @ 04/27/25 07:11:18.904
  I0427 07:11:18.904157 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption @ 04/27/25 07:11:18.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:11:18.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:11:18.932
  I0427 07:11:18.959028 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0427 07:12:18.963918 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 04/27/25 07:12:18.966
  STEP: Adding a custom resource @ 04/27/25 07:12:18.966
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 04/27/25 07:12:18.974
  I0427 07:12:18.981478 25 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 04/27/25 07:12:18.981
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 04/27/25 07:12:20.991
  I0427 07:12:20.995575 25 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 04/27/25 07:12:20.995
  STEP: Verifying the pod has the pod disruption condition @ 04/27/25 07:12:23.002
  I0427 07:12:23.005051 25 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0427 07:12:23.533092 25 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 04/27/25 07:12:23.599
  STEP: Removing a custom resource @ 04/27/25 07:12:23.621
  STEP: Removing a custom resource @ 04/27/25 07:12:23.636
  I0427 07:12:23.651954 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5578" for this suite. @ 04/27/25 07:12:23.658
• [64.764 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/27/25 07:12:23.668
  I0427 07:12:23.668771 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename events @ 04/27/25 07:12:23.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:23.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:23.693
  STEP: creating a test event @ 04/27/25 07:12:23.701
  STEP: listing events in all namespaces @ 04/27/25 07:12:23.707
  STEP: listing events in test namespace @ 04/27/25 07:12:23.713
  STEP: listing events with field selection filtering on source @ 04/27/25 07:12:23.717
  STEP: listing events with field selection filtering on reportingController @ 04/27/25 07:12:23.721
  STEP: getting the test event @ 04/27/25 07:12:23.726
  STEP: patching the test event @ 04/27/25 07:12:23.732
  STEP: getting the test event @ 04/27/25 07:12:23.748
  STEP: updating the test event @ 04/27/25 07:12:23.753
  STEP: getting the test event @ 04/27/25 07:12:23.76
  STEP: deleting the test event @ 04/27/25 07:12:23.765
  STEP: listing events in all namespaces @ 04/27/25 07:12:23.774
  STEP: listing events in test namespace @ 04/27/25 07:12:23.78
  I0427 07:12:23.786962 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8483" for this suite. @ 04/27/25 07:12:23.792
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1865
  STEP: Creating a kubernetes client @ 04/27/25 07:12:23.806
  I0427 07:12:23.806343 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:12:23.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:23.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:23.837
  STEP: Starting the proxy @ 04/27/25 07:12:23.845
  I0427 07:12:23.845451 25 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-1864 proxy --unix-socket=/tmp/kubectl-proxy-unix3540161545/test'
  STEP: retrieving proxy /api/ output @ 04/27/25 07:12:23.905
  I0427 07:12:23.906439 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1864" for this suite. @ 04/27/25 07:12:23.913
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/27/25 07:12:23.919
  I0427 07:12:23.919200 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename aggregator @ 04/27/25 07:12:23.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:23.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:23.939
  I0427 07:12:23.945023 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Registering the sample API server. @ 04/27/25 07:12:23.945
  I0427 07:12:24.345107 25 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0427 07:12:24.371802 25 deployment.go:223] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I0427 07:12:26.436158 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:28.440579 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:30.440427 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:32.444035 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:34.440857 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:36.440574 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:38.442583 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:40.441535 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:42.446408 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:44.444390 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:46.440684 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5b97cd4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0427 07:12:48.580024 25 aggregator.go:755] Waited 119.142238ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/27/25 07:12:48.629
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/27/25 07:12:48.634
  STEP: List APIServices @ 04/27/25 07:12:48.641
  I0427 07:12:48.646095 25 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/27/25 07:12:48.646
  I0427 07:12:48.662375 25 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/27/25 07:12:48.662
  I0427 07:12:48.677051 25 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.April, 27, 7, 12, 48, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/27/25 07:12:48.677
  I0427 07:12:48.681711 25 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-04-27 07:12:48 +0000 UTC Passed all checks passed}
  I0427 07:12:48.681836 25 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:12:48.681865 25 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/27/25 07:12:48.681
  I0427 07:12:48.695794 25 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2132109208" @ 04/27/25 07:12:48.695
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/27/25 07:12:48.712
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/27/25 07:12:48.725
  STEP: Patch APIService Status @ 04/27/25 07:12:48.728
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/27/25 07:12:48.737
  I0427 07:12:48.742865 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-04-27 07:12:48 +0000 UTC Passed all checks passed}
  I0427 07:12:48.742928 25 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:12:48.742947 25 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0427 07:12:48.742963 25 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/27/25 07:12:48.742
  STEP: Confirm that the generated APIService has been deleted @ 04/27/25 07:12:48.752
  I0427 07:12:48.752472 25 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0427 07:12:48.756938 25 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0427 07:12:48.756995 25 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0427 07:12:48.928512 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6332" for this suite. @ 04/27/25 07:12:48.936
• [25.026 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/27/25 07:12:48.945
  I0427 07:12:48.945150 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename server-version @ 04/27/25 07:12:48.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:48.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:48.975
  STEP: Request ServerVersion @ 04/27/25 07:12:48.981
  STEP: Confirm major version @ 04/27/25 07:12:48.984
  I0427 07:12:48.984904 25 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/27/25 07:12:48.984
  I0427 07:12:48.984967 25 server_version.go:58] cleanMinorVersion: 32
  I0427 07:12:48.984995 25 server_version.go:62] Minor version: 32
  I0427 07:12:48.985138 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4721" for this suite. @ 04/27/25 07:12:49.036
• [0.104 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/27/25 07:12:49.049
  I0427 07:12:49.049790 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/27/25 07:12:49.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:49.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:49.073
  STEP: fetching the /apis discovery document @ 04/27/25 07:12:49.085
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/27/25 07:12:49.089
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/27/25 07:12:49.089
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/27/25 07:12:49.089
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/27/25 07:12:49.092
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/27/25 07:12:49.092
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/27/25 07:12:49.095
  I0427 07:12:49.095536 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1182" for this suite. @ 04/27/25 07:12:49.137
• [0.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/27/25 07:12:49.145
  I0427 07:12:49.145368 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:12:49.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:49.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:49.173
  STEP: Creating projection with secret that has name projected-secret-test-7fb61e58-321c-4146-8aed-dc249bccbce2 @ 04/27/25 07:12:49.179
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:12:49.19
  STEP: Saw pod success @ 04/27/25 07:12:53.222
  I0427 07:12:53.224018 25 output.go:207] Trying to get logs from node node1 pod pod-projected-secrets-8e45cebc-95d8-4881-964c-da505be80985 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:12:53.227
  I0427 07:12:53.241546 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8859" for this suite. @ 04/27/25 07:12:53.245
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/27/25 07:12:53.25
  I0427 07:12:53.250687 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 07:12:53.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:53.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:53.267
  I0427 07:12:53.269982 25 deployment.go:1645] Creating simple deployment test-new-deployment
  I0427 07:12:53.278558 25 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 04/27/25 07:12:55.29
  STEP: updating a scale subresource @ 04/27/25 07:12:55.292
  STEP: verifying the deployment Spec.Replicas was modified @ 04/27/25 07:12:55.296
  STEP: Patch a scale subresource @ 04/27/25 07:12:55.298
  I0427 07:12:55.317064 25 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6827da7-8db5-4d7d-a908-c22e82b4263e",
      ResourceVersion: (string) (len=5) "44237",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881334773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-74c94d7b6b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 07:12:55.332942 25 deployment.go:40] New ReplicaSet "test-new-deployment-74c94d7b6b" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-74c94d7b6b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f184c27-d10e-4ba0-b3b0-1d361789274f",
      ResourceVersion: (string) (len=5) "44244",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881334773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "e6827da7-8db5-4d7d-a908-c22e82b4263e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 36 38 32 37 64  61 37 2d 38 64 62 35 2d  |\"e6827da7-8db5-|
              00000120  34 64 37 64 2d 61 39 30  38 2d 63 32 32 65 38 32  |4d7d-a908-c22e82|
              00000130  62 34 32 36 33 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b4263e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:12:55.342262 25 deployment.go:68] Pod "test-new-deployment-74c94d7b6b-6b9f2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-74c94d7b6b-6b9f2",
      GenerateName: (string) (len=31) "test-new-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9afb9c7-7ca9-4f70-80e7-ccd57d927254",
      ResourceVersion: (string) (len=5) "44198",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881334773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "4f184c27-d10e-4ba0-b3b0-1d361789274f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  31 38 34 63 32 37 2d 64  |d\":\"4f184c27-d|
              00000090  31 30 65 2d 34 62 61 30  2d 62 33 62 30 2d 31 64  |10e-4ba0-b3b0-1d|
              000000a0  33 36 31 37 38 39 32 37  34 66 5c 22 7d 22 3a 7b  |361789274f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 33 31 5c 22 7d 22  |2.20.166.131\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8bf7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8bf7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.131",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.131"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881334773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881334773,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://7ec36fff00b9ffa2fbf8a03e5921d8156b67e7d161c66c1d3471a6a85f6da41c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j8bf7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 07:12:55.348177 25 deployment.go:68] Pod "test-new-deployment-74c94d7b6b-hbv8m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-74c94d7b6b-hbv8m",
      GenerateName: (string) (len=31) "test-new-deployment-74c94d7b6b-",
      Namespace: (string) (len=14) "deployment-796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f8f1df4-c152-4346-8f1f-f907987de50a",
      ResourceVersion: (string) (len=5) "44245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881334775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "74c94d7b6b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-74c94d7b6b",
          UID: (types.UID) (len=36) "4f184c27-d10e-4ba0-b3b0-1d361789274f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 66  31 38 34 63 32 37 2d 64  |d\":\"4f184c27-d|
              00000090  31 30 65 2d 34 62 61 30  2d 62 33 62 30 2d 31 64  |10e-4ba0-b3b0-1d|
              000000a0  33 36 31 37 38 39 32 37  34 66 5c 22 7d 22 3a 7b  |361789274f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mnkk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mnkk6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881334775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881334775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mnkk6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 07:12:55.354027 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-796" for this suite. @ 04/27/25 07:12:55.365
• [2.126 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1085
  STEP: Creating a kubernetes client @ 04/27/25 07:12:55.377
  I0427 07:12:55.377273 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:12:55.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:55.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:55.409
  STEP: running the image registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 @ 04/27/25 07:12:55.417
  I0427 07:12:55.417264 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-5263 run e2e-test-httpd-pod --image=registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0427 07:12:55.492081 25 builder.go:146] stderr: ""
  I0427 07:12:55.492137 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/27/25 07:12:55.492
  I0427 07:12:55.492258 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-5263 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0427 07:12:55.558508 25 builder.go:146] stderr: ""
  I0427 07:12:55.558564 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 @ 04/27/25 07:12:55.558
  I0427 07:12:55.561509 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-5263 delete pods e2e-test-httpd-pod'
  I0427 07:12:56.861164 25 builder.go:146] stderr: ""
  I0427 07:12:56.861219 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0427 07:12:56.861345 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5263" for this suite. @ 04/27/25 07:12:56.865
• [1.492 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/27/25 07:12:56.869
  I0427 07:12:56.869205 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:12:56.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:56.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:56.881
  STEP: creating a secret @ 04/27/25 07:12:56.883
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/27/25 07:12:56.886
  STEP: patching the secret @ 04/27/25 07:12:56.887
  STEP: deleting the secret using a LabelSelector @ 04/27/25 07:12:56.892
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/27/25 07:12:56.896
  I0427 07:12:56.897800 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8427" for this suite. @ 04/27/25 07:12:56.966
• [0.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 04/27/25 07:12:56.969
  I0427 07:12:56.969461 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:12:56.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:12:56.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:12:56.979
  STEP: running the image registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 @ 04/27/25 07:12:56.982
  I0427 07:12:56.982174 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3431 run e2e-test-httpd-pod --image=registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0427 07:12:57.030230 25 builder.go:146] stderr: ""
  I0427 07:12:57.030274 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/27/25 07:12:57.03
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/27/25 07:13:02.081
  I0427 07:13:02.081806 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3431 get pod e2e-test-httpd-pod -o json'
  I0427 07:13:02.122441 25 builder.go:146] stderr: ""
  I0427 07:13:02.122535 25 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-04-27T07:12:57Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-3431\",\n        \"resourceVersion\": \"44316\",\n        \"uid\": \"9643cd3d-85b0-463b-8686-869cacca8e98\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mspgm\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"node1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-mspgm\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-27T07:12:58Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-27T07:12:57Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-27T07:12:58Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-27T07:12:58Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-04-27T07:12:57Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://6e67b1f5f10acffb88606b26d25e1579ccd1313bbe9bda06f15669378795f53c\",\n                \"image\": \"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-04-27T07:12:58Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mspgm\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"192.168.227.151\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.227.151\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.20.166.187\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.20.166.187\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-04-27T07:12:57Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/27/25 07:13:02.122
  I0427 07:13:02.122668 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3431 replace -f -'
  I0427 07:13:02.205608 25 builder.go:146] stderr: ""
  I0427 07:13:02.205645 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/busybox:1.36.1-1 @ 04/27/25 07:13:02.205
  I0427 07:13:02.209259 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3431 delete pods e2e-test-httpd-pod'
  I0427 07:13:03.881791 25 builder.go:146] stderr: ""
  I0427 07:13:03.881852 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0427 07:13:03.881937 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3431" for this suite. @ 04/27/25 07:13:03.885
• [6.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124
  STEP: Creating a kubernetes client @ 04/27/25 07:13:03.889
  I0427 07:13:03.889581 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption @ 04/27/25 07:13:03.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:13:03.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:13:03.902
  I0427 07:13:03.911191 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0427 07:14:03.916196 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/27/25 07:14:03.919
  STEP: Adding a custom resource @ 04/27/25 07:14:03.919
  I0427 07:14:03.937416 25 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0427 07:14:03.952722 25 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/27/25 07:14:03.952
  I0427 07:14:03.982403 25 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0427 07:14:03.996848 25 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/27/25 07:14:03.996
  I0427 07:14:04.036109 25 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0427 07:14:04.053474 25 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/27/25 07:14:04.053
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/27/25 07:14:06.09
  STEP: Removing a custom resource @ 04/27/25 07:14:08.133
  STEP: Removing a custom resource @ 04/27/25 07:14:08.141
  STEP: Removing a custom resource @ 04/27/25 07:14:08.149
  I0427 07:14:08.158070 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3796" for this suite. @ 04/27/25 07:14:08.16
• [64.275 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/27/25 07:14:08.165
  I0427 07:14:08.165161 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/27/25 07:14:08.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:14:08.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:14:08.177
  STEP: creating a policy with variables @ 04/27/25 07:14:08.183
  STEP: waiting until the marker is denied @ 04/27/25 07:14:08.198
  STEP: testing a replicated Deployment to be allowed @ 04/27/25 07:14:08.708
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/27/25 07:14:08.724
  I0427 07:14:08.801252 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8409" for this suite. @ 04/27/25 07:14:08.817
• [0.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/27/25 07:14:08.835
  I0427 07:14:08.835996 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:14:08.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:14:08.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:14:08.861
  STEP: Create set of pods @ 04/27/25 07:14:08.869
  I0427 07:14:08.883812 25 pods.go:871] created test-pod-1
  I0427 07:14:08.890362 25 pods.go:871] created test-pod-2
  I0427 07:14:08.908559 25 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/27/25 07:14:08.908
  STEP: waiting for all pods to be deleted @ 04/27/25 07:14:10.938
  I0427 07:14:10.944847 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0427 07:14:11.942393 25 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0427 07:14:12.941713 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7707" for this suite. @ 04/27/25 07:14:12.944
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 04/27/25 07:14:12.947
  I0427 07:14:12.947520 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 07:14:12.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:14:12.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:14:12.957
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/27/25 07:14:12.96
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/27/25 07:14:12.96
  STEP: creating a pod to probe DNS @ 04/27/25 07:14:12.96
  STEP: submitting the pod to kubernetes @ 04/27/25 07:14:12.96
  STEP: retrieving the pod @ 04/27/25 07:14:16.977
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:14:16.98
  I0427 07:14:16.988276 25 dns_common.go:546] DNS probes using dns-3103/dns-test-ec0e20b5-411e-4fc2-8cd5-0a673d22f6ff succeeded

  STEP: deleting the pod @ 04/27/25 07:14:16.988
  I0427 07:14:16.996537 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3103" for this suite. @ 04/27/25 07:14:17
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/27/25 07:14:17.004
  I0427 07:14:17.004894 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename podtemplate @ 04/27/25 07:14:17.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:14:17.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:14:17.017
  I0427 07:14:17.036579 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4198" for this suite. @ 04/27/25 07:14:17.101
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 04/27/25 07:14:17.105
  I0427 07:14:17.105630 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:14:17.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:14:17.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:14:17.115
  STEP: Creating pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526 @ 04/27/25 07:14:17.118
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 07:14:19.132
  I0427 07:14:19.141642 25 container_probe.go:1749] Initial restart count of pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 is 0
  I0427 07:14:19.151676 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:21.155422 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:23.159869 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:25.162844 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:27.166578 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:29.169913 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:31.172952 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:33.176773 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:35.185424 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:37.189446 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:39.196459 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:41.200450 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:43.205731 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:45.209233 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:47.213065 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:49.218025 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:51.221783 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:53.225710 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:55.228828 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:57.233623 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:14:59.236194 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:01.239066 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:03.242819 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:05.247404 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:07.251001 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:09.254960 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:11.258083 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:13.262630 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:15.266564 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:17.274000 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:19.284732 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:21.288748 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:23.291917 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:25.297587 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:27.304004 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:29.308338 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:31.311708 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:33.314502 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:35.319195 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:37.323800 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:39.327772 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:41.332253 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:43.337519 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:45.340428 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:47.343191 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:49.346124 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:51.348889 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:53.352580 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:55.355743 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:57.359704 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:15:59.362277 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:01.366355 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:03.370151 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:05.373165 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:07.376252 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:09.379984 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:11.383862 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:13.387788 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:15.391618 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:17.395654 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:19.400138 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:21.404506 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:23.409362 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:25.416443 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:27.422953 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:29.432650 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:31.439670 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:33.443910 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:35.447710 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:37.451469 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:39.455686 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:41.458683 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:43.463186 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:45.467270 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:47.470611 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:49.474440 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:51.480201 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:53.485348 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:55.489203 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:57.492976 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:16:59.497324 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:01.501573 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:03.506326 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:05.509667 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:07.514258 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:09.518613 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:11.521575 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:13.524838 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:15.528528 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:17.534072 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:19.536854 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:21.539913 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:23.544221 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:25.552086 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:27.556499 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:29.560895 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:31.565929 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:33.570365 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:35.574729 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:37.578852 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:39.581807 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:41.584856 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:43.588560 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:45.591527 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:47.594968 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:49.598835 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:51.601183 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:53.605026 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:55.608893 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:57.614440 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:17:59.618435 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:01.621833 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:03.626087 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:05.630727 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:07.634165 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:09.638705 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:11.642117 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:13.645047 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:15.648495 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  I0427 07:18:17.651457 25 container_probe.go:1759] Get pod busybox-38482243-885f-4398-8ba6-4e76e9265f72 in namespace container-probe-4526
  STEP: deleting the pod @ 04/27/25 07:18:19.652
  I0427 07:18:19.662784 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4526" for this suite. @ 04/27/25 07:18:19.666
• [242.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 04/27/25 07:18:19.673
  I0427 07:18:19.673043 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 07:18:19.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:18:19.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:18:19.686
  STEP: Creating service test in namespace statefulset-3934 @ 04/27/25 07:18:19.688
  STEP: Creating a new StatefulSet @ 04/27/25 07:18:19.692
  I0427 07:18:19.698948 25 wait.go:40] Found 0 stateful pods, waiting for 3
  I0427 07:18:29.703920 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:18:29.703974 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:18:29.703984 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 to registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.39-4 @ 04/27/25 07:18:29.71
  I0427 07:18:29.715969 25 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 04/27/25 07:18:29.716
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/27/25 07:18:39.724
  STEP: Performing a canary update @ 04/27/25 07:18:39.724
  I0427 07:18:39.731764 25 statefulset.go:2510] Updating stateful set ss2
  I0427 07:18:39.738001 25 wait.go:74] Waiting for Pod statefulset-3934/ss2-2 to have revision ss2-56f5fc556d update revision ss2-b647547d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/27/25 07:18:49.74
  I0427 07:18:49.823340 25 wait.go:40] Found 2 stateful pods, waiting for 3
  I0427 07:18:59.796645 25 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:18:59.796712 25 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:18:59.796727 25 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/27/25 07:18:59.805
  I0427 07:18:59.815452 25 statefulset.go:2510] Updating stateful set ss2
  I0427 07:18:59.824754 25 wait.go:74] Waiting for Pod statefulset-3934/ss2-1 to have revision ss2-56f5fc556d update revision ss2-b647547d5
  I0427 07:19:09.829143 25 statefulset.go:2510] Updating stateful set ss2
  I0427 07:19:09.833889 25 wait.go:56] Waiting for StatefulSet statefulset-3934/ss2 to complete update
  I0427 07:19:09.833934 25 wait.go:63] Waiting for Pod statefulset-3934/ss2-0 to have revision ss2-56f5fc556d update revision ss2-b647547d5
  I0427 07:19:19.836681 25 statefulset.go:138] Deleting all statefulset in ns statefulset-3934
  I0427 07:19:19.838881 25 rest.go:152] Scaling statefulset ss2 to 0
  I0427 07:19:29.851821 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 07:19:29.854390 25 rest.go:90] Deleting statefulset ss2
  I0427 07:19:29.862484 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3934" for this suite. @ 04/27/25 07:19:29.866
• [70.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 04/27/25 07:19:29.87
  I0427 07:19:29.870095 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:19:29.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:29.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:29.881
  STEP: Setting up server cert @ 04/27/25 07:19:29.893
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:19:30.052
  STEP: Deploying the webhook pod @ 04/27/25 07:19:30.056
  STEP: Wait for the deployment to be ready @ 04/27/25 07:19:30.062
  I0427 07:19:30.066507 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 07:19:32.074
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:19:32.081
  I0427 07:19:33.081299 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 07:19:33.086767 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9341-crds.webhook.example.com via the AdmissionRegistration API @ 04/27/25 07:19:33.594
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/27/25 07:19:33.603
  I0427 07:19:36.169092 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6485" for this suite. @ 04/27/25 07:19:36.172
  STEP: Destroying namespace "webhook-markers-8868" for this suite. @ 04/27/25 07:19:36.175
• [6.309 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 04/27/25 07:19:36.178
  I0427 07:19:36.178745 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 07:19:36.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:36.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:36.193
  STEP: Creating simple DaemonSet "daemon-set" @ 04/27/25 07:19:36.278
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/27/25 07:19:36.282
  I0427 07:19:36.376453 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:19:36.376493 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 07:19:37.288881 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 07:19:37.288920 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 07:19:38.289786 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 07:19:38.289833 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/27/25 07:19:38.292
  STEP: DeleteCollection of the DaemonSets @ 04/27/25 07:19:38.294
  STEP: Verify that ReplicaSets have been deleted @ 04/27/25 07:19:38.297
  I0427 07:19:38.302732 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46011"},"items":null}

  I0427 07:19:38.312981 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46013"},"items":[{"metadata":{"name":"daemon-set-dzpkg","generateName":"daemon-set-","namespace":"daemonsets-2352","uid":"dd0cd49c-1ca7-4640-979d-8df8ef9d777b","resourceVersion":"46012","creationTimestamp":"2025-04-27T07:19:36Z","deletionTimestamp":"2025-04-27T07:20:08Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7fbbdbd794","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1252cc8e-0502-4b2e-a157-62f1feb72113","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-27T07:19:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1252cc8e-0502-4b2e-a157-62f1feb72113\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-27T07:19:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.104.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-58qgf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-58qgf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"node2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["node2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"}],"hostIP":"192.168.227.152","hostIPs":[{"ip":"192.168.227.152"}],"podIP":"172.20.104.16","podIPs":[{"ip":"172.20.104.16"}],"startTime":"2025-04-27T07:19:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-27T07:19:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4","imageID":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"containerd://da4f206a6c4e6a593ad1bb115774898987dd9fce5154653cc48b5ee27529be76","started":true,"volumeMounts":[{"name":"kube-api-access-58qgf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gt2lg","generateName":"daemon-set-","namespace":"daemonsets-2352","uid":"5dbe80b4-049b-417e-8162-9669a1ec5f6f","resourceVersion":"46004","creationTimestamp":"2025-04-27T07:19:36Z","labels":{"controller-revision-hash":"7fbbdbd794","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1252cc8e-0502-4b2e-a157-62f1feb72113","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-27T07:19:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1252cc8e-0502-4b2e-a157-62f1feb72113\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-27T07:19:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.135.13\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-rw6vx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-rw6vx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"node3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["node3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"}],"hostIP":"192.168.227.153","hostIPs":[{"ip":"192.168.227.153"}],"podIP":"172.20.135.13","podIPs":[{"ip":"172.20.135.13"}],"startTime":"2025-04-27T07:19:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-27T07:19:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4","imageID":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"containerd://331e5e68da5357fae246488332fd5116edea0cd66f9bb2f06e58757fd334307e","started":true,"volumeMounts":[{"name":"kube-api-access-rw6vx","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-hwmh2","generateName":"daemon-set-","namespace":"daemonsets-2352","uid":"7ba7ac79-6807-47f9-9ad0-5b3228e4bdf7","resourceVersion":"46013","creationTimestamp":"2025-04-27T07:19:36Z","deletionTimestamp":"2025-04-27T07:20:08Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7fbbdbd794","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"1252cc8e-0502-4b2e-a157-62f1feb72113","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-04-27T07:19:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1252cc8e-0502-4b2e-a157-62f1feb72113\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-04-27T07:19:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.20.166.190\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5lzg8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5lzg8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"node1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["node1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:37Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:37Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-04-27T07:19:36Z"}],"hostIP":"192.168.227.151","hostIPs":[{"ip":"192.168.227.151"}],"podIP":"172.20.166.190","podIPs":[{"ip":"172.20.166.190"}],"startTime":"2025-04-27T07:19:36Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-04-27T07:19:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4","imageID":"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"containerd://1bf34ee6f72a76c2de1e69be2e5d2c3343c199b767036fe933eea1594696ba64","started":true,"volumeMounts":[{"name":"kube-api-access-5lzg8","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0427 07:19:38.397807 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2352" for this suite. @ 04/27/25 07:19:38.402
• [2.229 seconds]
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 04/27/25 07:19:38.407
  I0427 07:19:38.407986 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename security-context-test @ 04/27/25 07:19:38.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:38.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:38.424
  I0427 07:19:42.459393 25 security_context.go:538] Got logs for pod "busybox-privileged-false-6ec31da0-c1de-48aa-af93-acfc87feede7": "ip: RTNETLINK answers: Operation not permitted\n"
  I0427 07:19:42.459510 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2301" for this suite. @ 04/27/25 07:19:42.462
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878
  STEP: Creating a kubernetes client @ 04/27/25 07:19:42.468
  I0427 07:19:42.468164 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 07:19:42.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:42.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:42.479
  STEP: Creating a Serviceaccount "e2e-sa-8wl6c" in namespace "svcaccounts-2672" @ 04/27/25 07:19:42.482
  STEP: Creating a ServiceaccountToken "e2e-sa-8wl6c" in namespace "svcaccounts-2672" @ 04/27/25 07:19:42.484
  STEP: Creating a TokenReview for "e2e-sa-8wl6c" in namespace "svcaccounts-2672" @ 04/27/25 07:19:42.488
  I0427 07:19:42.490655 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2672" for this suite. @ 04/27/25 07:19:42.564
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/27/25 07:19:42.567
  I0427 07:19:42.567901 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:19:42.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:42.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:42.578
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:19:42.581
  STEP: Saw pod success @ 04/27/25 07:19:46.594
  I0427 07:19:46.596922 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-d5e86931-742d-4f74-b048-95f935317198 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:19:46.601
  I0427 07:19:46.610113 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3843" for this suite. @ 04/27/25 07:19:46.613
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 04/27/25 07:19:46.618
  I0427 07:19:46.618415 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:19:46.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:46.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:46.629
  STEP: creating a replication controller @ 04/27/25 07:19:46.633
  I0427 07:19:46.633200 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 create -f -'
  I0427 07:19:46.713652 25 builder.go:146] stderr: ""
  I0427 07:19:46.713697 25 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/27/25 07:19:46.713
  I0427 07:19:46.713792 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 07:19:46.765880 25 builder.go:146] stderr: ""
  I0427 07:19:46.765928 25 builder.go:147] stdout: "update-demo-nautilus-md99v update-demo-nautilus-z6gqb "
  I0427 07:19:46.765974 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods update-demo-nautilus-md99v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 07:19:46.817372 25 builder.go:146] stderr: ""
  I0427 07:19:46.817407 25 builder.go:147] stdout: ""
  I0427 07:19:46.817435 25 kubectl.go:2509] update-demo-nautilus-md99v is created but not running
  I0427 07:19:51.818441 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0427 07:19:51.920548 25 builder.go:146] stderr: ""
  I0427 07:19:51.920595 25 builder.go:147] stdout: "update-demo-nautilus-md99v update-demo-nautilus-z6gqb "
  I0427 07:19:51.920642 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods update-demo-nautilus-md99v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 07:19:51.966781 25 builder.go:146] stderr: ""
  I0427 07:19:51.966829 25 builder.go:147] stdout: "true"
  I0427 07:19:51.966875 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods update-demo-nautilus-md99v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 07:19:52.013095 25 builder.go:146] stderr: ""
  I0427 07:19:52.013146 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 07:19:52.013159 25 kubectl.go:2400] validating pod update-demo-nautilus-md99v
  I0427 07:19:52.018098 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 07:19:52.018178 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 07:19:52.018195 25 kubectl.go:2527] update-demo-nautilus-md99v is verified up and running
  I0427 07:19:52.018252 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods update-demo-nautilus-z6gqb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0427 07:19:52.071803 25 builder.go:146] stderr: ""
  I0427 07:19:52.071873 25 builder.go:147] stdout: "true"
  I0427 07:19:52.071950 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods update-demo-nautilus-z6gqb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0427 07:19:52.131575 25 builder.go:146] stderr: ""
  I0427 07:19:52.131624 25 builder.go:147] stdout: "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/nautilus:1.7"
  I0427 07:19:52.131638 25 kubectl.go:2400] validating pod update-demo-nautilus-z6gqb
  I0427 07:19:52.136571 25 kubectl.go:2420] got data: {
    "image": "nautilus.jpg"
  }

  I0427 07:19:52.136640 25 kubectl.go:2425] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0427 07:19:52.136654 25 kubectl.go:2527] update-demo-nautilus-z6gqb is verified up and running
  STEP: using delete to clean up resources @ 04/27/25 07:19:52.136
  I0427 07:19:52.136732 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 delete --grace-period=0 --force -f -'
  I0427 07:19:52.200516 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:19:52.200576 25 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0427 07:19:52.200661 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get rc,svc -l name=update-demo --no-headers'
  I0427 07:19:52.273951 25 builder.go:146] stderr: "No resources found in kubectl-154 namespace.\n"
  I0427 07:19:52.274002 25 builder.go:147] stdout: ""
  I0427 07:19:52.274055 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-154 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0427 07:19:52.342100 25 builder.go:146] stderr: ""
  I0427 07:19:52.342192 25 builder.go:147] stdout: ""
  I0427 07:19:52.342623 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-154" for this suite. @ 04/27/25 07:19:52.347
• [5.735 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 04/27/25 07:19:52.353
  I0427 07:19:52.353746 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:19:52.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:19:52.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:19:52.374
  STEP: Creating pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008 @ 04/27/25 07:19:52.379
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 07:19:54.399
  I0427 07:19:54.402642 25 container_probe.go:1749] Initial restart count of pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a is 0
  I0427 07:19:54.404732 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:19:56.407750 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:19:58.411629 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:00.414981 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:02.418967 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:04.423467 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:06.426875 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:08.430153 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:10.435240 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:12.439275 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:14.443223 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:16.446697 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:18.451425 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:20.456112 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:22.461558 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:24.465227 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:26.469910 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:28.473782 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:30.477692 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:32.487235 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:34.490996 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:36.494461 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:38.501716 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:40.505203 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:42.509379 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:44.512872 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:46.516444 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:48.522750 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:50.527024 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:52.532937 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:54.541733 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:56.547561 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:20:58.554444 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:21:00.561139 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:21:02.567120 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:21:04.572286 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:21:06.575717 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:21:08.584714 25 container_probe.go:1759] Get pod test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a in namespace container-probe-8008
  I0427 07:21:08.584836 25 container_probe.go:1763] Restart count of pod container-probe-8008/test-grpc-0a501068-48c8-4d24-95aa-9de95600e54a is now 1 (1m14.182145447s elapsed)
  STEP: deleting the pod @ 04/27/25 07:21:08.585
  I0427 07:21:08.599743 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8008" for this suite. @ 04/27/25 07:21:08.609
• [76.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/27/25 07:21:08.616
  I0427 07:21:08.616815 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:21:08.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:21:08.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:21:08.636
  STEP: Creating secret with name projected-secret-test-55774c3d-859e-4419-a42c-6e9cb3e6ccfa @ 04/27/25 07:21:08.644
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:21:08.651
  STEP: Saw pod success @ 04/27/25 07:21:12.674
  I0427 07:21:12.677132 25 output.go:207] Trying to get logs from node node1 pod pod-projected-secrets-b9f6c35d-35dd-4c63-8ca0-c6df0dd71118 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:21:12.681
  I0427 07:21:12.692879 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4272" for this suite. @ 04/27/25 07:21:12.696
• [4.085 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/27/25 07:21:12.701
  I0427 07:21:12.701654 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:21:12.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:21:12.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:21:12.721
  STEP: Creating configMap with name configmap-test-volume-map-f477f7a2-b537-49d6-a8db-b4bc5ec862d6 @ 04/27/25 07:21:12.727
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:21:12.731
  STEP: Saw pod success @ 04/27/25 07:21:16.758
  I0427 07:21:16.763521 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-db1eeb9e-d3d8-4efe-9904-0311125b50db container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:21:16.769
  I0427 07:21:16.787978 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9449" for this suite. @ 04/27/25 07:21:16.793
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/27/25 07:21:16.804
  I0427 07:21:16.804769 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:21:16.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:21:16.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:21:16.829
  STEP: creating pod @ 04/27/25 07:21:16.838
  I0427 07:21:18.869354 25 pods.go:83] Pod pod-hostip-19326d36-1155-4f9d-808e-f110c0a1d87e has hostIP: 192.168.227.151
  I0427 07:21:18.869470 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-631" for this suite. @ 04/27/25 07:21:18.874
• [2.077 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/27/25 07:21:18.882
  I0427 07:21:18.882062 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 07:21:18.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:21:18.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:21:18.904
  STEP: create the deployment @ 04/27/25 07:21:18.908
  W0427 07:21:18.915138      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/27/25 07:21:18.915
  STEP: delete the deployment @ 04/27/25 07:21:19.432
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/27/25 07:21:19.447
  STEP: Gathering metrics @ 04/27/25 07:21:19.97
  W0427 07:21:19.976531      25 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0427 07:21:19.976585 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0427 07:21:19.976792 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8740" for this suite. @ 04/27/25 07:21:19.981
• [1.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407
  STEP: Creating a kubernetes client @ 04/27/25 07:21:19.988
  I0427 07:21:19.988485 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 07:21:19.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:21:20.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:21:20.016
  STEP: Creating Indexed job @ 04/27/25 07:21:20.022
  STEP: Ensuring job reaches completions @ 04/27/25 07:21:20.031
  STEP: Ensuring pods with index for job exist @ 04/27/25 07:21:28.058
  I0427 07:21:28.062401 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3806" for this suite. @ 04/27/25 07:21:28.066
• [8.084 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 04/27/25 07:21:28.073
  I0427 07:21:28.073099 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 07:21:28.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:21:28.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:21:28.093
  STEP: Creating a test headless service @ 04/27/25 07:21:28.099
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6368 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6368;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6368 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6368;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6368.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-6368.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6368.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-6368.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-6368.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-6368.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-6368.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-6368.svc;check="$$(dig +notcp +noall +answer +search 71.20.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.20.71_udp@PTR;check="$$(dig +tcp +noall +answer +search 71.20.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.20.71_tcp@PTR;sleep 1; done
   @ 04/27/25 07:21:28.114
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6368 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6368;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6368 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6368;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6368.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6368.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6368.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6368.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6368.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6368.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6368.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6368.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6368.svc;check="$$(dig +notcp +noall +answer +search 71.20.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.20.71_udp@PTR;check="$$(dig +tcp +noall +answer +search 71.20.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.20.71_tcp@PTR;sleep 1; done
   @ 04/27/25 07:21:28.114
  STEP: creating a pod to probe DNS @ 04/27/25 07:21:28.114
  STEP: submitting the pod to kubernetes @ 04/27/25 07:21:28.114
  STEP: retrieving the pod @ 04/27/25 07:21:30.146
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:21:30.153
  I0427 07:21:30.160525 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.168097 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.175490 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.182476 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.192468 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.199333 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.206986 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.213218 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.219856 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.test-service-2.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.227752 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.test-service-2.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.235081 25 dns_common.go:495] Unable to read 10.68.20.71_udp@PTR from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.242473 25 dns_common.go:495] Unable to read 10.68.20.71_tcp@PTR from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.250178 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.257831 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.268970 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.278391 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.288653 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.296904 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.304086 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.310910 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.317979 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.test-service-2.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.325083 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.331535 25 dns_common.go:495] Unable to read 10.68.20.71_udp@PTR from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.338907 25 dns_common.go:495] Unable to read 10.68.20.71_tcp@PTR from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:30.339062 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368 agnhost_udp@dns-test-service.dns-6368.svc agnhost_tcp@dns-test-service.dns-6368.svc agnhost_udp@_http._tcp.dns-test-service.dns-6368.svc agnhost_tcp@_http._tcp.dns-test-service.dns-6368.svc agnhost_udp@_http._tcp.test-service-2.dns-6368.svc agnhost_tcp@_http._tcp.test-service-2.dns-6368.svc 10.68.20.71_udp@PTR 10.68.20.71_tcp@PTR jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6368 jessie_tcp@dns-test-service.dns-6368 jessie_udp@dns-test-service.dns-6368.svc jessie_tcp@dns-test-service.dns-6368.svc jessie_udp@_http._tcp.dns-test-service.dns-6368.svc jessie_tcp@_http._tcp.dns-test-service.dns-6368.svc jessie_udp@_http._tcp.test-service-2.dns-6368.svc jessie_tcp@_http._tcp.test-service-2.dns-6368.svc 10.68.20.71_udp@PTR 10.68.20.71_tcp@PTR]

  I0427 07:21:30.347682 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:21:30.360255 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:21:30.371923 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:21:35.161973 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.164995 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.168070 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.173001 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.182529 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.216754 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.221105 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.226645 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.233668 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.239865 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.244656 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:35.280058 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6368 jessie_tcp@dns-test-service.dns-6368 jessie_udp@dns-test-service.dns-6368.svc jessie_tcp@dns-test-service.dns-6368.svc]

  I0427 07:21:35.289463 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:21:35.296362 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:21:35.305294 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:21:40.166945 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.173435 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.182869 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.190011 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.207953 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.248948 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.255143 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.263675 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.272813 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.280361 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.290629 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:40.337130 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6368 jessie_tcp@dns-test-service.dns-6368 jessie_udp@dns-test-service.dns-6368.svc jessie_tcp@dns-test-service.dns-6368.svc]

  I0427 07:21:40.347164 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:21:40.359515 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:21:40.371366 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:21:45.156758 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.159333 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.163360 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.165537 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.169619 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.183525 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.185413 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.187277 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.188877 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.191006 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.192925 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:45.206737 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6368 jessie_tcp@dns-test-service.dns-6368 jessie_udp@dns-test-service.dns-6368.svc jessie_tcp@dns-test-service.dns-6368.svc]

  I0427 07:21:45.210962 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:21:45.215370 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:21:45.219495 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:21:50.160906 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.163468 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.166742 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.169066 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.173564 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.188632 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.190794 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.192792 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.194954 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.196875 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.198863 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:50.211056 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6368 jessie_tcp@dns-test-service.dns-6368 jessie_udp@dns-test-service.dns-6368.svc jessie_tcp@dns-test-service.dns-6368.svc]

  I0427 07:21:50.214788 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:21:50.219891 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:21:50.223807 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:21:55.159804 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.161785 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.163794 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.165529 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.169112 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.181652 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.183359 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.185006 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.187006 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.188929 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.190771 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:21:55.200853 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6368 jessie_tcp@dns-test-service.dns-6368 jessie_udp@dns-test-service.dns-6368.svc jessie_tcp@dns-test-service.dns-6368.svc]

  I0427 07:21:55.204562 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:21:55.208457 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:21:55.211924 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:22:00.179741 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368 from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:22:00.189798 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-6368.svc from pod dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc: the server could not find the requested resource (get pods dns-test-680ec503-714f-41e1-9f41-105c376178dc)
  I0427 07:22:00.272879 25 dns_common.go:506] Lookups using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc failed for: [agnhost_tcp@dns-test-service.dns-6368 agnhost_tcp@dns-test-service.dns-6368.svc]

  I0427 07:22:00.284219 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:22:00.290283 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:22:00.297167 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:22:05.209126 25 dns_common.go:546] DNS probes using dns-6368/dns-test-680ec503-714f-41e1-9f41-105c376178dc succeeded

  STEP: deleting the pod @ 04/27/25 07:22:05.209
  STEP: deleting the test service @ 04/27/25 07:22:05.222
  STEP: deleting the test headless service @ 04/27/25 07:22:05.249
  I0427 07:22:05.265002 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6368" for this suite. @ 04/27/25 07:22:05.27
• [37.207 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/27/25 07:22:05.279
  I0427 07:22:05.279981 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename tables @ 04/27/25 07:22:05.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:05.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:05.307
  I0427 07:22:05.314706 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-4340" for this suite. @ 04/27/25 07:22:05.371
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 04/27/25 07:22:05.378
  I0427 07:22:05.378242 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl-logs @ 04/27/25 07:22:05.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:05.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:05.401
  STEP: creating a pod @ 04/27/25 07:22:05.408
  I0427 07:22:05.408277 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 run logs-generator --image=registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0427 07:22:05.494143 25 builder.go:146] stderr: ""
  I0427 07:22:05.494433 25 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/27/25 07:22:05.494
  I0427 07:22:05.494588 25 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0427 07:22:07.509093 25 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/27/25 07:22:07.509
  I0427 07:22:07.509177 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 logs logs-generator logs-generator'
  I0427 07:22:07.566723 25 builder.go:146] stderr: ""
  I0427 07:22:07.566797 25 builder.go:147] stdout: "I0427 07:22:06.194973       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/fkx 592\nI0427 07:22:06.395163       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/c2n 534\nI0427 07:22:06.595774       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/hzvr 579\nI0427 07:22:06.795075       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/m2dv 548\nI0427 07:22:06.995511       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/j2s 530\nI0427 07:22:07.196021       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/9f29 419\nI0427 07:22:07.396636       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/g6r8 585\n"
  STEP: limiting log lines @ 04/27/25 07:22:07.566
  I0427 07:22:07.566880 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 logs logs-generator logs-generator --tail=1'
  I0427 07:22:07.622835 25 builder.go:146] stderr: ""
  I0427 07:22:07.622884 25 builder.go:147] stdout: "I0427 07:22:07.596020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/nm86 477\n"
  I0427 07:22:07.622897 25 logs.go:180] got output "I0427 07:22:07.596020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/nm86 477\n"
  STEP: limiting log bytes @ 04/27/25 07:22:07.622
  I0427 07:22:07.622966 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 logs logs-generator logs-generator --limit-bytes=1'
  I0427 07:22:07.682272 25 builder.go:146] stderr: ""
  I0427 07:22:07.682339 25 builder.go:147] stdout: "I"
  I0427 07:22:07.682351 25 logs.go:186] got output "I"
  STEP: exposing timestamps @ 04/27/25 07:22:07.682
  I0427 07:22:07.682459 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 logs logs-generator logs-generator --tail=1 --timestamps'
  I0427 07:22:07.737151 25 builder.go:146] stderr: ""
  I0427 07:22:07.737198 25 builder.go:147] stdout: "2025-04-27T07:22:07.596165711Z I0427 07:22:07.596020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/nm86 477\n"
  I0427 07:22:07.737210 25 logs.go:192] got output "2025-04-27T07:22:07.596165711Z I0427 07:22:07.596020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/nm86 477\n"
  STEP: restricting to a time range @ 04/27/25 07:22:07.737
  I0427 07:22:10.239026 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 logs logs-generator logs-generator --since=1s'
  I0427 07:22:10.315650 25 builder.go:146] stderr: ""
  I0427 07:22:10.315754 25 builder.go:147] stdout: "I0427 07:22:09.395559       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/gxkh 308\nI0427 07:22:09.595978       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/fq6 435\nI0427 07:22:09.795353       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/l9s 254\nI0427 07:22:09.995660       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/rftq 435\nI0427 07:22:10.196120       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/bkq 227\n"
  I0427 07:22:10.316644 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 logs logs-generator logs-generator --since=24h'
  I0427 07:22:10.386427 25 builder.go:146] stderr: ""
  I0427 07:22:10.386494 25 builder.go:147] stdout: "I0427 07:22:06.194973       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/fkx 592\nI0427 07:22:06.395163       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/c2n 534\nI0427 07:22:06.595774       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/hzvr 579\nI0427 07:22:06.795075       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/m2dv 548\nI0427 07:22:06.995511       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/j2s 530\nI0427 07:22:07.196021       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/9f29 419\nI0427 07:22:07.396636       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/g6r8 585\nI0427 07:22:07.596020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/nm86 477\nI0427 07:22:07.795435       1 logs_generator.go:76] 8 POST /api/v1/namespaces/ns/pods/gprm 569\nI0427 07:22:07.995852       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/f48 356\nI0427 07:22:08.195077       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/qgbt 490\nI0427 07:22:08.395493       1 logs_generator.go:76] 11 POST /api/v1/namespaces/kube-system/pods/7d6x 353\nI0427 07:22:08.595959       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/default/pods/lzp 348\nI0427 07:22:08.795331       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/92kz 347\nI0427 07:22:08.995636       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/6w8 446\nI0427 07:22:09.196009       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/brk 468\nI0427 07:22:09.395559       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/gxkh 308\nI0427 07:22:09.595978       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/fq6 435\nI0427 07:22:09.795353       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/l9s 254\nI0427 07:22:09.995660       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/rftq 435\nI0427 07:22:10.196120       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/bkq 227\nI0427 07:22:10.395502       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/nms 368\n"
  I0427 07:22:10.386801 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-logs-8789 delete pod logs-generator'
  I0427 07:22:11.211796 25 builder.go:146] stderr: ""
  I0427 07:22:11.211989 25 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0427 07:22:11.212478 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8789" for this suite. @ 04/27/25 07:22:11.218
• [5.847 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/27/25 07:22:11.225
  I0427 07:22:11.225239 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename proxy @ 04/27/25 07:22:11.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:11.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:11.242
  I0427 07:22:11.246233 25 proxy.go:293] Creating pod...
  I0427 07:22:13.261981 25 proxy.go:317] Creating service...
  I0427 07:22:13.269432 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/DELETE
  I0427 07:22:13.276477 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0427 07:22:13.276571 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/GET
  I0427 07:22:13.280044 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0427 07:22:13.280086 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/HEAD
  I0427 07:22:13.283380 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0427 07:22:13.283423 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/OPTIONS
  I0427 07:22:13.287095 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0427 07:22:13.287149 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/PATCH
  I0427 07:22:13.289989 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0427 07:22:13.290044 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/POST
  I0427 07:22:13.294597 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0427 07:22:13.294705 25 proxy.go:354] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/pods/agnhost/proxy/some/path/with/PUT
  I0427 07:22:13.299057 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0427 07:22:13.299144 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/DELETE
  I0427 07:22:13.304361 25 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0427 07:22:13.304426 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/GET
  I0427 07:22:13.309198 25 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0427 07:22:13.309289 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/HEAD
  I0427 07:22:13.315516 25 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0427 07:22:13.315624 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/OPTIONS
  I0427 07:22:13.322891 25 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0427 07:22:13.322994 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/PATCH
  I0427 07:22:13.329170 25 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0427 07:22:13.329233 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/POST
  I0427 07:22:13.335233 25 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0427 07:22:13.335370 25 proxy.go:365] Starting http.Client for https://10.68.0.1:443/api/v1/namespaces/proxy-5808/services/test-service/proxy/some/path/with/PUT
  I0427 07:22:13.340021 25 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0427 07:22:13.340191 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5808" for this suite. @ 04/27/25 07:22:13.348
• [2.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/27/25 07:22:13.359
  I0427 07:22:13.359991 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:22:13.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:13.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:13.391
  STEP: Creating configMap with name projected-configmap-test-volume-4ea05967-2930-434a-9fa4-fe3d911ad7b9 @ 04/27/25 07:22:13.396
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:22:13.401
  STEP: Saw pod success @ 04/27/25 07:22:17.425
  I0427 07:22:17.427680 25 output.go:207] Trying to get logs from node node1 pod pod-projected-configmaps-008447f0-0064-4e6d-b19c-8235e112dba8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:22:17.431
  I0427 07:22:17.442626 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-776" for this suite. @ 04/27/25 07:22:17.445
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/27/25 07:22:17.449
  I0427 07:22:17.449738 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 07:22:17.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:17.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:17.462
  STEP: create the rc @ 04/27/25 07:22:17.547
  W0427 07:22:17.551202      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/27/25 07:22:23.633
  STEP: wait for the rc to be deleted @ 04/27/25 07:22:23.789
  I0427 07:22:25.677860 25 garbage_collector.go:670] 84 pods remaining
  I0427 07:22:25.678230 25 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0427 07:22:25.678275 25 garbage_collector.go:678] 
  I0427 07:22:26.083697 25 garbage_collector.go:670] 80 pods remaining
  I0427 07:22:26.083788 25 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0427 07:22:26.083817 25 garbage_collector.go:678] 
  I0427 07:22:27.181276 25 garbage_collector.go:670] 60 pods remaining
  I0427 07:22:27.181384 25 garbage_collector.go:677] 56 pods has nil DeletionTimestamp
  I0427 07:22:27.181406 25 garbage_collector.go:678] 
  I0427 07:22:28.217135 25 garbage_collector.go:670] 45 pods remaining
  I0427 07:22:28.217268 25 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0427 07:22:28.224145 25 garbage_collector.go:678] 
  I0427 07:22:28.996724 25 garbage_collector.go:670] 30 pods remaining
  I0427 07:22:28.996805 25 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0427 07:22:28.996833 25 garbage_collector.go:678] 
  I0427 07:22:30.009922 25 garbage_collector.go:670] 15 pods remaining
  I0427 07:22:30.010014 25 garbage_collector.go:677] 15 pods has nil DeletionTimestamp
  I0427 07:22:30.010044 25 garbage_collector.go:678] 
  I0427 07:22:31.190514 25 garbage_collector.go:670] 0 pods remaining
  I0427 07:22:31.190594 25 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0427 07:22:31.190619 25 garbage_collector.go:678] 
  STEP: Gathering metrics @ 04/27/25 07:22:31.851
  W0427 07:22:31.955681      25 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0427 07:22:31.955754 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0427 07:22:31.959789 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-241" for this suite. @ 04/27/25 07:22:32.028
• [14.638 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 04/27/25 07:22:32.089
  I0427 07:22:32.089078 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/27/25 07:22:32.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:32.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:32.22
  STEP: getting /apis @ 04/27/25 07:22:32.386
  STEP: getting /apis/admissionregistration.k8s.io @ 04/27/25 07:22:32.427
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/27/25 07:22:32.44
  STEP: creating @ 04/27/25 07:22:32.446
  STEP: getting @ 04/27/25 07:22:32.624
  STEP: listing @ 04/27/25 07:22:32.673
  STEP: watching @ 04/27/25 07:22:32.705
  I0427 07:22:32.705688 25 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 04/27/25 07:22:32.708
  STEP: updating @ 04/27/25 07:22:32.723
  I0427 07:22:32.753880 25 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 04/27/25 07:22:32.756
  STEP: deleting a collection @ 04/27/25 07:22:32.794
  I0427 07:22:32.908068 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4917" for this suite. @ 04/27/25 07:22:32.916
• [0.850 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/27/25 07:22:32.939
  I0427 07:22:32.939272 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename runtimeclass @ 04/27/25 07:22:32.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:33.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:33.02
  STEP: getting /apis @ 04/27/25 07:22:33.048
  STEP: getting /apis/node.k8s.io @ 04/27/25 07:22:33.091
  STEP: getting /apis/node.k8s.io/v1 @ 04/27/25 07:22:33.099
  STEP: creating @ 04/27/25 07:22:33.106
  STEP: watching @ 04/27/25 07:22:33.186
  I0427 07:22:33.190460 25 runtimeclass.go:275] starting watch
  STEP: getting @ 04/27/25 07:22:33.287
  STEP: listing @ 04/27/25 07:22:33.303
  STEP: patching @ 04/27/25 07:22:33.364
  STEP: updating @ 04/27/25 07:22:33.416
  I0427 07:22:33.476939 25 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 04/27/25 07:22:33.477
  STEP: deleting a collection @ 04/27/25 07:22:33.595
  I0427 07:22:33.913792 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2298" for this suite. @ 04/27/25 07:22:33.995
• [1.102 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 04/27/25 07:22:34.041
  I0427 07:22:34.041251 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:22:34.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:34.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:34.312
  STEP: creating service in namespace services-2983 @ 04/27/25 07:22:34.428
  STEP: creating service affinity-clusterip-transition in namespace services-2983 @ 04/27/25 07:22:34.428
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2983 @ 04/27/25 07:22:34.56
  I0427 07:22:34.605055      25 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2983, replica count: 3
  I0427 07:22:37.657478      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 07:22:40.659382      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 07:22:43.659661      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 07:22:46.660557      25 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 07:22:46.669824 25 resource.go:361] Creating new exec pod
  I0427 07:22:49.681777 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-2983 exec execpod-affinitywcm54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0427 07:22:49.787008 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.68.122.207) 80 port [tcp/http] succeeded!\n"
  I0427 07:22:49.787065 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:22:49.787158 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-2983 exec execpod-affinitywcm54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.122.207 80'
  I0427 07:22:49.913363 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.122.207 80\nConnection to 10.68.122.207 80 port [tcp/http] succeeded!\n"
  I0427 07:22:49.913430 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:22:49.922176 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-2983 exec execpod-affinitywcm54 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.122.207:80/ ; done'
  I0427 07:22:50.193598 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n"
  I0427 07:22:50.193710 25 builder.go:147] stdout: "\naffinity-clusterip-transition-mkndz\naffinity-clusterip-transition-99vns\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-mkndz\naffinity-clusterip-transition-99vns\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-mkndz\naffinity-clusterip-transition-99vns\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-mkndz\naffinity-clusterip-transition-99vns\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-mkndz\naffinity-clusterip-transition-99vns\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-mkndz"
  I0427 07:22:50.193784 25 service.go:242] Received response from host: affinity-clusterip-transition-mkndz
  I0427 07:22:50.193881 25 service.go:242] Received response from host: affinity-clusterip-transition-99vns
  I0427 07:22:50.193913 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.193924 25 service.go:242] Received response from host: affinity-clusterip-transition-mkndz
  I0427 07:22:50.193935 25 service.go:242] Received response from host: affinity-clusterip-transition-99vns
  I0427 07:22:50.193946 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.193956 25 service.go:242] Received response from host: affinity-clusterip-transition-mkndz
  I0427 07:22:50.193965 25 service.go:242] Received response from host: affinity-clusterip-transition-99vns
  I0427 07:22:50.193975 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.193985 25 service.go:242] Received response from host: affinity-clusterip-transition-mkndz
  I0427 07:22:50.193995 25 service.go:242] Received response from host: affinity-clusterip-transition-99vns
  I0427 07:22:50.194004 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.194014 25 service.go:242] Received response from host: affinity-clusterip-transition-mkndz
  I0427 07:22:50.194037 25 service.go:242] Received response from host: affinity-clusterip-transition-99vns
  I0427 07:22:50.194047 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.194056 25 service.go:242] Received response from host: affinity-clusterip-transition-mkndz
  I0427 07:22:50.208210 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-2983 exec execpod-affinitywcm54 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.68.122.207:80/ ; done'
  I0427 07:22:50.507163 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.68.122.207:80/\n"
  I0427 07:22:50.507341 25 builder.go:147] stdout: "\naffinity-clusterip-transition-99vns\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh\naffinity-clusterip-transition-9gcfh"
  I0427 07:22:50.507363 25 service.go:242] Received response from host: affinity-clusterip-transition-99vns
  I0427 07:22:50.507385 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507403 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507415 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507427 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507438 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507449 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507460 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507495 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507506 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507517 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507528 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507538 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507549 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507560 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507570 25 service.go:242] Received response from host: affinity-clusterip-transition-9gcfh
  I0427 07:22:50.507659 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2983, will wait for the garbage collector to delete the pods @ 04/27/25 07:22:50.524
  I0427 07:22:50.586166 25 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 7.69409ms
  I0427 07:22:50.686764 25 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.578256ms
  I0427 07:22:54.000516 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2983" for this suite. @ 04/27/25 07:22:54.008
• [19.972 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/27/25 07:22:54.013
  I0427 07:22:54.013600 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 07:22:54.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:54.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:54.029
  I0427 07:22:54.117160 25 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/27/25 07:22:54.122
  I0427 07:22:54.126417 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:22:54.126453 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/27/25 07:22:54.126
  I0427 07:22:54.231725 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:22:54.231780 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 07:22:55.226921 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0427 07:22:55.226961 25 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/27/25 07:22:55.228
  I0427 07:22:55.245032 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:22:55.245079 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/27/25 07:22:55.245
  I0427 07:22:55.328094 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:22:55.328132 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 07:22:56.260615 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:22:56.260712 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  I0427 07:22:57.260099 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0427 07:22:57.260144 25 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/27/25 07:22:57.265
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4455, will wait for the garbage collector to delete the pods @ 04/27/25 07:22:57.265
  I0427 07:22:57.324018 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.547163ms
  I0427 07:22:57.424487 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.467749ms
  I0427 07:22:59.029528 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:22:59.029571 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0427 07:22:59.034389 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"49015"},"items":null}

  I0427 07:22:59.037578 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"49015"},"items":null}

  I0427 07:22:59.066381 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4455" for this suite. @ 04/27/25 07:22:59.143
• [5.136 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/27/25 07:22:59.15
  I0427 07:22:59.150169 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:22:59.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:22:59.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:22:59.171
  STEP: creating secret secrets-2500/secret-test-d627f594-7b06-4387-b373-da84f7501ab6 @ 04/27/25 07:22:59.176
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:22:59.183
  STEP: Saw pod success @ 04/27/25 07:23:03.205
  I0427 07:23:03.208426 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-ccc22b71-9613-4265-b854-e25c0728b062 container env-test: <nil>
  STEP: delete the pod @ 04/27/25 07:23:03.219
  I0427 07:23:03.241491 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2500" for this suite. @ 04/27/25 07:23:03.25
• [4.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/27/25 07:23:03.258
  I0427 07:23:03.258385 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:23:03.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:03.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:03.291
  STEP: creating a Pod with a static label @ 04/27/25 07:23:03.308
  STEP: watching for Pod to be ready @ 04/27/25 07:23:03.322
  I0427 07:23:03.325928 25 pods.go:945] observed Pod pod-test in namespace pods-9641 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0427 07:23:03.335042 25 pods.go:945] observed Pod pod-test in namespace pods-9641 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC  }]
  I0427 07:23:03.361345 25 pods.go:945] observed Pod pod-test in namespace pods-9641 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC  }]
  I0427 07:23:04.976553 25 pods.go:948] Found Pod pod-test in namespace pods-9641 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:04 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:04 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:04 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:23:03 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/27/25 07:23:04.983
  STEP: getting the Pod and ensuring that it's patched @ 04/27/25 07:23:05.002
  STEP: replacing the Pod's status Ready condition to False @ 04/27/25 07:23:05.012
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/27/25 07:23:05.035
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/27/25 07:23:05.035
  STEP: watching for the Pod to be deleted @ 04/27/25 07:23:05.055
  I0427 07:23:05.061952 25 pods.go:1058] observed event type MODIFIED
  I0427 07:23:06.831589 25 pods.go:1058] observed event type MODIFIED
  I0427 07:23:06.999112 25 pods.go:1058] observed event type MODIFIED
  I0427 07:23:07.264856 25 pods.go:1058] observed event type MODIFIED
  I0427 07:23:08.035269 25 pods.go:1058] observed event type MODIFIED
  I0427 07:23:08.049242 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9641" for this suite. @ 04/27/25 07:23:08.059
• [4.815 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/27/25 07:23:08.075
  I0427 07:23:08.075814 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:23:08.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:08.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:08.105
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:23:08.114
  STEP: Saw pod success @ 04/27/25 07:23:12.152
  I0427 07:23:12.157520 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-982404b6-1cf4-4576-a603-74aa3ded75b7 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:23:12.168
  I0427 07:23:12.195058 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7724" for this suite. @ 04/27/25 07:23:12.205
• [4.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/27/25 07:23:12.226
  I0427 07:23:12.226871 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename certificates @ 04/27/25 07:23:12.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:12.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:12.257
  STEP: getting /apis @ 04/27/25 07:23:12.864
  STEP: getting /apis/certificates.k8s.io @ 04/27/25 07:23:12.876
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/27/25 07:23:12.878
  STEP: creating @ 04/27/25 07:23:12.881
  STEP: getting @ 04/27/25 07:23:12.905
  STEP: listing @ 04/27/25 07:23:12.912
  STEP: watching @ 04/27/25 07:23:12.916
  I0427 07:23:12.916269 25 certificates.go:316] starting watch
  STEP: patching @ 04/27/25 07:23:12.918
  STEP: updating @ 04/27/25 07:23:12.927
  I0427 07:23:12.933969 25 certificates.go:332] waiting for watch events with expected annotations
  I0427 07:23:12.934029 25 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/27/25 07:23:12.934
  STEP: patching /approval @ 04/27/25 07:23:12.937
  STEP: updating /approval @ 04/27/25 07:23:12.943
  STEP: getting /status @ 04/27/25 07:23:12.949
  STEP: patching /status @ 04/27/25 07:23:12.953
  STEP: updating /status @ 04/27/25 07:23:12.962
  STEP: deleting @ 04/27/25 07:23:12.971
  STEP: deleting a collection @ 04/27/25 07:23:12.983
  I0427 07:23:12.997739 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5127" for this suite. @ 04/27/25 07:23:13.002
• [0.784 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/27/25 07:23:13.01
  I0427 07:23:13.010964 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubelet-test @ 04/27/25 07:23:13.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:13.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:13.03
  I0427 07:23:15.071428 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9342" for this suite. @ 04/27/25 07:23:15.078
• [2.078 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/27/25 07:23:15.088
  I0427 07:23:15.088999 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:23:15.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:15.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:15.117
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:23:15.127
  STEP: Saw pod success @ 04/27/25 07:23:19.158
  I0427 07:23:19.161782 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-8d64f340-d81f-401e-a753-95bc232ceb73 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:23:19.169
  I0427 07:23:19.193373 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8713" for this suite. @ 04/27/25 07:23:19.203
• [4.123 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/27/25 07:23:19.212
  I0427 07:23:19.212692 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:23:19.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:19.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:19.261
  STEP: Creating secret with name secret-test-map-5f91d2da-96bb-48b6-a5bd-4dcd7e3cd141 @ 04/27/25 07:23:19.266
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:23:19.273
  STEP: Saw pod success @ 04/27/25 07:23:23.299
  I0427 07:23:23.302284 25 output.go:207] Trying to get logs from node node1 pod pod-secrets-05aeaf68-ccd6-4ff9-8467-ac3211cdecfe container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:23:23.307
  I0427 07:23:23.326054 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5898" for this suite. @ 04/27/25 07:23:23.333
• [4.126 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/27/25 07:23:23.338
  I0427 07:23:23.338326 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:23:23.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:23.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:23.362
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/27/25 07:23:23.368
  STEP: Saw pod success @ 04/27/25 07:23:27.394
  I0427 07:23:27.397728 25 output.go:207] Trying to get logs from node node1 pod pod-c5f4c127-2448-4364-b5e5-8af1f2074a63 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:23:27.405
  I0427 07:23:27.420632 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4716" for this suite. @ 04/27/25 07:23:27.425
• [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/27/25 07:23:27.432
  I0427 07:23:27.432452 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 07:23:27.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:27.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:27.448
  I0427 07:23:27.452329 25 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0427 07:23:27.457631 25 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0427 07:23:27.468371 25 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0427 07:23:29.474967 25 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0427 07:23:29.477328 25 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0427 07:23:29.484287 25 deployment.go:314] Updating deployment test-recreate-deployment
  I0427 07:23:29.484354 25 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0427 07:23:29.562407 25 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cbe9dc3-c9a3-4ad7-b2d3-3d2ffebf1b84",
      ResourceVersion: (string) (len=5) "49418",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335407,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=62) "ReplicaSet \"test-recreate-deployment-cb4887bb\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 07:23:29.577291 25 deployment.go:40] New ReplicaSet "test-recreate-deployment-cb4887bb" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-recreate-deployment-cb4887bb",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe6c1270-de7c-477d-a3be-b3693e87ef4b",
      ResourceVersion: (string) (len=5) "49416",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=8) "cb4887bb"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2cbe9dc3-c9a3-4ad7-b2d3-3d2ffebf1b84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 62 65 39 64  63 33 2d 63 39 61 33 2d  |\"2cbe9dc3-c9a3-|
              00000120  34 61 64 37 2d 62 32 64  33 2d 33 64 32 66 66 65  |4ad7-b2d3-3d2ffe|
              00000130  62 66 31 62 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bf1b84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=8) "cb4887bb"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=8) "cb4887bb"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:23:29.578782 25 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0427 07:23:29.578983 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6d8d894c4b",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d6ca949-c5c7-4a0f-8a2c-0dabe0a0660c",
      ResourceVersion: (string) (len=5) "49406",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335407,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6d8d894c4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2cbe9dc3-c9a3-4ad7-b2d3-3d2ffebf1b84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 62 65 39 64  63 33 2d 63 39 61 33 2d  |\"2cbe9dc3-c9a3-|
              00000120  34 61 64 37 2d 62 32 64  33 2d 33 64 32 66 66 65  |4ad7-b2d3-3d2ffe|
              00000130  62 66 31 62 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bf1b84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6d8d894c4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6d8d894c4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:23:29.587462 25 deployment.go:68] Pod "test-recreate-deployment-cb4887bb-tjvmk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-recreate-deployment-cb4887bb-tjvmk",
      GenerateName: (string) (len=34) "test-recreate-deployment-cb4887bb-",
      Namespace: (string) (len=14) "deployment-734",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e59b3f91-7401-4b60-bb7f-dc80d5c97674",
      ResourceVersion: (string) (len=5) "49417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=8) "cb4887bb"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-recreate-deployment-cb4887bb",
          UID: (types.UID) (len=36) "fe6c1270-de7c-477d-a3be-b3693e87ef4b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 65  36 63 31 32 37 30 2d 64  |d\":\"fe6c1270-d|
              00000090  65 37 63 2d 34 37 37 64  2d 61 33 62 65 2d 62 33  |e7c-477d-a3be-b3|
              000000a0  36 39 33 65 38 37 65 66  34 62 5c 22 7d 22 3a 7b  |693e87ef4b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ghnlz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ghnlz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335409,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335409,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ghnlz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 07:23:29.591212 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-734" for this suite. @ 04/27/25 07:23:29.595
• [2.176 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 04/27/25 07:23:29.608
  I0427 07:23:29.608354 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-webhook @ 04/27/25 07:23:29.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:29.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:29.64
  STEP: Setting up server cert @ 04/27/25 07:23:29.647
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/27/25 07:23:30.095
  STEP: Deploying the custom resource conversion webhook pod @ 04/27/25 07:23:30.102
  STEP: Wait for the deployment to be ready @ 04/27/25 07:23:30.113
  I0427 07:23:30.120805 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/27/25 07:23:32.129
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:23:32.136
  I0427 07:23:33.136826 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0427 07:23:33.141960 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Creating a v1 custom resource @ 04/27/25 07:23:35.679
  STEP: v2 custom resource should be converted @ 04/27/25 07:23:35.681
  I0427 07:23:36.223453 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2836" for this suite. @ 04/27/25 07:23:36.226
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/27/25 07:23:36.232
  I0427 07:23:36.232419 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename podtemplate @ 04/27/25 07:23:36.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:36.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:36.266
  STEP: Create set of pod templates @ 04/27/25 07:23:36.269
  I0427 07:23:36.274701 25 podtemplates.go:143] created test-podtemplate-1
  I0427 07:23:36.282581 25 podtemplates.go:143] created test-podtemplate-2
  I0427 07:23:36.292250 25 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/27/25 07:23:36.292
  STEP: delete collection of pod templates @ 04/27/25 07:23:36.296
  I0427 07:23:36.296679 25 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/27/25 07:23:36.313
  I0427 07:23:36.313921 25 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0427 07:23:36.318123 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9049" for this suite. @ 04/27/25 07:23:36.328
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599
  STEP: Creating a kubernetes client @ 04/27/25 07:23:36.337
  I0427 07:23:36.337295 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:23:36.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:36.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:36.412
  STEP: creating a collection of services @ 04/27/25 07:23:36.417
  I0427 07:23:36.417849 25 service.go:3635] Creating e2e-svc-a-9b9pd
  I0427 07:23:36.429724 25 service.go:3635] Creating e2e-svc-b-zx7sf
  I0427 07:23:36.442365 25 service.go:3635] Creating e2e-svc-c-6lqrt
  STEP: deleting service collection @ 04/27/25 07:23:36.459
  I0427 07:23:36.491399 25 service.go:3670] Collection of services has been deleted
  I0427 07:23:36.491504 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6460" for this suite. @ 04/27/25 07:23:36.495
• [0.167 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 04/27/25 07:23:36.505
  I0427 07:23:36.505054 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 07:23:36.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:36.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:36.53
  STEP: Creating a test headless service @ 04/27/25 07:23:36.536
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3236.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-3236.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 04/27/25 07:23:36.542
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-3236.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-3236.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/27/25 07:23:36.542
  STEP: creating a pod to probe DNS @ 04/27/25 07:23:36.542
  STEP: submitting the pod to kubernetes @ 04/27/25 07:23:36.542
  STEP: retrieving the pod @ 04/27/25 07:23:38.568
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:23:38.57
  I0427 07:23:38.579096 25 dns_common.go:495] Unable to read jessie_hosts@dns-querier-2 from pod dns-3236/dns-test-dc225c9b-bf5c-4260-baf8-f96a69198e9e: the server could not find the requested resource (get pods dns-test-dc225c9b-bf5c-4260-baf8-f96a69198e9e)
  I0427 07:23:38.579135 25 dns_common.go:506] Lookups using dns-3236/dns-test-dc225c9b-bf5c-4260-baf8-f96a69198e9e failed for: [jessie_hosts@dns-querier-2]

  I0427 07:23:38.582672 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:23:38.585585 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:23:38.589041 25 dns_common.go:514] Pod client logs for jessie-querier: 
  I0427 07:23:43.582068 25 dns_common.go:546] DNS probes using dns-3236/dns-test-dc225c9b-bf5c-4260-baf8-f96a69198e9e succeeded

  STEP: deleting the pod @ 04/27/25 07:23:43.582
  STEP: deleting the test headless service @ 04/27/25 07:23:43.589
  I0427 07:23:43.605652 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3236" for this suite. @ 04/27/25 07:23:43.611
• [7.111 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839
  STEP: Creating a kubernetes client @ 04/27/25 07:23:43.615
  I0427 07:23:43.615855 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 07:23:43.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:43.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:43.629
  STEP: Creating ServiceAccount "e2e-sa-dn2cf"  @ 04/27/25 07:23:43.634
  I0427 07:23:43.638924 25 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-dn2cf"  @ 04/27/25 07:23:43.638
  I0427 07:23:43.646644 25 service_accounts.go:868] AutomountServiceAccountToken: true
  I0427 07:23:43.646763 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9663" for this suite. @ 04/27/25 07:23:43.713
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/27/25 07:23:43.718
  I0427 07:23:43.718200 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pod-network-test @ 04/27/25 07:23:43.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:23:43.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:23:43.733
  STEP: Performing setup for networking test in namespace pod-network-test-9188 @ 04/27/25 07:23:43.736
  STEP: creating a selector @ 04/27/25 07:23:43.736
  STEP: Creating the service pods in kubernetes @ 04/27/25 07:23:43.736
  I0427 07:23:43.736514 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/27/25 07:23:57.91
  I0427 07:23:59.929354 25 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0427 07:23:59.929410 25 utils.go:496] Going to poll 172.20.166.191 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0427 07:23:59.931178 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.166.191 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9188 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:23:59.931210 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:23:59.931246 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9188/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.166.191+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:24:00.971097 25 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0427 07:24:00.971139 25 utils.go:496] Going to poll 172.20.104.15 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0427 07:24:00.973255 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.104.15 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9188 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:24:00.973291 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:24:00.973350 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9188/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.104.15+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:24:02.017423 25 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0427 07:24:02.017466 25 utils.go:496] Going to poll 172.20.135.56 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0427 07:24:02.019586 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.20.135.56 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9188 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:24:02.019621 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:24:02.019668 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-9188/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.20.135.56+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0427 07:24:03.062877 25 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0427 07:24:03.062988 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9188" for this suite. @ 04/27/25 07:24:03.065
• [19.351 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/27/25 07:24:03.069
  I0427 07:24:03.069484 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/27/25 07:24:03.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:03.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:03.08
  I0427 07:24:03.083464 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  I0427 07:24:04.100196 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1520" for this suite. @ 04/27/25 07:24:04.103
• [1.038 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 04/27/25 07:24:04.107
  I0427 07:24:04.107380 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename containers @ 04/27/25 07:24:04.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:04.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:04.121
  STEP: Creating a pod to test override arguments @ 04/27/25 07:24:04.123
  STEP: Saw pod success @ 04/27/25 07:24:08.14
  I0427 07:24:08.142381 25 output.go:207] Trying to get logs from node node1 pod client-containers-14c83f20-49c0-44f2-89d8-798771e1227c container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:24:08.145
  I0427 07:24:08.158013 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3209" for this suite. @ 04/27/25 07:24:08.16
• [4.058 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/27/25 07:24:08.165
  I0427 07:24:08.165492 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 07:24:08.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:08.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:08.176
  I0427 07:24:10.189636 25 delete.go:62] Deleting pod "var-expansion-771570e8-26ab-44ca-b167-152026adfd24" in namespace "var-expansion-4675"
  I0427 07:24:10.194803 25 delete.go:70] Wait up to 5m0s for pod "var-expansion-771570e8-26ab-44ca-b167-152026adfd24" to be fully deleted
  I0427 07:24:12.200502 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4675" for this suite. @ 04/27/25 07:24:12.204
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373
  STEP: Creating a kubernetes client @ 04/27/25 07:24:12.208
  I0427 07:24:12.208762 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:24:12.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:12.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:12.221
  STEP: creating a Service @ 04/27/25 07:24:12.226
  STEP: watching for the Service to be added @ 04/27/25 07:24:12.232
  I0427 07:24:12.234420 25 service.go:3425] Found Service test-service-kwh4q in namespace services-9522 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32022}]
  I0427 07:24:12.234449 25 service.go:3432] Service test-service-kwh4q created
  STEP: Getting /status @ 04/27/25 07:24:12.234
  I0427 07:24:12.237268 25 service.go:3443] Service test-service-kwh4q has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/27/25 07:24:12.237
  STEP: watching for the Service to be patched @ 04/27/25 07:24:12.241
  I0427 07:24:12.243762 25 service.go:3466] observed Service test-service-kwh4q in namespace services-9522 with annotations: map[] & LoadBalancer: {[]}
  I0427 07:24:12.243809 25 service.go:3469] Found Service test-service-kwh4q in namespace services-9522 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00117f3d0 []}]}
  I0427 07:24:12.243822 25 service.go:3476] Service test-service-kwh4q has service status patched
  STEP: updating the ServiceStatus @ 04/27/25 07:24:12.243
  I0427 07:24:12.253979 25 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/27/25 07:24:12.254
  I0427 07:24:12.255587 25 service.go:3507] Observed Service test-service-kwh4q in namespace services-9522 with annotations: map[] & Conditions: []
  I0427 07:24:12.255686 25 service.go:3518] Observed Service test-service-kwh4q in namespace services-9522 with annotations: map[patchedstatus:true] & Conditions: []
  I0427 07:24:12.255709 25 service.go:3514] Found Service test-service-kwh4q in namespace services-9522 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0427 07:24:12.255723 25 service.go:3525] Service test-service-kwh4q has service status updated
  STEP: patching the service @ 04/27/25 07:24:12.255
  STEP: watching for the Service to be patched @ 04/27/25 07:24:12.264
  I0427 07:24:12.265839 25 service.go:3548] observed Service test-service-kwh4q in namespace services-9522 with labels: map[test-service-static:true]
  I0427 07:24:12.265936 25 service.go:3548] observed Service test-service-kwh4q in namespace services-9522 with labels: map[test-service-static:true]
  I0427 07:24:12.265948 25 service.go:3548] observed Service test-service-kwh4q in namespace services-9522 with labels: map[test-service-static:true]
  I0427 07:24:12.265987 25 service.go:3551] Found Service test-service-kwh4q in namespace services-9522 with labels: map[test-service:patched test-service-static:true]
  I0427 07:24:12.265998 25 service.go:3558] Service test-service-kwh4q patched
  STEP: deleting the service @ 04/27/25 07:24:12.266
  STEP: watching for the Service to be deleted @ 04/27/25 07:24:12.282
  I0427 07:24:12.285054 25 service.go:3582] Observed event: ADDED
  I0427 07:24:12.285128 25 service.go:3582] Observed event: MODIFIED
  I0427 07:24:12.285143 25 service.go:3582] Observed event: MODIFIED
  I0427 07:24:12.285551 25 service.go:3582] Observed event: MODIFIED
  I0427 07:24:12.285822 25 service.go:3578] Found Service test-service-kwh4q in namespace services-9522 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0427 07:24:12.285878 25 service.go:3587] Service test-service-kwh4q deleted
  I0427 07:24:12.286023 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9522" for this suite. @ 04/27/25 07:24:12.305
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 04/27/25 07:24:12.312
  I0427 07:24:12.312430 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename cronjob @ 04/27/25 07:24:12.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:12.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:12.33
  STEP: Creating a cronjob @ 04/27/25 07:24:12.335
  STEP: creating @ 04/27/25 07:24:12.335
  STEP: getting @ 04/27/25 07:24:12.342
  STEP: listing @ 04/27/25 07:24:12.345
  STEP: watching @ 04/27/25 07:24:12.349
  I0427 07:24:12.349462 25 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 04/27/25 07:24:12.351
  STEP: cluster-wide watching @ 04/27/25 07:24:12.355
  I0427 07:24:12.355753 25 cronjob.go:407] starting watch
  STEP: patching @ 04/27/25 07:24:12.357
  STEP: updating @ 04/27/25 07:24:12.363
  I0427 07:24:12.373464 25 cronjob.go:431] waiting for watch events with expected annotations
  I0427 07:24:12.373508 25 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 04/27/25 07:24:12.373
  STEP: updating /status @ 04/27/25 07:24:12.378
  STEP: get /status @ 04/27/25 07:24:12.386
  STEP: deleting @ 04/27/25 07:24:12.389
  STEP: deleting a collection @ 04/27/25 07:24:12.401
  I0427 07:24:12.409765 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2594" for this suite. @ 04/27/25 07:24:12.414
• [0.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/27/25 07:24:12.42
  I0427 07:24:12.420851 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename subjectreview @ 04/27/25 07:24:12.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:12.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:12.438
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1051" @ 04/27/25 07:24:12.441
  I0427 07:24:12.445067 25 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1051:e2e"
  I0427 07:24:12.445100 25 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1051"}
  I0427 07:24:12.445111 25 subjectreviews.go:71] saUID: "7ec4bc41-8215-447e-90ee-3b5ee22783b2"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1051:e2e" @ 04/27/25 07:24:12.445
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1051:e2e" @ 04/27/25 07:24:12.445
  I0427 07:24:12.447402 25 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1051:e2e" api 'list' configmaps in "subjectreview-1051" namespace @ 04/27/25 07:24:12.447
  I0427 07:24:12.448805 25 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1051:e2e" @ 04/27/25 07:24:12.448
  I0427 07:24:12.451770 25 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0427 07:24:12.451818 25 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0427 07:24:12.451934 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1051" for this suite. @ 04/27/25 07:24:12.517
• [0.103 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/27/25 07:24:12.523
  I0427 07:24:12.523902 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:24:12.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:12.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:12.541
  STEP: Creating secret with name secret-test-24018727-5156-4b2a-b706-a3663b3e8ec1 @ 04/27/25 07:24:12.545
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:24:12.548
  STEP: Saw pod success @ 04/27/25 07:24:16.569
  I0427 07:24:16.571723 25 output.go:207] Trying to get logs from node node1 pod pod-secrets-371a7590-62ff-4730-8469-342657964966 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:24:16.575
  I0427 07:24:16.588242 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5726" for this suite. @ 04/27/25 07:24:16.591
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/27/25 07:24:16.596
  I0427 07:24:16.596798 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:24:16.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:16.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:16.608
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/27/25 07:24:16.612
  STEP: Saw pod success @ 04/27/25 07:24:20.629
  I0427 07:24:20.631365 25 output.go:207] Trying to get logs from node node1 pod pod-9903e6d7-d4e9-46a2-8cc7-371213a33a57 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:24:20.634
  I0427 07:24:20.644428 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4803" for this suite. @ 04/27/25 07:24:20.647
• [4.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 04/27/25 07:24:20.651
  I0427 07:24:20.651268 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:24:20.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:20.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:20.665
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2163 @ 04/27/25 07:24:20.668
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/27/25 07:24:20.675
  STEP: creating service externalsvc in namespace services-2163 @ 04/27/25 07:24:20.675
  STEP: creating replication controller externalsvc in namespace services-2163 @ 04/27/25 07:24:20.69
  I0427 07:24:20.696448      25 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2163, replica count: 2
  I0427 07:24:23.747400      25 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/27/25 07:24:23.75
  I0427 07:24:23.759408 25 resource.go:361] Creating new exec pod
  I0427 07:24:25.772961 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-2163 exec execpodnsjvv -- /bin/sh -x -c nslookup nodeport-service.services-2163.svc.cluster.local'
  I0427 07:24:26.023887 25 builder.go:146] stderr: "+ nslookup nodeport-service.services-2163.svc.cluster.local\n"
  I0427 07:24:26.023975 25 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-2163.svc.cluster.local\tcanonical name = externalsvc.services-2163.svc.cluster.local.\nName:\texternalsvc.services-2163.svc.cluster.local\nAddress: 10.68.71.199\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2163, will wait for the garbage collector to delete the pods @ 04/27/25 07:24:26.024
  I0427 07:24:26.090514 25 resources.go:139] Deleting ReplicationController externalsvc took: 9.268442ms
  I0427 07:24:26.191668 25 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.149142ms
  I0427 07:24:28.709242 25 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0427 07:24:28.724860 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2163" for this suite. @ 04/27/25 07:24:28.73
• [8.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/27/25 07:24:28.738
  I0427 07:24:28.738197 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:24:28.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:28.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:28.763
  STEP: Creating a pod to test downward api env vars @ 04/27/25 07:24:28.77
  STEP: Saw pod success @ 04/27/25 07:24:30.792
  I0427 07:24:30.795168 25 output.go:207] Trying to get logs from node node1 pod downward-api-753f335b-ee83-4d86-a009-90267bfbbca8 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 07:24:30.799
  I0427 07:24:30.814132 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1900" for this suite. @ 04/27/25 07:24:30.818
• [2.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/27/25 07:24:30.823
  I0427 07:24:30.823193 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replication-controller @ 04/27/25 07:24:30.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:30.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:30.84
  STEP: creating a ReplicationController @ 04/27/25 07:24:30.845
  STEP: waiting for RC to be added @ 04/27/25 07:24:30.854
  STEP: waiting for available Replicas @ 04/27/25 07:24:30.854
  STEP: patching ReplicationController @ 04/27/25 07:24:31.587
  STEP: waiting for RC to be modified @ 04/27/25 07:24:31.593
  STEP: patching ReplicationController status @ 04/27/25 07:24:31.594
  STEP: waiting for RC to be modified @ 04/27/25 07:24:31.598
  STEP: waiting for available Replicas @ 04/27/25 07:24:31.598
  STEP: fetching ReplicationController status @ 04/27/25 07:24:31.604
  STEP: patching ReplicationController scale @ 04/27/25 07:24:31.606
  STEP: waiting for RC to be modified @ 04/27/25 07:24:31.61
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/27/25 07:24:31.61
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/27/25 07:24:32.643
  STEP: updating ReplicationController status @ 04/27/25 07:24:32.647
  STEP: waiting for RC to be modified @ 04/27/25 07:24:32.657
  STEP: listing all ReplicationControllers @ 04/27/25 07:24:32.658
  STEP: checking that ReplicationController has expected values @ 04/27/25 07:24:32.663
  STEP: deleting ReplicationControllers by collection @ 04/27/25 07:24:32.663
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/27/25 07:24:32.673
  I0427 07:24:32.741655 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0427 07:24:32.741970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3856" for this suite. @ 04/27/25 07:24:32.748
• [1.941 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/27/25 07:24:32.765
  I0427 07:24:32.765465 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 07:24:32.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:32.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:32.796
  I0427 07:24:32.866232 25 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"5be8d860-dbf1-4223-84d9-ed5358030ce8", Controller:(*bool)(0xc005a425ca), BlockOwnerDeletion:(*bool)(0xc005a425cb)}}
  I0427 07:24:32.905056 25 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"beaa8061-59bf-407a-b65e-8d58e06101e8", Controller:(*bool)(0xc005739fbe), BlockOwnerDeletion:(*bool)(0xc005739fbf)}}
  I0427 07:24:32.915683 25 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"cd19e28d-87d8-4eef-9050-fe7c7769503b", Controller:(*bool)(0xc005b02f9a), BlockOwnerDeletion:(*bool)(0xc005b02f9b)}}
  E0427 07:24:33.742657      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:34.742626      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:35.742909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:36.743443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:37.743510      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:24:37.933757 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8649" for this suite. @ 04/27/25 07:24:37.94
• [5.188 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:246
  STEP: Creating a kubernetes client @ 04/27/25 07:24:37.954
  I0427 07:24:37.954221 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename namespaces @ 04/27/25 07:24:37.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:37.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:37.976
  STEP: Creating a test namespace @ 04/27/25 07:24:37.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:37.994
  STEP: Creating a pod in the namespace @ 04/27/25 07:24:38.001
  STEP: Waiting for the pod to have running status @ 04/27/25 07:24:38.015
  E0427 07:24:38.743749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:39.744172      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 04/27/25 07:24:40.032
  STEP: Waiting for the namespace to be removed. @ 04/27/25 07:24:40.042
  E0427 07:24:40.744703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:41.745008      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:42.745443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:43.745723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:44.746198      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:45.747239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:46.746731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:47.747807      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:48.747957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:49.749562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:50.750636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/27/25 07:24:51.046
  STEP: Verifying there are no pods in the namespace @ 04/27/25 07:24:51.058
  I0427 07:24:51.061933 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8455" for this suite. @ 04/27/25 07:24:51.065
  STEP: Destroying namespace "nsdeletetest-464" for this suite. @ 04/27/25 07:24:51.072
  I0427 07:24:51.076369 25 framework.go:370] Namespace nsdeletetest-464 was already deleted
  STEP: Destroying namespace "nsdeletetest-5938" for this suite. @ 04/27/25 07:24:51.076
• [13.128 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/27/25 07:24:51.082
  I0427 07:24:51.082378 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:24:51.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:51.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:51.095
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/27/25 07:24:51.1
  E0427 07:24:51.750942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:52.751998      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:53.753396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:54.753799      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:24:55.124
  I0427 07:24:55.127669 25 output.go:207] Trying to get logs from node node1 pod pod-09b3ea6e-e34f-4eb0-9e5b-fedafdb22d1a container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:24:55.138
  I0427 07:24:55.151966 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1468" for this suite. @ 04/27/25 07:24:55.158
• [4.082 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 04/27/25 07:24:55.164
  I0427 07:24:55.164116 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 07:24:55.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:55.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:55.184
  STEP: apply creating a deployment @ 04/27/25 07:24:55.19
  I0427 07:24:55.205834 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7773" for this suite. @ 04/27/25 07:24:55.261
• [0.106 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/27/25 07:24:55.27
  I0427 07:24:55.270606 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:24:55.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:55.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:55.301
  STEP: Creating configMap with name configmap-test-volume-f2a191c3-48ce-4476-bc5d-88676015f5e8 @ 04/27/25 07:24:55.309
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:24:55.325
  E0427 07:24:55.754236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:56.754600      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:57.755508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:24:58.755574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:24:59.357
  I0427 07:24:59.359587 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-effeef01-8dcd-4bf8-97a2-50d37a510a86 container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:24:59.364
  I0427 07:24:59.378118 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7029" for this suite. @ 04/27/25 07:24:59.382
• [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/27/25 07:24:59.387
  I0427 07:24:59.387839 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename prestop @ 04/27/25 07:24:59.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:24:59.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:24:59.404
  STEP: Creating server pod server in namespace prestop-9742 @ 04/27/25 07:24:59.407
  STEP: Waiting for pods to come up. @ 04/27/25 07:24:59.415
  E0427 07:24:59.756140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:00.757198      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9742 @ 04/27/25 07:25:01.426
  E0427 07:25:01.758237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:02.758490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/27/25 07:25:03.438
  E0427 07:25:03.759502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:04.759826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:05.760229      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:06.760637      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:07.760911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:25:08.445526 25 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/27/25 07:25:08.445
  I0427 07:25:08.451393 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9742" for this suite. @ 04/27/25 07:25:08.459
• [9.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/27/25 07:25:08.467
  I0427 07:25:08.467836 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:25:08.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:25:08.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:25:08.489
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:25:08.495
  E0427 07:25:08.761150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:09.761259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:10.761578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:11.761788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:25:12.539
  I0427 07:25:12.543355 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-0f50c2b0-5a72-4d04-842b-07d8d013d063 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:25:12.549
  I0427 07:25:12.572508 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-144" for this suite. @ 04/27/25 07:25:12.58
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 04/27/25 07:25:12.591
  I0427 07:25:12.591845 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:25:12.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:25:12.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:25:12.62
  STEP: Setting up server cert @ 04/27/25 07:25:12.657
  E0427 07:25:12.762808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:25:12.898
  STEP: Deploying the webhook pod @ 04/27/25 07:25:12.902
  STEP: Wait for the deployment to be ready @ 04/27/25 07:25:12.912
  I0427 07:25:12.919402 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:25:13.763077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:14.763432      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:25:14.927
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:25:14.933
  E0427 07:25:15.763503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:25:15.933983 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 07:25:15.941142 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/27/25 07:25:16.45
  STEP: Creating a custom resource that should be denied by the webhook @ 04/27/25 07:25:16.46
  E0427 07:25:16.763646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:17.763927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/27/25 07:25:18.471
  STEP: Updating the custom resource with disallowed data should be denied @ 04/27/25 07:25:18.478
  STEP: Deleting the custom resource should be denied @ 04/27/25 07:25:18.482
  STEP: Remove the offending key and value from the custom resource data @ 04/27/25 07:25:18.485
  STEP: Deleting the updated custom resource should be successful @ 04/27/25 07:25:18.492
  E0427 07:25:18.764150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:25:19.046192 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4697" for this suite. @ 04/27/25 07:25:19.049
  STEP: Destroying namespace "webhook-markers-499" for this suite. @ 04/27/25 07:25:19.055
• [6.469 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/27/25 07:25:19.06
  I0427 07:25:19.060678 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:25:19.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:25:19.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:25:19.071
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/27/25 07:25:19.074
  E0427 07:25:19.764852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:20.765702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:25:21.088
  I0427 07:25:21.091112 25 output.go:207] Trying to get logs from node node1 pod pod-adb78570-2b67-4137-b501-8b36c73970a7 container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:25:21.097
  I0427 07:25:21.116597 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2603" for this suite. @ 04/27/25 07:25:21.12
• [2.065 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/27/25 07:25:21.126
  I0427 07:25:21.126257 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:25:21.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:25:21.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:25:21.148
  I0427 07:25:21.209498 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7359" for this suite. @ 04/27/25 07:25:21.224
• [0.106 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 04/27/25 07:25:21.232
  I0427 07:25:21.232287 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 07:25:21.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:25:21.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:25:21.26
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/27/25 07:25:21.268
  I0427 07:25:21.268681 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:25:21.766767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:25:22.445583 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:25:22.767415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:23.768101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:24.768563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:25.769265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:26.769923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:25:27.152848 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3528" for this suite. @ 04/27/25 07:25:27.158
• [5.929 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/27/25 07:25:27.161
  I0427 07:25:27.161623 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename gc @ 04/27/25 07:25:27.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:25:27.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:25:27.172
  STEP: create the rc @ 04/27/25 07:25:27.26
  W0427 07:25:27.264202      25 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0427 07:25:27.771716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:28.771832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:29.773869      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:30.774924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:31.775705      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:32.776662      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/27/25 07:25:33.31
  STEP: wait for the rc to be deleted @ 04/27/25 07:25:33.367
  E0427 07:25:33.776916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:34.777678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:35.778769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:36.779298      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:37.779624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/27/25 07:25:38.384
  E0427 07:25:38.779870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:39.780032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:40.780229      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:41.780556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:42.781817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:43.781855      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:44.782037      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:45.782204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:46.782580      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:47.782701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:48.783539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:49.784531      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:50.785563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:51.785867      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:52.786174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:53.786864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:54.787253      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:55.787577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:56.788364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:57.788696      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:58.789665      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:25:59.789415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:00.790043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:01.790181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:02.790464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:03.790573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:04.790823      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:05.791515      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:06.791729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:07.791937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/27/25 07:26:08.392
  W0427 07:26:08.397615      25 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0427 07:26:08.397675 25 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0427 07:26:08.397930 25 delete.go:95] Deleting pod "simpletest.rc-2llfn" in namespace "gc-7378"
  I0427 07:26:08.406859 25 delete.go:95] Deleting pod "simpletest.rc-2mmr2" in namespace "gc-7378"
  I0427 07:26:08.423329 25 delete.go:95] Deleting pod "simpletest.rc-2nzfl" in namespace "gc-7378"
  I0427 07:26:08.436543 25 delete.go:95] Deleting pod "simpletest.rc-488n4" in namespace "gc-7378"
  I0427 07:26:08.452857 25 delete.go:95] Deleting pod "simpletest.rc-4k4vl" in namespace "gc-7378"
  I0427 07:26:08.470039 25 delete.go:95] Deleting pod "simpletest.rc-5b2t9" in namespace "gc-7378"
  I0427 07:26:08.490164 25 delete.go:95] Deleting pod "simpletest.rc-5gh8d" in namespace "gc-7378"
  I0427 07:26:08.505254 25 delete.go:95] Deleting pod "simpletest.rc-65gqq" in namespace "gc-7378"
  I0427 07:26:08.531131 25 delete.go:95] Deleting pod "simpletest.rc-665nl" in namespace "gc-7378"
  I0427 07:26:08.553262 25 delete.go:95] Deleting pod "simpletest.rc-66w87" in namespace "gc-7378"
  I0427 07:26:08.578831 25 delete.go:95] Deleting pod "simpletest.rc-6gxsg" in namespace "gc-7378"
  I0427 07:26:08.610432 25 delete.go:95] Deleting pod "simpletest.rc-6rnp8" in namespace "gc-7378"
  I0427 07:26:08.656817 25 delete.go:95] Deleting pod "simpletest.rc-6wlb4" in namespace "gc-7378"
  I0427 07:26:08.718731 25 delete.go:95] Deleting pod "simpletest.rc-728js" in namespace "gc-7378"
  I0427 07:26:08.769027 25 delete.go:95] Deleting pod "simpletest.rc-74n86" in namespace "gc-7378"
  E0427 07:26:08.792393      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:08.812424 25 delete.go:95] Deleting pod "simpletest.rc-7cdj5" in namespace "gc-7378"
  I0427 07:26:08.853597 25 delete.go:95] Deleting pod "simpletest.rc-7z226" in namespace "gc-7378"
  I0427 07:26:08.907808 25 delete.go:95] Deleting pod "simpletest.rc-85jpt" in namespace "gc-7378"
  I0427 07:26:08.974988 25 delete.go:95] Deleting pod "simpletest.rc-86hsc" in namespace "gc-7378"
  I0427 07:26:09.152517 25 delete.go:95] Deleting pod "simpletest.rc-8dxz7" in namespace "gc-7378"
  I0427 07:26:09.245763 25 delete.go:95] Deleting pod "simpletest.rc-8fvkt" in namespace "gc-7378"
  I0427 07:26:09.304452 25 delete.go:95] Deleting pod "simpletest.rc-8hz67" in namespace "gc-7378"
  I0427 07:26:09.421474 25 delete.go:95] Deleting pod "simpletest.rc-8wvdb" in namespace "gc-7378"
  I0427 07:26:09.561966 25 delete.go:95] Deleting pod "simpletest.rc-8xzkx" in namespace "gc-7378"
  I0427 07:26:09.777753 25 delete.go:95] Deleting pod "simpletest.rc-97t2b" in namespace "gc-7378"
  E0427 07:26:09.792994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:09.874011 25 delete.go:95] Deleting pod "simpletest.rc-98plz" in namespace "gc-7378"
  I0427 07:26:09.980036 25 delete.go:95] Deleting pod "simpletest.rc-9rslp" in namespace "gc-7378"
  I0427 07:26:10.134669 25 delete.go:95] Deleting pod "simpletest.rc-9t99d" in namespace "gc-7378"
  I0427 07:26:10.213215 25 delete.go:95] Deleting pod "simpletest.rc-9tzn2" in namespace "gc-7378"
  I0427 07:26:10.268480 25 delete.go:95] Deleting pod "simpletest.rc-bhlcn" in namespace "gc-7378"
  I0427 07:26:10.404708 25 delete.go:95] Deleting pod "simpletest.rc-bjfwt" in namespace "gc-7378"
  I0427 07:26:10.524034 25 delete.go:95] Deleting pod "simpletest.rc-bls5p" in namespace "gc-7378"
  I0427 07:26:10.695223 25 delete.go:95] Deleting pod "simpletest.rc-c8hx4" in namespace "gc-7378"
  E0427 07:26:10.793952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:10.876472 25 delete.go:95] Deleting pod "simpletest.rc-cq2x8" in namespace "gc-7378"
  I0427 07:26:11.118525 25 delete.go:95] Deleting pod "simpletest.rc-d4jss" in namespace "gc-7378"
  I0427 07:26:11.290729 25 delete.go:95] Deleting pod "simpletest.rc-dfwzb" in namespace "gc-7378"
  I0427 07:26:11.427541 25 delete.go:95] Deleting pod "simpletest.rc-dtw8r" in namespace "gc-7378"
  I0427 07:26:11.592975 25 delete.go:95] Deleting pod "simpletest.rc-f7jkn" in namespace "gc-7378"
  I0427 07:26:11.759234 25 delete.go:95] Deleting pod "simpletest.rc-fc8zs" in namespace "gc-7378"
  E0427 07:26:11.794604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:11.849843 25 delete.go:95] Deleting pod "simpletest.rc-fgwpf" in namespace "gc-7378"
  I0427 07:26:11.911664 25 delete.go:95] Deleting pod "simpletest.rc-fhc75" in namespace "gc-7378"
  I0427 07:26:12.026324 25 delete.go:95] Deleting pod "simpletest.rc-fkm2d" in namespace "gc-7378"
  I0427 07:26:12.098898 25 delete.go:95] Deleting pod "simpletest.rc-fl88v" in namespace "gc-7378"
  I0427 07:26:12.159529 25 delete.go:95] Deleting pod "simpletest.rc-fwk42" in namespace "gc-7378"
  I0427 07:26:12.252668 25 delete.go:95] Deleting pod "simpletest.rc-fz4kc" in namespace "gc-7378"
  I0427 07:26:12.323029 25 delete.go:95] Deleting pod "simpletest.rc-gbk99" in namespace "gc-7378"
  I0427 07:26:12.467904 25 delete.go:95] Deleting pod "simpletest.rc-gjzpm" in namespace "gc-7378"
  I0427 07:26:12.648587 25 delete.go:95] Deleting pod "simpletest.rc-gl6tx" in namespace "gc-7378"
  I0427 07:26:12.774654 25 delete.go:95] Deleting pod "simpletest.rc-gq7kg" in namespace "gc-7378"
  E0427 07:26:12.795795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:12.915205 25 delete.go:95] Deleting pod "simpletest.rc-ht9b8" in namespace "gc-7378"
  I0427 07:26:12.997701 25 delete.go:95] Deleting pod "simpletest.rc-jj9gx" in namespace "gc-7378"
  I0427 07:26:13.131760 25 delete.go:95] Deleting pod "simpletest.rc-k7hnn" in namespace "gc-7378"
  I0427 07:26:13.248915 25 delete.go:95] Deleting pod "simpletest.rc-kd4w6" in namespace "gc-7378"
  I0427 07:26:13.346619 25 delete.go:95] Deleting pod "simpletest.rc-klft2" in namespace "gc-7378"
  I0427 07:26:13.432430 25 delete.go:95] Deleting pod "simpletest.rc-l8j4w" in namespace "gc-7378"
  I0427 07:26:13.517770 25 delete.go:95] Deleting pod "simpletest.rc-lbnms" in namespace "gc-7378"
  I0427 07:26:13.645014 25 delete.go:95] Deleting pod "simpletest.rc-mgn7k" in namespace "gc-7378"
  I0427 07:26:13.692276 25 delete.go:95] Deleting pod "simpletest.rc-mkhjz" in namespace "gc-7378"
  I0427 07:26:13.716446 25 delete.go:95] Deleting pod "simpletest.rc-n7c92" in namespace "gc-7378"
  E0427 07:26:13.796006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:13.868472 25 delete.go:95] Deleting pod "simpletest.rc-nctph" in namespace "gc-7378"
  I0427 07:26:13.989021 25 delete.go:95] Deleting pod "simpletest.rc-nmlh6" in namespace "gc-7378"
  I0427 07:26:14.066668 25 delete.go:95] Deleting pod "simpletest.rc-npbrd" in namespace "gc-7378"
  I0427 07:26:14.227830 25 delete.go:95] Deleting pod "simpletest.rc-ns29t" in namespace "gc-7378"
  I0427 07:26:14.316761 25 delete.go:95] Deleting pod "simpletest.rc-nwbzb" in namespace "gc-7378"
  I0427 07:26:14.384138 25 delete.go:95] Deleting pod "simpletest.rc-p2tfk" in namespace "gc-7378"
  I0427 07:26:14.498180 25 delete.go:95] Deleting pod "simpletest.rc-pdwzj" in namespace "gc-7378"
  I0427 07:26:14.552879 25 delete.go:95] Deleting pod "simpletest.rc-plmfm" in namespace "gc-7378"
  I0427 07:26:14.597142 25 delete.go:95] Deleting pod "simpletest.rc-pslqx" in namespace "gc-7378"
  I0427 07:26:14.664882 25 delete.go:95] Deleting pod "simpletest.rc-q685h" in namespace "gc-7378"
  I0427 07:26:14.758897 25 delete.go:95] Deleting pod "simpletest.rc-qcvqg" in namespace "gc-7378"
  E0427 07:26:14.801581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:14.827510 25 delete.go:95] Deleting pod "simpletest.rc-qk999" in namespace "gc-7378"
  I0427 07:26:14.949696 25 delete.go:95] Deleting pod "simpletest.rc-qkrmf" in namespace "gc-7378"
  I0427 07:26:15.028383 25 delete.go:95] Deleting pod "simpletest.rc-qmnln" in namespace "gc-7378"
  I0427 07:26:15.174238 25 delete.go:95] Deleting pod "simpletest.rc-qtdrr" in namespace "gc-7378"
  I0427 07:26:15.244584 25 delete.go:95] Deleting pod "simpletest.rc-r7nqr" in namespace "gc-7378"
  I0427 07:26:15.326170 25 delete.go:95] Deleting pod "simpletest.rc-rjgzv" in namespace "gc-7378"
  I0427 07:26:15.400842 25 delete.go:95] Deleting pod "simpletest.rc-rmkwx" in namespace "gc-7378"
  I0427 07:26:15.661462 25 delete.go:95] Deleting pod "simpletest.rc-rnd2c" in namespace "gc-7378"
  I0427 07:26:15.687004 25 delete.go:95] Deleting pod "simpletest.rc-s2rzr" in namespace "gc-7378"
  E0427 07:26:15.802466      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:15.864989 25 delete.go:95] Deleting pod "simpletest.rc-s6hs9" in namespace "gc-7378"
  I0427 07:26:15.952556 25 delete.go:95] Deleting pod "simpletest.rc-scfbf" in namespace "gc-7378"
  I0427 07:26:15.998996 25 delete.go:95] Deleting pod "simpletest.rc-skvh6" in namespace "gc-7378"
  I0427 07:26:16.079566 25 delete.go:95] Deleting pod "simpletest.rc-ss7kh" in namespace "gc-7378"
  I0427 07:26:16.108863 25 delete.go:95] Deleting pod "simpletest.rc-st8sm" in namespace "gc-7378"
  I0427 07:26:16.201484 25 delete.go:95] Deleting pod "simpletest.rc-t27pq" in namespace "gc-7378"
  I0427 07:26:16.274072 25 delete.go:95] Deleting pod "simpletest.rc-tv4xz" in namespace "gc-7378"
  I0427 07:26:16.335253 25 delete.go:95] Deleting pod "simpletest.rc-v5l6w" in namespace "gc-7378"
  I0427 07:26:16.413251 25 delete.go:95] Deleting pod "simpletest.rc-vn9wf" in namespace "gc-7378"
  I0427 07:26:16.509503 25 delete.go:95] Deleting pod "simpletest.rc-vndh4" in namespace "gc-7378"
  I0427 07:26:16.650775 25 delete.go:95] Deleting pod "simpletest.rc-wdx79" in namespace "gc-7378"
  I0427 07:26:16.769148 25 delete.go:95] Deleting pod "simpletest.rc-wfn86" in namespace "gc-7378"
  E0427 07:26:16.802690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:16.882176 25 delete.go:95] Deleting pod "simpletest.rc-whcl4" in namespace "gc-7378"
  I0427 07:26:16.969070 25 delete.go:95] Deleting pod "simpletest.rc-wnpr5" in namespace "gc-7378"
  I0427 07:26:17.018974 25 delete.go:95] Deleting pod "simpletest.rc-x2bgr" in namespace "gc-7378"
  I0427 07:26:17.115509 25 delete.go:95] Deleting pod "simpletest.rc-x4p7t" in namespace "gc-7378"
  I0427 07:26:17.221437 25 delete.go:95] Deleting pod "simpletest.rc-xxmxf" in namespace "gc-7378"
  I0427 07:26:17.377817 25 delete.go:95] Deleting pod "simpletest.rc-z54s7" in namespace "gc-7378"
  I0427 07:26:17.535894 25 delete.go:95] Deleting pod "simpletest.rc-zdkrx" in namespace "gc-7378"
  I0427 07:26:17.691673 25 delete.go:95] Deleting pod "simpletest.rc-zk7kq" in namespace "gc-7378"
  E0427 07:26:17.804969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:26:17.825540 25 delete.go:95] Deleting pod "simpletest.rc-zw2gw" in namespace "gc-7378"
  I0427 07:26:17.926586 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7378" for this suite. @ 04/27/25 07:26:17.975
• [50.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 04/27/25 07:26:18.015
  I0427 07:26:18.015198 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:26:18.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:26:18.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:26:18.096
  E0427 07:26:18.804577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:19.805127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:20.806118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:21.806483      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:22.806851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:23.807762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:24.808108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:25.809086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:26.809883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:27.810065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:28.810225      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:29.810401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:30.810912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:31.811428      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:32.811458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:33.812544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:34.812466      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:35.813078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:36.813565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:37.814259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:38.815002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:39.815140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:40.816087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:41.816613      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:42.817720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:43.818551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:44.818814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:45.819714      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:46.820685      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:47.820762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:48.821805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:49.822784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:50.823117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:51.824364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:52.825089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:53.825563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:54.826727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:55.827812      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:56.828667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:57.828816      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:58.829942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:26:59.831067      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:00.832070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:01.832951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:02.833236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:03.833498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:04.833885      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:05.834266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:06.835200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:07.835608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:08.836028      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:09.837899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:10.838406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:11.838727      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:12.839659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:13.840117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:14.840497      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:15.840930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:16.840970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:17.841453      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:27:18.218852 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4372" for this suite. @ 04/27/25 07:27:18.222
• [60.214 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102
  STEP: Creating a kubernetes client @ 04/27/25 07:27:18.229
  I0427 07:27:18.229341 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 07:27:18.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:27:18.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:27:18.249
  STEP: Creating a suspended job @ 04/27/25 07:27:18.259
  STEP: Patching the Job @ 04/27/25 07:27:18.266
  STEP: Watching for Job to be patched @ 04/27/25 07:27:18.287
  I0427 07:27:18.290998 25 job.go:1309] Event ADDED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz] and annotations: map[]
  I0427 07:27:18.291100 25 job.go:1309] Event MODIFIED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz] and annotations: map[]
  I0427 07:27:18.291136 25 job.go:1312] Event MODIFIED found for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[]
  STEP: Updating the job @ 04/27/25 07:27:18.291
  STEP: Watching for Job to be updated @ 04/27/25 07:27:18.302
  I0427 07:27:18.304986 25 job.go:1312] Event MODIFIED found for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  I0427 07:27:18.305149 25 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/27/25 07:27:18.305
  I0427 07:27:18.311505 25 job.go:1187] Job: e2e-v5xqz as labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched]
  STEP: Waiting for job to complete @ 04/27/25 07:27:18.311
  E0427 07:27:18.842255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:19.842044      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:20.842938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:21.843784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:22.844830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:23.845160      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:24.845849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:25.846053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/27/25 07:27:26.342
  STEP: Watching for Job to be deleted @ 04/27/25 07:27:26.35
  I0427 07:27:26.356853 25 job.go:1309] Event MODIFIED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  I0427 07:27:26.357202 25 job.go:1309] Event MODIFIED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  I0427 07:27:26.357243 25 job.go:1309] Event MODIFIED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  I0427 07:27:26.357782 25 job.go:1309] Event MODIFIED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  I0427 07:27:26.357902 25 job.go:1309] Event MODIFIED observed for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  I0427 07:27:26.357925 25 job.go:1312] Event DELETED found for Job e2e-v5xqz in namespace job-7431 with labels: map[e2e-job-label:e2e-v5xqz e2e-v5xqz:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/27/25 07:27:26.357
  I0427 07:27:26.363623 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7431" for this suite. @ 04/27/25 07:27:26.369
• [8.157 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/27/25 07:27:26.386
  I0427 07:27:26.386544 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename cronjob @ 04/27/25 07:27:26.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:27:26.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:27:26.42
  STEP: Creating a ReplaceConcurrent cronjob @ 04/27/25 07:27:26.427
  STEP: Ensuring a job is scheduled @ 04/27/25 07:27:26.436
  E0427 07:27:26.846726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:27.847078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:28.847086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:29.847364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:30.848502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:31.848718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:32.848787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:33.848939      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:34.849687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:35.850112      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:36.850958      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:37.851092      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:38.851222      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:39.851475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:40.851842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:41.852056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:42.853066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:43.853290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:44.854152      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:45.855171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:46.855813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:47.856743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:48.857710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:49.857987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:50.858568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:51.859682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:52.859733      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:53.860043      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:54.860260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:55.860484      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:56.860597      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:57.861006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:58.861932      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:27:59.862103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/27/25 07:28:00.44
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/27/25 07:28:00.443
  STEP: Ensuring the job is replaced with a new one @ 04/27/25 07:28:00.446
  E0427 07:28:00.862941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:01.863040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:02.863192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:03.863750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:04.863795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:05.864061      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:06.864800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:07.865129      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:08.866019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:09.866290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:10.866622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:11.866832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:12.866995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:13.867330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:14.867590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:15.867836      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:16.868808      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:17.869025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:18.869399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:19.869482      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:20.870511      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:21.870720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:22.870915      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:23.871115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:24.871359      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:25.871562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:26.872541      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:27.873561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:28.874100      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:29.874544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:30.875396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:31.875651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:32.876914      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:33.877101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:34.878183      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:35.879331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:36.880176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:37.880592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:38.881596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:39.882718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:40.883192      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:41.883527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:42.884336      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:43.884460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:44.885282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:45.885641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:46.886021      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:47.886240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:48.886555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:49.886757      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:50.887469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:51.887739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:52.887912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:53.888054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:54.888590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:55.888982      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:56.889451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:57.889828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:58.890051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:28:59.890406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/27/25 07:29:00.451
  I0427 07:29:00.455477 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1044" for this suite. @ 04/27/25 07:29:00.461
• [94.082 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192
  STEP: Creating a kubernetes client @ 04/27/25 07:29:00.468
  I0427 07:29:00.468653 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename svcaccounts @ 04/27/25 07:29:00.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:29:00.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:29:00.503
  I0427 07:29:00.534889 25 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0427 07:29:00.534980 25 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0427 07:29:00.545962 25 service_accounts.go:282] created pod pod-service-account-mountsa
  I0427 07:29:00.546036 25 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0427 07:29:00.560939 25 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0427 07:29:00.560995 25 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0427 07:29:00.577152 25 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0427 07:29:00.577204 25 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0427 07:29:00.586874 25 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0427 07:29:00.586923 25 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0427 07:29:00.596354 25 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0427 07:29:00.596418 25 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0427 07:29:00.616146 25 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0427 07:29:00.616254 25 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0427 07:29:00.629279 25 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0427 07:29:00.629411 25 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0427 07:29:00.649122 25 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0427 07:29:00.649201 25 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0427 07:29:00.649369 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3372" for this suite. @ 04/27/25 07:29:00.668
• [0.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 04/27/25 07:29:00.685
  I0427 07:29:00.685726 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 07:29:00.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:29:00.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:29:00.752
  STEP: Creating resourceQuota "e2e-rq-status-7r7z7" @ 04/27/25 07:29:00.782
  I0427 07:29:00.810216 25 resource_quota.go:1102] Resource quota "e2e-rq-status-7r7z7" reports spec: hard cpu limit of 500m
  I0427 07:29:00.810319 25 resource_quota.go:1104] Resource quota "e2e-rq-status-7r7z7" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7r7z7" /status @ 04/27/25 07:29:00.81
  STEP: Confirm /status for "e2e-rq-status-7r7z7" resourceQuota via watch @ 04/27/25 07:29:00.851
  I0427 07:29:00.857269 25 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-7r7z7" in namespace "resourcequota-2909" with hard status: v1.ResourceList(nil)
  I0427 07:29:00.857548 25 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-7r7z7" in namespace "resourcequota-2909" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0427 07:29:00.857755 25 resource_quota.go:1141] ResourceQuota "e2e-rq-status-7r7z7" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/27/25 07:29:00.869
  I0427 07:29:00.887691 25 resource_quota.go:1152] Resource quota "e2e-rq-status-7r7z7" reports spec: hard cpu limit of 1
  I0427 07:29:00.887758 25 resource_quota.go:1153] Resource quota "e2e-rq-status-7r7z7" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7r7z7" /status @ 04/27/25 07:29:00.887
  E0427 07:29:00.891498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Confirm /status for "e2e-rq-status-7r7z7" resourceQuota via watch @ 04/27/25 07:29:00.905
  I0427 07:29:00.913771 25 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-7r7z7" in namespace "resourcequota-2909" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0427 07:29:00.913923 25 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-7r7z7" in namespace "resourcequota-2909" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0427 07:29:00.913955 25 resource_quota.go:1185] ResourceQuota "e2e-rq-status-7r7z7" /status was patched
  STEP: Get "e2e-rq-status-7r7z7" /status @ 04/27/25 07:29:00.913
  I0427 07:29:00.923260 25 resource_quota.go:1196] Resourcequota "e2e-rq-status-7r7z7" reports status: hard cpu of 1
  I0427 07:29:00.923360 25 resource_quota.go:1198] Resourcequota "e2e-rq-status-7r7z7" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7r7z7" /status before checking Spec is unchanged @ 04/27/25 07:29:00.944
  I0427 07:29:00.966371 25 resource_quota.go:1218] Resourcequota "e2e-rq-status-7r7z7" reports status: hard cpu of 2
  I0427 07:29:00.966442 25 resource_quota.go:1220] Resourcequota "e2e-rq-status-7r7z7" reports status: hard memory of 2Gi
  I0427 07:29:00.970064 25 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-7r7z7" in namespace "resourcequota-2909" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0427 07:29:00.976582 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e048), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:01.892275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:02.893009      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:03.893866      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:04.894748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:05.895257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:05.973967 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e0c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:06.895616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:07.895843      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:08.896145      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:09.896444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:10.897115      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:10.972210 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e1c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e1f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:11.898213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:12.898738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:13.899457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:14.899686      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:15.900358      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:15.973585 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e2b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:16.900460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:17.900680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:18.901290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:19.901610      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:20.902134      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:20.973773 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e360), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:21.902723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:22.902972      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:23.903582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:24.903769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:25.904035      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:25.973749 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e4b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00580e4e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:26.904811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:27.905506      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:28.905890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:29.906459      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:30.906922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:30.974694 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e0a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:31.907956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:32.908629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:33.909104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:34.909823      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:35.910821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:35.977816 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039520a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039520d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003952168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:36.911132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:37.911812      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:38.912536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:39.913237      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:40.913542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:40.974264 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e2d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:41.913789      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:42.914244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:43.914616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:44.915578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:45.915901      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:45.975213 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003952318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003952360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039523a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:46.916090      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:47.916364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:48.916585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:49.917124      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:50.917584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:50.974100 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e4c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e4f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:51.918111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:52.918407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:53.918693      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:54.919068      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:55.919342      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:29:55.974706 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003952588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039525b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039525e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:29:56.919692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:57.919925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:58.920278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:29:59.920411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:00.920593      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:00.973380 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e6d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:30:01.920726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:02.920893      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:03.921163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:04.921285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:05.922275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:05.973667 25 resource_quota.go:1263] ResourceQuota "e2e-rq-status-7r7z7" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7r7z7", GenerateName:"", Namespace:"resourcequota-2909", SelfLink:"", UID:"8adb0f92-3b87-49ef-a0d0-1022fa88cf07", ResourceVersion:"53815", Generation:0, CreationTimestamp:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7r7z7"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.April, 27, 7, 29, 0, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00650e8a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0427 07:30:06.922444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:07.923559      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:08.923670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:09.923795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:10.924900      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:10.973655 25 resource_quota.go:1260] ResourceQuota "e2e-rq-status-7r7z7" Spec was unchanged and /status reset
  I0427 07:30:10.973812 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2909" for this suite. @ 04/27/25 07:30:10.976
• [70.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/27/25 07:30:10.98
  I0427 07:30:10.980892 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename runtimeclass @ 04/27/25 07:30:10.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:10.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:10.992
  I0427 07:30:10.998502 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2523" for this suite. @ 04/27/25 07:30:11.078
• [0.100 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/27/25 07:30:11.081
  I0427 07:30:11.081352 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:30:11.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:11.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:11.092
  STEP: Creating configMap with name projected-configmap-test-volume-map-25a9c83a-ce5b-480c-979f-5979c623a79e @ 04/27/25 07:30:11.094
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:30:11.097
  E0427 07:30:11.925337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:12.925374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:13.925785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:14.925983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:30:15.111
  I0427 07:30:15.112954 25 output.go:207] Trying to get logs from node node1 pod pod-projected-configmaps-6b5a0c19-75d2-46c6-b271-0ddef3d839e1 container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:30:15.117
  I0427 07:30:15.127691 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7319" for this suite. @ 04/27/25 07:30:15.13
• [4.053 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/27/25 07:30:15.134
  I0427 07:30:15.134890 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replicaset @ 04/27/25 07:30:15.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:15.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:15.156
  I0427 07:30:15.162832 25 replica_set.go:191] Creating ReplicaSet my-hostname-basic-975e44ac-8375-42a7-a0e9-8b33d3635726
  I0427 07:30:15.173280 25 resource.go:87] Pod name my-hostname-basic-975e44ac-8375-42a7-a0e9-8b33d3635726: Found 0 pods out of 1
  E0427 07:30:15.926750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:16.927540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:17.927812      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:18.928089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:19.928536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:20.177051 25 resource.go:87] Pod name my-hostname-basic-975e44ac-8375-42a7-a0e9-8b33d3635726: Found 1 pods out of 1
  I0427 07:30:20.177093 25 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-975e44ac-8375-42a7-a0e9-8b33d3635726" is running
  I0427 07:30:20.179208 25 replica_set.go:220] Pod "my-hostname-basic-975e44ac-8375-42a7-a0e9-8b33d3635726-729qp" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 07:30:16 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 07:30:15 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 07:30:16 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 07:30:16 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-04-27 07:30:15 +0000 UTC Reason: Message:}])
  I0427 07:30:20.179246 25 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/27/25 07:30:20.179
  I0427 07:30:20.184888 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5191" for this suite. @ 04/27/25 07:30:20.187
• [5.056 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/27/25 07:30:20.191
  I0427 07:30:20.191380 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename ingress @ 04/27/25 07:30:20.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:20.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:20.2
  STEP: getting /apis @ 04/27/25 07:30:20.204
  STEP: getting /apis/networking.k8s.io @ 04/27/25 07:30:20.206
  STEP: getting /apis/networking.k8s.iov1 @ 04/27/25 07:30:20.208
  STEP: creating @ 04/27/25 07:30:20.209
  STEP: getting @ 04/27/25 07:30:20.22
  STEP: listing @ 04/27/25 07:30:20.221
  STEP: watching @ 04/27/25 07:30:20.225
  I0427 07:30:20.225644 25 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/27/25 07:30:20.229
  STEP: cluster-wide watching @ 04/27/25 07:30:20.234
  I0427 07:30:20.234256 25 ingress.go:198] starting watch
  STEP: patching @ 04/27/25 07:30:20.235
  STEP: updating @ 04/27/25 07:30:20.238
  I0427 07:30:20.243523 25 ingress.go:221] waiting for watch events with expected annotations
  I0427 07:30:20.243575 25 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/27/25 07:30:20.243
  STEP: updating /status @ 04/27/25 07:30:20.247
  STEP: get /status @ 04/27/25 07:30:20.251
  STEP: deleting @ 04/27/25 07:30:20.253
  STEP: deleting a collection @ 04/27/25 07:30:20.26
  I0427 07:30:20.267093 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3055" for this suite. @ 04/27/25 07:30:20.288
• [0.101 seconds]
------------------------------
S
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/27/25 07:30:20.292
  I0427 07:30:20.292561 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename csi-storageclass @ 04/27/25 07:30:20.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:20.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:20.303
  STEP: Creating a StorageClass @ 04/27/25 07:30:20.305
  STEP: Get StorageClass "e2e-gr6lz" @ 04/27/25 07:30:20.308
  STEP: Patching the StorageClass "e2e-gr6lz" @ 04/27/25 07:30:20.31
  STEP: Delete StorageClass "e2e-gr6lz" @ 04/27/25 07:30:20.313
  STEP: Confirm deletion of StorageClass "e2e-gr6lz" @ 04/27/25 07:30:20.316
  STEP: Create a replacement StorageClass @ 04/27/25 07:30:20.317
  STEP: Updating StorageClass "e2e-v2-t88m6" @ 04/27/25 07:30:20.319
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-t88m6=updated" @ 04/27/25 07:30:20.325
  STEP: Deleting StorageClass "e2e-v2-t88m6" via DeleteCollection @ 04/27/25 07:30:20.327
  STEP: Confirm deletion of StorageClass "e2e-v2-t88m6" @ 04/27/25 07:30:20.331
  I0427 07:30:20.333018 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-6678" for this suite. @ 04/27/25 07:30:20.389
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 04/27/25 07:30:20.394
  I0427 07:30:20.394169 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename containers @ 04/27/25 07:30:20.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:20.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:20.403
  STEP: Creating a pod to test override command @ 04/27/25 07:30:20.407
  E0427 07:30:20.928868      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:21.929056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:30:22.421
  I0427 07:30:22.424047 25 output.go:207] Trying to get logs from node node1 pod client-containers-b00ce6ff-e63d-4e5d-9e2f-1e0e8337c731 container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:30:22.428
  I0427 07:30:22.436203 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4260" for this suite. @ 04/27/25 07:30:22.438
• [2.048 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/27/25 07:30:22.442
  I0427 07:30:22.442029 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 07:30:22.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:22.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:22.452
  I0427 07:30:22.463244 25 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/27/25 07:30:22.463
  E0427 07:30:22.929767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:23.929997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:24.470005 25 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0427 07:30:24.930288      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:25.930498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:26.474349 25 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0427 07:30:26.480350 25 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0427 07:30:26.930521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:27.930731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:28.485537 25 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0427 07:30:28.492136 25 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0427 07:30:28.495775 25 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0427 07:30:28.500620 25 deployment.go:314] Updating deployment test-rollover-deployment
  I0427 07:30:28.500663 25 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0427 07:30:28.931529      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:29.931645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:30.505860 25 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0427 07:30:30.510232 25 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0427 07:30:30.514341 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0427 07:30:30.514406 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-55f44d5787\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0427 07:30:30.932231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:31.932418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:32.521082 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0427 07:30:32.521142 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-55f44d5787\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0427 07:30:32.933478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:33.933518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:34.520511 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0427 07:30:34.520588 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-55f44d5787\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0427 07:30:34.933951      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:35.934130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:36.519996 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0427 07:30:36.520090 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-55f44d5787\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0427 07:30:36.934208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:37.934441      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:38.519997 25 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0427 07:30:38.520054 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 30, 29, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 30, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-55f44d5787\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0427 07:30:38.934543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:39.934744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:40.520800 25 deployment.go:95] 
  I0427 07:30:40.520848 25 deployment.go:974] Ensure that both old replica sets have no replicas
  I0427 07:30:40.527165 25 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "500533bf-f15e-41d2-8976-e6caa4aa8fb1",
      ResourceVersion: (string) (len=5) "54329",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335826,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-55f44d5787\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 07:30:40.531440 25 deployment.go:40] New ReplicaSet "test-rollover-deployment-55f44d5787" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f44d5787",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cff1866-5719-4c56-86af-ef8d9740de37",
      ResourceVersion: (string) (len=5) "54319",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f44d5787"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "500533bf-f15e-41d2-8976-e6caa4aa8fb1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 30 35 33 33  62 66 2d 66 31 35 65 2d  |\"500533bf-f15e-|
              00000120  34 31 64 32 2d 38 39 37  36 2d 65 36 63 61 61 34  |41d2-8976-e6caa4|
              00000130  61 61 38 66 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aa8fb1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f44d5787"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f44d5787"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:30:40.532606 25 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0427 07:30:40.532774 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d32bcff0-ed60-4752-b9bb-5881c23fb165",
      ResourceVersion: (string) (len=5) "54328",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "500533bf-f15e-41d2-8976-e6caa4aa8fb1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 30 30 35 33 33 62 66  2d 66 31 35 65 2d 34 31  |500533bf-f15e-41|
              000000c0  64 32 2d 38 39 37 36 2d  65 36 63 61 61 34 61 61  |d2-8976-e6caa4aa|
              000000d0  38 66 62 31 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |8fb1\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335839,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:30:40.534146 25 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "023c67b4-0983-46b5-a396-cac9ef51400b",
      ResourceVersion: (string) (len=5) "54288",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335826,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "500533bf-f15e-41d2-8976-e6caa4aa8fb1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 30 35 33 33  62 66 2d 66 31 35 65 2d  |\"500533bf-f15e-|
              00000120  34 31 64 32 2d 38 39 37  36 2d 65 36 63 61 61 34  |41d2-8976-e6caa4|
              00000130  61 61 38 66 62 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aa8fb1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:30:40.537546 25 deployment.go:68] Pod "test-rollover-deployment-55f44d5787-mfx2r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-55f44d5787-mfx2r",
      GenerateName: (string) (len=36) "test-rollover-deployment-55f44d5787-",
      Namespace: (string) (len=15) "deployment-1753",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05757ee4-1833-49e1-8bb8-3c513f2c75d5",
      ResourceVersion: (string) (len=5) "54301",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f44d5787"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-55f44d5787",
          UID: (types.UID) (len=36) "4cff1866-5719-4c56-86af-ef8d9740de37",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 63  66 66 31 38 36 36 2d 35  |d\":\"4cff1866-5|
              00000090  37 31 39 2d 34 63 35 36  2d 38 36 61 66 2d 65 66  |719-4c56-86af-ef|
              000000a0  38 64 39 37 34 30 64 65  33 37 5c 22 7d 22 3a 7b  |8d9740de37\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 39 30 5c 22 7d 22  |2.20.166.190\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8sh29",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8sh29",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881335828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.190",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.190"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881335828,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881335829,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=133) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost@sha256:291f9faa53606adffc37a52c7ef58bd74b742b1c49e68331bc481be521a3672b",
          ContainerID: (string) (len=77) "containerd://0bf41946fa4bd60b082b1a7a432459cbaa11a58de677a9594425372a4c636380",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8sh29",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 07:30:40.540353 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1753" for this suite. @ 04/27/25 07:30:40.544
• [18.105 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/27/25 07:30:40.547
  I0427 07:30:40.547575 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-runtime @ 04/27/25 07:30:40.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:40.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:40.561
  STEP: create the container @ 04/27/25 07:30:40.565
  W0427 07:30:40.572860      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/27/25 07:30:40.572
  E0427 07:30:40.935178      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:41.935287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/27/25 07:30:42.582
  STEP: the container should be terminated @ 04/27/25 07:30:42.584
  STEP: the termination message should be set @ 04/27/25 07:30:42.584
  I0427 07:30:42.584853 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/27/25 07:30:42.584
  I0427 07:30:42.593563 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3503" for this suite. @ 04/27/25 07:30:42.597
• [2.053 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 04/27/25 07:30:42.6
  I0427 07:30:42.600423 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 07:30:42.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:42.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:42.612
  STEP: Counting existing ResourceQuota @ 04/27/25 07:30:42.615
  E0427 07:30:42.935818      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:43.935996      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:44.936639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:45.937314      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:46.937345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/27/25 07:30:47.618
  STEP: Ensuring resource quota status is calculated @ 04/27/25 07:30:47.621
  E0427 07:30:47.937436      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:48.937648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:30:49.627149 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7392" for this suite. @ 04/27/25 07:30:49.63
• [7.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/27/25 07:30:49.638
  I0427 07:30:49.638031 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename cronjob @ 04/27/25 07:30:49.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:30:49.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:30:49.656
  STEP: Creating a ForbidConcurrent cronjob @ 04/27/25 07:30:49.663
  STEP: Ensuring a job is scheduled @ 04/27/25 07:30:49.671
  E0427 07:30:49.938837      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:50.939103      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:51.940059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:52.940379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:53.941147      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:54.941556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:55.942353      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:56.942449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:57.943125      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:58.943404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:30:59.943659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:00.943677      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/27/25 07:31:01.675
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/27/25 07:31:01.678
  STEP: Ensuring no more jobs are scheduled @ 04/27/25 07:31:01.68
  STEP: Removing cronjob @ 04/27/25 07:31:01.682
  I0427 07:31:01.685027 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2318" for this suite. @ 04/27/25 07:31:01.687
• [12.053 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 04/27/25 07:31:01.69
  I0427 07:31:01.690834 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:31:01.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:01.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:01.705
  E0427 07:31:01.944261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:02.944581      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:03.944667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:04.945020      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:05.945095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:06.945268      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:07.946004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:08.946663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:09.946699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:10.947052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:11.947277      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:12.947672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:13.948622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:14.948892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:15.949610      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:16.949460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:17.950434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:18.950628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:19.951726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:20.951903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:21.953032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:22.953324      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:23.758075 25 container_probe.go:92] Container started at 2025-04-27 07:31:02 +0000 UTC, pod became ready at 2025-04-27 07:31:23 +0000 UTC
  I0427 07:31:23.758173 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6233" for this suite. @ 04/27/25 07:31:23.761
• [22.076 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/27/25 07:31:23.767
  I0427 07:31:23.767384 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/27/25 07:31:23.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:23.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:23.781
  STEP: getting /apis @ 04/27/25 07:31:23.783
  STEP: getting /apis/storage.k8s.io @ 04/27/25 07:31:23.786
  STEP: getting /apis/storage.k8s.io/v1 @ 04/27/25 07:31:23.787
  STEP: creating @ 04/27/25 07:31:23.788
  STEP: watching @ 04/27/25 07:31:23.797
  I0427 07:31:23.797677 25 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/27/25 07:31:23.804
  STEP: listing in namespace @ 04/27/25 07:31:23.806
  STEP: listing across namespaces @ 04/27/25 07:31:23.808
  STEP: patching @ 04/27/25 07:31:23.81
  STEP: updating @ 04/27/25 07:31:23.814
  I0427 07:31:23.817060 25 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0427 07:31:23.817170 25 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/27/25 07:31:23.817
  STEP: deleting a collection @ 04/27/25 07:31:23.822
  I0427 07:31:23.830638 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9178" for this suite. @ 04/27/25 07:31:23.863
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/27/25 07:31:23.867
  I0427 07:31:23.867869 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replication-controller @ 04/27/25 07:31:23.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:23.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:23.881
  I0427 07:31:23.885069 25 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/27/25 07:31:23.892
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/27/25 07:31:23.898
  E0427 07:31:23.954233      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/27/25 07:31:24.904
  I0427 07:31:24.909897 25 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/27/25 07:31:24.909
  E0427 07:31:24.954283      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:25.915663 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5299" for this suite. @ 04/27/25 07:31:25.919
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/27/25 07:31:25.923
  I0427 07:31:25.923923 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:31:25.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:25.937
  STEP: creating the pod @ 04/27/25 07:31:25.939
  STEP: submitting the pod to kubernetes @ 04/27/25 07:31:25.939
  STEP: verifying QOS class is set on the pod @ 04/27/25 07:31:25.945
  I0427 07:31:25.948553 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0427 07:31:25.954591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-8220" for this suite. @ 04/27/25 07:31:26.02
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/27/25 07:31:26.024
  I0427 07:31:26.024862 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/27/25 07:31:26.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:26.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:26.04
  I0427 07:31:26.048188 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2202" for this suite. @ 04/27/25 07:31:26.12
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 04/27/25 07:31:26.124
  I0427 07:31:26.124697 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename volumeattachment @ 04/27/25 07:31:26.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:26.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:26.137
  STEP: Create VolumeAttachment "va-e2e-zj48k" on node "node1" @ 04/27/25 07:31:26.221
  STEP: Get VolumeAttachment "va-e2e-zj48k" on node "node1" @ 04/27/25 07:31:26.223
  STEP: Patch VolumeAttachment "va-e2e-zj48k" on node "node1" @ 04/27/25 07:31:26.225
  STEP: List VolumeAttachments with "va-e2e-zj48k=patched" label @ 04/27/25 07:31:26.228
  STEP: Delete VolumeAttachment "va-e2e-zj48k" on node "node1" @ 04/27/25 07:31:26.23
  STEP: Confirm deletion of VolumeAttachment "va-e2e-zj48k" on node "node1" @ 04/27/25 07:31:26.234
  STEP: Create VolumeAttachment "va-e2e-bv9xm" on node "node3" @ 04/27/25 07:31:26.321
  STEP: Update the VolumeAttachment "va-e2e-bv9xm" on node "node3" with label "va-e2e=updated" @ 04/27/25 07:31:26.324
  STEP: Create VolumeAttachment "va-e2e-szbsp" on node "node3" @ 04/27/25 07:31:26.421
  STEP: Update the VolumeAttachment "va-e2e-szbsp" on node "node3" with label "va-e2e=updated" @ 04/27/25 07:31:26.425
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/27/25 07:31:26.429
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/27/25 07:31:26.436
  I0427 07:31:26.437986 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-1808" for this suite. @ 04/27/25 07:31:26.523
• [0.403 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757
  STEP: Creating a kubernetes client @ 04/27/25 07:31:26.527
  I0427 07:31:26.527674 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 07:31:26.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:31:26.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:31:26.542
  STEP: Creating service test in namespace statefulset-2220 @ 04/27/25 07:31:26.545
  STEP: Creating stateful set ss in namespace statefulset-2220 @ 04/27/25 07:31:26.55
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2220 @ 04/27/25 07:31:26.555
  I0427 07:31:26.558581 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0427 07:31:26.955332      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:27.955878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:28.955618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:29.956079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:30.956983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:31.957368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:32.957650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:33.958560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:34.959651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:35.960409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:36.559910 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/27/25 07:31:36.559
  I0427 07:31:36.563405 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:31:36.696367 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:31:36.696425 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:31:36.696442 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:31:36.699574 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0427 07:31:36.960662      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:37.960845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:38.961059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:39.961531      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:40.961475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:41.961718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:42.961938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:43.962170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:44.962422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:45.963382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:46.701465 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:31:46.701503 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0427 07:31:46.724585 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999266s
  E0427 07:31:46.963923      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:47.727890 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.993213322s
  E0427 07:31:47.965180      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:48.732483 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.9891844s
  E0427 07:31:48.965726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:49.736403 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.985352503s
  E0427 07:31:49.966521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:50.741243 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.980751416s
  E0427 07:31:50.966772      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:51.745543 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.976404772s
  E0427 07:31:51.967725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:52.749562 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.971481748s
  E0427 07:31:52.968804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:53.755699 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.96742841s
  E0427 07:31:53.969700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:54.760684 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.961421513s
  E0427 07:31:54.970472      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:55.763498 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 957.057466ms
  E0427 07:31:55.971251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2220 @ 04/27/25 07:31:56.763
  I0427 07:31:56.767735 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 07:31:56.866734 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 07:31:56.866819 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:31:56.866834 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:31:56.866906 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 07:31:56.967337 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0427 07:31:56.967383 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:31:56.967396 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:31:56.967445 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0427 07:31:56.971867      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:31:57.068385 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0427 07:31:57.068432 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:31:57.068629 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:31:57.072160 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0427 07:31:57.972217      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:58.972504      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:31:59.973123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:00.973368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:01.973681      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:02.973875      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:03.974110      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:04.974447      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:05.974574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:06.974742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:07.072995 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:32:07.073043 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:32:07.073083 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/27/25 07:32:07.073
  I0427 07:32:07.076523 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:32:07.181007 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:32:07.181061 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:32:07.181075 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:32:07.181129 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:32:07.309993 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:32:07.310097 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:32:07.310129 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:32:07.310216 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-2220 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:32:07.454379 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:32:07.454435 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:32:07.454450 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:32:07.454464 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0427 07:32:07.459102 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0427 07:32:07.974850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:08.975136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:09.975492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:10.976348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:11.976558      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:12.977543      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:13.977784      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:14.977979      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:15.978388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:16.978426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:17.463039 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:32:17.463092 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:32:17.463103 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:32:17.485706 25 resource.go:168] POD   NODE   PHASE    GRACE  CONDITIONS
  I0427 07:32:17.485765 25 resource.go:175] ss-0  node1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:26 +0000 UTC  }]
  I0427 07:32:17.485781 25 resource.go:175] ss-1  node3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:46 +0000 UTC  }]
  I0427 07:32:17.485796 25 resource.go:175] ss-2  node2  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:48 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:08 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:46 +0000 UTC  }]
  I0427 07:32:17.485804 25 resource.go:178] 
  I0427 07:32:17.485812 25 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  E0427 07:32:17.979709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:18.489203 25 resource.go:168] POD   NODE   PHASE      GRACE  CONDITIONS
  I0427 07:32:18.489270 25 resource.go:175] ss-0  node1  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:26 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:07 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:32:07 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-04-27 07:31:26 +0000 UTC  }]
  I0427 07:32:18.489279 25 resource.go:178] 
  I0427 07:32:18.489288 25 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 1
  E0427 07:32:18.979629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:19.492887 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.983830107s
  E0427 07:32:19.980554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:20.497283 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.980960121s
  E0427 07:32:20.981170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:21.500761 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.976347785s
  E0427 07:32:21.981365      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:22.506870 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.973044454s
  E0427 07:32:22.981899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:23.511936 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.966841326s
  E0427 07:32:23.982032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:24.520160 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.961423073s
  E0427 07:32:24.983260      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:25.524935 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.953386993s
  E0427 07:32:25.984540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:26.530823 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 948.241577ms
  E0427 07:32:26.984709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2220 @ 04/27/25 07:32:27.531
  I0427 07:32:27.534509 25 rest.go:152] Scaling statefulset ss to 0
  I0427 07:32:27.537805 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 07:32:27.539714 25 statefulset.go:138] Deleting all statefulset in ns statefulset-2220
  I0427 07:32:27.541793 25 rest.go:152] Scaling statefulset ss to 0
  I0427 07:32:27.544918 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 07:32:27.546393 25 rest.go:90] Deleting statefulset ss
  I0427 07:32:27.553250 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2220" for this suite. @ 04/27/25 07:32:27.556
• [61.031 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/27/25 07:32:27.559
  I0427 07:32:27.559018 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:32:27.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:32:27.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:32:27.573
  STEP: Creating configMap with name configmap-projected-all-test-volume-f9b36a56-a672-415e-b295-2fd4fedab193 @ 04/27/25 07:32:27.578
  STEP: Creating secret with name secret-projected-all-test-volume-eff4c7a4-c8f2-4f7a-8c5c-00b94814e5da @ 04/27/25 07:32:27.583
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/27/25 07:32:27.589
  W0427 07:32:27.598490      25 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  E0427 07:32:27.985422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:28.985936      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:29.986253      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:30.987083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:32:31.614
  I0427 07:32:31.617552 25 output.go:207] Trying to get logs from node node1 pod projected-volume-83dfc518-f222-4c74-aabb-e7fbd97763be container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:32:31.627
  I0427 07:32:31.644085 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1989" for this suite. @ 04/27/25 07:32:31.654
• [4.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/27/25 07:32:31.663
  I0427 07:32:31.663096 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pod-network-test @ 04/27/25 07:32:31.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:32:31.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:32:31.687
  STEP: Performing setup for networking test in namespace pod-network-test-4779 @ 04/27/25 07:32:31.695
  STEP: creating a selector @ 04/27/25 07:32:31.695
  STEP: Creating the service pods in kubernetes @ 04/27/25 07:32:31.695
  I0427 07:32:31.695403 25 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0427 07:32:31.987925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:32.989214      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:33.989532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:34.989680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:35.990890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:36.991188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:37.991797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:38.992269      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:39.993253      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:40.994014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:41.994610      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:42.995284      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:43.996259      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:44.997159      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/27/25 07:32:45.866
  E0427 07:32:45.997744      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:46.998838      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:47.894843 25 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0427 07:32:47.894899 25 networking.go:42] Breadth first check of 172.20.166.145 on host 192.168.227.151...
  I0427 07:32:47.900002 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.166.147:9080/dial?request=hostname&protocol=http&host=172.20.166.145&port=8083&tries=1'] Namespace:pod-network-test-4779 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:32:47.900162 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:32:47.900254 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4779/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.166.147%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.166.145%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  E0427 07:32:47.999627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:48.016227 25 utils.go:356] Waiting for responses: map[]
  I0427 07:32:48.016353 25 utils.go:360] reached 172.20.166.145 after 0/1 tries
  I0427 07:32:48.016386 25 networking.go:42] Breadth first check of 172.20.104.42 on host 192.168.227.152...
  I0427 07:32:48.022282 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.166.147:9080/dial?request=hostname&protocol=http&host=172.20.104.42&port=8083&tries=1'] Namespace:pod-network-test-4779 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:32:48.022557 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:32:48.022708 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4779/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.166.147%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.104.42%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0427 07:32:48.123479 25 utils.go:356] Waiting for responses: map[]
  I0427 07:32:48.123526 25 utils.go:360] reached 172.20.104.42 after 0/1 tries
  I0427 07:32:48.123542 25 networking.go:42] Breadth first check of 172.20.135.49 on host 192.168.227.153...
  I0427 07:32:48.131875 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.20.166.147:9080/dial?request=hostname&protocol=http&host=172.20.135.49&port=8083&tries=1'] Namespace:pod-network-test-4779 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:32:48.132051 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:32:48.132269 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/pod-network-test-4779/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.20.166.147%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.20.135.49%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0427 07:32:48.243278 25 utils.go:356] Waiting for responses: map[]
  I0427 07:32:48.243518 25 utils.go:360] reached 172.20.135.49 after 0/1 tries
  I0427 07:32:48.243560 25 networking.go:53] Going to retry 0 out of 3 pods....
  I0427 07:32:48.243843 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4779" for this suite. @ 04/27/25 07:32:48.252
• [16.600 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/27/25 07:32:48.263
  I0427 07:32:48.263792 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:32:48.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:32:48.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:32:48.298
  STEP: Creating projection with secret that has name projected-secret-test-map-674c6326-647b-4a2a-9666-3cdda621d597 @ 04/27/25 07:32:48.309
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:32:48.317
  E0427 07:32:49.000449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:50.001078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:51.001851      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:52.002177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:32:52.35
  I0427 07:32:52.354661 25 output.go:207] Trying to get logs from node node1 pod pod-projected-secrets-fed8ee00-cc01-4837-976e-b5afe4d623b3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:32:52.361
  I0427 07:32:52.377936 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9028" for this suite. @ 04/27/25 07:32:52.381
• [4.122 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 04/27/25 07:32:52.386
  I0427 07:32:52.386209 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-selectable-fields @ 04/27/25 07:32:52.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:32:52.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:32:52.404
  STEP: Setting up server cert @ 04/27/25 07:32:52.407
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/27/25 07:32:52.625
  STEP: Deploying the custom resource conversion webhook pod @ 04/27/25 07:32:52.63
  STEP: Wait for the deployment to be ready @ 04/27/25 07:32:52.64
  I0427 07:32:52.647006 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0427 07:32:53.002763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:54.003001      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:32:54.655
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:32:54.66
  E0427 07:32:55.003091      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:32:55.660709 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 04/27/25 07:32:55.666
  I0427 07:32:55.666357 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:32:56.003902      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 04/27/25 07:32:56.179
  E0427 07:32:57.004500      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:32:58.004892      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 04/27/25 07:32:58.213
  STEP: Registering informers with field selectors @ 04/27/25 07:32:58.22
  STEP: Creating custom resources @ 04/27/25 07:32:58.22
  STEP: Listing v2 custom resources with field selector host=host1 @ 04/27/25 07:32:58.238
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 04/27/25 07:32:58.241
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 04/27/25 07:32:58.245
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 04/27/25 07:32:58.248
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 04/27/25 07:32:58.251
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 04/27/25 07:32:58.257
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 04/27/25 07:32:58.257
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 04/27/25 07:32:58.257
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 04/27/25 07:32:58.257
  STEP: Deleting one custom resources to ensure that deletions are observed @ 04/27/25 07:32:58.257
  STEP: Updating one custom resources to ensure that deletions are observed @ 04/27/25 07:32:58.267
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 04/27/25 07:32:58.28
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 04/27/25 07:32:58.283
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 04/27/25 07:32:58.286
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 04/27/25 07:32:58.291
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 04/27/25 07:32:58.291
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 04/27/25 07:32:58.292
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 04/27/25 07:32:58.292
  I0427 07:32:58.845559 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-561" for this suite. @ 04/27/25 07:32:58.852
• [6.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 04/27/25 07:32:58.867
  I0427 07:32:58.867587 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 07:32:58.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:32:58.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:32:58.896
  STEP: Creating a test externalName service @ 04/27/25 07:32:58.902
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1392.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local; sleep 1; done
   @ 04/27/25 07:32:58.908
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1392.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local; sleep 1; done
   @ 04/27/25 07:32:58.908
  STEP: creating a pod to probe DNS @ 04/27/25 07:32:58.908
  STEP: submitting the pod to kubernetes @ 04/27/25 07:32:58.908
  E0427 07:32:59.005455      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:00.006542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/27/25 07:33:00.934
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:33:00.936
  I0427 07:33:00.941703 25 dns_common.go:571] DNS probes using dns-test-6c4c8638-9054-4ce5-95f4-4158264e71dc succeeded

  STEP: changing the externalName to bar.example.com @ 04/27/25 07:33:00.941
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1392.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local; sleep 1; done
   @ 04/27/25 07:33:00.948
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1392.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local; sleep 1; done
   @ 04/27/25 07:33:00.948
  STEP: creating a second pod to probe DNS @ 04/27/25 07:33:00.949
  STEP: submitting the pod to kubernetes @ 04/27/25 07:33:00.949
  E0427 07:33:01.007234      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:02.007559      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:03.008065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:04.008414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:05.008666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:06.009430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:07.010046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:08.010262      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/27/25 07:33:08.975
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:33:08.977
  I0427 07:33:08.980905 25 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:08.985815 25 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:08.985863 25 dns_common.go:506] Lookups using dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d failed for: [agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local]

  I0427 07:33:08.992678 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:33:08.997750 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:33:09.003748 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:33:09.011033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:10.011607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:11.011618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:12.013118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:13.013884      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:13.988371 25 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:13.997090 25 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:13.997212 25 dns_common.go:506] Lookups using dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d failed for: [agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local]

  I0427 07:33:14.013773 25 dns_common.go:514] Pod client logs for webserver: 
  E0427 07:33:14.013989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:14.027626 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:33:14.042116 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:33:15.014337      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:16.014984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:17.015371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:18.015755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:18.985985 25 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:18.994224 25 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:18.994330 25 dns_common.go:506] Lookups using dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d failed for: [agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local]

  I0427 07:33:19.005772 25 dns_common.go:514] Pod client logs for webserver: 
  E0427 07:33:19.016530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:19.021763 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:33:19.037123 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:33:20.016825      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:21.017560      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:22.018154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:23.018629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:23.987901 25 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:23.994657 25 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:23.994785 25 dns_common.go:506] Lookups using dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d failed for: [agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local]

  I0427 07:33:24.009355 25 dns_common.go:514] Pod client logs for webserver: 
  E0427 07:33:24.019574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:24.024925 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:33:24.037405 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:33:25.020905      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:26.021585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:27.021830      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:28.022647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:28.987719 25 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:28.997193 25 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local from pod  dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0427 07:33:28.997357 25 dns_common.go:506] Lookups using dns-1392/dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d failed for: [agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local]

  I0427 07:33:29.012574 25 dns_common.go:514] Pod client logs for webserver: 
  E0427 07:33:29.023377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:29.029231 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:33:29.047476 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:33:30.023701      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:31.024393      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:32.024801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:33.025120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:33.992450 25 dns_common.go:571] DNS probes using dns-test-849beca2-8bba-44fe-b3fa-3f09ad65145d succeeded

  STEP: changing the service to type=ClusterIP @ 04/27/25 07:33:33.992
  W0427 07:33:34.011941      25 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1392.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-1392.svc.cluster.local; sleep 1; done
   @ 04/27/25 07:33:34.012
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1392.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1392.svc.cluster.local; sleep 1; done
   @ 04/27/25 07:33:34.012
  STEP: creating a third pod to probe DNS @ 04/27/25 07:33:34.012
  STEP: submitting the pod to kubernetes @ 04/27/25 07:33:34.019
  E0427 07:33:34.025996      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:35.026211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:36.026495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/27/25 07:33:36.048
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:33:36.051
  I0427 07:33:36.066136 25 dns_common.go:571] DNS probes using dns-test-75bda093-5b59-41e7-a591-2ac0b8330605 succeeded

  STEP: deleting the pod @ 04/27/25 07:33:36.066
  STEP: deleting the pod @ 04/27/25 07:33:36.082
  STEP: deleting the pod @ 04/27/25 07:33:36.103
  STEP: deleting the test externalName service @ 04/27/25 07:33:36.121
  I0427 07:33:36.174852 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1392" for this suite. @ 04/27/25 07:33:36.18
• [37.326 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 04/27/25 07:33:36.193
  I0427 07:33:36.193833 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 07:33:36.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:33:36.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:33:36.227
  I0427 07:33:36.234718 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:33:37.026824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:38.027460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  W0427 07:33:38.804726      25 warnings.go:70] unknown field "alpha"
  W0427 07:33:38.804766      25 warnings.go:70] unknown field "beta"
  W0427 07:33:38.804775      25 warnings.go:70] unknown field "delta"
  W0427 07:33:38.804784      25 warnings.go:70] unknown field "epsilon"
  W0427 07:33:38.804792      25 warnings.go:70] unknown field "gamma"
  E0427 07:33:39.027509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:39.362178 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4827" for this suite. @ 04/27/25 07:33:39.369
• [3.185 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037
  STEP: Creating a kubernetes client @ 04/27/25 07:33:39.379
  I0427 07:33:39.379377 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 07:33:39.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:33:39.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:33:39.407
  STEP: Creating service test in namespace statefulset-9817 @ 04/27/25 07:33:39.414
  STEP: Creating statefulset ss in namespace statefulset-9817 @ 04/27/25 07:33:39.428
  I0427 07:33:39.448080 25 wait.go:40] Found 0 stateful pods, waiting for 1
  E0427 07:33:40.027505      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:41.028177      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:42.028911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:43.029639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:44.029556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:45.030740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:46.031555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:47.032094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:48.032127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:49.032809      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:49.445997 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/27/25 07:33:49.451
  STEP: Getting /status @ 04/27/25 07:33:49.455
  I0427 07:33:49.458826 25 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/27/25 07:33:49.458
  I0427 07:33:49.465357 25 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/27/25 07:33:49.465
  I0427 07:33:49.467896 25 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0427 07:33:49.467966 25 statefulset.go:1114] Found Statefulset ss in namespace statefulset-9817 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:33:49.467981 25 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/27/25 07:33:49.467
  I0427 07:33:49.468013 25 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0427 07:33:49.473728 25 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/27/25 07:33:49.473
  I0427 07:33:49.475902 25 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0427 07:33:49.475967 25 statefulset.go:1154] Observed Statefulset ss in namespace statefulset-9817 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:33:49.476041 25 statefulset.go:1158] Observed &StatefulSet event: MODIFIED
  I0427 07:33:49.476107 25 statefulset.go:138] Deleting all statefulset in ns statefulset-9817
  I0427 07:33:49.478472 25 rest.go:152] Scaling statefulset ss to 0
  E0427 07:33:50.033007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:51.033522      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:52.033467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:53.033689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:54.034753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:55.034889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:56.035150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:57.035301      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:58.035557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:33:59.035820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:33:59.492662 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 07:33:59.494600 25 rest.go:90] Deleting statefulset ss
  I0427 07:33:59.500760 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9817" for this suite. @ 04/27/25 07:33:59.503
• [20.128 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 04/27/25 07:33:59.506
  I0427 07:33:59.506865 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename security-context-test @ 04/27/25 07:33:59.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:33:59.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:33:59.517
  E0427 07:34:00.036345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:01.036619      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:02.036755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:03.036928      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:34:03.533070 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1189" for this suite. @ 04/27/25 07:34:03.536
• [4.033 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1763
  STEP: Creating a kubernetes client @ 04/27/25 07:34:03.54
  I0427 07:34:03.540116 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:34:03.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:34:03.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:34:03.55
  STEP: running the image registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4 @ 04/27/25 07:34:03.552
  I0427 07:34:03.553035 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-889 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4'
  I0427 07:34:03.600597 25 builder.go:146] stderr: ""
  I0427 07:34:03.600640 25 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/27/25 07:34:03.6
  I0427 07:34:03.604858 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-889 delete pods e2e-test-httpd-pod'
  E0427 07:34:04.037327      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:05.037478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:34:05.067020 25 builder.go:146] stderr: ""
  I0427 07:34:05.067063 25 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0427 07:34:05.067146 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-889" for this suite. @ 04/27/25 07:34:05.069
• [1.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/27/25 07:34:05.072
  I0427 07:34:05.072849 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:34:05.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:34:05.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:34:05.084
  STEP: Creating projection with secret that has name projected-secret-test-239b844f-97a4-49ec-a4af-cca82e490bf2 @ 04/27/25 07:34:05.087
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:34:05.089
  E0427 07:34:06.037693      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:07.038085      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:08.039073      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:09.039775      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:34:09.106
  I0427 07:34:09.112027 25 output.go:207] Trying to get logs from node node1 pod pod-projected-secrets-d5335abd-1533-486b-b301-0a47e61364e2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:34:09.12
  I0427 07:34:09.139851 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7107" for this suite. @ 04/27/25 07:34:09.147
• [4.083 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 04/27/25 07:34:09.155
  I0427 07:34:09.156024 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/27/25 07:34:09.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:34:09.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:34:09.184
  STEP: Setting up the test @ 04/27/25 07:34:09.189
  STEP: Creating hostNetwork=false pod @ 04/27/25 07:34:09.189
  E0427 07:34:10.040699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:11.040934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/27/25 07:34:11.214
  E0427 07:34:12.041548      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:13.042382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/27/25 07:34:13.226
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/27/25 07:34:13.226
  I0427 07:34:13.226633 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.226648 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.226678 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0427 07:34:13.272957 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.273003 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.273043 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.273113 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0427 07:34:13.315526 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.315569 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.315579 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.315635 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0427 07:34:13.362971 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.363025 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.363036 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.363082 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0427 07:34:13.411051 25 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/27/25 07:34:13.411
  I0427 07:34:13.411133 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.411143 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.411194 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0427 07:34:13.458368 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.458411 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.458422 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.458465 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0427 07:34:13.507048 25 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/27/25 07:34:13.507
  I0427 07:34:13.507483 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.507510 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.507663 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0427 07:34:13.562603 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.562646 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.562657 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.562705 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0427 07:34:13.608893 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.608941 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.608951 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.608993 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0427 07:34:13.661693 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.661751 25 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6758 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:34:13.661762 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:34:13.661813 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6758/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0427 07:34:13.712265 25 exec_util.go:108] Exec stderr: ""
  I0427 07:34:13.712428 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6758" for this suite. @ 04/27/25 07:34:13.716
• [4.565 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164
  STEP: Creating a kubernetes client @ 04/27/25 07:34:13.72
  I0427 07:34:13.720815 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:34:13.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:34:13.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:34:13.732
  STEP: fetching services @ 04/27/25 07:34:13.736
  I0427 07:34:13.740262 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2288" for this suite. @ 04/27/25 07:34:13.817
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 04/27/25 07:34:13.822
  I0427 07:34:13.822598 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:34:13.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:34:13.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:34:13.834
  STEP: Setting up server cert @ 04/27/25 07:34:13.851
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:34:13.931
  STEP: Deploying the webhook pod @ 04/27/25 07:34:13.935
  STEP: Wait for the deployment to be ready @ 04/27/25 07:34:13.944
  I0427 07:34:13.948832 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:34:14.043104      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:15.044027      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:34:15.957
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:34:15.964
  E0427 07:34:16.044608      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:34:16.964391 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/27/25 07:34:16.968
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/27/25 07:34:16.978
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/27/25 07:34:16.982
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/27/25 07:34:16.987
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/27/25 07:34:16.994
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/27/25 07:34:16.998
  I0427 07:34:17.025571 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9779" for this suite. @ 04/27/25 07:34:17.029
  STEP: Destroying namespace "webhook-markers-6938" for this suite. @ 04/27/25 07:34:17.035
• [3.219 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/27/25 07:34:17.041
  I0427 07:34:17.041848 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:34:17.042
  E0427 07:34:17.045136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:34:17.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:34:17.06
  STEP: Creating secret with name s-test-opt-del-7ccbb183-7453-4c0b-890d-eeafcd7bb004 @ 04/27/25 07:34:17.129
  STEP: Creating secret with name s-test-opt-upd-0879408f-24cc-49f4-ab4d-c8dbb20a4d9d @ 04/27/25 07:34:17.134
  STEP: Creating the pod @ 04/27/25 07:34:17.138
  E0427 07:34:18.045364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:19.045752      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-7ccbb183-7453-4c0b-890d-eeafcd7bb004 @ 04/27/25 07:34:19.209
  STEP: Updating secret s-test-opt-upd-0879408f-24cc-49f4-ab4d-c8dbb20a4d9d @ 04/27/25 07:34:19.218
  STEP: Creating secret with name s-test-opt-create-27b11492-f918-4b60-9dd8-05d654daed6c @ 04/27/25 07:34:19.229
  STEP: waiting to observe update in volume @ 04/27/25 07:34:19.237
  E0427 07:34:20.046575      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:21.046773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:22.047251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:23.047582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:24.047801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:25.048066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:26.048835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:27.049175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:28.050223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:29.050591      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:30.050910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:31.051101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:32.051834      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:33.052170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:34.053012      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:35.053652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:36.054448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:37.054604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:38.055460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:39.055672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:40.056409      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:41.056556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:42.056883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:43.057132      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:44.058140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:45.058395      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:46.059051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:47.059338      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:48.059719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:49.059931      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:50.060366      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:51.060690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:52.060966      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:53.061189      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:54.061427      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:55.061639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:56.062379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:57.062790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:58.063221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:34:59.063488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:00.063672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:01.064344      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:02.064458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:03.064719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:04.064824      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:05.065000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:06.065947      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:07.066170      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:08.066396      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:09.066533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:10.067642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:11.067745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:12.068936      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:13.069274      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:14.070153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:15.070527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:16.071457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:17.071933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:18.072050      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:19.072439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:20.072435      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:21.072520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:22.073584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:23.073751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:24.074013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:25.074378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:26.075249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:27.075561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:28.076167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:29.075936      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:30.076350      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:31.076443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:31.515228 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2160" for this suite. @ 04/27/25 07:35:31.518
• [74.481 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/27/25 07:35:31.523
  I0427 07:35:31.523236 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 07:35:31.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:31.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:31.533
  I0427 07:35:31.626456 25 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/27/25 07:35:31.63
  I0427 07:35:31.723456 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:35:31.723575 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  E0427 07:35:32.077773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:32.639123 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 07:35:32.639167 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  E0427 07:35:33.077493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:33.637454 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 07:35:33.637494 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/27/25 07:35:33.647
  STEP: Check that daemon pods images are updated. @ 04/27/25 07:35:33.656
  I0427 07:35:33.663773 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b9svh. Expected: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53, got: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4.
  I0427 07:35:33.663848 25 daemon_set.go:1193] Wrong image for pod: daemon-set-f7ph8. Expected: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53, got: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4.
  E0427 07:35:34.077725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:34.662721 25 daemon_set.go:1193] Wrong image for pod: daemon-set-b9svh. Expected: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53, got: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4.
  I0427 07:35:34.662767 25 daemon_set.go:1193] Wrong image for pod: daemon-set-f7ph8. Expected: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53, got: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4.
  I0427 07:35:34.662779 25 daemon_set.go:1198] Pod daemon-set-q6hch is not available
  E0427 07:35:35.078807      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:35.660916 25 daemon_set.go:1193] Wrong image for pod: daemon-set-f7ph8. Expected: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53, got: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4.
  E0427 07:35:36.079143      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:36.662236 25 daemon_set.go:1198] Pod daemon-set-5zc8d is not available
  I0427 07:35:36.662278 25 daemon_set.go:1193] Wrong image for pod: daemon-set-f7ph8. Expected: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53, got: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4.
  E0427 07:35:37.080394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:38.081345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:38.660702 25 daemon_set.go:1198] Pod daemon-set-cmx5r is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/27/25 07:35:38.663
  I0427 07:35:38.667660 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0427 07:35:38.667695 25 fixtures.go:131] Node node2 is running 0 daemon pod, expected 1
  E0427 07:35:39.082533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:39.676776 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 07:35:39.676838 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/27/25 07:35:39.697
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-978, will wait for the garbage collector to delete the pods @ 04/27/25 07:35:39.697
  I0427 07:35:39.756561 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 4.289818ms
  I0427 07:35:39.856829 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.263209ms
  E0427 07:35:40.083989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:40.861769 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:35:40.861815 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0427 07:35:40.864182 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56280"},"items":null}

  I0427 07:35:40.865904 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56280"},"items":null}

  I0427 07:35:40.874616 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-978" for this suite. @ 04/27/25 07:35:40.877
• [9.358 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/27/25 07:35:40.882
  I0427 07:35:40.882044 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sysctl @ 04/27/25 07:35:40.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:40.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:40.894
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/27/25 07:35:40.898
  STEP: Watching for error events or started pod @ 04/27/25 07:35:40.903
  E0427 07:35:41.084780      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:42.084995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 04/27/25 07:35:42.906
  E0427 07:35:43.085094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:44.085345      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 04/27/25 07:35:44.913
  STEP: Getting logs from the pod @ 04/27/25 07:35:44.913
  STEP: Checking that the sysctl is actually updated @ 04/27/25 07:35:44.918
  I0427 07:35:44.918937 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6393" for this suite. @ 04/27/25 07:35:44.922
• [4.044 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 04/27/25 07:35:44.925
  I0427 07:35:44.925793 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename disruption @ 04/27/25 07:35:44.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:44.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:44.936
  STEP: Creating a kubernetes client @ 04/27/25 07:35:44.938
  I0427 07:35:44.938998 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename disruption-2 @ 04/27/25 07:35:44.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:44.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:44.948
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:35:44.966
  E0427 07:35:45.085646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:46.085881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:35:46.971
  E0427 07:35:47.086440      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:48.086710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:35:48.98
  E0427 07:35:49.087461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:50.087719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/27/25 07:35:50.985
  STEP: listing a collection of PDBs in namespace disruption-5865 @ 04/27/25 07:35:50.988
  STEP: deleting a collection of PDBs @ 04/27/25 07:35:50.99
  STEP: Waiting for the PDB collection to be deleted @ 04/27/25 07:35:50.995
  I0427 07:35:50.997354 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8414" for this suite. @ 04/27/25 07:35:51
  I0427 07:35:51.004239 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0427 07:35:51.088584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "disruption-5865" for this suite. @ 04/27/25 07:35:51.103
• [6.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 04/27/25 07:35:51.108
  I0427 07:35:51.108814 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:35:51.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:51.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:51.12
  STEP: Setting up server cert @ 04/27/25 07:35:51.132
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:35:51.22
  STEP: Deploying the webhook pod @ 04/27/25 07:35:51.225
  STEP: Wait for the deployment to be ready @ 04/27/25 07:35:51.23
  I0427 07:35:51.235627 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:35:52.089246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:53.089643      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:35:53.245
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:35:53.251
  E0427 07:35:54.090639      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:54.251857 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/27/25 07:35:54.259
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/27/25 07:35:54.273
  STEP: Creating a configMap that should not be mutated @ 04/27/25 07:35:54.277
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/27/25 07:35:54.284
  STEP: Creating a configMap that should be mutated @ 04/27/25 07:35:54.291
  I0427 07:35:54.357494 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5243" for this suite. @ 04/27/25 07:35:54.367
  STEP: Destroying namespace "webhook-markers-6788" for this suite. @ 04/27/25 07:35:54.376
• [3.276 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/27/25 07:35:54.385
  I0427 07:35:54.385563 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/27/25 07:35:54.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:54.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:54.415
  STEP: mirroring a new custom Endpoint @ 04/27/25 07:35:54.441
  I0427 07:35:54.456384 25 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0427 07:35:55.091190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:56.091410      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/27/25 07:35:56.459
  STEP: mirroring deletion of a custom Endpoint @ 04/27/25 07:35:56.468
  I0427 07:35:56.483474 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4767" for this suite. @ 04/27/25 07:35:56.49
• [2.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 04/27/25 07:35:56.496
  I0427 07:35:56.496798 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/27/25 07:35:56.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:35:56.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:35:56.518
  I0427 07:35:56.523851 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:35:57.092344      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/27/25 07:35:57.765
  I0427 07:35:57.765266 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-444 --namespace=crd-publish-openapi-444 create -f -'
  E0427 07:35:58.093194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:35:59.093545      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:35:59.882543 25 builder.go:146] stderr: ""
  I0427 07:35:59.882614 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-49-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0427 07:35:59.882689 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-444 --namespace=crd-publish-openapi-444 delete e2e-test-crd-publish-openapi-49-crds test-cr'
  I0427 07:35:59.939955 25 builder.go:146] stderr: ""
  I0427 07:35:59.940244 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-49-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0427 07:35:59.940357 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-444 --namespace=crd-publish-openapi-444 apply -f -'
  I0427 07:36:00.012445 25 builder.go:146] stderr: ""
  I0427 07:36:00.012502 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-49-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0427 07:36:00.012555 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-444 --namespace=crd-publish-openapi-444 delete e2e-test-crd-publish-openapi-49-crds test-cr'
  E0427 07:36:00.094111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:36:00.101742 25 builder.go:146] stderr: ""
  I0427 07:36:00.101792 25 builder.go:147] stdout: "e2e-test-crd-publish-openapi-49-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/27/25 07:36:00.101
  I0427 07:36:00.101876 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=crd-publish-openapi-444 explain e2e-test-crd-publish-openapi-49-crds'
  I0427 07:36:00.156785 25 builder.go:146] stderr: ""
  I0427 07:36:00.156870 25 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-49-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0427 07:36:01.094329      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:36:01.368818 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-444" for this suite. @ 04/27/25 07:36:01.374
• [4.882 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1398
  STEP: Creating a kubernetes client @ 04/27/25 07:36:01.379
  I0427 07:36:01.379278 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:36:01.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:36:01.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:36:01.392
  I0427 07:36:01.399813 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 create -f -'
  I0427 07:36:01.496586 25 builder.go:146] stderr: ""
  I0427 07:36:01.496644 25 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0427 07:36:01.496709 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 create -f -'
  I0427 07:36:01.642868 25 builder.go:146] stderr: ""
  I0427 07:36:01.643043 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/27/25 07:36:01.643
  E0427 07:36:02.094632      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:36:02.651728 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 07:36:02.651862 25 framework.go:733] Found 1 / 1
  I0427 07:36:02.651898 25 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0427 07:36:02.656179 25 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0427 07:36:02.656244 25 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0427 07:36:02.656347 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 describe pod agnhost-primary-pbcxw'
  I0427 07:36:02.738207 25 builder.go:146] stderr: ""
  I0427 07:36:02.738290 25 builder.go:147] stdout: "Name:             agnhost-primary-pbcxw\nNamespace:        kubectl-3527\nPriority:         0\nService Account:  default\nNode:             node1/192.168.227.151\nStart Time:       Sun, 27 Apr 2025 07:36:01 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               172.20.166.166\nIPs:\n  IP:           172.20.166.166\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://a52945158b379354dd2edc85f9a5dd60f975ab339e91be63a97012293cb667cc\n    Image:          registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53\n    Image ID:       registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost@sha256:291f9faa53606adffc37a52c7ef58bd74b742b1c49e68331bc481be521a3672b\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 27 Apr 2025 07:36:02 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qlhw5 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-qlhw5:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3527/agnhost-primary-pbcxw to node1\n  Normal  Pulled     0s    kubelet            Container image \"registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    0s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0427 07:36:02.738367 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 describe rc agnhost-primary'
  I0427 07:36:02.817108 25 builder.go:146] stderr: ""
  I0427 07:36:02.817204 25 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3527\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-pbcxw\n"
  I0427 07:36:02.817270 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 describe service agnhost-primary'
  I0427 07:36:02.898494 25 builder.go:146] stderr: ""
  I0427 07:36:02.898573 25 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-3527\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.68.174.5\nIPs:                      10.68.174.5\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                172.20.166.166:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0427 07:36:02.904289 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 describe node node1'
  I0427 07:36:03.002939 25 builder.go:146] stderr: ""
  I0427 07:36:03.003019 25 builder.go:147] stdout: "Name:               node1\nRoles:              master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=node1\n                    kubernetes.io/os=linux\n                    kubernetes.io/role=master\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 27 Apr 2025 02:40:18 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  node1\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 27 Apr 2025 07:35:53 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 27 Apr 2025 02:46:07 +0000   Sun, 27 Apr 2025 02:46:07 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sun, 27 Apr 2025 07:35:33 +0000   Sun, 27 Apr 2025 02:40:18 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 27 Apr 2025 07:35:33 +0000   Sun, 27 Apr 2025 02:40:18 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 27 Apr 2025 07:35:33 +0000   Sun, 27 Apr 2025 02:40:18 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 27 Apr 2025 07:35:33 +0000   Sun, 27 Apr 2025 02:40:18 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.227.151\n  Hostname:    node1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  2061037072Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8083580Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  1899451762411\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7776380Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 2ed8886486754419a0e38cc37d8be9d1\n  System UUID:                d1a54d56-a578-dd61-c7aa-5d8c5844e134\n  Boot ID:                    0dcf2058-8ebd-4c2b-9211-04d31148b165\n  Kernel Version:             6.8.0-58-generic\n  OS Image:                   Ubuntu 24.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://2.0.4\n  Kubelet Version:            v1.32.3\n  Kube-Proxy Version:         v1.32.3\nPodCIDR:                      172.20.0.0/24\nPodCIDRs:                     172.20.0.0/24\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-5mcpm                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         4h50m\n  kube-system                 metrics-server-74f6d6fdd5-pqsjn                            100m (2%)     0 (0%)      200Mi (2%)       0 (0%)         49m\n  kube-system                 node-local-dns-r5bs2                                       25m (0%)      0 (0%)      5Mi (0%)         0 (0%)         4h49m\n  kubectl-3527                agnhost-primary-pbcxw                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-jqbpf    0 (0%)        0 (0%)      0 (0%)           0 (0%)         83m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                375m (9%)   0 (0%)\n  memory             205Mi (2%)  0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0427 07:36:03.003087 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3527 describe namespace kubectl-3527'
  I0427 07:36:03.071050 25 builder.go:146] stderr: ""
  I0427 07:36:03.071109 25 builder.go:147] stdout: "Name:         kubectl-3527\nLabels:       e2e-framework=kubectl\n              e2e-run=f5a930d4-38d4-4eb5-806f-b09a3e3a12df\n              kubernetes.io/metadata.name=kubectl-3527\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0427 07:36:03.071274 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3527" for this suite. @ 04/27/25 07:36:03.074
• [1.700 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/27/25 07:36:03.08
  I0427 07:36:03.080179 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename endpointslice @ 04/27/25 07:36:03.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:36:03.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:36:03.094
  E0427 07:36:03.095045      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/27/25 07:36:03.098
  STEP: getting /apis/discovery.k8s.io @ 04/27/25 07:36:03.102
  STEP: getting /apis/discovery.k8s.iov1 @ 04/27/25 07:36:03.103
  STEP: creating @ 04/27/25 07:36:03.105
  STEP: getting @ 04/27/25 07:36:03.119
  STEP: listing @ 04/27/25 07:36:03.123
  STEP: watching @ 04/27/25 07:36:03.127
  I0427 07:36:03.127506 25 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/27/25 07:36:03.129
  STEP: cluster-wide watching @ 04/27/25 07:36:03.132
  I0427 07:36:03.133037 25 endpointslice.go:459] starting watch
  STEP: patching @ 04/27/25 07:36:03.134
  STEP: updating @ 04/27/25 07:36:03.141
  I0427 07:36:03.150548 25 endpointslice.go:482] waiting for watch events with expected annotations
  I0427 07:36:03.150621 25 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/27/25 07:36:03.15
  STEP: deleting a collection @ 04/27/25 07:36:03.165
  I0427 07:36:03.185101 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2013" for this suite. @ 04/27/25 07:36:03.198
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/27/25 07:36:03.208
  I0427 07:36:03.208374 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sysctl @ 04/27/25 07:36:03.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:36:03.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:36:03.229
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/27/25 07:36:03.234
  I0427 07:36:03.240874 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7294" for this suite. @ 04/27/25 07:36:03.292
• [0.090 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/27/25 07:36:03.298
  I0427 07:36:03.298277 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:36:03.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:36:03.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:36:03.312
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:36:03.317
  E0427 07:36:04.095416      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:05.095641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:06.096579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:07.096985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:36:07.357
  I0427 07:36:07.359808 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-6b82126b-3955-46de-a348-9bfb9f65857f container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:36:07.363
  I0427 07:36:07.373321 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9906" for this suite. @ 04/27/25 07:36:07.376
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199
  STEP: Creating a kubernetes client @ 04/27/25 07:36:07.38
  I0427 07:36:07.380205 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 07:36:07.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:36:07.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:36:07.395
  STEP: Looking for a node to schedule job pods @ 04/27/25 07:36:07.398
  STEP: Creating a job @ 04/27/25 07:36:07.478
  STEP: Waiting for all the pods to be ready @ 04/27/25 07:36:07.485
  E0427 07:36:08.097780      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:09.098211      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:10.098364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:11.098777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 04/27/25 07:36:11.496
  STEP: Evict all the Pods @ 04/27/25 07:36:11.499
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-8vx8s/job-6188 @ 04/27/25 07:36:11.499
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-vpk5l/job-6188 @ 04/27/25 07:36:11.499
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-pf5ln/job-6188 @ 04/27/25 07:36:11.499
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-8vx8s/job-6188 to be deleted @ 04/27/25 07:36:11.511
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-pf5ln/job-6188 to be deleted @ 04/27/25 07:36:11.514
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-vpk5l/job-6188 to be deleted @ 04/27/25 07:36:11.515
  E0427 07:36:12.099700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:13.099956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:14.100878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:15.101235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 04/27/25 07:36:15.528
  E0427 07:36:16.101363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:17.101709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:18.102204      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:19.102265      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:20.102938      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:21.103419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:22.104025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:23.104341      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:24.104593      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:25.104792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:26.105584      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:27.105895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:28.106571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:29.106857      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:30.107648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:31.107852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:32.108489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:33.108741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:34.109565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:35.109793      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:36.110493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:37.110775      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:38.111075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:39.111388      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:40.111952      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:41.112131      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:42.113182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:43.113680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:44.113863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:45.113987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:46.114123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:47.114555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:48.114519      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:49.181562      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:50.181880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:51.182145      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:52.182362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:53.182902      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:54.183478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:55.183540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:56.184282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:57.184525      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:36:57.604483 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6188" for this suite. @ 04/27/25 07:36:57.607
• [50.231 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/27/25 07:36:57.611
  I0427 07:36:57.611502 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:36:57.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:36:57.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:36:57.621
  STEP: Creating the pod @ 04/27/25 07:36:57.624
  E0427 07:36:58.184616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:36:59.184801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:00.151970 25 pod_client.go:173] Successfully updated pod "labelsupdate0a2ac979-995a-4a55-a8b5-510291d7d107"
  E0427 07:37:00.185873      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:01.186556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:02.187127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:03.187621      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:04.171691 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8436" for this suite. @ 04/27/25 07:37:04.174
• [6.566 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/27/25 07:37:04.177
  I0427 07:37:04.177220 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/27/25 07:37:04.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:37:04.184
  E0427 07:37:04.187635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:37:04.187
  STEP: creating a target pod @ 04/27/25 07:37:04.19
  E0427 07:37:05.187846      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:06.187960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/27/25 07:37:06.201
  E0427 07:37:07.188454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:08.188780      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/27/25 07:37:08.212
  I0427 07:37:08.212369 25 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2412 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:37:08.212384 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:37:08.212417 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/ephemeral-containers-test-2412/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0427 07:37:08.257581 25 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/27/25 07:37:08.261
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/27/25 07:37:08.264
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/27/25 07:37:08.27
  I0427 07:37:08.273616 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2412" for this suite. @ 04/27/25 07:37:08.276
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/27/25 07:37:08.284
  I0427 07:37:08.284205 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:37:08.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:37:08.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:37:08.296
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:37:08.3
  E0427 07:37:09.189471      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:10.189890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:11.190549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:12.190747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:37:12.314
  I0427 07:37:12.316681 25 output.go:207] Trying to get logs from node node3 pod downwardapi-volume-72dec126-9414-401a-b788-d445a88e7488 container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:37:12.321
  I0427 07:37:12.329939 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2278" for this suite. @ 04/27/25 07:37:12.333
• [4.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/27/25 07:37:12.337
  I0427 07:37:12.337266 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-runtime @ 04/27/25 07:37:12.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:37:12.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:37:12.347
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/27/25 07:37:12.354
  E0427 07:37:13.190925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:14.190995      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:15.191523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:16.192499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:17.192623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:18.192778      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:19.193483      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:20.193908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:21.194801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:22.195681      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:23.196569      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:24.197651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:25.197571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:26.197662      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:27.197946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:28.198653      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:29.199546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:30.199832      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/27/25 07:37:30.415
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/27/25 07:37:30.418
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/27/25 07:37:30.423
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/27/25 07:37:30.424
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/27/25 07:37:30.436
  E0427 07:37:31.199956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:32.201086      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:33.201262      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/27/25 07:37:33.448
  E0427 07:37:34.201993      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/27/25 07:37:34.455
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/27/25 07:37:34.461
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/27/25 07:37:34.461
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/27/25 07:37:34.48
  E0427 07:37:35.202485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/27/25 07:37:35.486
  E0427 07:37:36.203570      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:37.204550      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/27/25 07:37:37.497
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/27/25 07:37:37.503
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/27/25 07:37:37.503
  I0427 07:37:37.525273 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9248" for this suite. @ 04/27/25 07:37:37.529
• [25.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832
  STEP: Creating a kubernetes client @ 04/27/25 07:37:37.536
  I0427 07:37:37.536371 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 07:37:37.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:37:37.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:37:37.559
  STEP: Creating a job @ 04/27/25 07:37:37.564
  STEP: Ensuring active pods == parallelism @ 04/27/25 07:37:37.569
  E0427 07:37:38.205601      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:39.205829      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/27/25 07:37:39.578
  STEP: deleting Job.batch foo in namespace job-8904, will wait for the garbage collector to delete the pods @ 04/27/25 07:37:39.578
  I0427 07:37:39.638030 25 resources.go:139] Deleting Job.batch foo took: 6.015486ms
  I0427 07:37:39.738410 25 resources.go:163] Terminating Job.batch foo pods took: 100.378655ms
  E0427 07:37:40.206710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/27/25 07:37:40.839
  I0427 07:37:40.842245 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8904" for this suite. @ 04/27/25 07:37:40.846
• [3.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 04/27/25 07:37:40.852
  I0427 07:37:40.852807 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:37:40.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:37:40.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:37:40.866
  STEP: Creating pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199 @ 04/27/25 07:37:40.87
  E0427 07:37:41.207257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:42.208244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 07:37:42.89
  I0427 07:37:42.895166 25 container_probe.go:1749] Initial restart count of pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 is 0
  I0427 07:37:42.901062 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:43.209285      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:44.209524      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:44.904364 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:45.209644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:46.209804      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:46.908281 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:47.210934      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:48.211271      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:48.916207 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:49.211621      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:50.211925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:50.923509 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:51.212079      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:52.212404      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:52.930030 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:53.213528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:54.213895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:54.935173 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:55.214331      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:56.214502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:56.939016 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:57.215538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:37:58.215863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:37:58.945254 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:37:59.216679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:00.217013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:00.948552 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:01.218017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:02.218140      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:02.951444 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  I0427 07:38:02.951486 25 container_probe.go:1763] Restart count of pod container-probe-6199/liveness-f99da4ef-06cc-4894-b920-31de602ead47 is now 1 (20.056155576s elapsed)
  E0427 07:38:03.218660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:04.218720      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:04.954981 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:05.219415      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:06.219469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:06.957626 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:07.220006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:08.220252      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:08.960425 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:09.221014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:10.221470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:10.966403 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:11.221675      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:12.221891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:12.972564 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:13.222753      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:14.223040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:14.976392 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:15.223805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:16.224081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:16.979289 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:17.224722      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:18.224990      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:18.983810 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:19.225274      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:20.225636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:20.986760 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:21.226210      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:22.226607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:22.989695 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  I0427 07:38:22.989734 25 container_probe.go:1763] Restart count of pod container-probe-6199/liveness-f99da4ef-06cc-4894-b920-31de602ead47 is now 2 (40.094404042s elapsed)
  E0427 07:38:23.227190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:24.227444      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:24.993178 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:25.228557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:26.228775      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:26.996137 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:27.229528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:28.229719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:28.999526 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:29.229844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:30.230521      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:31.003626 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:31.230803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:32.231120      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:33.006882 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:33.231287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:34.231503      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:35.009901 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:35.232316      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:36.232655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:37.014414 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:37.233641      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:38.233822      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:39.022269 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:39.234532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:40.234801      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:41.026208 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:41.235676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:42.235955      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:43.030166 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  I0427 07:38:43.030209 25 container_probe.go:1763] Restart count of pod container-probe-6199/liveness-f99da4ef-06cc-4894-b920-31de602ead47 is now 3 (1m0.134877565s elapsed)
  E0427 07:38:43.236524      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:44.236748      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:45.033259 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:45.237612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:46.237842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:47.036999 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:47.238251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:48.238473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:49.042173 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:49.239365      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:50.239815      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:51.046987 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:51.240694      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:52.241254      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:53.052449 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:53.241290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:54.241550      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:55.057387 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:55.241717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:56.242118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:57.064092 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:57.242489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:38:58.242856      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:38:59.067621 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:38:59.243949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:00.244909      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:01.071960 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:01.245230      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:02.245606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:03.076660 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  I0427 07:39:03.076716 25 container_probe.go:1763] Restart count of pod container-probe-6199/liveness-f99da4ef-06cc-4894-b920-31de602ead47 is now 4 (1m20.181385263s elapsed)
  E0427 07:39:03.246402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:04.246773      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:05.083139 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:05.247659      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:06.247963      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:07.089434 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:07.248922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:08.249767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:09.094628 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:09.250226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:10.250645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:11.098857 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:11.251242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:12.251577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:13.103875 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:13.251667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:14.251874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:15.110127 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:15.252507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:16.252927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:17.114695 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:17.252946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:18.253585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:19.120608 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:19.253554      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:20.253761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:21.123506 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:21.253896      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:22.254625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:23.127118 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:23.255629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:24.256064      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:25.131709 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:25.256944      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:26.257921      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:27.134723 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:27.258956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:28.259392      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:29.137622 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:29.260489      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:30.260738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:31.140800 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:31.260946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:32.261101      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:33.143913 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:33.262094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:34.263018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:35.147577 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:35.263797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:36.264142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:37.150717 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:37.265098      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:38.265577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:39.154615 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:39.265711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:40.265907      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:41.158011 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:41.266223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:42.266477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:43.161453 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:43.267374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:44.267636      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:45.164657 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:45.267908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:46.268201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:47.168272 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:47.268563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:48.268918      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:49.172779 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:49.270040      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:50.270326      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:51.176355 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:51.270450      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:52.270656      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:53.180449 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:53.270761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:54.271117      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:55.184872 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:55.272164      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:56.272473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:57.187845 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:57.273137      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:39:58.273446      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:39:59.191589 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:39:59.273664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:00.273967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:01.197228 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:40:01.274438      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:02.274646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:03.201119 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:40:03.275231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:04.275282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:05.203941 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  E0427 07:40:05.276400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:06.276565      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:07.207368 25 container_probe.go:1759] Get pod liveness-f99da4ef-06cc-4894-b920-31de602ead47 in namespace container-probe-6199
  I0427 07:40:07.207407 25 container_probe.go:1763] Restart count of pod container-probe-6199/liveness-f99da4ef-06cc-4894-b920-31de602ead47 is now 5 (2m24.312076503s elapsed)
  STEP: deleting the pod @ 04/27/25 07:40:07.207
  I0427 07:40:07.214121 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6199" for this suite. @ 04/27/25 07:40:07.22
• [146.373 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/27/25 07:40:07.225
  I0427 07:40:07.225756 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:40:07.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:07.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:07.239
  STEP: creating a ConfigMap @ 04/27/25 07:40:07.241
  STEP: fetching the ConfigMap @ 04/27/25 07:40:07.244
  STEP: patching the ConfigMap @ 04/27/25 07:40:07.248
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/27/25 07:40:07.252
  STEP: deleting the ConfigMap by collection with a label selector @ 04/27/25 07:40:07.255
  STEP: listing all ConfigMaps in test namespace @ 04/27/25 07:40:07.26
  I0427 07:40:07.263001 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0427 07:40:07.277230      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-8008" for this suite. @ 04/27/25 07:40:07.321
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 04/27/25 07:40:07.326
  I0427 07:40:07.326598 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 07:40:07.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:07.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:07.341
  STEP: Counting existing ResourceQuota @ 04/27/25 07:40:07.343
  E0427 07:40:08.277765      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:09.278577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:10.278886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:11.279398      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:12.279567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/27/25 07:40:12.346
  STEP: Ensuring resource quota status is calculated @ 04/27/25 07:40:12.35
  E0427 07:40:13.279682      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:14.279956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/27/25 07:40:14.353
  STEP: Ensuring resource quota status captures replication controller creation @ 04/27/25 07:40:14.36
  E0427 07:40:15.280690      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:16.281502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/27/25 07:40:16.364
  STEP: Ensuring resource quota status released usage @ 04/27/25 07:40:16.367
  E0427 07:40:17.282191      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:18.282534      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:18.373344 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3698" for this suite. @ 04/27/25 07:40:18.38
• [11.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/27/25 07:40:18.387
  I0427 07:40:18.387753 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:40:18.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:18.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:18.399
  STEP: Creating Pod @ 04/27/25 07:40:18.401
  E0427 07:40:19.282618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:20.283631      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/27/25 07:40:20.412
  I0427 07:40:20.412759 25 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-299 PodName:pod-sharedvolume-54817b97-c6c6-474e-a893-637866737c8c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0427 07:40:20.412776 25 exec_util.go:64] ExecWithOptions: Clientset creation
  I0427 07:40:20.412816 25 exec_util.go:80] ExecWithOptions: execute(POST https://10.68.0.1:443/api/v1/namespaces/emptydir-299/pods/pod-sharedvolume-54817b97-c6c6-474e-a893-637866737c8c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0427 07:40:20.469017 25 exec_util.go:108] Exec stderr: ""
  I0427 07:40:20.469244 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-299" for this suite. @ 04/27/25 07:40:20.473
• [2.090 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/27/25 07:40:20.477
  I0427 07:40:20.477767 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/27/25 07:40:20.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:20.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:20.49
  I0427 07:40:20.499340 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8971" for this suite. @ 04/27/25 07:40:20.574
• [0.104 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/27/25 07:40:20.581
  I0427 07:40:20.581781 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubelet-test @ 04/27/25 07:40:20.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:20.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:20.597
  E0427 07:40:21.284349      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:22.284721      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:23.285038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:24.285206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:24.612190 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-385" for this suite. @ 04/27/25 07:40:24.617
• [4.039 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/27/25 07:40:24.62
  I0427 07:40:24.620522 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:40:24.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:24.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:24.633
  STEP: Creating configMap with name projected-configmap-test-volume-map-c7ab579e-6e1c-48b8-ba6e-d1f448b8c663 @ 04/27/25 07:40:24.635
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:40:24.638
  E0427 07:40:25.285664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:26.285622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:40:26.648
  I0427 07:40:26.650573 25 output.go:207] Trying to get logs from node node3 pod pod-projected-configmaps-86c42483-28e5-4565-a7de-6f4f3f32075b container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:40:26.658
  I0427 07:40:26.669090 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5680" for this suite. @ 04/27/25 07:40:26.672
• [2.055 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/27/25 07:40:26.676
  I0427 07:40:26.676038 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/27/25 07:40:26.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:26.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:26.688
  STEP: creating @ 04/27/25 07:40:26.691
  STEP: getting @ 04/27/25 07:40:26.702
  STEP: listing in namespace @ 04/27/25 07:40:26.707
  STEP: patching @ 04/27/25 07:40:26.716
  STEP: deleting @ 04/27/25 07:40:26.725
  I0427 07:40:26.735562 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-944" for this suite. @ 04/27/25 07:40:26.773
• [0.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/27/25 07:40:26.78
  I0427 07:40:26.780577 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename init-container @ 04/27/25 07:40:26.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:26.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:26.8
  STEP: creating the pod @ 04/27/25 07:40:26.804
  I0427 07:40:26.804859 25 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0427 07:40:27.285880      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:28.286674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:29.287646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:30.101392 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5609" for this suite. @ 04/27/25 07:40:30.106
• [3.331 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 04/27/25 07:40:30.111
  I0427 07:40:30.111637 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:40:30.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:30.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:30.129
  STEP: Setting up server cert @ 04/27/25 07:40:30.154
  E0427 07:40:30.288437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:40:30.454
  STEP: Deploying the webhook pod @ 04/27/25 07:40:30.46
  STEP: Wait for the deployment to be ready @ 04/27/25 07:40:30.471
  I0427 07:40:30.485413 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:40:31.288740      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:32.288954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:40:32.493
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:40:32.497
  E0427 07:40:33.289634      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:33.497929 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0427 07:40:33.505344 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7146-crds.webhook.example.com via the AdmissionRegistration API @ 04/27/25 07:40:34.018
  STEP: Creating a custom resource while v1 is storage version @ 04/27/25 07:40:34.027
  E0427 07:40:34.290644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:35.291147      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/27/25 07:40:36.06
  STEP: Patching the custom resource while v2 is storage version @ 04/27/25 07:40:36.089
  E0427 07:40:36.291604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:36.806887 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3021" for this suite. @ 04/27/25 07:40:36.812
  STEP: Destroying namespace "webhook-markers-760" for this suite. @ 04/27/25 07:40:36.819
• [6.716 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 04/27/25 07:40:36.827
  I0427 07:40:36.827572 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pv @ 04/27/25 07:40:36.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:36.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:36.865
  STEP: Creating initial PV and PVC @ 04/27/25 07:40:36.887
  I0427 07:40:36.887230 25 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3736" @ 04/27/25 07:40:36.909
  STEP: Listing PVCs in namespace "pv-3736" @ 04/27/25 07:40:36.919
  STEP: Reading "pvc-lhgp2" Status @ 04/27/25 07:40:36.928
  STEP: Reading "pv-3736-vwwzb" Status @ 04/27/25 07:40:36.937
  STEP: Patching "pvc-lhgp2" Status @ 04/27/25 07:40:36.949
  STEP: Patching "pv-3736-vwwzb" Status @ 04/27/25 07:40:36.959
  STEP: Updating "pvc-lhgp2" Status @ 04/27/25 07:40:36.967
  STEP: Updating "pv-3736-vwwzb" Status @ 04/27/25 07:40:36.985
  I0427 07:40:37.024675 25 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0427 07:40:37.024750 25 pv.go:205] Deleting PersistentVolumeClaim "pvc-lhgp2"
  I0427 07:40:37.030829 25 pv.go:193] Deleting PersistentVolume "pv-3736-vwwzb"
  I0427 07:40:37.039909 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3736" for this suite. @ 04/27/25 07:40:37.045
• [0.224 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/27/25 07:40:37.051
  I0427 07:40:37.051646 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 07:40:37.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:37.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:37.08
  STEP: creating a Deployment @ 04/27/25 07:40:37.097
  STEP: waiting for Deployment to be created @ 04/27/25 07:40:37.112
  STEP: waiting for all Replicas to be Ready @ 04/27/25 07:40:37.117
  I0427 07:40:37.128539 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.128648 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.143010 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.143134 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.180358 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.180405 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.225720 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0427 07:40:37.225778 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0427 07:40:37.292179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:38.175805 25 deployment.go:246] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0427 07:40:38.175861 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0427 07:40:38.292239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:38.362814 25 deployment.go:248] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/27/25 07:40:38.362
  I0427 07:40:38.372508 25 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/27/25 07:40:38.372
  I0427 07:40:38.376621 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.376663 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.376849 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.376930 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.376947 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.376992 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.377053 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.377072 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 0
  I0427 07:40:38.377162 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:38.377174 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:38.377188 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.377209 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.377530 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.377596 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.383340 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.383398 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.415702 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.415822 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.473257 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.473426 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:38.495046 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:38.495126 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  E0427 07:40:39.293257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:40.198266 25 deployment.go:309] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:40.198348 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:40.214211 25 deployment.go:311] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  STEP: listing Deployments @ 04/27/25 07:40:40.214
  I0427 07:40:40.217236 25 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/27/25 07:40:40.217
  I0427 07:40:40.231821 25 deployment.go:360] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/27/25 07:40:40.231
  I0427 07:40:40.240788 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:40.249785 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0427 07:40:40.294179      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:40.294375 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:40.308963 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:40.316248 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:41.218844 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:41.247801 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:41.265696 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0427 07:40:41.287815 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0427 07:40:41.294606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:42.294492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:42.400158 25 deployment.go:389] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/27/25 07:40:42.458
  STEP: fetching the DeploymentStatus @ 04/27/25 07:40:42.48
  I0427 07:40:42.490529 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:42.490849 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:42.491368 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:42.491887 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:42.493066 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 1
  I0427 07:40:42.493191 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:42.493233 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:42.493659 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:42.493960 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 2
  I0427 07:40:42.494357 25 deployment.go:449] observed Deployment test-deployment in namespace deployment-3103 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/27/25 07:40:42.494
  I0427 07:40:42.542703 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.542757 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.542883 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.543165 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.543515 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.543821 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.544053 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.544261 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.544780 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.544887 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.544920 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.545302 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.545407 25 deployment.go:475] observed event type MODIFIED
  I0427 07:40:42.550146 25 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0427 07:40:42.560425 25 deployment.go:657] ReplicaSet "test-deployment-545587c48f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-545587c48f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3879660-6099-4880-9151-2612203eebf6",
      ResourceVersion: (string) (len=5) "58052",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336437,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "545587c48f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "33fc3f5a-2df7-4b9a-9ade-90a879ed360c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 33 66 63  33 66 35 61 2d 32 64 66  |":\"33fc3f5a-2df|
              00000130  37 2d 34 62 39 61 2d 39  61 64 65 2d 39 30 61 38  |7-4b9a-9ade-90a8|
              00000140  37 39 65 64 33 36 30 63  5c 22 7d 22 3a 7b 7d 7d  |79ed360c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "545587c48f",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "545587c48f",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=66) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0427 07:40:42.602887 25 deployment.go:657] ReplicaSet "test-deployment-7bd6545665":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7bd6545665",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "68e710fb-18b1-4161-94a6-c74916d81cea",
      ResourceVersion: (string) (len=5) "58155",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bd6545665",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "33fc3f5a-2df7-4b9a-9ade-90a879ed360c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 33 66 63  33 66 35 61 2d 32 64 66  |":\"33fc3f5a-2df|
              00000130  37 2d 34 62 39 61 2d 39  61 64 65 2d 39 30 61 38  |7-4b9a-9ade-90a8|
              00000140  37 39 65 64 33 36 30 63  5c 22 7d 22 3a 7b 7d 7d  |79ed360c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bd6545665",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bd6545665",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0427 07:40:42.634705 25 deployment.go:669] pod: "test-deployment-7bd6545665-4fdpb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-7bd6545665-4fdpb",
      GenerateName: (string) (len=27) "test-deployment-7bd6545665-",
      Namespace: (string) (len=15) "deployment-3103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35fe03fd-d71f-4aca-bb6f-081edaca23af",
      ResourceVersion: (string) (len=5) "58176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336443,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bd6545665",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-7bd6545665",
          UID: (types.UID) (len=36) "68e710fb-18b1-4161-94a6-c74916d81cea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 38 65 37 31 30 66 62  |uid\":\"68e710fb|
              000000a0  2d 31 38 62 31 2d 34 31  36 31 2d 39 34 61 36 2d  |-18b1-4161-94a6-|
              000000b0  63 37 34 39 31 36 64 38  31 63 65 61 5c 22 7d 22  |c74916d81cea\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 35 39 5c 22 7d 22  |2.20.166.159\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jtjpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jtjpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336440,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881336441,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://60c1c868a5ec3074702715c258325799f4f3c56a7c2b45de372564798ca500d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jtjpm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0427 07:40:42.641170 25 deployment.go:669] pod: "test-deployment-7bd6545665-kvm75":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-7bd6545665-kvm75",
      GenerateName: (string) (len=27) "test-deployment-7bd6545665-",
      Namespace: (string) (len=15) "deployment-3103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31d3ea2c-5055-4cfb-8400-8e665168954d",
      ResourceVersion: (string) (len=5) "58177",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336441,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336443,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bd6545665",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-7bd6545665",
          UID: (types.UID) (len=36) "68e710fb-18b1-4161-94a6-c74916d81cea",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 38 65 37 31 30 66 62  |uid\":\"68e710fb|
              000000a0  2d 31 38 62 31 2d 34 31  36 31 2d 39 34 61 36 2d  |-18b1-4161-94a6-|
              000000b0  63 37 34 39 31 36 64 38  31 63 65 61 5c 22 7d 22  |c74916d81cea\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 33 35  2e 34 32 5c 22 7d 22 3a  |2.20.135.42\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sxsqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sxsqh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.153",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.153"
        }
      },
      PodIP: (string) (len=13) "172.20.135.42",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.20.135.42"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336441,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881336442,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://23c55b1a6018a0053e9be1b51fd24721b840447a358d93eaab4fb3ecd1b4e6f5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sxsqh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0427 07:40:42.647216 25 deployment.go:657] ReplicaSet "test-deployment-7cf8bc6f59":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7cf8bc6f59",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4d9e68ec-c0e2-4feb-bef4-44cc6c105cc1",
      ResourceVersion: (string) (len=5) "58166",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336438,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7cf8bc6f59",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "33fc3f5a-2df7-4b9a-9ade-90a879ed360c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 33 66 63  33 66 35 61 2d 32 64 66  |":\"33fc3f5a-2df|
              00000130  37 2d 34 62 39 61 2d 39  61 64 65 2d 39 30 61 38  |7-4b9a-9ade-90a8|
              00000140  37 39 65 64 33 36 30 63  5c 22 7d 22 3a 7b 7d 7d  |79ed360c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336442,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7cf8bc6f59",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7cf8bc6f59",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=48) "registry.dev.rdev.tech:18093/sonobuoy/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0427 07:40:42.681361 25 deployment.go:669] pod: "test-deployment-7cf8bc6f59-jdrqq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-7cf8bc6f59-jdrqq",
      GenerateName: (string) (len=27) "test-deployment-7cf8bc6f59-",
      Namespace: (string) (len=15) "deployment-3103",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5fb4987e-d4d1-4186-a176-aa0dd91ffdee",
      ResourceVersion: (string) (len=5) "58160",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336438,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7cf8bc6f59",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-7cf8bc6f59",
          UID: (types.UID) (len=36) "4d9e68ec-c0e2-4feb-bef4-44cc6c105cc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  34 64 39 65 36 38 65 63  |uid\":\"4d9e68ec|
              000000a0  2d 63 30 65 32 2d 34 66  65 62 2d 62 65 66 34 2d  |-c0e2-4feb-bef4-|
              000000b0  34 34 63 63 36 63 31 30  35 63 63 31 5c 22 7d 22  |44cc6c105cc1\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 35 38 5c 22 7d 22  |2.20.166.158\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f7c6z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=48) "registry.dev.rdev.tech:18093/sonobuoy/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f7c6z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336440,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336438,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336438,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881336439,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=48) "registry.dev.rdev.tech:18093/sonobuoy/pause:3.10",
          ImageID: (string) (len=115) "registry.dev.rdev.tech:18093/sonobuoy/pause@sha256:d8c8296a995aa91d1a888d405d98f3c4a317fe2b5790b996051f7ff1184a3694",
          ContainerID: (string) (len=77) "containerd://ce151d936102a3b80dc5d3daa0695bca6c9c0d556e0251ad11f2cf82c0a3618c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-f7c6z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0427 07:40:42.685597 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3103" for this suite. @ 04/27/25 07:40:42.7
• [5.658 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 04/27/25 07:40:42.711
  I0427 07:40:42.711947 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:40:42.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:42.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:42.755
  STEP: Setting up server cert @ 04/27/25 07:40:42.818
  E0427 07:40:43.294973      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:40:43.456
  STEP: Deploying the webhook pod @ 04/27/25 07:40:43.46
  STEP: Wait for the deployment to be ready @ 04/27/25 07:40:43.471
  I0427 07:40:43.480052 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:40:44.295394      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:45.295382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:40:45.488
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:40:45.493
  E0427 07:40:46.295518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:46.493787 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/27/25 07:40:46.5
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/27/25 07:40:46.5
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/27/25 07:40:46.509
  E0427 07:40:47.295609      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/27/25 07:40:47.525
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/27/25 07:40:47.525
  E0427 07:40:48.296251      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 04/27/25 07:40:48.554
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/27/25 07:40:48.554
  E0427 07:40:49.296478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:50.296807      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:51.297136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:52.297378      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:53.297703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/27/25 07:40:53.576
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/27/25 07:40:53.576
  E0427 07:40:54.297831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:55.298075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:56.298991      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:57.299373      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:40:58.299490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:40:58.631530 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2762" for this suite. @ 04/27/25 07:40:58.635
  STEP: Destroying namespace "webhook-markers-9448" for this suite. @ 04/27/25 07:40:58.642
• [15.935 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/27/25 07:40:58.646
  I0427 07:40:58.646833 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir @ 04/27/25 07:40:58.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:40:58.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:40:58.673
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/27/25 07:40:58.679
  E0427 07:40:59.299671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:00.299910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:01.300163      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:02.300406      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:41:02.707
  I0427 07:41:02.710081 25 output.go:207] Trying to get logs from node node1 pod pod-43526832-eb41-4f8d-9296-97fc64d27dab container test-container: <nil>
  STEP: delete the pod @ 04/27/25 07:41:02.715
  I0427 07:41:02.723008 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4623" for this suite. @ 04/27/25 07:41:02.725
• [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/27/25 07:41:02.728
  I0427 07:41:02.728867 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/27/25 07:41:02.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:02.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:02.739
  E0427 07:41:03.300488      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:04.300833      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 04/27/25 07:41:04.759
  STEP: Cleaning up the configmap @ 04/27/25 07:41:04.764
  STEP: Cleaning up the pod @ 04/27/25 07:41:04.766
  I0427 07:41:04.770976 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-1063" for this suite. @ 04/27/25 07:41:04.776
• [2.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 04/27/25 07:41:04.781
  I0427 07:41:04.781267 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename disruption @ 04/27/25 07:41:04.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:04.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:04.794
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:41:04.799
  E0427 07:41:05.301817      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:06.302167      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 04/27/25 07:41:06.803
  STEP: Waiting for all pods to be running @ 04/27/25 07:41:06.808
  I0427 07:41:06.812917 25 disruption.go:691] running pods: 0 < 1
  E0427 07:41:07.302486      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:08.303874      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/27/25 07:41:08.812
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:41:08.819
  STEP: Patching PodDisruptionBudget status @ 04/27/25 07:41:08.823
  STEP: Waiting for the pdb to be processed @ 04/27/25 07:41:08.828
  I0427 07:41:08.830523 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3652" for this suite. @ 04/27/25 07:41:08.833
• [4.055 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:306
  STEP: Creating a kubernetes client @ 04/27/25 07:41:08.836
  I0427 07:41:08.836566 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename namespaces @ 04/27/25 07:41:08.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:08.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:08.847
  STEP: Read namespace status @ 04/27/25 07:41:08.849
  I0427 07:41:08.854642 25 namespace.go:319] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/27/25 07:41:08.854
  I0427 07:41:08.857440 25 namespace.go:339] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/27/25 07:41:08.857
  I0427 07:41:08.864988 25 namespace.go:364] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0427 07:41:08.865075 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-890" for this suite. @ 04/27/25 07:41:08.935
• [0.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/27/25 07:41:08.939
  I0427 07:41:08.939145 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 07:41:08.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:08.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:08.954
  STEP: Creating a pod to test substitution in container's command @ 04/27/25 07:41:08.957
  E0427 07:41:09.304434      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:10.304735      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:11.305018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:12.305287      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:41:12.972
  I0427 07:41:12.974219 25 output.go:207] Trying to get logs from node node1 pod var-expansion-17c8cec6-86fe-4256-aa92-d2d4cb18f4d4 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 07:41:12.977
  I0427 07:41:12.989210 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2834" for this suite. @ 04/27/25 07:41:12.992
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 04/27/25 07:41:12.997
  I0427 07:41:12.997581 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:41:12.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:13.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:13.007
  STEP: Setting up server cert @ 04/27/25 07:41:13.021
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:41:13.253
  STEP: Deploying the webhook pod @ 04/27/25 07:41:13.256
  STEP: Wait for the deployment to be ready @ 04/27/25 07:41:13.262
  I0427 07:41:13.267140 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:41:13.306405      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:14.306558      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:15.275546 25 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.April, 27, 7, 41, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 41, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 41, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 41, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-5c9896898\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0427 07:41:15.306645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:16.306875      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:41:17.279
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:41:17.284
  E0427 07:41:17.306959      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:18.284958 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/27/25 07:41:18.291
  STEP: create a pod that should be updated by the webhook @ 04/27/25 07:41:18.299
  E0427 07:41:18.306949      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:18.346483 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3643" for this suite. @ 04/27/25 07:41:18.352
  STEP: Destroying namespace "webhook-markers-2180" for this suite. @ 04/27/25 07:41:18.355
• [5.365 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/27/25 07:41:18.362
  I0427 07:41:18.362425 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename init-container @ 04/27/25 07:41:18.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:18.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:18.378
  STEP: creating the pod @ 04/27/25 07:41:18.384
  I0427 07:41:18.385011 25 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0427 07:41:19.307719      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:20.307953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:21.309118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:21.590339 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-260" for this suite. @ 04/27/25 07:41:21.594
• [3.236 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/27/25 07:41:21.598
  I0427 07:41:21.598712 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:41:21.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:21.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:21.609
  STEP: Creating configMap configmap-6763/configmap-test-7135b964-5d32-4534-8deb-ac3ce19470fd @ 04/27/25 07:41:21.613
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:41:21.617
  E0427 07:41:22.309351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:23.309557      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:41:23.628
  I0427 07:41:23.632581 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-5323b562-a984-404d-8f9f-4698e6900fe0 container env-test: <nil>
  STEP: delete the pod @ 04/27/25 07:41:23.638
  I0427 07:41:23.652545 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6763" for this suite. @ 04/27/25 07:41:23.656
• [2.061 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/27/25 07:41:23.659
  I0427 07:41:23.659637 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename daemonsets @ 04/27/25 07:41:23.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:23.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:23.678
  I0427 07:41:23.771596 25 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0427 07:41:23.774931 25 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0427 07:41:23.863694 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:41:23.863754 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  E0427 07:41:24.310738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:24.782775 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:41:24.782849 25 fixtures.go:131] Node node1 is running 0 daemon pod, expected 1
  E0427 07:41:25.311209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:25.782765 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0427 07:41:25.782808 25 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0427 07:41:25.782824 25 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0427 07:41:25.787935 25 daemon_set.go:102] Updating DaemonSet daemon-set
  E0427 07:41:26.311930      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:26.799518 25 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0427 07:41:26.808422 25 daemon_set.go:102] Updating DaemonSet daemon-set
  I0427 07:41:26.808557 25 daemon_set.go:499] Make sure DaemonSet rollback is complete
  E0427 07:41:27.312743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:28.313633      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:28.816078 25 daemon_set.go:1198] Pod daemon-set-rwx78 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/27/25 07:41:28.832
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-80, will wait for the garbage collector to delete the pods @ 04/27/25 07:41:28.832
  I0427 07:41:28.902862 25 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.077706ms
  I0427 07:41:29.003698 25 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.837288ms
  E0427 07:41:29.314201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:30.314941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:31.315970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:41:31.510914 25 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0427 07:41:31.510961 25 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0427 07:41:31.515262 25 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"58863"},"items":null}

  I0427 07:41:31.519931 25 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"58863"},"items":null}

  I0427 07:41:31.540691 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-80" for this suite. @ 04/27/25 07:41:31.547
• [7.898 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/27/25 07:41:31.557
  I0427 07:41:31.557937 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename subpath @ 04/27/25 07:41:31.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:31.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:31.578
  STEP: Setting up data @ 04/27/25 07:41:31.583
  STEP: Creating pod pod-subpath-test-configmap-ssp5 @ 04/27/25 07:41:31.599
  STEP: Creating a pod to test atomic-volume-subpath @ 04/27/25 07:41:31.599
  E0427 07:41:32.317062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:33.317566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:34.318116      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:35.318664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:36.319578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:37.320574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:38.321380      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:39.321604      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:40.322095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:41.322364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:42.323351      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:43.323588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:44.324256      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:45.324572      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:46.325319      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:47.325544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:48.326475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:49.326704      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:50.327786      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:51.328056      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:52.328957      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:53.329238      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:54.329871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:55.330080      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:41:55.67
  I0427 07:41:55.671938 25 output.go:207] Trying to get logs from node node1 pod pod-subpath-test-configmap-ssp5 container test-container-subpath-configmap-ssp5: <nil>
  STEP: delete the pod @ 04/27/25 07:41:55.677
  STEP: Deleting pod pod-subpath-test-configmap-ssp5 @ 04/27/25 07:41:55.686
  I0427 07:41:55.686105 25 delete.go:62] Deleting pod "pod-subpath-test-configmap-ssp5" in namespace "subpath-7666"
  I0427 07:41:55.688256 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7666" for this suite. @ 04/27/25 07:41:55.691
• [24.136 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/27/25 07:41:55.694
  I0427 07:41:55.694516 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-pred @ 04/27/25 07:41:55.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:55.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:55.704
  I0427 07:41:55.707697 25 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0427 07:41:55.795650 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0427 07:41:55.797930 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node1 before test
  I0427 07:41:55.800718 25 predicates.go:957] calico-node-5mcpm from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.800740 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 07:41:55.800749 25 predicates.go:957] metrics-server-74f6d6fdd5-pqsjn from kube-system started at 2025-04-27 06:46:34 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.800756 25 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0427 07:41:55.800763 25 predicates.go:957] node-local-dns-r5bs2 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.800771 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 07:41:55.800779 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-jqbpf from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 07:41:55.800786 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 07:41:55.800792 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 07:41:55.800799 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node2 before test
  I0427 07:41:55.804275 25 predicates.go:957] calico-kube-controllers-54cdc99cb-8qvqn from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.804318 25 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0427 07:41:55.804328 25 predicates.go:957] calico-node-9m6qt from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.804335 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 07:41:55.804343 25 predicates.go:957] kubernetes-dashboard-75c65df89-zttnz from kube-system started at 2025-04-27 02:46:29 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.804349 25 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 0
  I0427 07:41:55.804357 25 predicates.go:957] node-local-dns-m7nj5 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.804364 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 07:41:55.804371 25 predicates.go:957] sonobuoy-e2e-job-919a1c48d6024b67 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 07:41:55.804377 25 predicates.go:959] 	Container e2e ready: true, restart count 0
  I0427 07:41:55.804384 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 07:41:55.804391 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-6mvvk from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 07:41:55.804398 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 07:41:55.804404 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I0427 07:41:55.804412 25 predicates.go:119] 
  Logging pods the apiserver thinks is on node node3 before test
  I0427 07:41:55.808864 25 predicates.go:957] calico-node-zs89m from kube-system started at 2025-04-27 02:45:54 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.808924 25 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0427 07:41:55.808964 25 predicates.go:957] coredns-75dd46b86b-vq9nh from kube-system started at 2025-04-27 02:46:22 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.808978 25 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0427 07:41:55.808992 25 predicates.go:957] dashboard-metrics-scraper-65c7c4ffff-fr2hb from kube-system started at 2025-04-27 06:46:34 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.809003 25 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0427 07:41:55.809015 25 predicates.go:957] node-local-dns-zkd98 from kube-system started at 2025-04-27 02:46:24 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.809025 25 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0427 07:41:55.809037 25 predicates.go:957] sonobuoy from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (1 container statuses recorded)
  I0427 07:41:55.809047 25 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I0427 07:41:55.809059 25 predicates.go:957] sonobuoy-systemd-logs-daemon-set-2f19c40078a14ece-l4m65 from sonobuoy started at 2025-04-27 06:12:26 +0000 UTC (2 container statuses recorded)
  I0427 07:41:55.809070 25 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I0427 07:41:55.809080 25 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/27/25 07:41:55.809
  E0427 07:41:56.330227      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:57.330582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/27/25 07:41:57.82
  STEP: Trying to apply a random label on the found node. @ 04/27/25 07:41:57.826
  STEP: verifying the node has the label kubernetes.io/e2e-4ea98772-5396-4728-9e0a-70bf64f1892d 42 @ 04/27/25 07:41:57.833
  STEP: Trying to relaunch the pod, now with labels. @ 04/27/25 07:41:57.837
  E0427 07:41:58.331518      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:41:59.332371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4ea98772-5396-4728-9e0a-70bf64f1892d off the node node1 @ 04/27/25 07:41:59.855
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4ea98772-5396-4728-9e0a-70bf64f1892d @ 04/27/25 07:41:59.862
  I0427 07:41:59.864984 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2852" for this suite. @ 04/27/25 07:41:59.869
• [4.179 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647
  STEP: Creating a kubernetes client @ 04/27/25 07:41:59.874
  I0427 07:41:59.874019 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename statefulset @ 04/27/25 07:41:59.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:41:59.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:41:59.888
  STEP: Creating service test in namespace statefulset-6939 @ 04/27/25 07:41:59.89
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/27/25 07:41:59.895
  STEP: Creating stateful set ss in namespace statefulset-6939 @ 04/27/25 07:41:59.9
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6939 @ 04/27/25 07:41:59.903
  I0427 07:41:59.913010 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0427 07:42:00.332468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:01.333588      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:02.333702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:03.334553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:04.335587      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:05.335785      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:06.336078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:07.336330      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:08.336614      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:09.336754      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:09.907078 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/27/25 07:42:09.907
  I0427 07:42:09.909320 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:42:10.001905 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:42:10.001956 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:42:10.001973 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:42:10.009774 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0427 07:42:10.337618      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:11.338087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:12.338577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:13.338796      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:14.339024      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:15.339235      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:16.339423      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:17.339578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:18.339795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:19.339928      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:20.005633 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:42:20.005680 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0427 07:42:20.107073 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999728s
  E0427 07:42:20.340534      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:21.115442 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.906672996s
  E0427 07:42:21.341477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:22.121422 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.897936484s
  E0427 07:42:22.341585      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:23.125680 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.891861004s
  E0427 07:42:23.342025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:24.131240 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.888382838s
  E0427 07:42:24.342629      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:25.135984 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.882235392s
  E0427 07:42:25.343255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:26.139601 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.878031016s
  E0427 07:42:26.343683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:27.144195 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.873729037s
  E0427 07:42:27.344494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:28.147833 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.869919786s
  E0427 07:42:28.345153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:29.154722 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 866.116015ms
  E0427 07:42:29.346566      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6939 @ 04/27/25 07:42:30.155
  I0427 07:42:30.162483 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0427 07:42:30.346852      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:30.348204 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 07:42:30.348265 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:42:30.348284 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:42:30.355464 25 wait.go:40] Found 1 stateful pods, waiting for 3
  E0427 07:42:31.347512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:32.347751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:33.347839      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:34.348363      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:35.348648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:36.348883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:37.349108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:38.350157      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:39.350544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:40.350965      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:40.352284 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:42:40.352348 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0427 07:42:40.352360 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/27/25 07:42:40.352
  STEP: Scale down will halt with unhealthy stateful pod @ 04/27/25 07:42:40.352
  I0427 07:42:40.357276 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:42:40.465483 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:42:40.465668 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:42:40.465694 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:42:40.465770 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:42:40.633220 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:42:40.633348 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:42:40.633376 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:42:40.633445 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0427 07:42:40.769406 25 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0427 07:42:40.769461 25 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0427 07:42:40.769476 25 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0427 07:42:40.769495 25 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0427 07:42:40.772478 25 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0427 07:42:41.351375      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:42.351586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:43.351669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:44.351788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:45.351996      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:46.352911      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:47.353528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:48.353739      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:49.354669      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:42:50.354732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:50.775135 25 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:42:50.775167 25 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:42:50.775176 25 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0427 07:42:50.876104 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999819s
  E0427 07:42:51.355764      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:51.879917 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.902759073s
  E0427 07:42:52.356724      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:52.884644 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.899225498s
  E0427 07:42:53.357064      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:53.888991 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.893874021s
  E0427 07:42:54.357501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:54.892276 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.890457599s
  E0427 07:42:55.357718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:55.895670 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.886909342s
  E0427 07:42:56.358242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:56.899528 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.882979886s
  E0427 07:42:57.359123      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:57.902811 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.879800022s
  E0427 07:42:58.359473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:58.906156 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.876493434s
  E0427 07:42:59.359688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:42:59.909764 25 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 873.304565ms
  E0427 07:43:00.360742      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6939 @ 04/27/25 07:43:00.91
  I0427 07:43:00.913371 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 07:43:01.002722 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 07:43:01.002784 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:43:01.002795 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:43:01.002847 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 07:43:01.085746 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 07:43:01.085790 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:43:01.085801 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:43:01.085979 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=statefulset-6939 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0427 07:43:01.169968 25 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0427 07:43:01.170011 25 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0427 07:43:01.170182 25 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0427 07:43:01.170197 25 rest.go:152] Scaling statefulset ss to 0
  E0427 07:43:01.362088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:02.362221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:03.362778      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:04.363571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:05.363507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:06.364000      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:07.364240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:08.364477      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:09.365023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:10.365374      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/27/25 07:43:11.176
  I0427 07:43:11.176590 25 statefulset.go:138] Deleting all statefulset in ns statefulset-6939
  I0427 07:43:11.178949 25 rest.go:152] Scaling statefulset ss to 0
  I0427 07:43:11.182996 25 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0427 07:43:11.185258 25 rest.go:90] Deleting statefulset ss
  I0427 07:43:11.192854 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6939" for this suite. @ 04/27/25 07:43:11.195
• [71.325 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:373
  STEP: Creating a kubernetes client @ 04/27/25 07:43:11.199
  I0427 07:43:11.199029 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename namespaces @ 04/27/25 07:43:11.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:43:11.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:43:11.211
  STEP: Updating Namespace "namespaces-7531" @ 04/27/25 07:43:11.214
  I0427 07:43:11.223737 25 namespace.go:390] Namespace "namespaces-7531" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"f5a930d4-38d4-4eb5-806f-b09a3e3a12df", "kubernetes.io/metadata.name":"namespaces-7531", "namespaces-7531":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0427 07:43:11.224104 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7531" for this suite. @ 04/27/25 07:43:11.297
• [0.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 04/27/25 07:43:11.302
  I0427 07:43:11.302173 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-probe @ 04/27/25 07:43:11.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:43:11.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:43:11.324
  STEP: Creating pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273 @ 04/27/25 07:43:11.33
  E0427 07:43:11.366266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:12.366239      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/27/25 07:43:13.348
  I0427 07:43:13.350574 25 container_probe.go:1749] Initial restart count of pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 is 0
  I0427 07:43:13.352376 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:13.366513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:14.366769      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:15.355208 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:15.367430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:16.367709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:17.359396 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:17.368555      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:18.368755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:19.362821 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:19.368871      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:20.369124      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:21.366398 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:21.369617      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:22.370978      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:23.369453 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:23.371422      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:24.371597      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:25.372551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:25.372914 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:26.373195      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:27.373564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:27.376404 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:28.374586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:29.374717      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:29.378895 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:30.374948      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:31.375275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:31.381982 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:32.375997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:33.376242      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:33.385016 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:34.377245      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:35.377530      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:35.388342 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:36.377674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:37.377899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:37.392089 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:38.378111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:39.378368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:39.395367 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:40.379499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:41.379729      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:41.398495 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:42.380501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:43.381645      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:43.401527 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:44.382461      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:45.382468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:45.404811 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:46.382505      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:47.383549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:47.408676 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:48.384590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:49.384814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:49.412078 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:50.384987      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:51.385367      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:51.416125 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:52.385501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:53.386019      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:53.420129 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:54.386430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:55.386671      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:55.426074 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:56.387431      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:57.387660      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:57.430212 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:43:58.388605      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:43:59.388903      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:43:59.435141 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:00.389175      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:01.389606      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:01.439169 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:02.390150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:03.390430      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:03.444182 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:04.390484      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:05.390835      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:05.452177 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:06.391246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:07.391894      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:07.458082 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:08.392572      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:09.393667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:09.461587 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:10.394454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:11.394542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:11.466521 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:12.395291      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:13.395573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:13.469527 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:14.396599      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:15.396755      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:15.474439 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:16.397586      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:17.397828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:17.478175 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:18.398228      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:19.398457      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:19.481552 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:20.399540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:21.399684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:21.485528 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:22.399895      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:23.400097      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:23.490642 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:24.400443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:25.400611      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:25.493484 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:26.401663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:27.401863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:27.497353 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:28.402364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:29.402667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:29.504615 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:30.403162      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:31.403485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:31.508552 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:32.403989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:33.404862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:33.513045 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:34.405018      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:35.405257      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:35.516006 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:36.406429      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:37.406890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:37.521651 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:38.407781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:39.408454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:39.526465 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:40.409603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:41.409674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:41.531715 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:42.410680      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:43.410929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:43.536119 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:44.411031      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:45.411448      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:45.539552 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:46.411474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:47.411854      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:47.542908 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:48.412386      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:49.412473      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:49.547257 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:50.413282      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:51.413487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:51.552096 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:52.413936      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:53.414143      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:53.555831 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:54.414472      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:55.414520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:55.559780 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:56.415672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:57.415777      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:57.562778 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:44:58.416821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:44:59.417077      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:44:59.566011 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:00.417533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:01.417735      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:01.569902 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:02.418859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:03.419006      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:03.572950 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:04.419158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:05.419788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:05.576627 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:06.420148      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:07.420538      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:07.583931 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:08.420684      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:09.420918      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:09.586824 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:10.421818      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:11.421864      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:11.589777 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:12.422462      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:13.422756      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:13.596784 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:14.423475      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:15.423865      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:15.601487 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:16.424877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:17.425130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:17.605440 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:18.425333      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:19.425531      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:19.609077 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:20.425858      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:21.426197      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:21.612479 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:22.426407      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:23.426595      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:23.615750 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:24.426733      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:25.426991      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:25.618798 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:26.427692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:27.427803      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:27.621781 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:28.428770      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:29.429289      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:29.625199 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:30.430083      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:31.430401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:31.628289 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:32.431452      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:33.431944      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:33.631620 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:34.432437      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:35.432759      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:35.634508 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:36.433171      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:37.433501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:37.637187 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:38.433981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:39.434220      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:39.640390 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:40.434439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:41.434646      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:41.644831 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:42.434693      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:43.435094      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:43.653682 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:44.436145      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:45.436508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:45.658634 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:46.437118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:47.437445      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:47.665658 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:48.437688      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:49.438053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:49.673957 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:50.438713      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:51.438707      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:51.679189 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:52.439158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:53.439792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:53.685374 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:54.439879      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:55.440165      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:55.690431 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:56.441053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:57.442059      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:57.694447 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:45:58.442240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:45:59.442450      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:45:59.697241 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:00.442994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:01.443516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:01.700409 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:02.443481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:03.444628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:03.703579 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:04.445225      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:05.446052      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:05.707236 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:06.446360      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:07.446568      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:07.710442 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:08.447166      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:09.447460      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:09.713122 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:10.448438      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:11.448643      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:11.717044 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:12.449004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:13.449081      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:13.720968 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:14.449815      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:15.450049      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:15.724611 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:16.450663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:17.450937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:17.727968 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:18.451700      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:19.451767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:19.730735 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:20.452539      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:21.452655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:21.737727 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:22.453622      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:23.453842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:23.741862 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:24.454540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:25.455620      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:25.745947 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:26.455908      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:27.456226      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:27.750609 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:28.456490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:29.456580      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:29.753344 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:30.457532      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:31.457661      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:31.757548 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:32.458480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:33.458513      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:33.760715 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:34.459582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:35.459937      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:35.766346 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:36.460561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:37.461007      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:37.771711 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:38.461412      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:39.461527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:39.776382 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:40.462190      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:41.462465      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:41.781610 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:42.462970      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:43.463623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:43.784740 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:44.464449      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:45.464611      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:45.787845 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:46.464872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:47.465070      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:47.793146 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:48.465953      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:49.466174      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:49.796269 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:50.467295      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:51.467450      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:51.800808 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:52.467523      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:53.467855      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:53.805428 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:54.468063      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:55.468495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:55.809073 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:56.468814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:57.469379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:57.811741 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:46:58.469508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:46:59.469642      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:46:59.816519 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:00.469761      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:01.470149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:01.820574 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:02.470472      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:03.470842      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:03.824364 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:04.471102      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:05.471654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:05.827765 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:06.472551      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:07.472862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:07.830763 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:08.473443      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:09.473699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:09.834505 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:10.474185      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:11.474494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:11.838915 25 container_probe.go:1759] Get pod test-webserver-4714be23-137a-46f5-a08b-626019d519e8 in namespace container-probe-3273
  E0427 07:47:12.474577      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:13.474768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/27/25 07:47:13.839
  I0427 07:47:13.849431 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3273" for this suite. @ 04/27/25 07:47:13.854
• [242.558 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 04/27/25 07:47:13.86
  I0427 07:47:13.860230 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:47:13.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:47:13.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:47:13.88
  STEP: creating service in namespace services-4234 @ 04/27/25 07:47:13.884
  STEP: creating service affinity-nodeport-transition in namespace services-4234 @ 04/27/25 07:47:13.884
  STEP: creating replication controller affinity-nodeport-transition in namespace services-4234 @ 04/27/25 07:47:13.899
  I0427 07:47:13.912329      25 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4234, replica count: 3
  E0427 07:47:14.475925      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:15.476997      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:16.477273      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:16.963464      25 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0427 07:47:16.970772 25 resource.go:361] Creating new exec pod
  E0427 07:47:17.477465      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:18.477647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:19.478767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:19.988460 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0427 07:47:20.222509 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.68.204.186) 80 port [tcp/http] succeeded!\n"
  I0427 07:47:20.222559 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:47:20.222646 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.204.186 80'
  I0427 07:47:20.436663 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.204.186 80\nConnection to 10.68.204.186 80 port [tcp/http] succeeded!\n"
  I0427 07:47:20.436734 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:47:20.436863 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.152 30993'
  E0427 07:47:20.480655      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:20.630278 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.227.152 30993\nConnection to 192.168.227.152 30993 port [tcp/*] succeeded!\n"
  I0427 07:47:20.630554 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:47:20.630777 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.227.153 30993'
  I0427 07:47:20.824277 25 builder.go:146] stderr: "+ nc -v -t -w 2 192.168.227.153 30993\n+ echo hostName\nConnection to 192.168.227.153 30993 port [tcp/*] succeeded!\n"
  I0427 07:47:20.824373 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:47:20.840721 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.151:30993/ ; done'
  I0427 07:47:21.239694 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n"
  I0427 07:47:21.239913 25 builder.go:147] stdout: "\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-d8j6g\naffinity-nodeport-transition-jtdh7\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-d8j6g\naffinity-nodeport-transition-jtdh7\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-d8j6g\naffinity-nodeport-transition-jtdh7\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-d8j6g\naffinity-nodeport-transition-jtdh7\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-d8j6g\naffinity-nodeport-transition-jtdh7\naffinity-nodeport-transition-n5n5v"
  I0427 07:47:21.239956 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.239982 25 service.go:242] Received response from host: affinity-nodeport-transition-d8j6g
  I0427 07:47:21.240065 25 service.go:242] Received response from host: affinity-nodeport-transition-jtdh7
  I0427 07:47:21.240087 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.240109 25 service.go:242] Received response from host: affinity-nodeport-transition-d8j6g
  I0427 07:47:21.240130 25 service.go:242] Received response from host: affinity-nodeport-transition-jtdh7
  I0427 07:47:21.240201 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.240222 25 service.go:242] Received response from host: affinity-nodeport-transition-d8j6g
  I0427 07:47:21.240244 25 service.go:242] Received response from host: affinity-nodeport-transition-jtdh7
  I0427 07:47:21.240264 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.240284 25 service.go:242] Received response from host: affinity-nodeport-transition-d8j6g
  I0427 07:47:21.240327 25 service.go:242] Received response from host: affinity-nodeport-transition-jtdh7
  I0427 07:47:21.240353 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.240372 25 service.go:242] Received response from host: affinity-nodeport-transition-d8j6g
  I0427 07:47:21.240391 25 service.go:242] Received response from host: affinity-nodeport-transition-jtdh7
  I0427 07:47:21.240414 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.255605 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.151:30993/ ; done'
  E0427 07:47:21.481679      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:21.686396 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n"
  I0427 07:47:21.686484 25 builder.go:147] stdout: "\naffinity-nodeport-transition-d8j6g\naffinity-nodeport-transition-jtdh7\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v"
  I0427 07:47:21.686509 25 service.go:242] Received response from host: affinity-nodeport-transition-d8j6g
  I0427 07:47:21.686524 25 service.go:242] Received response from host: affinity-nodeport-transition-jtdh7
  I0427 07:47:21.686537 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686549 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686562 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686574 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686586 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686606 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686618 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686629 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686641 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686653 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686664 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686676 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686687 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:21.686699 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  E0427 07:47:22.482188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:23.482747      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:24.482928      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:25.483564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:26.483886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:27.484033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:28.484344      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:29.484674      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:30.484910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:31.485726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:32.486087      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:33.486216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:34.486474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:35.486723      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:36.487137      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:37.487536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:38.487887      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:39.488136      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:40.488470      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:41.488845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:42.488890      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:43.489240      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:44.489399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:45.489578      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:46.489703      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:47.489922      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:48.490150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:49.490573      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:50.490771      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:51.491635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:51.686883 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-4234 exec execpod-affinityf4kxf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.227.151:30993/ ; done'
  I0427 07:47:51.847557 25 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.227.151:30993/\n"
  I0427 07:47:51.847612 25 builder.go:147] stdout: "\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v\naffinity-nodeport-transition-n5n5v"
  I0427 07:47:51.847627 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847636 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847644 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847661 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847671 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847679 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847687 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847694 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847701 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847710 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847717 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847724 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847731 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847739 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847746 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847753 25 service.go:242] Received response from host: affinity-nodeport-transition-n5n5v
  I0427 07:47:51.847816 25 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4234, will wait for the garbage collector to delete the pods @ 04/27/25 07:47:51.856
  I0427 07:47:51.915111 25 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 3.857637ms
  I0427 07:47:52.015689 25 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.572508ms
  E0427 07:47:52.492411      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:53.493065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:54.494182      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:54.631411 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4234" for this suite. @ 04/27/25 07:47:54.637
• [40.784 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/27/25 07:47:54.644
  I0427 07:47:54.644216 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename var-expansion @ 04/27/25 07:47:54.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:47:54.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:47:54.656
  STEP: Creating a pod to test substitution in volume subpath @ 04/27/25 07:47:54.66
  E0427 07:47:55.494705      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:56.494866      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:47:56.675
  I0427 07:47:56.677119 25 output.go:207] Trying to get logs from node node1 pod var-expansion-359e43cf-2e3b-47e0-bb4a-cab6a644a191 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 07:47:56.681
  I0427 07:47:56.688399 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7418" for this suite. @ 04/27/25 07:47:56.691
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/27/25 07:47:56.694
  I0427 07:47:56.694663 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/27/25 07:47:56.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:47:56.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:47:56.704
  I0427 07:47:56.707073 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:47:57.495537      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:58.496023      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:47:59.496149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:47:59.737697 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6995" for this suite. @ 04/27/25 07:47:59.74
• [3.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 04/27/25 07:47:59.745
  I0427 07:47:59.745240 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename containers @ 04/27/25 07:47:59.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:47:59.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:47:59.755
  STEP: Creating a pod to test override all @ 04/27/25 07:47:59.758
  E0427 07:48:00.497193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:01.497501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:02.498467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:03.498725      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:48:03.773
  I0427 07:48:03.775438 25 output.go:207] Trying to get logs from node node1 pod client-containers-71f1b235-eb49-4060-8162-f42d674a4eef container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:48:03.779
  I0427 07:48:03.786886 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3843" for this suite. @ 04/27/25 07:48:03.789
• [4.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 04/27/25 07:48:03.793
  I0427 07:48:03.793512 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename resourcequota @ 04/27/25 07:48:03.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:03.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:03.803
  STEP: Discovering how many secrets are in namespace by default @ 04/27/25 07:48:03.805
  E0427 07:48:04.499249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:05.499569      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:06.500603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:07.500711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:08.501013      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/27/25 07:48:08.808
  E0427 07:48:09.502121      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:10.502800      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:11.503549      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:12.503939      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:13.505072      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/27/25 07:48:13.812
  STEP: Ensuring resource quota status is calculated @ 04/27/25 07:48:13.817
  E0427 07:48:14.505617      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:15.505821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 04/27/25 07:48:15.82
  STEP: Ensuring resource quota status captures secret creation @ 04/27/25 07:48:15.828
  E0427 07:48:16.506399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:17.507213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 04/27/25 07:48:17.832
  STEP: Ensuring resource quota status released usage @ 04/27/25 07:48:17.835
  E0427 07:48:18.507454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:19.508118      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:48:19.841022 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1514" for this suite. @ 04/27/25 07:48:19.846
• [16.058 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/27/25 07:48:19.851
  I0427 07:48:19.851929 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:48:19.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:19.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:19.868
  STEP: Creating a pod to test downward api env vars @ 04/27/25 07:48:19.871
  E0427 07:48:20.508389      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:21.508485      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:22.509495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:23.509736      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:48:23.888
  I0427 07:48:23.890430 25 output.go:207] Trying to get logs from node node1 pod downward-api-728cc2a2-ac22-453e-944e-dd15b87c1651 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 07:48:23.895
  I0427 07:48:23.903942 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2122" for this suite. @ 04/27/25 07:48:23.906
• [4.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/27/25 07:48:23.909
  I0427 07:48:23.909651 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:48:23.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:23.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:23.921
  STEP: Creating configMap with name configmap-test-upd-4bd3a083-524f-4060-9c17-d1b0dc62e910 @ 04/27/25 07:48:24.007
  STEP: Creating the pod @ 04/27/25 07:48:24.01
  E0427 07:48:24.510875      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:25.511216      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-4bd3a083-524f-4060-9c17-d1b0dc62e910 @ 04/27/25 07:48:26.029
  STEP: waiting to observe update in volume @ 04/27/25 07:48:26.036
  E0427 07:48:26.512033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:27.512153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:48:28.044274 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4034" for this suite. @ 04/27/25 07:48:28.047
• [4.141 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/27/25 07:48:28.051
  I0427 07:48:28.051022 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:48:28.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:28.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:28.06
  STEP: Creating configMap with name projected-configmap-test-volume-44a80301-358c-4097-b18b-ce094f1e72f9 @ 04/27/25 07:48:28.063
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:48:28.066
  E0427 07:48:28.512718      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:29.512861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:30.513468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:31.514563      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:48:32.078
  I0427 07:48:32.081268 25 output.go:207] Trying to get logs from node node1 pod pod-projected-configmaps-981a296b-1ebb-4172-b159-256e3de23298 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:48:32.087
  I0427 07:48:32.096387 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8020" for this suite. @ 04/27/25 07:48:32.099
• [4.051 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/27/25 07:48:32.102
  I0427 07:48:32.102563 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename watch @ 04/27/25 07:48:32.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:32.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:32.115
  STEP: getting a starting resourceVersion @ 04/27/25 07:48:32.118
  STEP: starting a background goroutine to produce watch events @ 04/27/25 07:48:32.121
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/27/25 07:48:32.121
  E0427 07:48:32.514861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:33.515644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:34.516201      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:48:34.907041 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3084" for this suite. @ 04/27/25 07:48:34.957
• [2.906 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/27/25 07:48:35.008
  I0427 07:48:35.009007 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename deployment @ 04/27/25 07:48:35.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:35.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:35.02
  STEP: creating a Deployment @ 04/27/25 07:48:35.026
  I0427 07:48:35.026325 25 deployment.go:507] Creating simple deployment test-deployment-mtqmn
  I0427 07:48:35.032402 25 deployment.go:223] deployment "test-deployment-mtqmn" doesn't have the required revision set
  E0427 07:48:35.516985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:36.517230      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/27/25 07:48:37.041
  I0427 07:48:37.043280 25 deployment.go:532] Deployment test-deployment-mtqmn has Conditions: [{Available True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mtqmn-596446b6bb" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/27/25 07:48:37.043
  I0427 07:48:37.048512 25 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 48, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 48, 36, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.April, 27, 7, 48, 36, 0, time.Local), LastTransitionTime:time.Date(2025, time.April, 27, 7, 48, 35, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-mtqmn-596446b6bb\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/27/25 07:48:37.048
  I0427 07:48:37.050150 25 deployment.go:579] Observed &Deployment event: ADDED
  I0427 07:48:37.050195 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mtqmn-596446b6bb"}
  I0427 07:48:37.050257 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0427 07:48:37.050285 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mtqmn-596446b6bb"}
  I0427 07:48:37.050315 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0427 07:48:37.050411 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0427 07:48:37.050428 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0427 07:48:37.050438 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mtqmn-596446b6bb" is progressing.}
  I0427 07:48:37.050500 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0427 07:48:37.050512 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0427 07:48:37.050524 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mtqmn-596446b6bb" has successfully progressed.}
  I0427 07:48:37.050611 25 deployment.go:579] Observed &Deployment event: MODIFIED
  I0427 07:48:37.050635 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0427 07:48:37.050645 25 deployment.go:575] Observed Deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mtqmn-596446b6bb" has successfully progressed.}
  I0427 07:48:37.050655 25 deployment.go:572] Found Deployment test-deployment-mtqmn in namespace deployment-8839 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:48:37.050667 25 deployment.go:583] Deployment test-deployment-mtqmn has an updated status
  STEP: patching the Statefulset Status @ 04/27/25 07:48:37.05
  I0427 07:48:37.050699 25 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0427 07:48:37.054417 25 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/27/25 07:48:37.054
  I0427 07:48:37.056114 25 deployment.go:616] Observed &Deployment event: ADDED
  I0427 07:48:37.056159 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mtqmn-596446b6bb"}
  I0427 07:48:37.056268 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0427 07:48:37.056443 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mtqmn-596446b6bb"}
  I0427 07:48:37.056460 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0427 07:48:37.056536 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0427 07:48:37.056555 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0427 07:48:37.056567 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:35 +0000 UTC 2025-04-27 07:48:35 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mtqmn-596446b6bb" is progressing.}
  I0427 07:48:37.056633 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0427 07:48:37.056644 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0427 07:48:37.056653 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mtqmn-596446b6bb" has successfully progressed.}
  I0427 07:48:37.056720 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0427 07:48:37.056872 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:36 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0427 07:48:37.056920 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-04-27 07:48:36 +0000 UTC 2025-04-27 07:48:35 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mtqmn-596446b6bb" has successfully progressed.}
  I0427 07:48:37.056931 25 deployment.go:612] Observed deployment test-deployment-mtqmn in namespace deployment-8839 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:48:37.057020 25 deployment.go:616] Observed &Deployment event: MODIFIED
  I0427 07:48:37.057035 25 deployment.go:609] Found deployment test-deployment-mtqmn in namespace deployment-8839 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0427 07:48:37.057044 25 deployment.go:620] Deployment test-deployment-mtqmn has a patched status
  I0427 07:48:37.059652 25 deployment.go:633] Deployment "test-deployment-mtqmn":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-mtqmn",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d02e0ca9-8c40-42b1-a3dc-d4457c3d8da4",
      ResourceVersion: (string) (len=5) "60435",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-mtqmn-596446b6bb\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0427 07:48:37.138173 25 deployment.go:40] New ReplicaSet "test-deployment-mtqmn-596446b6bb" of Deployment "test-deployment-mtqmn":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-mtqmn-596446b6bb",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d75645bb-21aa-4bed-acad-f66d3f33c62d",
      ResourceVersion: (string) (len=5) "60430",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "596446b6bb",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-mtqmn",
          UID: (types.UID) (len=36) "d02e0ca9-8c40-42b1-a3dc-d4457c3d8da4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 30 32  |k:{\"uid\":\"d02|
              00000120  65 30 63 61 39 2d 38 63  34 30 2d 34 32 62 31 2d  |e0ca9-8c40-42b1-|
              00000130  61 33 64 63 2d 64 34 34  35 37 63 33 64 38 64 61  |a3dc-d4457c3d8da|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "596446b6bb"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "596446b6bb"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0427 07:48:37.146132 25 deployment.go:68] Pod "test-deployment-mtqmn-596446b6bb-jk29t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-mtqmn-596446b6bb-jk29t",
      GenerateName: (string) (len=33) "test-deployment-mtqmn-596446b6bb-",
      Namespace: (string) (len=15) "deployment-8839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea46deaf-103d-4477-b2b9-c927b402877c",
      ResourceVersion: (string) (len=5) "60429",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "596446b6bb"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-mtqmn-596446b6bb",
          UID: (types.UID) (len=36) "d75645bb-21aa-4bed-acad-f66d3f33c62d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 64 37 35 36 34 35 62  62 2d 32 31 61 61 2d 34  |"d75645bb-21aa-4|
              000000a0  62 65 64 2d 61 63 61 64  2d 66 36 36 64 33 66 33  |bed-acad-f66d3f3|
              000000b0  33 63 36 32 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |3c62d\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 30 2e 31 36 36  2e 31 33 37 5c 22 7d 22  |2.20.166.137\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6wpgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6wpgn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=5) "node1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63881336915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.227.151",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.227.151"
        }
      },
      PodIP: (string) (len=14) "172.20.166.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.20.166.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63881336915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63881336915,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=68) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=131) "registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=77) "containerd://4c355bb3affeee1486a97aa1bfc078888fc3e5f431d6314e4cac985382e38ad5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6wpgn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0427 07:48:37.148578 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8839" for this suite. @ 04/27/25 07:48:37.151
• [2.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/27/25 07:48:37.156
  I0427 07:48:37.156209 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename watch @ 04/27/25 07:48:37.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:37.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:37.167
  STEP: creating a watch on configmaps with label A @ 04/27/25 07:48:37.174
  STEP: creating a watch on configmaps with label B @ 04/27/25 07:48:37.238
  STEP: creating a watch on configmaps with label A or B @ 04/27/25 07:48:37.24
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/27/25 07:48:37.243
  I0427 07:48:37.245852 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60449 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 07:48:37.245930 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60449 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/27/25 07:48:37.246
  I0427 07:48:37.250681 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60450 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 07:48:37.250751 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60450 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/27/25 07:48:37.25
  I0427 07:48:37.254878 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60452 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 07:48:37.254974 25 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60452 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/27/25 07:48:37.255
  I0427 07:48:37.259152 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60453 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 07:48:37.259217 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6457  56321ff1-62a2-4738-b7cf-a3fcb2315ab2 60453 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/27/25 07:48:37.259
  I0427 07:48:37.261404 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6457  be943577-896f-48c0-b886-e2f3658580ea 60454 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 07:48:37.261469 25 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6457  be943577-896f-48c0-b886-e2f3658580ea 60454 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0427 07:48:37.517567      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:38.517977      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:39.518611      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:40.518814      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:41.519025      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:42.520408      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:43.520745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:44.520985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:45.521214      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:46.521512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/27/25 07:48:47.261
  I0427 07:48:47.266869 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6457  be943577-896f-48c0-b886-e2f3658580ea 60505 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0427 07:48:47.266969 25 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6457  be943577-896f-48c0-b886-e2f3658580ea 60505 0 2025-04-27 07:48:37 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-04-27 07:48:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0427 07:48:47.522370      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:48.522533      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:49.522969      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:50.522827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:51.523236      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:52.523500      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:53.523710      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:54.524508      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:55.524738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:56.524859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:48:57.267627 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6457" for this suite. @ 04/27/25 07:48:57.272
• [20.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/27/25 07:48:57.276
  I0427 07:48:57.276271 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename pods @ 04/27/25 07:48:57.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:57.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:57.288
  STEP: creating the pod @ 04/27/25 07:48:57.293
  STEP: submitting the pod to kubernetes @ 04/27/25 07:48:57.293
  E0427 07:48:57.525781      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:48:58.525942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/27/25 07:48:59.303
  STEP: updating the pod @ 04/27/25 07:48:59.306
  E0427 07:48:59.526878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:48:59.813838 25 pod_client.go:173] Successfully updated pod "pod-update-1b2927ff-5ba2-4759-b55b-bcefbe09dea4"
  STEP: verifying the updated pod is in kubernetes @ 04/27/25 07:48:59.817
  I0427 07:48:59.823021 25 pods.go:391] Pod update OK
  I0427 07:48:59.823146 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2001" for this suite. @ 04/27/25 07:48:59.826
• [2.554 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/27/25 07:48:59.83
  I0427 07:48:59.830517 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename replicaset @ 04/27/25 07:48:59.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:48:59.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:48:59.843
  STEP: Create a Replicaset @ 04/27/25 07:48:59.85
  STEP: Verify that the required pods have come up. @ 04/27/25 07:48:59.853
  I0427 07:48:59.861497 25 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/27/25 07:48:59.861
  E0427 07:49:00.527912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:01.528387      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/27/25 07:49:01.87
  I0427 07:49:01.873098 25 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/27/25 07:49:01.873
  I0427 07:49:01.880129 25 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/27/25 07:49:01.88
  I0427 07:49:01.881728 25 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0427 07:49:01.881857 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.882117 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.882242 25 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.882283 25 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8041 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0427 07:49:01.882329 25 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/27/25 07:49:01.882
  I0427 07:49:01.882383 25 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0427 07:49:01.886020 25 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/27/25 07:49:01.886
  I0427 07:49:01.887918 25 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0427 07:49:01.888010 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.888165 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.888404 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.888430 25 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8041 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0427 07:49:01.888496 25 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0427 07:49:01.888533 25 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8041 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0427 07:49:01.888544 25 replica_set.go:729] Replicaset test-rs has a patched status
  I0427 07:49:01.888626 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8041" for this suite. @ 04/27/25 07:49:01.892
• [2.065 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/27/25 07:49:01.895
  I0427 07:49:01.895867 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:49:01.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:01.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:01.905
  STEP: Creating secret with name secret-test-5a59f9b0-6b92-4b25-84fa-850cd7b46b7b @ 04/27/25 07:49:01.909
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:49:01.912
  E0427 07:49:02.529446      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:03.530108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:04.531176      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:05.531745      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:49:05.93
  I0427 07:49:05.934932 25 output.go:207] Trying to get logs from node node1 pod pod-secrets-0507c4a1-4ce8-484e-9e86-ecf5f6a28750 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:49:05.941
  I0427 07:49:05.957210 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1399" for this suite. @ 04/27/25 07:49:05.962
• [4.074 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/27/25 07:49:05.97
  I0427 07:49:05.970123 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename runtimeclass @ 04/27/25 07:49:05.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:05.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:05.987
  STEP: Deleting RuntimeClass runtimeclass-3541-delete-me @ 04/27/25 07:49:06
  STEP: Waiting for the RuntimeClass to disappear @ 04/27/25 07:49:06.005
  I0427 07:49:06.022137 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3541" for this suite. @ 04/27/25 07:49:06.068
• [0.111 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/27/25 07:49:06.081
  I0427 07:49:06.081424 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename container-runtime @ 04/27/25 07:49:06.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:06.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:06.118
  STEP: create the container @ 04/27/25 07:49:06.125
  W0427 07:49:06.143173      25 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/27/25 07:49:06.143
  E0427 07:49:06.532247      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:07.532859      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:08.533382      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/27/25 07:49:09.175
  STEP: the container should be terminated @ 04/27/25 07:49:09.181
  STEP: the termination message should be set @ 04/27/25 07:49:09.181
  I0427 07:49:09.181734 25 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/27/25 07:49:09.182
  I0427 07:49:09.209559 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5185" for this suite. @ 04/27/25 07:49:09.218
• [3.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 04/27/25 07:49:09.228
  I0427 07:49:09.228843 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:49:09.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:09.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:09.266
  STEP: Setting up server cert @ 04/27/25 07:49:09.306
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:49:09.516
  STEP: Deploying the webhook pod @ 04/27/25 07:49:09.524
  E0427 07:49:09.533687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/27/25 07:49:09.545
  I0427 07:49:09.560562 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:49:10.534399      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:11.534762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:49:11.584
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:49:11.615
  E0427 07:49:12.535827      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:12.616401 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/27/25 07:49:12.627
  STEP: create a namespace for the webhook @ 04/27/25 07:49:12.647
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/27/25 07:49:12.662
  I0427 07:49:12.727729 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4825" for this suite. @ 04/27/25 07:49:12.733
  STEP: Destroying namespace "webhook-markers-7443" for this suite. @ 04/27/25 07:49:12.739
  STEP: Destroying namespace "fail-closed-namespace-8312" for this suite. @ 04/27/25 07:49:12.744
• [3.521 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1730
  STEP: Creating a kubernetes client @ 04/27/25 07:49:12.749
  I0427 07:49:12.749859 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:49:12.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:12.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:12.774
  I0427 07:49:12.781970 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-2228 version'
  I0427 07:49:12.859815 25 builder.go:146] stderr: ""
  I0427 07:49:12.859902 25 builder.go:147] stdout: "Client Version: v1.32.3\nKustomize Version: v5.5.0\nServer Version: v1.32.3\n"
  I0427 07:49:12.860555 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2228" for this suite. @ 04/27/25 07:49:12.865
• [0.123 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 04/27/25 07:49:12.873
  I0427 07:49:12.873249 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename dns @ 04/27/25 07:49:12.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:12.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:12.896
  STEP: Creating a test headless service @ 04/27/25 07:49:12.9
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 144.68.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.68.144_udp@PTR;check="$$(dig +tcp +noall +answer +search 144.68.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.68.144_tcp@PTR;sleep 1; done
   @ 04/27/25 07:49:12.916
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2837.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 144.68.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.68.144_udp@PTR;check="$$(dig +tcp +noall +answer +search 144.68.68.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.68.68.144_tcp@PTR;sleep 1; done
   @ 04/27/25 07:49:12.916
  STEP: creating a pod to probe DNS @ 04/27/25 07:49:12.916
  STEP: submitting the pod to kubernetes @ 04/27/25 07:49:12.916
  E0427 07:49:13.536478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:14.536762      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/27/25 07:49:14.938
  STEP: looking for the results for each expected name from probers @ 04/27/25 07:49:14.941
  I0427 07:49:14.945833 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.952210 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.957992 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.963693 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.986562 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.991065 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.994990 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:14.997837 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:15.015610 25 dns_common.go:506] Lookups using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 failed for: [agnhost_udp@dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_udp@dns-test-service.dns-2837.svc.cluster.local jessie_tcp@dns-test-service.dns-2837.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local]

  I0427 07:49:15.025745 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:49:15.032882 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:49:15.041637 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:49:15.536976      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:16.537459      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:17.537967      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:18.538750      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:19.539058      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:19.946793 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.950647 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.954118 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.958556 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.982482 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.986934 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.991454 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:19.996376 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:20.013581 25 dns_common.go:506] Lookups using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 failed for: [agnhost_udp@dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_udp@dns-test-service.dns-2837.svc.cluster.local jessie_tcp@dns-test-service.dns-2837.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local]

  I0427 07:49:20.023054 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:49:20.033539 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:49:20.042045 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:49:20.539820      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:21.540476      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:22.540828      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:23.541016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:24.541418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:24.948761 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.952851 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.956570 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.961532 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.980555 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.983408 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.985785 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:24.988622 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:25.000962 25 dns_common.go:506] Lookups using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 failed for: [agnhost_udp@dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_udp@dns-test-service.dns-2837.svc.cluster.local jessie_tcp@dns-test-service.dns-2837.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local]

  I0427 07:49:25.006705 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:49:25.011631 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:49:25.016731 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:49:25.541498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:26.542458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:27.542479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:28.542741      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:29.543096      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:29.948060 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.951265 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.953700 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.956889 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.975712 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.981015 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.985245 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:29.990842 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:30.013945 25 dns_common.go:506] Lookups using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 failed for: [agnhost_udp@dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_udp@dns-test-service.dns-2837.svc.cluster.local jessie_tcp@dns-test-service.dns-2837.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local]

  I0427 07:49:30.024711 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:49:30.032126 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:49:30.040181 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:49:30.543625      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:31.544609      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:32.545038      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:33.545200      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:34.545499      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:34.945604 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.947881 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.950180 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.952523 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.963476 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.965615 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.968579 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.971079 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:34.979994 25 dns_common.go:506] Lookups using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 failed for: [agnhost_udp@dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_udp@dns-test-service.dns-2837.svc.cluster.local jessie_tcp@dns-test-service.dns-2837.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local]

  I0427 07:49:34.984053 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:49:34.988100 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:49:34.992073 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:49:35.546016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:36.546790      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:37.547579      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:38.547927      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:39.548142      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:39.946011 25 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.949057 25 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.950938 25 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.952558 25 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.961828 25 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.963672 25 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.965799 25 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.967680 25 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local from pod dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2: the server could not find the requested resource (get pods dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2)
  I0427 07:49:39.975126 25 dns_common.go:506] Lookups using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 failed for: [agnhost_udp@dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@dns-test-service.dns-2837.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_udp@dns-test-service.dns-2837.svc.cluster.local jessie_tcp@dns-test-service.dns-2837.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2837.svc.cluster.local]

  I0427 07:49:39.978869 25 dns_common.go:514] Pod client logs for webserver: 
  I0427 07:49:39.982231 25 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0427 07:49:39.985312 25 dns_common.go:514] Pod client logs for jessie-querier: 
  E0427 07:49:40.549278      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:41.549512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:42.550016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:43.550249      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:44.550607      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:44.975536 25 dns_common.go:546] DNS probes using dns-2837/dns-test-8641a523-9aff-4171-9a73-43117dd0fbd2 succeeded

  STEP: deleting the pod @ 04/27/25 07:49:44.975
  STEP: deleting the test service @ 04/27/25 07:49:44.988
  STEP: deleting the test headless service @ 04/27/25 07:49:45.008
  I0427 07:49:45.030086 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2837" for this suite. @ 04/27/25 07:49:45.035
• [32.176 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 04/27/25 07:49:45.049
  I0427 07:49:45.049548 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename field-validation @ 04/27/25 07:49:45.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:45.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:45.067
  STEP: apply creating a deployment @ 04/27/25 07:49:45.071
  I0427 07:49:45.086479 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-344" for this suite. @ 04/27/25 07:49:45.136
• [0.091 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 04/27/25 07:49:45.14
  I0427 07:49:45.140703 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename webhook @ 04/27/25 07:49:45.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:45.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:45.155
  STEP: Setting up server cert @ 04/27/25 07:49:45.174
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/27/25 07:49:45.536
  STEP: Deploying the webhook pod @ 04/27/25 07:49:45.539
  STEP: Wait for the deployment to be ready @ 04/27/25 07:49:45.547
  E0427 07:49:45.550891      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:45.551021 25 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0427 07:49:46.551467      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:47.551647      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:49:47.561
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:49:47.569
  E0427 07:49:48.551822      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:49:48.569940 25 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/27/25 07:49:48.575
  STEP: verifying the mutating webhook match conditions @ 04/27/25 07:49:48.585
  STEP: updating the mutating webhook match conditions @ 04/27/25 07:49:48.588
  STEP: verifying the mutating webhook match conditions @ 04/27/25 07:49:48.596
  I0427 07:49:48.655059 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6257" for this suite. @ 04/27/25 07:49:48.664
  STEP: Destroying namespace "webhook-markers-7819" for this suite. @ 04/27/25 07:49:48.68
• [3.553 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/27/25 07:49:48.695
  I0427 07:49:48.695138 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-watch @ 04/27/25 07:49:48.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:49:48.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:49:48.732
  I0427 07:49:48.741660 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:49:49.552498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:50.553535      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/27/25 07:49:51.282
  I0427 07:49:51.285192 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-27T07:49:51Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-27T07:49:51Z]] name:name1 resourceVersion:61026 uid:905d17a9-4039-4770-9b04-1d8409035c94] num:map[num1:9223372036854775807 num2:1000000]]}
  E0427 07:49:51.554593      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:52.554861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:53.554984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:54.555209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:55.555474      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:56.555713      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:57.555845      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:58.556208      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:49:59.556376      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:00.556520      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/27/25 07:50:01.285
  I0427 07:50:01.289817 25 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-27T07:50:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-27T07:50:01Z]] name:name2 resourceVersion:61062 uid:d837c01f-acda-4803-8900-83da93d78806] num:map[num1:9223372036854775807 num2:1000000]]}
  E0427 07:50:01.557320      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:02.557580      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:03.557766      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:04.558003      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:05.558664      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:06.559649      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:07.559760      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:08.560498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:09.560507      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:10.560651      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/27/25 07:50:11.29
  I0427 07:50:11.294978 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-27T07:49:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-27T07:50:11Z]] name:name1 resourceVersion:61078 uid:905d17a9-4039-4770-9b04-1d8409035c94] num:map[num1:9223372036854775807 num2:1000000]]}
  E0427 07:50:11.561405      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:12.561481      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:13.561687      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:14.561826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:15.562036      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:16.562942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:17.563628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:18.563749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:19.564002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:20.564219      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/27/25 07:50:21.295
  I0427 07:50:21.299479 25 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-27T07:50:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-27T07:50:21Z]] name:name2 resourceVersion:61094 uid:d837c01f-acda-4803-8900-83da93d78806] num:map[num1:9223372036854775807 num2:1000000]]}
  E0427 07:50:21.564984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:22.565209      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:23.565733      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:24.565692      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:25.565960      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:26.566032      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:27.566356      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:28.566487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:29.566805      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:30.566983      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/27/25 07:50:31.3
  I0427 07:50:31.305061 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-27T07:49:51Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-27T07:50:11Z]] name:name1 resourceVersion:61110 uid:905d17a9-4039-4770-9b04-1d8409035c94] num:map[num1:9223372036854775807 num2:1000000]]}
  E0427 07:50:31.567466      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:32.567644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:33.567863      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:34.568068      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:35.568451      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:36.568490      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:37.569612      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:38.570623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:39.570850      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:40.571066      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/27/25 07:50:41.305
  I0427 07:50:41.309680 25 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-04-27T07:50:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-04-27T07:50:21Z]] name:name2 resourceVersion:61126 uid:d837c01f-acda-4803-8900-83da93d78806] num:map[num1:9223372036854775807 num2:1000000]]}
  E0427 07:50:41.572153      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:42.573248      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:43.573487      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:44.573821      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:45.574089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:46.574424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:47.574663      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:48.574945      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:49.576108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:50.576547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:51.577193      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:50:51.819005 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1475" for this suite. @ 04/27/25 07:50:51.822
• [63.132 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/27/25 07:50:51.826
  I0427 07:50:51.826693 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:50:51.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:50:51.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:50:51.839
  STEP: Creating a pod to test downward API volume plugin @ 04/27/25 07:50:51.843
  E0427 07:50:52.577400      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:53.577628      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:50:53.853
  I0427 07:50:53.856008 25 output.go:207] Trying to get logs from node node1 pod downwardapi-volume-c4feff26-20fe-4965-b0ac-12e2610c511d container client-container: <nil>
  STEP: delete the pod @ 04/27/25 07:50:53.859
  I0427 07:50:53.867854 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4906" for this suite. @ 04/27/25 07:50:53.87
• [2.047 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/27/25 07:50:53.873
  I0427 07:50:53.873582 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:50:53.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:50:53.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:50:53.883
  STEP: Creating a pod to test downward api env vars @ 04/27/25 07:50:53.885
  E0427 07:50:54.578468      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:55.578728      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:50:55.898
  I0427 07:50:55.900945 25 output.go:207] Trying to get logs from node node1 pod downward-api-bd714289-175c-4ac7-9503-1da47ce58514 container dapi-container: <nil>
  STEP: delete the pod @ 04/27/25 07:50:55.905
  I0427 07:50:55.912645 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3134" for this suite. @ 04/27/25 07:50:55.916
• [2.046 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746
  STEP: Creating a kubernetes client @ 04/27/25 07:50:55.919
  I0427 07:50:55.919900 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption @ 04/27/25 07:50:55.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:50:55.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:50:55.929
  I0427 07:50:55.938447 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0427 07:50:56.578924      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:57.579414      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:58.580547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:50:59.580811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:00.580941      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:01.581130      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:02.582377      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:03.582494      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:04.583064      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:05.583877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:06.583942      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:07.584107      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:08.585065      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:09.585364      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:10.585553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:11.585849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:12.585992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:13.586384      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:14.586635      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:15.586917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:16.587552      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:17.587792      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:18.588350      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:19.588667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:20.588738      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:21.589051      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:22.589897      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:23.590154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:24.591194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:25.591368      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:26.591506      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:27.591795      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:28.592054      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:29.592246      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:30.592715      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:31.593266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:32.593528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:33.594556      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:34.595214      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:35.595266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:36.595899      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:37.596158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:38.596678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:39.596955      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:40.597410      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:41.597779      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:42.598676      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:43.599099      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:44.599916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:45.600380      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:46.600623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:47.600991      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:48.601150      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:49.601469      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:50.602111      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:51.602480      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:52.602901      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:53.603825      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:54.604956      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:55.605279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:51:55.942659 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/27/25 07:51:55.944
  I0427 07:51:55.944872 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/27/25 07:51:55.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:51:55.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:51:55.956
  STEP: Finding an available node @ 04/27/25 07:51:55.958
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/27/25 07:51:55.958
  E0427 07:51:56.606348      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:57.606433      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/27/25 07:51:57.971
  I0427 07:51:57.976223 25 preemption.go:709] found a healthy node: node1
  STEP: Adding a custom resource @ 04/27/25 07:51:57.979
  E0427 07:51:58.606479      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:51:59.606702      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:00.606992      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:01.607231      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:02.607194      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:03.607564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:04.026383 25 preemption.go:828] pods created so far: [1 1 1]
  I0427 07:52:04.026425 25 preemption.go:829] length of pods created so far: 3
  E0427 07:52:04.608624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:05.609210      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:06.036285 25 preemption.go:846] pods created so far: [2 2 1]
  E0427 07:52:06.610078      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:07.610990      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:08.611196      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:09.611458      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:10.611802      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:11.612525      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:12.613016      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 04/27/25 07:52:13.037
  STEP: Removing a custom resource @ 04/27/25 07:52:13.064
  STEP: Removing a custom resource @ 04/27/25 07:52:13.069
  STEP: Removing a custom resource @ 04/27/25 07:52:13.073
  I0427 07:52:13.079414 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3255" for this suite. @ 04/27/25 07:52:13.081
  I0427 07:52:13.084723 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5670" for this suite. @ 04/27/25 07:52:13.184
• [77.268 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/27/25 07:52:13.188
  I0427 07:52:13.188273 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename discovery @ 04/27/25 07:52:13.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:13.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:13.2
  STEP: Setting up server cert @ 04/27/25 07:52:13.204
  STEP: Requesting APIResourceList from "/api/v1" @ 04/27/25 07:52:13.427
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/27/25 07:52:13.429
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/27/25 07:52:13.43
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/27/25 07:52:13.431
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/27/25 07:52:13.432
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/27/25 07:52:13.433
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/27/25 07:52:13.434
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/27/25 07:52:13.435
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/27/25 07:52:13.436
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/27/25 07:52:13.437
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/27/25 07:52:13.438
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/27/25 07:52:13.438
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/27/25 07:52:13.439
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/27/25 07:52:13.44
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/27/25 07:52:13.441
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/27/25 07:52:13.443
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/27/25 07:52:13.444
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/27/25 07:52:13.445
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/27/25 07:52:13.447
  I0427 07:52:13.448498 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7885" for this suite. @ 04/27/25 07:52:13.451
• [0.266 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 04/27/25 07:52:13.454
  I0427 07:52:13.454801 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename kubectl @ 04/27/25 07:52:13.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:13.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:13.464
  STEP: creating all guestbook components @ 04/27/25 07:52:13.467
  I0427 07:52:13.467577 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0427 07:52:13.467666 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 create -f -'
  I0427 07:52:13.566167 25 builder.go:146] stderr: ""
  I0427 07:52:13.566218 25 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0427 07:52:13.566259 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0427 07:52:13.566431 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 create -f -'
  E0427 07:52:13.613916      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:13.687158 25 builder.go:146] stderr: ""
  I0427 07:52:13.687198 25 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0427 07:52:13.687237 25 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0427 07:52:13.687398 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 create -f -'
  I0427 07:52:13.801783 25 builder.go:146] stderr: ""
  I0427 07:52:13.801862 25 builder.go:147] stdout: "service/frontend created\n"
  I0427 07:52:13.801925 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0427 07:52:13.802041 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 create -f -'
  I0427 07:52:13.890225 25 builder.go:146] stderr: ""
  I0427 07:52:13.890264 25 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0427 07:52:13.890339 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0427 07:52:13.890505 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 create -f -'
  I0427 07:52:13.982040 25 builder.go:146] stderr: ""
  I0427 07:52:13.982091 25 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0427 07:52:13.982283 25 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.dev.rdev.tech:18093/sonobuoy/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0427 07:52:13.982959 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 create -f -'
  I0427 07:52:14.082140 25 builder.go:146] stderr: ""
  I0427 07:52:14.082807 25 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/27/25 07:52:14.082
  I0427 07:52:14.082877 25 kubectl.go:2279] Waiting for all frontend pods to be Running.
  E0427 07:52:14.614689      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:15.614904      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:16.615022      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:17.615280      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:18.615787      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:19.134283 25 kubectl.go:2283] Waiting for frontend to serve content.
  I0427 07:52:19.142750 25 kubectl.go:2288] Trying to add a new entry to the guestbook.
  I0427 07:52:19.151838 25 kubectl.go:2293] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/27/25 07:52:19.157
  I0427 07:52:19.157630 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 delete --grace-period=0 --force -f -'
  I0427 07:52:19.228122 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:52:19.228175 25 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/27/25 07:52:19.228
  I0427 07:52:19.228270 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 delete --grace-period=0 --force -f -'
  I0427 07:52:19.324204 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:52:19.324361 25 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/27/25 07:52:19.324
  I0427 07:52:19.324591 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 delete --grace-period=0 --force -f -'
  I0427 07:52:19.420007 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:52:19.420063 25 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/27/25 07:52:19.42
  I0427 07:52:19.420216 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 delete --grace-period=0 --force -f -'
  I0427 07:52:19.505874 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:52:19.505931 25 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/27/25 07:52:19.506
  I0427 07:52:19.506519 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 delete --grace-period=0 --force -f -'
  E0427 07:52:19.616082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:19.629425 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:52:19.633401 25 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/27/25 07:52:19.633
  I0427 07:52:19.633676 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=kubectl-3591 delete --grace-period=0 --force -f -'
  I0427 07:52:19.751105 25 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0427 07:52:19.751177 25 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0427 07:52:19.751405 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3591" for this suite. @ 04/27/25 07:52:19.76
• [6.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/27/25 07:52:19.781
  I0427 07:52:19.781999 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename secrets @ 04/27/25 07:52:19.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:19.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:19.82
  STEP: Creating secret with name secret-test-c5afd223-9589-46ab-82f7-f110a527741c @ 04/27/25 07:52:19.83
  STEP: Creating a pod to test consume secrets @ 04/27/25 07:52:19.845
  E0427 07:52:20.616650      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:21.616912      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:22.618113      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:23.618540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:52:23.883
  I0427 07:52:23.887610 25 output.go:207] Trying to get logs from node node1 pod pod-secrets-c99e0c30-b01e-4f8a-b313-18b5fdf98e4c container secret-volume-test: <nil>
  STEP: delete the pod @ 04/27/25 07:52:23.894
  I0427 07:52:23.907591 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5841" for this suite. @ 04/27/25 07:52:23.911
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/27/25 07:52:23.916
  I0427 07:52:23.916381 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename configmap @ 04/27/25 07:52:23.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:23.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:23.931
  STEP: Creating configMap configmap-4695/configmap-test-8f3b909c-de6a-46cf-b23b-711d4ee3cec1 @ 04/27/25 07:52:23.935
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:52:23.939
  E0427 07:52:24.619082      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:25.619540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:26.620370      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:27.620763      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:52:27.958
  I0427 07:52:27.961254 25 output.go:207] Trying to get logs from node node1 pod pod-configmaps-e081b27e-ee91-43e5-80e7-cc9fb9fd4946 container env-test: <nil>
  STEP: delete the pod @ 04/27/25 07:52:27.966
  I0427 07:52:27.976261 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4695" for this suite. @ 04/27/25 07:52:27.982
• [4.075 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/27/25 07:52:27.991
  I0427 07:52:27.991422 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename projected @ 04/27/25 07:52:27.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:28.008
  STEP: Creating configMap with name projected-configmap-test-volume-906f99c2-3fbe-448f-94ca-adb999213a2a @ 04/27/25 07:52:28.013
  STEP: Creating a pod to test consume configMaps @ 04/27/25 07:52:28.02
  E0427 07:52:28.621108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:29.621546      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:30.621616      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:31.621962      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/27/25 07:52:32.05
  I0427 07:52:32.055654 25 output.go:207] Trying to get logs from node node1 pod pod-projected-configmaps-c2f8c15f-9eae-41d7-ad40-16105fcd812f container agnhost-container: <nil>
  STEP: delete the pod @ 04/27/25 07:52:32.067
  I0427 07:52:32.094694 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7117" for this suite. @ 04/27/25 07:52:32.105
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/27/25 07:52:32.118
  I0427 07:52:32.118144 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename downward-api @ 04/27/25 07:52:32.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:32.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:32.148
  STEP: Creating the pod @ 04/27/25 07:52:32.161
  E0427 07:52:32.622221      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:33.622666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:34.623709      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:34.719730 25 pod_client.go:173] Successfully updated pod "annotationupdate1fa7dc0f-9b4b-4889-97f3-afbd7aa7c6a0"
  E0427 07:52:35.623811      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:36.624108      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:52:36.733582 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5426" for this suite. @ 04/27/25 07:52:36.737
• [4.628 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214
  STEP: Creating a kubernetes client @ 04/27/25 07:52:36.746
  I0427 07:52:36.746339 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename sched-preemption @ 04/27/25 07:52:36.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:52:36.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:52:36.763
  I0427 07:52:36.776234 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0427 07:52:37.625213      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:38.625561      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:39.626238      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:40.626512      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:41.626603      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:42.626826      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:43.626943      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:44.627379      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:45.627818      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:46.628144      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:47.628862      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:48.629158      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:49.629536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:50.629977      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:51.629981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:52.630266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:53.630571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:54.630624      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:55.630767      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:56.631658      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:57.632540      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:58.633536      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:52:59.634589      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:00.635516      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:01.636547      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:02.636831      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:03.637570      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:04.637506      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:05.638181      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:06.638484      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:07.639582      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:08.640734      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:09.641089      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:10.641393      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:11.641870      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:12.642106      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:13.642522      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:14.643574      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:15.644564      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:16.644711      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:17.644849      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:18.645046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:19.645743      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:20.645877      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:21.646017      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:22.646341      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:23.646886      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:24.647075      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:25.648149      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:26.648917      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:27.649141      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:28.649419      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:29.649649      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:30.649774      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:31.650929      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:32.651254      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:33.651590      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:34.651746      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:35.652033      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:36.652502      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:36.784583 25 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/27/25 07:53:36.79
  STEP: Adding a custom resource @ 04/27/25 07:53:36.79
  I0427 07:53:36.814209 25 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0427 07:53:36.830419 25 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/27/25 07:53:36.83
  I0427 07:53:36.862201 25 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0427 07:53:36.871551 25 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 04/27/25 07:53:36.871
  I0427 07:53:36.907679 25 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0427 07:53:36.916037 25 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/27/25 07:53:36.916
  E0427 07:53:37.653244      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:38.653464      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/27/25 07:53:38.936
  E0427 07:53:39.654495      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:40.654623      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:41.655735      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:42.655861      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 04/27/25 07:53:42.984
  STEP: Removing a custom resource @ 04/27/25 07:53:42.99
  STEP: Removing a custom resource @ 04/27/25 07:53:42.999
  I0427 07:53:43.007080 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3190" for this suite. @ 04/27/25 07:53:43.01
• [66.267 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110
  STEP: Creating a kubernetes client @ 04/27/25 07:53:43.013
  I0427 07:53:43.013925 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename job @ 04/27/25 07:53:43.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:53:43.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:53:43.037
  STEP: Looking for a node to schedule job pod @ 04/27/25 07:53:43.041
  STEP: Creating a job @ 04/27/25 07:53:43.047
  STEP: Ensuring job fails @ 04/27/25 07:53:43.071
  E0427 07:53:43.656768      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:44.657088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:45.658049      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:46.658881      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:47.659012      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:48.659509      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:49.093452 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6285" for this suite. @ 04/27/25 07:53:49.1
• [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683
  STEP: Creating a kubernetes client @ 04/27/25 07:53:49.108
  I0427 07:53:49.108240 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename services @ 04/27/25 07:53:49.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:53:49.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:53:49.125
  STEP: creating service multiprotocol-test in namespace services-5073 @ 04/27/25 07:53:49.13
  STEP: creating pod pod1 in namespace services-5073 @ 04/27/25 07:53:49.14
  STEP: Creating pod pod1 in namespace services-5073 @ 04/27/25 07:53:49.141
  E0427 07:53:49.659627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:50.659981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-5073 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/27/25 07:53:51.168
  I0427 07:53:51.176189 25 service.go:4553] successfully validated that service multiprotocol-test in namespace services-5073 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/27/25 07:53:51.176
  I0427 07:53:51.176254 25 resource.go:361] Creating new exec pod
  E0427 07:53:51.660984      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:52.660994      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:53.185383 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80'
  I0427 07:53:53.270841 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.68.160.213 80\nConnection to 10.68.160.213 80 port [tcp/http] succeeded!\n"
  I0427 07:53:53.270887 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:53:53.270945 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.160.213 80'
  E0427 07:53:53.661402      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:53:54.661751      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:55.351181 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.160.213 80\n"
  I0427 07:53:55.351232 25 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/27/25 07:53:55.351
  I0427 07:53:55.358753 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80'
  I0427 07:53:55.538562 25 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 10.68.160.213 80\nConnection to 10.68.160.213 80 port [tcp/http] succeeded!\n"
  I0427 07:53:55.538719 25 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0427 07:53:55.539015 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.160.213 80'
  E0427 07:53:55.662154      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:55.726686 25 builder.go:146] stderr: "+ nc -v -u -w 2 10.68.160.213 80\n+ echo hostName\n"
  I0427 07:53:55.726747 25 builder.go:147] stdout: ""
  E0427 07:53:56.662981      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:57.539654 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.160.213 80'
  E0427 07:53:57.663716      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:57.734851 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.160.213 80\n"
  I0427 07:53:57.734971 25 builder.go:147] stdout: ""
  E0427 07:53:58.663749      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:53:59.539461 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.160.213 80'
  I0427 07:53:59.631935 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.160.213 80\n"
  I0427 07:53:59.631985 25 builder.go:147] stdout: ""
  E0427 07:53:59.664401      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:00.664544      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking if the Service forwards traffic to UDP only @ 04/27/25 07:54:01.539
  I0427 07:54:01.545216 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.160.213 80'
  I0427 07:54:01.661142 25 builder.go:146] stderr: "+ + echonc hostName -v\n -u -w 2 10.68.160.213 80\n"
  I0427 07:54:01.661234 25 builder.go:147] stdout: ""
  E0427 07:54:01.665417      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:02.665712      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:03.545388 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.68.160.213 80'
  E0427 07:54:03.666276      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:04.666732      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:05.640356 25 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.68.160.213 80\n"
  I0427 07:54:05.640402 25 builder.go:147] stdout: "pod1"
  I0427 07:54:05.640482 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80'
  E0427 07:54:05.666889      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:05.730996 25 builder.go:135] rc: 1
  I0427 07:54:05.731061 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.68.160.213 80
  + echo hostName
  nc: connect to 10.68.160.213 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0427 07:54:06.667412      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:07.641041 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80'
  E0427 07:54:07.667418      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:07.716834 25 builder.go:135] rc: 1
  I0427 07:54:07.716893 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.160.213 80
  nc: connect to 10.68.160.213 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0427 07:54:08.667884      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:09.640816 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80'
  E0427 07:54:09.668256      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:09.734810 25 builder.go:135] rc: 1
  I0427 07:54:09.734875 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.68.160.213 80
  nc: connect to 10.68.160.213 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0427 07:54:10.669095      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:11.641405 25 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80'
  E0427 07:54:11.670005      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:11.793480 25 builder.go:135] rc: 1
  I0427 07:54:11.793571 25 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-1441536696 --namespace=services-5073 exec execpodfbskb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.68.160.213 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.68.160.213 80
  + echo hostName
  nc: connect to 10.68.160.213 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0427 07:54:11.793736 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5073" for this suite. @ 04/27/25 07:54:11.798
• [22.696 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/27/25 07:54:11.804
  I0427 07:54:11.804629 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename runtimeclass @ 04/27/25 07:54:11.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:54:11.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:54:11.826
  E0427 07:54:12.670127      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:13.670426      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:54:13.863337 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2758" for this suite. @ 04/27/25 07:54:13.866
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 04/27/25 07:54:13.87
  I0427 07:54:13.870339 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/27/25 07:54:13.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:54:13.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:54:13.88
  I0427 07:54:13.883154 25 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0427 07:54:14.671528      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:15.671954      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:16.672062      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:17.672279      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:18.672492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:19.672662      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:20.673648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:21.674672      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:22.675483      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:23.675797      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:24.676553      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:25.676883      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:26.677206      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:27.677571      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:28.678644      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:29.678888      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:30.679014      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:31.679498      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:32.679654      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:33.679858      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:34.681004      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:35.681500      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:36.681921      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:37.682255      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:38.683519      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:39.683788      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:40.684424      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:41.684746      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:42.685840      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:43.686088      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:44.686542      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:45.686652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:46.687439      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:47.687878      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:48.688683      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:49.688933      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:50.689980      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:51.690335      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:52.691223      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:53.691492      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:54.691652      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:55.691770      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:56.691872      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:57.693010      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:58.693266      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:54:59.693699      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:00.694989      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:01.695910      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:02.695978      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:03.696813      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:04.697261      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:05.697592      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:06.698371      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:07.698501      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:08.698726      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:09.698946      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:10.700053      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:11.700416      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:12.700678      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:13.700985      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:55:13.883405 25 util.go:396] Waiting for terminating namespaces to be deleted...
  I0427 07:55:13.886917 25 taints.go:144] Starting informer...
  STEP: Starting pods... @ 04/27/25 07:55:13.886
  I0427 07:55:14.101538 25 taints.go:463] Pod1 is running on node1. Tainting Node
  E0427 07:55:14.701275      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:15.702284      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:55:16.321477 25 taints.go:471] Pod2 is running on node1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/27/25 07:55:16.321
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/27/25 07:55:16.332
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/27/25 07:55:16.338
  E0427 07:55:16.702706      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:17.703648      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:18.704015      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:19.704493      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:20.704782      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:21.705290      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:55:22.473995 25 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0427 07:55:22.705810      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:23.706097      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:24.706670      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:25.706919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:26.707372      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:27.708173      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:28.708666      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:29.708919      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:30.709188      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:31.709596      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:32.710002      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:33.710286      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:34.710527      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:35.710858      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:36.711152      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:37.711478      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:38.711844      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:39.712454      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:40.713413      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:41.714366      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:55:42.520865 25 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/27/25 07:55:42.528
  I0427 07:55:42.532017 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-7621" for this suite. @ 04/27/25 07:55:42.534
• [88.667 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 04/27/25 07:55:42.536
  I0427 07:55:42.536969 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  STEP: Building a namespace api object, basename crd-webhook @ 04/27/25 07:55:42.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/27/25 07:55:42.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/27/25 07:55:42.546
  STEP: Setting up server cert @ 04/27/25 07:55:42.548
  E0427 07:55:42.715046      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/27/25 07:55:42.723
  STEP: Deploying the custom resource conversion webhook pod @ 04/27/25 07:55:42.728
  STEP: Wait for the deployment to be ready @ 04/27/25 07:55:42.742
  I0427 07:55:42.753544 25 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0427 07:55:43.715144      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:44.715627      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/27/25 07:55:44.761
  STEP: Verifying the service has paired with the endpoint @ 04/27/25 07:55:44.769
  E0427 07:55:45.715731      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:55:45.769974 25 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0427 07:55:45.776505 25 util.go:502] >>> kubeConfig: /tmp/kubeconfig-1441536696
  E0427 07:55:46.716362      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0427 07:55:47.716668      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/27/25 07:55:48.317
  STEP: Create a v2 custom resource @ 04/27/25 07:55:48.326
  STEP: List CRs in v1 @ 04/27/25 07:55:48.343
  STEP: List CRs in v2 @ 04/27/25 07:55:48.345
  E0427 07:55:48.717667      25 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0427 07:55:48.889910 25 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5763" for this suite. @ 04/27/25 07:55:48.897
• [6.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0427 07:55:48.906912 25 suites.go:34] Running AfterSuite actions on node 1
  I0427 07:55:48.906937 25 util.go:612] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
[ReportAfterSuite] PASSED [0.047 seconds]
------------------------------

Ran 411 of 6624 Specs in 6198.020 seconds
SUCCESS! -- 411 Passed | 0 Failed | 0 Pending | 6213 Skipped
PASS

Ginkgo ran 1 suite in 1h43m18.71619243s
Test Suite Passed
