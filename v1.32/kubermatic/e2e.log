Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1739902988 - will randomize all specs

Will run 411 of 6622 specs
Running in parallel across 2 processes
------------------------------
[ReportBeforeSuite] PASSED [0.000 seconds]
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
------------------------------
[SynchronizedBeforeSuite] PASSED [0.148 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69

  Timeline >>
  I0218 18:23:09.213443 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  I0218 18:23:09.214556 24 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0218 18:23:09.309087 24 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0218 18:23:09.330735 24 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  I0218 18:23:09.330774 24 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'envoy-agent' (0 seconds elapsed)
  I0218 18:23:09.330785 24 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'hcloud-csi-node' (0 seconds elapsed)
  I0218 18:23:09.330793 24 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0218 18:23:09.330800 24 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'node-local-dns' (0 seconds elapsed)
  I0218 18:23:09.330819 24 e2e.go:245] e2e test version: v1.32.1
  I0218 18:23:09.336853 24 e2e.go:254] kube-apiserver version: v1.32.1
  I0218 18:23:09.337938 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  I0218 18:23:09.361513 24 e2e.go:383] Cluster IP family: ipv4
  << Timeline
------------------------------
[SynchronizedBeforeSuite] PASSED [0.133 seconds]
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69

  Timeline >>
  I0218 18:23:09.357114 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:23:09.388086 26 e2e.go:383] Cluster IP family: ipv4
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.978 seconds]
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1753

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:09.55
  I0218 18:23:09.550402 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:23:09.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:09.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:09.613
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 02/18/25 18:23:09.627
  I0218 18:23:09.627130 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-5085 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0218 18:23:09.790598 26 builder.go:146] stderr: ""
  I0218 18:23:09.790666 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 02/18/25 18:23:09.79
  I0218 18:23:09.804850 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-5085 delete pods e2e-test-httpd-pod'
  I0218 18:23:11.484150 26 builder.go:146] stderr: ""
  I0218 18:23:11.484204 26 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0218 18:23:11.485195 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5085" for this suite. @ 02/18/25 18:23:11.51
  << Timeline
------------------------------
SSSS
------------------------------
• [4.071 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:11.534
  I0218 18:23:11.534269 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:23:11.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:11.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:11.603
  STEP: Setting up server cert @ 02/18/25 18:23:11.67
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:23:12.061
  STEP: Deploying the webhook pod @ 02/18/25 18:23:12.082
  STEP: Wait for the deployment to be ready @ 02/18/25 18:23:12.127
  I0218 18:23:12.157663 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:23:14.196
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:23:14.221
  I0218 18:23:15.221493 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 02/18/25 18:23:15.245
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 02/18/25 18:23:15.307
  STEP: Creating a configMap that should not be mutated @ 02/18/25 18:23:15.326
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 02/18/25 18:23:15.355
  STEP: Creating a configMap that should be mutated @ 02/18/25 18:23:15.374
  I0218 18:23:15.541179 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4374" for this suite. @ 02/18/25 18:23:15.565
  STEP: Destroying namespace "webhook-markers-1853" for this suite. @ 02/18/25 18:23:15.588
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.243 seconds]
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:15.615
  I0218 18:23:15.615167 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename limitrange @ 02/18/25 18:23:15.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:15.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:15.664
  STEP: Creating LimitRange "e2e-limitrange-s4nds" in namespace "limitrange-7457" @ 02/18/25 18:23:15.678
  STEP: Creating another limitRange in another namespace @ 02/18/25 18:23:15.692
  I0218 18:23:15.724463 26 limit_range.go:299] Namespace "e2e-limitrange-s4nds-3104" created
  I0218 18:23:15.724496 26 limit_range.go:300] Creating LimitRange "e2e-limitrange-s4nds" in namespace "e2e-limitrange-s4nds-3104"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-s4nds" @ 02/18/25 18:23:15.739
  I0218 18:23:15.751332 26 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-s4nds" in "limitrange-7457" namespace @ 02/18/25 18:23:15.751
  I0218 18:23:15.766014 26 limit_range.go:335] LimitRange "e2e-limitrange-s4nds" has been patched
  STEP: Delete LimitRange "e2e-limitrange-s4nds" by Collection with labelSelector: "e2e-limitrange-s4nds=patched" @ 02/18/25 18:23:15.766
  STEP: Confirm that the limitRange "e2e-limitrange-s4nds" has been deleted @ 02/18/25 18:23:15.791
  I0218 18:23:15.791786 26 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0218 18:23:15.801631 26 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-s4nds=patched"
  I0218 18:23:15.801663 26 limit_range.go:344] LimitRange "e2e-limitrange-s4nds" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-s4nds" @ 02/18/25 18:23:15.801
  I0218 18:23:15.810988 26 limit_range.go:350] Found 1 limitRange
  I0218 18:23:15.812050 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7457" for this suite. @ 02/18/25 18:23:15.825
  STEP: Destroying namespace "e2e-limitrange-s4nds-3104" for this suite. @ 02/18/25 18:23:15.84
  << Timeline
------------------------------
SS
------------------------------
• [8.262 seconds]
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:407

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:09.533
  I0218 18:23:09.533941 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename job @ 02/18/25 18:23:09.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:09.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:09.597
  STEP: Creating Indexed job @ 02/18/25 18:23:09.618
  STEP: Ensuring job reaches completions @ 02/18/25 18:23:09.64
  STEP: Ensuring pods with index for job exist @ 02/18/25 18:23:17.738
  I0218 18:23:17.755967 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9573" for this suite. @ 02/18/25 18:23:17.777
  << Timeline
------------------------------
SSSS
------------------------------
• [4.186 seconds]
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:15.861
  I0218 18:23:15.861907 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:23:15.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:15.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:15.901
  I0218 18:23:17.954326 26 delete.go:62] Deleting pod "var-expansion-0fb5aa50-4d25-4a50-9d6e-16b1d6989700" in namespace "var-expansion-5331"
  I0218 18:23:17.974067 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-0fb5aa50-4d25-4a50-9d6e-16b1d6989700" to be fully deleted
  I0218 18:23:20.000560 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5331" for this suite. @ 02/18/25 18:23:20.029
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.333 seconds]
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:17.801
  I0218 18:23:17.801600 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:23:17.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:17.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:17.875
  STEP: Creating configMap with name configmap-test-volume-d1d38712-21b0-4bdd-9f70-2e821f16b4b9 @ 02/18/25 18:23:17.91
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:23:17.936
  STEP: Saw pod success @ 02/18/25 18:23:22.006
  I0218 18:23:22.017113 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-63cb7ec4-f272-4002-913d-0662f19207c8 container configmap-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:23:22.055
  I0218 18:23:22.090817 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9082" for this suite. @ 02/18/25 18:23:22.117
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [4.255 seconds]
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:20.058
  I0218 18:23:20.058381 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename endpointslicemirroring @ 02/18/25 18:23:20.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:20.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:20.109
  STEP: mirroring a new custom Endpoint @ 02/18/25 18:23:20.158
  I0218 18:23:20.184535 26 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 02/18/25 18:23:22.196
  I0218 18:23:22.244998 26 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 02/18/25 18:23:24.255
  I0218 18:23:24.280939 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5901" for this suite. @ 02/18/25 18:23:24.298
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.157 seconds]
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:24.322
  I0218 18:23:24.322817 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 18:23:24.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:24.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:24.369
  STEP: apply creating a deployment @ 02/18/25 18:23:24.386
  I0218 18:23:24.438626 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4600" for this suite. @ 02/18/25 18:23:24.451
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.280 seconds]
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:22.147
  I0218 18:23:22.147319 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:23:22.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:22.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:22.199
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:23:22.215
  STEP: Saw pod success @ 02/18/25 18:23:26.294
  I0218 18:23:26.305916 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-c3d35953-43b5-4b06-b1cd-ec7f0641e5ba container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:23:26.325
  I0218 18:23:26.374542 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1482" for this suite. @ 02/18/25 18:23:26.408
  << Timeline
------------------------------
SSSSSS
------------------------------
• [3.297 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:26.434
  I0218 18:23:26.434611 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-runtime @ 02/18/25 18:23:26.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:26.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:26.494
  STEP: create the container @ 02/18/25 18:23:26.509
  W0218 18:23:26.534833      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 02/18/25 18:23:26.535
  STEP: get the container status @ 02/18/25 18:23:29.63
  STEP: the container should be terminated @ 02/18/25 18:23:29.642
  STEP: the termination message should be set @ 02/18/25 18:23:29.642
  I0218 18:23:29.642108 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 02/18/25 18:23:29.642
  I0218 18:23:29.685737 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1691" for this suite. @ 02/18/25 18:23:29.709
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.580 seconds]
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:29.741
  I0218 18:23:29.741464 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename validating-admission-policy @ 02/18/25 18:23:29.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:29.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:29.803
  STEP: getting /apis @ 02/18/25 18:23:29.844
  STEP: getting /apis/admissionregistration.k8s.io @ 02/18/25 18:23:29.864
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 02/18/25 18:23:29.871
  STEP: creating @ 02/18/25 18:23:29.878
  STEP: getting @ 02/18/25 18:23:29.928
  STEP: listing @ 02/18/25 18:23:29.938
  STEP: watching @ 02/18/25 18:23:29.951
  I0218 18:23:29.951112 24 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 02/18/25 18:23:29.958
  STEP: updating @ 02/18/25 18:23:29.975
  I0218 18:23:30.022665 24 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 02/18/25 18:23:30.022
  STEP: patching /status @ 02/18/25 18:23:30.034
  STEP: updating /status @ 02/18/25 18:23:30.061
  STEP: deleting @ 02/18/25 18:23:30.142
  STEP: deleting a collection @ 02/18/25 18:23:30.191
  I0218 18:23:30.256803 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5694" for this suite. @ 02/18/25 18:23:30.284
  << Timeline
------------------------------
SSS
------------------------------
• [1.195 seconds]
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:771

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:30.329
  I0218 18:23:30.329688 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 18:23:30.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:30.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:30.385
  I0218 18:23:30.411154 24 service_accounts.go:783] Got root ca configmap in namespace "svcaccounts-1318"
  I0218 18:23:30.430693 24 service_accounts.go:786] Deleted root ca configmap in namespace "svcaccounts-1318"
  STEP: waiting for a new root ca configmap created @ 02/18/25 18:23:30.93
  I0218 18:23:30.944004 24 service_accounts.go:800] Recreated root ca configmap in namespace "svcaccounts-1318"
  I0218 18:23:30.958276 24 service_accounts.go:811] Updated root ca configmap in namespace "svcaccounts-1318"
  STEP: waiting for the root ca configmap reconciled @ 02/18/25 18:23:31.459
  I0218 18:23:31.471656 24 service_accounts.go:829] Reconciled root ca configmap in namespace "svcaccounts-1318"
  I0218 18:23:31.472587 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1318" for this suite. @ 02/18/25 18:23:31.501
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [0.204 seconds]
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1855

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:31.536
  I0218 18:23:31.536882 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:23:31.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:31.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:31.593
  STEP: Starting the proxy @ 02/18/25 18:23:31.608
  I0218 18:23:31.609036 24 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-8328 proxy --unix-socket=/tmp/kubectl-proxy-unix2817220154/test'
  STEP: retrieving proxy /api/ output @ 02/18/25 18:23:31.687
  I0218 18:23:31.689487 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8328" for this suite. @ 02/18/25 18:23:31.718
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [7.205 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:31.751
  I0218 18:23:31.751471 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:23:31.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:31.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:31.809
  STEP: Setting up server cert @ 02/18/25 18:23:31.878
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:23:32.077
  STEP: Deploying the webhook pod @ 02/18/25 18:23:32.109
  STEP: Wait for the deployment to be ready @ 02/18/25 18:23:32.145
  I0218 18:23:32.184360 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:23:34.223
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:23:34.274
  I0218 18:23:35.275716 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0218 18:23:35.302328 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9563-crds.webhook.example.com via the AdmissionRegistration API @ 02/18/25 18:23:35.842
  STEP: Creating a custom resource while v1 is storage version @ 02/18/25 18:23:35.896
  STEP: Patching Custom Resource Definition to set v2 as storage @ 02/18/25 18:23:38.009
  STEP: Patching the custom resource while v2 is storage version @ 02/18/25 18:23:38.023
  I0218 18:23:38.873635 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-546" for this suite. @ 02/18/25 18:23:38.899
  STEP: Destroying namespace "webhook-markers-6403" for this suite. @ 02/18/25 18:23:38.926
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.260 seconds]
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:38.964
  I0218 18:23:38.964208 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename security-context-test @ 02/18/25 18:23:38.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:39.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:39.076
  I0218 18:23:43.183946 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8255" for this suite. @ 02/18/25 18:23:43.208
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.433 seconds]
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:43.242
  I0218 18:23:43.242636 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pv @ 02/18/25 18:23:43.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:43.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:43.294
  STEP: Creating initial PV and PVC @ 02/18/25 18:23:43.312
  I0218 18:23:43.312294 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-64" @ 02/18/25 18:23:43.357
  STEP: Listing PVCs in namespace "pv-64" @ 02/18/25 18:23:43.368
  STEP: Reading "pvc-6vn4n" Status @ 02/18/25 18:23:43.383
  STEP: Reading "pv-64-nx492" Status @ 02/18/25 18:23:43.395
  STEP: Patching "pvc-6vn4n" Status @ 02/18/25 18:23:43.408
  STEP: Patching "pv-64-nx492" Status @ 02/18/25 18:23:43.425
  STEP: Updating "pvc-6vn4n" Status @ 02/18/25 18:23:43.476
  STEP: Updating "pv-64-nx492" Status @ 02/18/25 18:23:43.55
  I0218 18:23:43.581357 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0218 18:23:43.581393 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-6vn4n"
  I0218 18:23:43.608073 24 pv.go:193] Deleting PersistentVolume "pv-64-nx492"
  I0218 18:23:43.631377 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-64" for this suite. @ 02/18/25 18:23:43.645
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.287 seconds]
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:43.694
  I0218 18:23:43.694104 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:23:43.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:43.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:43.748
  STEP: Creating configMap configmap-3928/configmap-test-4479f7f4-7c09-47f0-8523-4e70cdd5b3fc @ 02/18/25 18:23:43.768
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:23:43.787
  STEP: Saw pod success @ 02/18/25 18:23:47.855
  I0218 18:23:47.868269 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-6d7547b5-2a3f-4d19-bae3-cc022f1fbcee container env-test: <nil>
  STEP: delete the pod @ 02/18/25 18:23:47.894
  I0218 18:23:47.937995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3928" for this suite. @ 02/18/25 18:23:47.961
  << Timeline
------------------------------
• [4.271 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:47.983
  I0218 18:23:47.983521 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:23:47.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:48.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:48.033
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 02/18/25 18:23:48.05
  STEP: Saw pod success @ 02/18/25 18:23:52.131
  I0218 18:23:52.143349 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-b153e307-897a-4cac-9314-735d8f25f274 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:23:52.168
  I0218 18:23:52.211993 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-337" for this suite. @ 02/18/25 18:23:52.235
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [72.830 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:647

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:24.484
  I0218 18:23:24.484778 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:23:24.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:24.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:24.544
  STEP: Creating service test in namespace statefulset-7520 @ 02/18/25 18:23:24.56
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 02/18/25 18:23:24.574
  STEP: Creating stateful set ss in namespace statefulset-7520 @ 02/18/25 18:23:24.583
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7520 @ 02/18/25 18:23:24.599
  I0218 18:23:24.624551 26 wait.go:40] Found 0 stateful pods, waiting for 1
  I0218 18:23:34.612161 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 02/18/25 18:23:34.612
  I0218 18:23:34.621054 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:23:34.878147 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:23:34.878195 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:23:34.878209 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:23:34.889142 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0218 18:23:44.889798 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:23:44.889852 26 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0218 18:23:44.949121 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 9.999999289s
  I0218 18:23:45.962262 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 8.982502159s
  I0218 18:23:46.975203 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 7.969342669s
  I0218 18:23:47.985222 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 6.956525922s
  I0218 18:23:48.996539 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 5.945930168s
  I0218 18:23:50.028670 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 4.934862385s
  I0218 18:23:51.049593 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 3.902039147s
  I0218 18:23:52.064794 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 2.882172189s
  I0218 18:23:53.076148 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 1.866947599s
  I0218 18:23:54.087369 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 1 for another 855.09652ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7520 @ 02/18/25 18:23:55.087
  I0218 18:23:55.100537 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:23:55.316343 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:23:55.316414 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:23:55.316465 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:23:55.327709 26 wait.go:40] Found 1 stateful pods, waiting for 3
  I0218 18:24:05.328979 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:24:05.329023 26 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:24:05.329038 26 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 02/18/25 18:24:05.329
  STEP: Scale down will halt with unhealthy stateful pod @ 02/18/25 18:24:05.329
  I0218 18:24:05.354149 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:24:05.585707 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:24:05.585762 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:24:05.585782 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:24:05.585860 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:24:05.830268 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:24:05.830323 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:24:05.830381 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:24:05.830511 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:24:06.113015 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:24:06.113066 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:24:06.113087 26 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:24:06.113097 26 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0218 18:24:06.125080 26 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0218 18:24:16.142151 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:24:16.142189 26 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:24:16.142199 26 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:24:16.185203 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.99999953s
  I0218 18:24:17.201539 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.985437517s
  I0218 18:24:18.218995 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.96933987s
  I0218 18:24:19.240239 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.951580318s
  I0218 18:24:20.258009 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.930515736s
  I0218 18:24:21.278915 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.912467531s
  I0218 18:24:22.298984 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.892554718s
  I0218 18:24:23.316816 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.872431948s
  I0218 18:24:24.335355 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.854564103s
  I0218 18:24:25.355788 26 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 835.094503ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7520 @ 02/18/25 18:24:26.356
  I0218 18:24:26.374672 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:24:26.640034 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:24:26.640104 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:24:26.640124 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:24:26.640205 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:24:26.893817 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:24:26.893872 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:24:26.893891 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:24:26.894007 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-7520 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:24:27.170845 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:24:27.170887 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:24:27.170917 26 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:24:27.170933 26 rest.go:152] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 02/18/25 18:24:37.194
  I0218 18:24:37.195061 26 statefulset.go:138] Deleting all statefulset in ns statefulset-7520
  I0218 18:24:37.208027 26 rest.go:152] Scaling statefulset ss to 0
  I0218 18:24:37.227795 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:24:37.238958 26 rest.go:90] Deleting statefulset ss
  I0218 18:24:37.275988 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7520" for this suite. @ 02/18/25 18:24:37.3
  << Timeline
------------------------------
• [0.226 seconds]
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:24:37.318
  I0218 18:24:37.318128 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename runtimeclass @ 02/18/25 18:24:37.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:24:37.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:24:37.366
  I0218 18:24:37.483627 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6937" for this suite. @ 02/18/25 18:24:37.506
  << Timeline
------------------------------
SS
------------------------------
• [37.332 seconds]
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:24:37.547
  I0218 18:24:37.547651 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:24:37.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:24:37.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:24:37.613
  STEP: creating the pod @ 02/18/25 18:24:37.629
  STEP: waiting for pod running @ 02/18/25 18:24:37.668
  STEP: creating a file in subpath @ 02/18/25 18:24:39.691
  I0218 18:24:39.702841 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-297 PodName:var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:24:39.702876 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:24:39.702980 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/var-expansion-297/pods/var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 02/18/25 18:24:39.848
  I0218 18:24:39.861878 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-297 PodName:var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:24:39.861922 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:24:39.861995 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/var-expansion-297/pods/var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 02/18/25 18:24:40.01
  I0218 18:24:40.547600 26 pod_client.go:173] Successfully updated pod "var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9"
  STEP: waiting for annotated pod running @ 02/18/25 18:24:40.547
  STEP: deleting the pod gracefully @ 02/18/25 18:24:40.557
  I0218 18:24:40.557651 26 delete.go:62] Deleting pod "var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9" in namespace "var-expansion-297"
  I0218 18:24:40.579500 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-68039d67-6394-41ce-8b12-b9b44373cba9" to be fully deleted
  I0218 18:25:14.824734 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-297" for this suite. @ 02/18/25 18:25:14.857
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.983 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:25:14.9
  I0218 18:25:14.900777 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:25:14.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:25:14.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:25:14.98
  STEP: Setting up server cert @ 02/18/25 18:25:15.053
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:25:15.419
  STEP: Deploying the webhook pod @ 02/18/25 18:25:15.437
  STEP: Wait for the deployment to be ready @ 02/18/25 18:25:15.471
  I0218 18:25:15.507804 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:25:17.549
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:25:17.586
  I0218 18:25:18.586484 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 02/18/25 18:25:18.61
  STEP: create a configmap that should be updated by the webhook @ 02/18/25 18:25:18.661
  I0218 18:25:18.820887 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2075" for this suite. @ 02/18/25 18:25:18.845
  STEP: Destroying namespace "webhook-markers-4166" for this suite. @ 02/18/25 18:25:18.863
  << Timeline
------------------------------
• [105.309 seconds]
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:23:52.29
  I0218 18:23:52.290227 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:23:52.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:23:52.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:23:52.348
  STEP: Creating resourceQuota "e2e-rq-status-w65jw" @ 02/18/25 18:23:52.379
  I0218 18:23:52.404565 24 resource_quota.go:1102] Resource quota "e2e-rq-status-w65jw" reports spec: hard cpu limit of 500m
  I0218 18:23:52.404590 24 resource_quota.go:1104] Resource quota "e2e-rq-status-w65jw" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-w65jw" /status @ 02/18/25 18:23:52.404
  STEP: Confirm /status for "e2e-rq-status-w65jw" resourceQuota via watch @ 02/18/25 18:23:52.431
  I0218 18:23:52.439637 24 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-w65jw" in namespace "resourcequota-8986" with hard status: v1.ResourceList(nil)
  I0218 18:23:52.439751 24 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-w65jw" in namespace "resourcequota-8986" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0218 18:23:52.439765 24 resource_quota.go:1141] ResourceQuota "e2e-rq-status-w65jw" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 02/18/25 18:23:52.454
  I0218 18:23:52.465905 24 resource_quota.go:1152] Resource quota "e2e-rq-status-w65jw" reports spec: hard cpu limit of 1
  I0218 18:23:52.465928 24 resource_quota.go:1153] Resource quota "e2e-rq-status-w65jw" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-w65jw" /status @ 02/18/25 18:23:52.465
  STEP: Confirm /status for "e2e-rq-status-w65jw" resourceQuota via watch @ 02/18/25 18:23:52.485
  I0218 18:23:52.492840 24 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-w65jw" in namespace "resourcequota-8986" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0218 18:23:52.492933 24 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-w65jw" in namespace "resourcequota-8986" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0218 18:23:52.492950 24 resource_quota.go:1185] ResourceQuota "e2e-rq-status-w65jw" /status was patched
  STEP: Get "e2e-rq-status-w65jw" /status @ 02/18/25 18:23:52.492
  I0218 18:23:52.505004 24 resource_quota.go:1196] Resourcequota "e2e-rq-status-w65jw" reports status: hard cpu of 1
  I0218 18:23:52.505035 24 resource_quota.go:1198] Resourcequota "e2e-rq-status-w65jw" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-w65jw" /status before checking Spec is unchanged @ 02/18/25 18:23:52.518
  I0218 18:23:52.533299 24 resource_quota.go:1218] Resourcequota "e2e-rq-status-w65jw" reports status: hard cpu of 2
  I0218 18:23:52.533336 24 resource_quota.go:1220] Resourcequota "e2e-rq-status-w65jw" reports status: hard memory of 2Gi
  I0218 18:23:52.540095 24 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-w65jw" in namespace "resourcequota-8986" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0218 18:23:52.551111 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353f740), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353f770), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353f7a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:23:57.552105 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353f890), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353f8c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353f8f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:02.557882 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9b78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9bc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9c08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:07.554901 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa6ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa6f00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa6f30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:12.557548 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9d10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:17.551767 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9e90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9ef0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0038d9f50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:22.554067 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b920f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:27.558352 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b922a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b922d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:32.553527 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b923d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92420), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:37.561625 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b925a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b925d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:42.556928 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fa10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fa40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fa70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:47.552663 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fb60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fb90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fbc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:52.550140 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b926d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:24:57.552028 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b928a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:02.552258 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b929a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b929d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b92a08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:07.551701 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fcb0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fce0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00353fd10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:12.559950 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b08060), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b08090), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b080c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:17.555523 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b081c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b081f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b08228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:22.551175 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa6048), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa6078), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa60c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:27.555552 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa6198), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa61c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003aa61f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:32.551805 24 resource_quota.go:1263] ResourceQuota "e2e-rq-status-w65jw" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-w65jw", GenerateName:"", Namespace:"resourcequota-8986", SelfLink:"", UID:"74fd8991-5941-4e66-8206-87ac2bff7e98", ResourceVersion:"190590", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-w65jw"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b08360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b08390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 18, 23, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b083c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0218 18:25:37.551491 24 resource_quota.go:1260] ResourceQuota "e2e-rq-status-w65jw" Spec was unchanged and /status reset
  I0218 18:25:37.552408 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8986" for this suite. @ 02/18/25 18:25:37.578
  << Timeline
------------------------------
S
------------------------------
• [4.321 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:25:37.603
  I0218 18:25:37.603154 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:25:37.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:25:37.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:25:37.657
  STEP: Creating configMap with name projected-configmap-test-volume-map-44b6fe9c-2801-4950-87dc-92c1e3c579c0 @ 02/18/25 18:25:37.671
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:25:37.69
  STEP: Saw pod success @ 02/18/25 18:25:41.769
  I0218 18:25:41.781007 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-projected-configmaps-bef25684-b5f4-4f37-8ce5-6958c1df4404 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:25:41.837
  I0218 18:25:41.882940 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4210" for this suite. @ 02/18/25 18:25:41.907
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.335 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:25:41.94
  I0218 18:25:41.940247 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:25:41.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:25:41.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:25:42.003
  STEP: Creating configMap with name projected-configmap-test-volume-c361d98b-20f7-4cf0-ae17-b4fcc3e448c4 @ 02/18/25 18:25:42.02
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:25:42.036
  STEP: Saw pod success @ 02/18/25 18:25:46.106
  I0218 18:25:46.118253 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-configmaps-10638c3c-dfff-48c9-9cd2-3221fe285794 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:25:46.176
  I0218 18:25:46.225808 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4153" for this suite. @ 02/18/25 18:25:46.252
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [3.232 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:25:46.29
  I0218 18:25:46.290346 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-runtime @ 02/18/25 18:25:46.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:25:46.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:25:46.337
  STEP: create the container @ 02/18/25 18:25:46.354
  W0218 18:25:46.379884      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 02/18/25 18:25:46.38
  STEP: get the container status @ 02/18/25 18:25:49.434
  STEP: the container should be terminated @ 02/18/25 18:25:49.445
  STEP: the termination message should be set @ 02/18/25 18:25:49.445
  I0218 18:25:49.445172 24 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 02/18/25 18:25:49.445
  I0218 18:25:49.484299 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4118" for this suite. @ 02/18/25 18:25:49.506
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.600 seconds]
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:25:49.54
  I0218 18:25:49.540470 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:25:49.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:25:49.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:25:49.595
  STEP: creating service in namespace services-5091 @ 02/18/25 18:25:49.614
  STEP: creating service affinity-clusterip in namespace services-5091 @ 02/18/25 18:25:49.614
  STEP: creating replication controller affinity-clusterip in namespace services-5091 @ 02/18/25 18:25:49.655
  I0218 18:25:49.671209      24 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5091, replica count: 3
  I0218 18:25:52.722779      24 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:25:52.748723 24 resource.go:361] Creating new exec pod
  I0218 18:25:55.805414 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-5091 exec execpod-affinitycgcrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0218 18:25:56.058848 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.240.29.179) 80 port [tcp/http] succeeded!\n"
  I0218 18:25:56.058913 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:25:56.059040 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-5091 exec execpod-affinitycgcrj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.29.179 80'
  I0218 18:25:56.296508 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.29.179 80\nConnection to 10.240.29.179 80 port [tcp/http] succeeded!\n"
  I0218 18:25:56.296569 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:25:56.296672 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-5091 exec execpod-affinitycgcrj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.29.179:80/ ; done'
  I0218 18:25:56.625661 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.179:80/\n"
  I0218 18:25:56.625743 24 builder.go:147] stdout: "\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl\naffinity-clusterip-qx8bl"
  I0218 18:25:56.625767 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625780 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625791 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625799 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625813 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625826 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625838 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625851 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625867 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625874 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625881 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625888 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625895 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625901 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625908 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.625918 24 service.go:242] Received response from host: affinity-clusterip-qx8bl
  I0218 18:25:56.626386 24 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5091, will wait for the garbage collector to delete the pods @ 02/18/25 18:25:56.653
  I0218 18:25:56.733892 24 resources.go:139] Deleting ReplicationController affinity-clusterip took: 19.49825ms
  I0218 18:25:56.834480 24 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.582224ms
  I0218 18:26:00.087785 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5091" for this suite. @ 02/18/25 18:26:00.118
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.809 seconds]
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:00.146
  I0218 18:26:00.146538 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:26:00.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:00.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:00.204
  STEP: creating the pod @ 02/18/25 18:26:00.221
  STEP: setting up watch @ 02/18/25 18:26:00.221
  STEP: submitting the pod to kubernetes @ 02/18/25 18:26:00.337
  STEP: verifying the pod is in kubernetes @ 02/18/25 18:26:00.364
  STEP: verifying pod creation was observed @ 02/18/25 18:26:00.393
  STEP: deleting the pod gracefully @ 02/18/25 18:26:02.441
  STEP: verifying pod deletion was observed @ 02/18/25 18:26:02.472
  I0218 18:26:04.908516 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7411" for this suite. @ 02/18/25 18:26:04.932
  << Timeline
------------------------------
• [63.385 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:25:18.885
  I0218 18:25:18.885827 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-watch @ 02/18/25 18:25:18.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:25:18.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:25:18.939
  I0218 18:25:18.953520 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Creating first CR  @ 02/18/25 18:25:21.55
  I0218 18:25:21.562758 26 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-02-18T18:25:21Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-02-18T18:25:21Z]] name:name1 resourceVersion:191266 uid:a28659a8-6997-48da-917f-920c4dd83dcd] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 02/18/25 18:25:31.563
  I0218 18:25:31.580730 26 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-02-18T18:25:31Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-02-18T18:25:31Z]] name:name2 resourceVersion:191325 uid:755d372a-3c0d-4cc7-b3a9-984afbda8e94] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 02/18/25 18:25:41.581
  I0218 18:25:41.606384 26 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-02-18T18:25:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-02-18T18:25:41Z]] name:name1 resourceVersion:191382 uid:a28659a8-6997-48da-917f-920c4dd83dcd] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 02/18/25 18:25:51.606
  I0218 18:25:51.624624 26 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-02-18T18:25:31Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-02-18T18:25:51Z]] name:name2 resourceVersion:191551 uid:755d372a-3c0d-4cc7-b3a9-984afbda8e94] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 02/18/25 18:26:01.625
  I0218 18:26:01.646975 26 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-02-18T18:25:21Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-02-18T18:25:41Z]] name:name1 resourceVersion:191665 uid:a28659a8-6997-48da-917f-920c4dd83dcd] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 02/18/25 18:26:11.647
  I0218 18:26:11.670940 26 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-02-18T18:25:31Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-02-18T18:25:51Z]] name:name2 resourceVersion:191772 uid:755d372a-3c0d-4cc7-b3a9-984afbda8e94] num:map[num1:9223372036854775807 num2:1000000]]}
  I0218 18:26:22.230561 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-6192" for this suite. @ 02/18/25 18:26:22.254
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.974 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:22.309
  I0218 18:26:22.309938 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:26:22.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:22.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:22.357
  STEP: Setting up server cert @ 02/18/25 18:26:22.425
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:26:22.589
  STEP: Deploying the webhook pod @ 02/18/25 18:26:22.603
  STEP: Wait for the deployment to be ready @ 02/18/25 18:26:22.627
  I0218 18:26:22.658579 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:26:24.693
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:26:24.719
  I0218 18:26:25.720135 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0218 18:26:25.742133 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 02/18/25 18:26:26.274
  STEP: Creating a custom resource that should be denied by the webhook @ 02/18/25 18:26:26.341
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 02/18/25 18:26:28.397
  STEP: Updating the custom resource with disallowed data should be denied @ 02/18/25 18:26:28.417
  STEP: Deleting the custom resource should be denied @ 02/18/25 18:26:28.449
  STEP: Remove the offending key and value from the custom resource data @ 02/18/25 18:26:28.474
  STEP: Deleting the updated custom resource should be successful @ 02/18/25 18:26:28.514
  I0218 18:26:29.228250 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4294" for this suite. @ 02/18/25 18:26:29.249
  STEP: Destroying namespace "webhook-markers-9528" for this suite. @ 02/18/25 18:26:29.264
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
↺ [FLAKEY TEST - TOOK 2 ATTEMPTS TO PASS] [15.653 seconds]
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:29.315
  I0218 18:26:29.315215 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename watch @ 02/18/25 18:26:29.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:29.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:29.359
  STEP: creating a watch on configmaps with a certain label @ 02/18/25 18:26:29.373
  STEP: creating a new configmap @ 02/18/25 18:26:32.385
  STEP: modifying the configmap once @ 02/18/25 18:26:32.398
  STEP: changing the label value of the configmap @ 02/18/25 18:26:32.422
  STEP: Expecting to observe a delete notification for the watched object @ 02/18/25 18:26:32.449
  I0218 18:26:32.449214 26 watch.go:431] Got : ERROR &Status{ListMeta:ListMeta{SelfLink:,ResourceVersion:,Continue:,RemainingItemCount:nil,},Status:Failure,Message:Timeout: Too large resource version: 191920, current: 191918,Reason:Timeout,Details:&StatusDetails{Name:,Group:,Kind:,Causes:[]StatusCause{StatusCause{Type:ResourceVersionTooLarge,Message:Too large resource version,Field:,},},RetryAfterSeconds:1,UID:,},Code:504,}
  [FAILED] in [It] - k8s.io/kubernetes/test/e2e/apimachinery/watch.go:433 @ 02/18/25 18:26:32.449
  I0218 18:26:32.450332 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: dump namespace information after failure @ 02/18/25 18:26:32.475
  STEP: Collecting events from namespace "watch-6258". @ 02/18/25 18:26:32.475
  STEP: Found 0 events. @ 02/18/25 18:26:32.485
  I0218 18:26:32.497270 26 resource.go:168] POD  NODE  PHASE  GRACE  CONDITIONS
  I0218 18:26:32.497298 26 resource.go:178] 
  I0218 18:26:32.508142 26 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-bw8qq
  I0218 18:26:32.527505 26 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-bw8qq    d4090fd0-4999-4918-a78b-48f9beb10564 189332 0 2025-02-18 14:38:08 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/e2e-f75a9edb-3796-4c12-9c61-a798d518cf9d:95 kubernetes.io/hostname:admiring-kalam-9d8f4776-bw8qq kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:f0fc4a63-9478-4713-a141-989662c55aa5 node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:188.245.32.195 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-bw8qq csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283779"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"92:f2:8f:1e:12:5b"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:188.245.32.195 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {kube-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.3.0/24\"":{}}}} } {kubelet Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {machine-controller Update v1 2025-02-18 14:38:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:38:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {e2e.test Update v1 2025-02-18 18:21:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:kubernetes.io/e2e-f75a9edb-3796-4c12-9c61-a798d518cf9d":{}}}} } {kubelet Update v1 2025-02-18 18:21:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.3.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283779,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.3.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:38:48 +0000 UTC,LastTransitionTime:2025-02-18 14:38:48 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:21:48 +0000 UTC,LastTransitionTime:2025-02-18 14:38:08 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:21:48 +0000 UTC,LastTransitionTime:2025-02-18 14:38:08 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:21:48 +0000 UTC,LastTransitionTime:2025-02-18 14:38:08 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:21:48 +0000 UTC,LastTransitionTime:2025-02-18 14:38:33 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:188.245.32.195,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-bw8qq,},NodeAddress{Type:InternalIP,Address:10.0.0.3,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:a41331d8913e4af58a60ed43f81773a5,SystemUUID:a41331d8-913e-4af5-8a60-ed43f81773a5,BootID:b458d9ec-ce84-4f5a-acc8-18d8ae2a9938,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:24aaf2626d6b27864c29de2097e8bbb840b3a414271bf7c8995e431e47d8408e registry.k8s.io/e2e-test-images/jessie-dnsutils:1.7],SizeBytes:112030336,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[registry.k8s.io/conformance@sha256:9d8db58a6401a33017934ace3c609d85663e253242bf93122174be20af612d1d registry.k8s.io/conformance:v1.32.1],SizeBytes:86333002,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5 registry.k8s.io/etcd:3.5.16-0],SizeBytes:57680541,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nautilus@sha256:80ba6c8c44f9623f06e868a1aa66026c8ec438ad814f9ec95e9333b415fe3550 registry.k8s.io/e2e-test-images/nautilus:1.7],SizeBytes:49641698,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:3fe7acf013d1264ffded116b80a73dc129a449b0fccdb8d21af8279f2233f36e registry.k8s.io/e2e-test-images/httpd:2.4.39-4],SizeBytes:41901587,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/sample-apiserver@sha256:19d4ecf1e0731b9ea55aca9c070d520f68b96ed0defbcc0e4eefe97b3d663ca3 registry.k8s.io/e2e-test-images/sample-apiserver:1.29.2],SizeBytes:39672997,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nonewprivs@sha256:8ac1264691820febacf3aea5d152cbde6d10685731ec14966a9401c6f47a68ac registry.k8s.io/e2e-test-images/nonewprivs:1.3],SizeBytes:3263463,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:26:32.527534 26 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-bw8qq
  I0218 18:26:32.537591 26 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-bw8qq
  I0218 18:26:32.582504 26 dump.go:128] kube-system/kube-proxy-7jqlc started at 2025-02-18 14:38:09 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.582530 26 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:26:32.582546 26 dump.go:128] kube-system/hcloud-csi-node-9v5nh started at 2025-02-18 14:38:09 +0000 UTC (0+3 container statuses recorded)
  I0218 18:26:32.582557 26 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:26:32.582567 26 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:26:32.582576 26 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:26:32.582587 26 dump.go:128] kube-system/envoy-agent-qqggb started at 2025-02-18 14:38:09 +0000 UTC (1+2 container statuses recorded)
  I0218 18:26:32.582598 26 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:26:32.582606 26 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:26:32.582616 26 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:26:32.582625 26 dump.go:128] kube-system/canal-pjv2d started at 2025-02-18 14:38:09 +0000 UTC (2+2 container statuses recorded)
  I0218 18:26:32.582634 26 dump.go:130] 	Init container install-cni ready: true, restart count 2
  I0218 18:26:32.582648 26 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:26:32.582658 26 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:26:32.582665 26 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:26:32.582675 26 dump.go:128] conformance/e2e-conformance-test started at 2025-02-18 18:23:07 +0000 UTC (0+2 container statuses recorded)
  I0218 18:26:32.582684 26 dump.go:134] 	Container conformance-container ready: true, restart count 0
  I0218 18:26:32.582694 26 dump.go:134] 	Container output-container ready: true, restart count 0
  I0218 18:26:32.582704 26 dump.go:128] kube-system/node-local-dns-txbgn started at 2025-02-18 14:38:09 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.582715 26 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:26:32.685851 26 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-bw8qq
  I0218 18:26:32.685882 26 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-dp7t2
  I0218 18:26:32.696354 26 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-dp7t2    77e0bbe2-5f20-44d9-a95b-3d4ef472dc70 191054 0 2025-02-18 14:38:06 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/hostname:admiring-kalam-9d8f4776-dp7t2 kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:c4cee83e-96e7-42fe-abc3-9c4005ab817b node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:138.199.204.83 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-dp7t2 csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283799"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"fe:c8:76:0c:72:8d"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:138.199.204.83 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {kube-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.1.0/24\"":{}}}} } {kubelet Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {machine-controller Update v1 2025-02-18 14:38:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:38:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {kubelet Update v1 2025-02-18 18:24:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.1.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283799,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.1.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:38:43 +0000 UTC,LastTransitionTime:2025-02-18 14:38:43 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:24:47 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:24:47 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:24:47 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:24:47 +0000 UTC,LastTransitionTime:2025-02-18 14:38:30 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:138.199.204.83,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-dp7t2,},NodeAddress{Type:InternalIP,Address:10.0.0.5,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:de13497e573a42b9a6ec6ebee3ca08ae,SystemUUID:de13497e-573a-42b9-a6ec-6ebee3ca08ae,BootID:66e51c7f-cb11-416a-9196-b66dbabed2aa,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:24aaf2626d6b27864c29de2097e8bbb840b3a414271bf7c8995e431e47d8408e registry.k8s.io/e2e-test-images/jessie-dnsutils:1.7],SizeBytes:112030336,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[registry.k8s.io/conformance@sha256:9d8db58a6401a33017934ace3c609d85663e253242bf93122174be20af612d1d registry.k8s.io/conformance:v1.32.1],SizeBytes:86333002,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5 registry.k8s.io/etcd:3.5.16-0],SizeBytes:57680541,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nautilus@sha256:80ba6c8c44f9623f06e868a1aa66026c8ec438ad814f9ec95e9333b415fe3550 registry.k8s.io/e2e-test-images/nautilus:1.7],SizeBytes:49641698,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:3fe7acf013d1264ffded116b80a73dc129a449b0fccdb8d21af8279f2233f36e registry.k8s.io/e2e-test-images/httpd:2.4.39-4],SizeBytes:41901587,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/sample-apiserver@sha256:19d4ecf1e0731b9ea55aca9c070d520f68b96ed0defbcc0e4eefe97b3d663ca3 registry.k8s.io/e2e-test-images/sample-apiserver:1.29.2],SizeBytes:39672997,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:26:32.696501 26 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-dp7t2
  I0218 18:26:32.715270 26 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-dp7t2
  I0218 18:26:32.744026 26 dump.go:128] kube-system/canal-4pjrc started at 2025-02-18 14:38:08 +0000 UTC (2+2 container statuses recorded)
  I0218 18:26:32.744064 26 dump.go:130] 	Init container install-cni ready: true, restart count 2
  I0218 18:26:32.744076 26 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:26:32.744087 26 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:26:32.744095 26 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:26:32.744107 26 dump.go:128] kube-system/envoy-agent-8zr84 started at 2025-02-18 14:38:08 +0000 UTC (1+2 container statuses recorded)
  I0218 18:26:32.744116 26 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:26:32.744126 26 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:26:32.744137 26 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:26:32.744148 26 dump.go:128] kube-system/hcloud-csi-node-xmg4j started at 2025-02-18 14:38:08 +0000 UTC (0+3 container statuses recorded)
  I0218 18:26:32.744157 26 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:26:32.744166 26 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:26:32.744176 26 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:26:32.744186 26 dump.go:128] kube-system/kube-proxy-r5hhd started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.744194 26 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:26:32.744205 26 dump.go:128] kube-system/node-local-dns-j6zp9 started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.744212 26 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:26:32.859151 26 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-dp7t2
  I0218 18:26:32.859188 26 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-dzdlc
  I0218 18:26:32.874242 26 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-dzdlc    8fe170d9-5a0b-405c-896b-9b708fa5c2df 190701 0 2025-02-18 14:38:00 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/hostname:admiring-kalam-9d8f4776-dzdlc kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:c91325ba-1278-4fe7-b5e8-8170b1e29f2d node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:128.140.44.25 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-dzdlc csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283765"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"82:80:27:38:bc:6a"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:128.140.44.25 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{kubelet Update v1 2025-02-18 14:38:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:01 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {kube-controller-manager Update v1 2025-02-18 14:38:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.0.0/24\"":{}}}} } {machine-controller Update v1 2025-02-18 14:38:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:39:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {kubelet Update v1 2025-02-18 18:24:05 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.0.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283765,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.0.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:39:04 +0000 UTC,LastTransitionTime:2025-02-18 14:39:04 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:24:05 +0000 UTC,LastTransitionTime:2025-02-18 14:38:00 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:24:05 +0000 UTC,LastTransitionTime:2025-02-18 14:38:00 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:24:05 +0000 UTC,LastTransitionTime:2025-02-18 14:38:00 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:24:05 +0000 UTC,LastTransitionTime:2025-02-18 14:38:44 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:128.140.44.25,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-dzdlc,},NodeAddress{Type:InternalIP,Address:10.0.0.2,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:9808e0d02d844e98a379a2e3936b9f80,SystemUUID:9808e0d0-2d84-4e98-a379-a2e3936b9f80,BootID:af255d7d-025c-4d7e-9be2-c87d270442d9,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:24aaf2626d6b27864c29de2097e8bbb840b3a414271bf7c8995e431e47d8408e registry.k8s.io/e2e-test-images/jessie-dnsutils:1.7],SizeBytes:112030336,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[registry.k8s.io/conformance@sha256:9d8db58a6401a33017934ace3c609d85663e253242bf93122174be20af612d1d registry.k8s.io/conformance:v1.32.1],SizeBytes:86333002,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5 registry.k8s.io/etcd:3.5.16-0],SizeBytes:57680541,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nautilus@sha256:80ba6c8c44f9623f06e868a1aa66026c8ec438ad814f9ec95e9333b415fe3550 registry.k8s.io/e2e-test-images/nautilus:1.7],SizeBytes:49641698,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:3fe7acf013d1264ffded116b80a73dc129a449b0fccdb8d21af8279f2233f36e registry.k8s.io/e2e-test-images/httpd:2.4.39-4],SizeBytes:41901587,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/sample-apiserver@sha256:19d4ecf1e0731b9ea55aca9c070d520f68b96ed0defbcc0e4eefe97b3d663ca3 registry.k8s.io/e2e-test-images/sample-apiserver:1.29.2],SizeBytes:39672997,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nonewprivs@sha256:8ac1264691820febacf3aea5d152cbde6d10685731ec14966a9401c6f47a68ac registry.k8s.io/e2e-test-images/nonewprivs:1.3],SizeBytes:3263463,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:26:32.874318 26 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-dzdlc
  I0218 18:26:32.891015 26 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-dzdlc
  I0218 18:26:32.924792 26 dump.go:128] kube-system/node-local-dns-6flf8 started at 2025-02-18 14:38:01 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.924820 26 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:26:32.924834 26 dump.go:128] kube-system/kube-proxy-g6w79 started at 2025-02-18 14:38:01 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.924843 26 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:26:32.924854 26 dump.go:128] kube-system/hcloud-csi-node-njgf6 started at 2025-02-18 14:38:01 +0000 UTC (0+3 container statuses recorded)
  I0218 18:26:32.924864 26 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:26:32.924873 26 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:26:32.924882 26 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:26:32.924892 26 dump.go:128] kube-system/envoy-agent-47nm9 started at 2025-02-18 14:38:01 +0000 UTC (1+2 container statuses recorded)
  I0218 18:26:32.924902 26 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:26:32.924911 26 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:26:32.924918 26 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:26:32.924927 26 dump.go:128] kube-system/canal-k5hdp started at 2025-02-18 14:38:01 +0000 UTC (2+2 container statuses recorded)
  I0218 18:26:32.924936 26 dump.go:130] 	Init container install-cni ready: true, restart count 1
  I0218 18:26:32.924944 26 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:26:32.924953 26 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:26:32.924962 26 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:26:32.924973 26 dump.go:128] configmap-6539/pod-configmaps-9493d7be-4ed0-4e89-a40c-c6d512158f7e started at 2025-02-18 18:26:05 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:32.924980 26 dump.go:134] 	Container agnhost-container ready: true, restart count 0
  I0218 18:26:33.025708 26 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-dzdlc
  I0218 18:26:33.025742 26 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-qvphf
  I0218 18:26:33.038585 26 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-qvphf    f098ea70-2415-436e-be0b-9ba91dbb5346 189396 0 2025-02-18 14:38:06 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/hostname:admiring-kalam-9d8f4776-qvphf kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:aa8189e3-d372-4afd-a5d5-52f8e1bf6332 node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:94.130.226.111 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-qvphf csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283787"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"b6:25:46:43:c7:aa"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:94.130.226.111 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{kube-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.2.0/24\"":{}}}} } {kubelet Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:07 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {machine-controller Update v1 2025-02-18 14:38:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:38:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {kubelet Update v1 2025-02-18 18:21:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.2.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283787,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.2.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:38:44 +0000 UTC,LastTransitionTime:2025-02-18 14:38:44 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:21:55 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:21:55 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:21:55 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:21:55 +0000 UTC,LastTransitionTime:2025-02-18 14:38:29 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:94.130.226.111,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-qvphf,},NodeAddress{Type:InternalIP,Address:10.0.0.4,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:f5aef8dc128c47d1b552a02823b82c5b,SystemUUID:f5aef8dc-128c-47d1-b552-a02823b82c5b,BootID:3fcbd55d-c9fe-4979-afd5-d54ae7a98ebe,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[quay.io/calico/kube-controllers@sha256:44acab15d22ed702aec4deca59bdc15fdddc1da49b865a370d3978fcf5730569 quay.io/calico/kube-controllers:v3.29.1],SizeBytes:35634862,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-attacher@sha256:a399393ff5bd156277c56bae0c08389b1a1b95b7fd6ea44a316ce55e0dd559d7 registry.k8s.io/sig-storage/csi-attacher:v4.8.0],SizeBytes:32231444,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-provisioner@sha256:672e45d6a55678abc1d102de665b5cbd63848e75dc7896f238c8eaaf3c7d322f registry.k8s.io/sig-storage/csi-provisioner:v5.1.0],SizeBytes:32167411,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-resizer@sha256:ab774734705a906561e15b67f6a96538f3ad520335d636f793aaafe87a3b5200 registry.k8s.io/sig-storage/csi-resizer:v1.12.0],SizeBytes:30896583,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/kas-network-proxy/proxy-agent@sha256:a61124c6a86c3a2e1212858a4d82958f727e1bca4fb7e324fde2e7b16f0c6c15 registry.k8s.io/kas-network-proxy/proxy-agent:v0.31.0],SizeBytes:28932086,},ContainerImage{Names:[registry.k8s.io/metrics-server/metrics-server@sha256:1c0419326500f1704af580d12a579671b2c3a06a8aa918cd61d0a35fb2d6b3ce registry.k8s.io/metrics-server/metrics-server:v0.7.0],SizeBytes:19435023,},ContainerImage{Names:[registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e registry.k8s.io/coredns/coredns:v1.10.1],SizeBytes:16190758,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:26:33.038623 26 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-qvphf
  I0218 18:26:33.050550 26 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-qvphf
  I0218 18:26:33.108781 26 dump.go:128] kube-system/hcloud-csi-node-rz8p6 started at 2025-02-18 14:38:08 +0000 UTC (0+3 container statuses recorded)
  I0218 18:26:33.108841 26 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:26:33.108860 26 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:26:33.108875 26 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:26:33.108904 26 dump.go:128] kube-system/node-local-dns-2qvpq started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.108921 26 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:26:33.108947 26 dump.go:128] kube-system/kube-proxy-9khcg started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.108965 26 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:26:33.108987 26 dump.go:128] kube-system/canal-k7jmz started at 2025-02-18 14:38:08 +0000 UTC (2+2 container statuses recorded)
  I0218 18:26:33.109012 26 dump.go:130] 	Init container install-cni ready: true, restart count 2
  I0218 18:26:33.109029 26 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:26:33.109048 26 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:26:33.109065 26 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:26:33.109081 26 dump.go:128] kube-system/envoy-agent-mtdqj started at 2025-02-18 14:38:08 +0000 UTC (1+2 container statuses recorded)
  I0218 18:26:33.109106 26 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:26:33.109123 26 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:26:33.109136 26 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:26:33.109161 26 dump.go:128] kube-system/calico-kube-controllers-776c584756-6ljhp started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109178 26 dump.go:134] 	Container calico-kube-controllers ready: true, restart count 0
  I0218 18:26:33.109200 26 dump.go:128] kube-system/metrics-server-98f8d75b6-6wxtx started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109213 26 dump.go:134] 	Container metrics-server ready: true, restart count 0
  I0218 18:26:33.109228 26 dump.go:128] kube-system/metrics-server-98f8d75b6-m68l8 started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109250 26 dump.go:134] 	Container metrics-server ready: true, restart count 0
  I0218 18:26:33.109269 26 dump.go:128] kube-system/konnectivity-agent-69d96bd65-tmvh5 started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109285 26 dump.go:134] 	Container konnectivity-agent ready: true, restart count 0
  I0218 18:26:33.109328 26 dump.go:128] kube-system/coredns-6f84685c69-f5l5j started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109346 26 dump.go:134] 	Container coredns ready: true, restart count 0
  I0218 18:26:33.109371 26 dump.go:128] kube-system/konnectivity-agent-69d96bd65-lfwdq started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109388 26 dump.go:134] 	Container konnectivity-agent ready: true, restart count 0
  I0218 18:26:33.109407 26 dump.go:128] kube-system/coredns-6f84685c69-jnt8h started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:26:33.109454 26 dump.go:134] 	Container coredns ready: true, restart count 0
  I0218 18:26:33.109475 26 dump.go:128] kube-system/hcloud-csi-controller-58497d4b88-4qwtc started at 2025-02-18 14:38:29 +0000 UTC (0+5 container statuses recorded)
  I0218 18:26:33.109498 26 dump.go:134] 	Container csi-attacher ready: true, restart count 0
  I0218 18:26:33.109515 26 dump.go:134] 	Container csi-provisioner ready: true, restart count 0
  I0218 18:26:33.109528 26 dump.go:134] 	Container csi-resizer ready: true, restart count 0
  I0218 18:26:33.109548 26 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:26:33.109561 26 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:26:33.231256 26 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-qvphf
  STEP: Destroying namespace "watch-6258" for this suite. @ 02/18/25 18:26:33.231

  Attempt #1 Failed.  Retrying ↺ @ 02/18/25 18:26:33.253

  STEP: Creating a kubernetes client @ 02/18/25 18:26:33.253
  I0218 18:26:33.253949 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename watch @ 02/18/25 18:26:33.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:33.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:33.305
  STEP: creating a watch on configmaps with a certain label @ 02/18/25 18:26:33.319
  STEP: creating a new configmap @ 02/18/25 18:26:34.746
  STEP: modifying the configmap once @ 02/18/25 18:26:34.759
  STEP: changing the label value of the configmap @ 02/18/25 18:26:34.791
  STEP: Expecting to observe a delete notification for the watched object @ 02/18/25 18:26:34.82
  I0218 18:26:34.820784 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9005  51a540bc-52fd-40b9-aebf-8805693e4521 191963 0 2025-02-18 18:26:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-02-18 18:26:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:26:34.820974 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9005  51a540bc-52fd-40b9-aebf-8805693e4521 191964 0 2025-02-18 18:26:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-02-18 18:26:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:26:34.821098 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9005  51a540bc-52fd-40b9-aebf-8805693e4521 191966 0 2025-02-18 18:26:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-02-18 18:26:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 02/18/25 18:26:34.821
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 02/18/25 18:26:34.847
  STEP: changing the label value of the configmap back @ 02/18/25 18:26:44.848
  STEP: modifying the configmap a third time @ 02/18/25 18:26:44.877
  STEP: deleting the configmap @ 02/18/25 18:26:44.901
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 02/18/25 18:26:44.917
  I0218 18:26:44.917787 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9005  51a540bc-52fd-40b9-aebf-8805693e4521 192020 0 2025-02-18 18:26:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-02-18 18:26:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:26:44.917941 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9005  51a540bc-52fd-40b9-aebf-8805693e4521 192021 0 2025-02-18 18:26:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-02-18 18:26:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:26:44.918054 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-9005  51a540bc-52fd-40b9-aebf-8805693e4521 192022 0 2025-02-18 18:26:34 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-02-18 18:26:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:26:44.919027 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9005" for this suite. @ 02/18/25 18:26:44.946
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.107 seconds]
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:44.978
  I0218 18:26:44.978510 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename server-version @ 02/18/25 18:26:44.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:45.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:45.027
  STEP: Request ServerVersion @ 02/18/25 18:26:45.045
  STEP: Confirm major version @ 02/18/25 18:26:45.052
  I0218 18:26:45.052826 26 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 02/18/25 18:26:45.052
  I0218 18:26:45.052863 26 server_version.go:58] cleanMinorVersion: 32
  I0218 18:26:45.052874 26 server_version.go:62] Minor version: 32
  I0218 18:26:45.053608 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-6981" for this suite. @ 02/18/25 18:26:45.068
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.374 seconds]
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:45.124
  I0218 18:26:45.124010 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:26:45.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:45.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:45.181
  STEP: Saw pod success @ 02/18/25 18:26:51.356
  I0218 18:26:51.369803 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod client-envvars-41e5c8f0-f94f-46ce-997f-37303135ba21 container env3cont: <nil>
  STEP: delete the pod @ 02/18/25 18:26:51.397
  I0218 18:26:51.450978 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6643" for this suite. @ 02/18/25 18:26:51.475
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.266 seconds]
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:51.508
  I0218 18:26:51.508959 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:26:51.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:51.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:51.551
  STEP: Creating secret with name secret-test-22ad6552-54ce-46c5-9e10-c63646febefc @ 02/18/25 18:26:51.564
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:26:51.576
  STEP: Saw pod success @ 02/18/25 18:26:55.635
  I0218 18:26:55.656485 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-secrets-67e86aea-4759-463a-8645-8efca4b559b2 container secret-env-test: <nil>
  STEP: delete the pod @ 02/18/25 18:26:55.685
  I0218 18:26:55.735234 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4228" for this suite. @ 02/18/25 18:26:55.758
  << Timeline
------------------------------
SSSS
------------------------------
• [4.299 seconds]
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:245

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:55.781
  I0218 18:26:55.781058 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:26:55.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:55.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:55.851
  STEP: Creating a pod to test downward api env vars @ 02/18/25 18:26:55.871
  STEP: Saw pod success @ 02/18/25 18:26:59.948
  I0218 18:26:59.960108 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downward-api-a5cbac51-195d-4a3b-92b2-73c5d4949b0d container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:26:59.985
  I0218 18:27:00.031480 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7859" for this suite. @ 02/18/25 18:27:00.058
  << Timeline
------------------------------
SSSS
------------------------------
• [4.238 seconds]
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:00.084
  I0218 18:27:00.084753 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:27:00.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:00.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:00.139
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:27:00.153
  STEP: Saw pod success @ 02/18/25 18:27:04.217
  I0218 18:27:04.228602 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-53d88b8f-3694-4daa-808b-59146248b649 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:27:04.249
  I0218 18:27:04.283174 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7600" for this suite. @ 02/18/25 18:27:04.306
  << Timeline
------------------------------
• [4.239 seconds]
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:04.325
  I0218 18:27:04.325003 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:27:04.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:04.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:04.371
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 02/18/25 18:27:04.386
  STEP: Saw pod success @ 02/18/25 18:27:08.447
  I0218 18:27:08.458705 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-c69ee7c6-c69d-4fd9-afcc-a80a620d02e3 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:27:08.479
  I0218 18:27:08.524567 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1069" for this suite. @ 02/18/25 18:27:08.545
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [3.329 seconds]
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1621

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:08.57
  I0218 18:27:08.570765 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:27:08.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:08.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:08.616
  STEP: creating the pod @ 02/18/25 18:27:08.633
  I0218 18:27:08.633540 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 create -f -'
  I0218 18:27:08.875994 26 builder.go:146] stderr: ""
  I0218 18:27:08.876041 26 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 02/18/25 18:27:10.9
  I0218 18:27:10.900641 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 label pods pause testing-label=testing-label-value'
  I0218 18:27:11.044791 26 builder.go:146] stderr: ""
  I0218 18:27:11.044832 26 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 02/18/25 18:27:11.044
  I0218 18:27:11.044920 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 get pod pause -L testing-label'
  I0218 18:27:11.167129 26 builder.go:146] stderr: ""
  I0218 18:27:11.167183 26 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 02/18/25 18:27:11.167
  I0218 18:27:11.167318 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 label pods pause testing-label-'
  I0218 18:27:11.307675 26 builder.go:146] stderr: ""
  I0218 18:27:11.307726 26 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 02/18/25 18:27:11.307
  I0218 18:27:11.307864 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 get pod pause -L testing-label'
  I0218 18:27:11.426874 26 builder.go:146] stderr: ""
  I0218 18:27:11.426926 26 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 02/18/25 18:27:11.427
  I0218 18:27:11.427558 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 delete --grace-period=0 --force -f -'
  I0218 18:27:11.576774 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:27:11.576816 26 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0218 18:27:11.576888 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 get rc,svc -l name=pause --no-headers'
  I0218 18:27:11.737604 26 builder.go:146] stderr: "No resources found in kubectl-7837 namespace.\n"
  I0218 18:27:11.737646 26 builder.go:147] stdout: ""
  I0218 18:27:11.737721 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7837 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0218 18:27:11.857528 26 builder.go:146] stderr: ""
  I0218 18:27:11.857581 26 builder.go:147] stdout: ""
  I0218 18:27:11.858415 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7837" for this suite. @ 02/18/25 18:27:11.883
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [69.197 seconds]
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:26:04.957
  I0218 18:26:04.957814 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:26:04.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:26:04.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:26:05.018
  STEP: Creating configMap with name configmap-test-upd-109dc612-2899-4ad6-b5e1-bf9eead1d486 @ 02/18/25 18:26:05.046
  STEP: Creating the pod @ 02/18/25 18:26:05.07
  STEP: Updating configmap configmap-test-upd-109dc612-2899-4ad6-b5e1-bf9eead1d486 @ 02/18/25 18:26:07.167
  STEP: waiting to observe update in volume @ 02/18/25 18:26:07.181
  I0218 18:27:14.111469 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6539" for this suite. @ 02/18/25 18:27:14.135
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [5.222 seconds]
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:11.907
  I0218 18:27:11.907368 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replication-controller @ 02/18/25 18:27:11.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:11.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:11.966
  STEP: Given a ReplicationController is created @ 02/18/25 18:27:11.98
  STEP: When the matched label of one of its pods change @ 02/18/25 18:27:11.999
  I0218 18:27:12.011248 26 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0218 18:27:17.023021 26 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 02/18/25 18:27:17.055
  I0218 18:27:17.073694 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5813" for this suite. @ 02/18/25 18:27:17.099
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.265 seconds]
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:17.161
  I0218 18:27:17.161612 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename endpointslice @ 02/18/25 18:27:17.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:17.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:17.216
  I0218 18:27:17.372805 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4757" for this suite. @ 02/18/25 18:27:17.387
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [3.305 seconds]
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:14.166
  I0218 18:27:14.166386 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename replicaset @ 02/18/25 18:27:14.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:14.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:14.229
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 02/18/25 18:27:14.245
  STEP: When a replicaset with a matching selector is created @ 02/18/25 18:27:16.315
  STEP: Then the orphan pod is adopted @ 02/18/25 18:27:16.334
  STEP: When the matched label of one of its pods change @ 02/18/25 18:27:16.349
  I0218 18:27:16.362929 24 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 02/18/25 18:27:16.393
  I0218 18:27:17.429341 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3634" for this suite. @ 02/18/25 18:27:17.455
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.469 seconds]
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:17.433
  I0218 18:27:17.433748 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:27:17.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:17.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:17.532
  STEP: Creating configMap with name configmap-test-upd-4df1636c-16ef-4f38-bb43-fcd694c6ee25 @ 02/18/25 18:27:17.563
  STEP: Creating the pod @ 02/18/25 18:27:17.573
  STEP: Waiting for pod with text data @ 02/18/25 18:27:24.039
  STEP: Waiting for pod with binary data @ 02/18/25 18:27:24.244
  I0218 18:27:24.539216 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8603" for this suite. @ 02/18/25 18:27:24.675
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.987 seconds]
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:24.929
  I0218 18:27:24.929135 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:27:24.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:25.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:25.216
  I0218 18:27:29.825584 26 delete.go:62] Deleting pod "var-expansion-0cb15ac6-9a4d-4c14-84f4-936c763bb3c3" in namespace "var-expansion-748"
  I0218 18:27:29.847768 26 delete.go:70] Wait up to 5m0s for pod "var-expansion-0cb15ac6-9a4d-4c14-84f4-936c763bb3c3" to be fully deleted
  I0218 18:27:31.878149 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-748" for this suite. @ 02/18/25 18:27:31.901
  << Timeline
------------------------------
SS
------------------------------
• [46.645 seconds]
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:17.491
  I0218 18:27:17.491942 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename gc @ 02/18/25 18:27:17.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:17.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:17.553
  STEP: create the rc @ 02/18/25 18:27:17.59
  W0218 18:27:17.611846      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 02/18/25 18:27:21.902
  STEP: wait for the rc to be deleted @ 02/18/25 18:27:22.054
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 02/18/25 18:27:27.274
  STEP: Gathering metrics @ 02/18/25 18:27:57.304
  W0218 18:27:57.330298      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0218 18:27:57.330341 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0218 18:27:57.330362 24 delete.go:95] Deleting pod "simpletest.rc-2rf2w" in namespace "gc-4088"
  I0218 18:27:57.351938 24 delete.go:95] Deleting pod "simpletest.rc-2sc5j" in namespace "gc-4088"
  I0218 18:27:57.377404 24 delete.go:95] Deleting pod "simpletest.rc-2w5xm" in namespace "gc-4088"
  I0218 18:27:57.396288 24 delete.go:95] Deleting pod "simpletest.rc-2wk9r" in namespace "gc-4088"
  I0218 18:27:57.423879 24 delete.go:95] Deleting pod "simpletest.rc-45hd4" in namespace "gc-4088"
  I0218 18:27:57.449483 24 delete.go:95] Deleting pod "simpletest.rc-4cr54" in namespace "gc-4088"
  I0218 18:27:57.483296 24 delete.go:95] Deleting pod "simpletest.rc-557br" in namespace "gc-4088"
  I0218 18:27:57.507519 24 delete.go:95] Deleting pod "simpletest.rc-5jn24" in namespace "gc-4088"
  I0218 18:27:57.534069 24 delete.go:95] Deleting pod "simpletest.rc-5nm8x" in namespace "gc-4088"
  I0218 18:27:57.563149 24 delete.go:95] Deleting pod "simpletest.rc-5pfzh" in namespace "gc-4088"
  I0218 18:27:57.591876 24 delete.go:95] Deleting pod "simpletest.rc-5svw9" in namespace "gc-4088"
  I0218 18:27:57.614209 24 delete.go:95] Deleting pod "simpletest.rc-6cp6m" in namespace "gc-4088"
  I0218 18:27:57.643696 24 delete.go:95] Deleting pod "simpletest.rc-76n5f" in namespace "gc-4088"
  I0218 18:27:57.669263 24 delete.go:95] Deleting pod "simpletest.rc-7h599" in namespace "gc-4088"
  I0218 18:27:57.702116 24 delete.go:95] Deleting pod "simpletest.rc-8wfhx" in namespace "gc-4088"
  I0218 18:27:57.739677 24 delete.go:95] Deleting pod "simpletest.rc-94hj2" in namespace "gc-4088"
  I0218 18:27:57.793787 24 delete.go:95] Deleting pod "simpletest.rc-972rr" in namespace "gc-4088"
  I0218 18:27:57.828248 24 delete.go:95] Deleting pod "simpletest.rc-9kdws" in namespace "gc-4088"
  I0218 18:27:57.852496 24 delete.go:95] Deleting pod "simpletest.rc-9pk92" in namespace "gc-4088"
  I0218 18:27:57.877872 24 delete.go:95] Deleting pod "simpletest.rc-9rmbr" in namespace "gc-4088"
  I0218 18:27:57.903669 24 delete.go:95] Deleting pod "simpletest.rc-9wfxq" in namespace "gc-4088"
  I0218 18:27:57.927199 24 delete.go:95] Deleting pod "simpletest.rc-b9jsc" in namespace "gc-4088"
  I0218 18:27:57.950962 24 delete.go:95] Deleting pod "simpletest.rc-bcf7t" in namespace "gc-4088"
  I0218 18:27:57.994443 24 delete.go:95] Deleting pod "simpletest.rc-bndwx" in namespace "gc-4088"
  I0218 18:27:58.053371 24 delete.go:95] Deleting pod "simpletest.rc-br86g" in namespace "gc-4088"
  I0218 18:27:58.086469 24 delete.go:95] Deleting pod "simpletest.rc-bsdz5" in namespace "gc-4088"
  I0218 18:27:58.118384 24 delete.go:95] Deleting pod "simpletest.rc-bvt48" in namespace "gc-4088"
  I0218 18:27:58.146147 24 delete.go:95] Deleting pod "simpletest.rc-bzgp6" in namespace "gc-4088"
  I0218 18:27:58.240005 24 delete.go:95] Deleting pod "simpletest.rc-c2ttt" in namespace "gc-4088"
  I0218 18:27:58.300286 24 delete.go:95] Deleting pod "simpletest.rc-c5shn" in namespace "gc-4088"
  I0218 18:27:58.391863 24 delete.go:95] Deleting pod "simpletest.rc-c65m5" in namespace "gc-4088"
  I0218 18:27:58.436391 24 delete.go:95] Deleting pod "simpletest.rc-c97z9" in namespace "gc-4088"
  I0218 18:27:58.539895 24 delete.go:95] Deleting pod "simpletest.rc-cmgwj" in namespace "gc-4088"
  I0218 18:27:58.596680 24 delete.go:95] Deleting pod "simpletest.rc-cmh59" in namespace "gc-4088"
  I0218 18:27:58.688746 24 delete.go:95] Deleting pod "simpletest.rc-cq82s" in namespace "gc-4088"
  I0218 18:27:58.739404 24 delete.go:95] Deleting pod "simpletest.rc-cssfw" in namespace "gc-4088"
  I0218 18:27:58.777145 24 delete.go:95] Deleting pod "simpletest.rc-d9qks" in namespace "gc-4088"
  I0218 18:27:58.879684 24 delete.go:95] Deleting pod "simpletest.rc-dtvgl" in namespace "gc-4088"
  I0218 18:27:58.920417 24 delete.go:95] Deleting pod "simpletest.rc-f6gds" in namespace "gc-4088"
  I0218 18:27:59.039082 24 delete.go:95] Deleting pod "simpletest.rc-f9bzz" in namespace "gc-4088"
  I0218 18:27:59.089383 24 delete.go:95] Deleting pod "simpletest.rc-fh2j4" in namespace "gc-4088"
  I0218 18:27:59.188013 24 delete.go:95] Deleting pod "simpletest.rc-fxgsm" in namespace "gc-4088"
  I0218 18:27:59.242476 24 delete.go:95] Deleting pod "simpletest.rc-gbh6q" in namespace "gc-4088"
  I0218 18:27:59.344596 24 delete.go:95] Deleting pod "simpletest.rc-gn74f" in namespace "gc-4088"
  I0218 18:27:59.400126 24 delete.go:95] Deleting pod "simpletest.rc-j5rmg" in namespace "gc-4088"
  I0218 18:27:59.514040 24 delete.go:95] Deleting pod "simpletest.rc-j76jz" in namespace "gc-4088"
  I0218 18:27:59.538280 24 delete.go:95] Deleting pod "simpletest.rc-jjrss" in namespace "gc-4088"
  I0218 18:27:59.582362 24 delete.go:95] Deleting pod "simpletest.rc-jn2lr" in namespace "gc-4088"
  I0218 18:27:59.713930 24 delete.go:95] Deleting pod "simpletest.rc-jshxv" in namespace "gc-4088"
  I0218 18:27:59.757572 24 delete.go:95] Deleting pod "simpletest.rc-jxfrq" in namespace "gc-4088"
  I0218 18:27:59.864310 24 delete.go:95] Deleting pod "simpletest.rc-k257h" in namespace "gc-4088"
  I0218 18:27:59.905076 24 delete.go:95] Deleting pod "simpletest.rc-kg7r8" in namespace "gc-4088"
  I0218 18:28:00.028303 24 delete.go:95] Deleting pod "simpletest.rc-kl86f" in namespace "gc-4088"
  I0218 18:28:00.075217 24 delete.go:95] Deleting pod "simpletest.rc-kq872" in namespace "gc-4088"
  I0218 18:28:00.216852 24 delete.go:95] Deleting pod "simpletest.rc-l67pw" in namespace "gc-4088"
  I0218 18:28:00.378397 24 delete.go:95] Deleting pod "simpletest.rc-l7zqd" in namespace "gc-4088"
  I0218 18:28:00.525114 24 delete.go:95] Deleting pod "simpletest.rc-l92nw" in namespace "gc-4088"
  I0218 18:28:00.577173 24 delete.go:95] Deleting pod "simpletest.rc-lcfk2" in namespace "gc-4088"
  I0218 18:28:00.704083 24 delete.go:95] Deleting pod "simpletest.rc-lxvvv" in namespace "gc-4088"
  I0218 18:28:00.736637 24 delete.go:95] Deleting pod "simpletest.rc-mglsb" in namespace "gc-4088"
  I0218 18:28:00.852355 24 delete.go:95] Deleting pod "simpletest.rc-ml258" in namespace "gc-4088"
  I0218 18:28:00.947411 24 delete.go:95] Deleting pod "simpletest.rc-mmsjb" in namespace "gc-4088"
  I0218 18:28:01.001311 24 delete.go:95] Deleting pod "simpletest.rc-mngbs" in namespace "gc-4088"
  I0218 18:28:01.115796 24 delete.go:95] Deleting pod "simpletest.rc-mp72q" in namespace "gc-4088"
  I0218 18:28:01.255852 24 delete.go:95] Deleting pod "simpletest.rc-mrcmh" in namespace "gc-4088"
  I0218 18:28:01.304412 24 delete.go:95] Deleting pod "simpletest.rc-n789d" in namespace "gc-4088"
  I0218 18:28:01.412019 24 delete.go:95] Deleting pod "simpletest.rc-ngtxt" in namespace "gc-4088"
  I0218 18:28:01.491714 24 delete.go:95] Deleting pod "simpletest.rc-nlhnz" in namespace "gc-4088"
  I0218 18:28:01.544353 24 delete.go:95] Deleting pod "simpletest.rc-nljsq" in namespace "gc-4088"
  I0218 18:28:01.581607 24 delete.go:95] Deleting pod "simpletest.rc-nwkrw" in namespace "gc-4088"
  I0218 18:28:01.681289 24 delete.go:95] Deleting pod "simpletest.rc-p4r7x" in namespace "gc-4088"
  I0218 18:28:01.726522 24 delete.go:95] Deleting pod "simpletest.rc-p7h29" in namespace "gc-4088"
  I0218 18:28:01.857404 24 delete.go:95] Deleting pod "simpletest.rc-p9chh" in namespace "gc-4088"
  I0218 18:28:01.889039 24 delete.go:95] Deleting pod "simpletest.rc-pbt2l" in namespace "gc-4088"
  I0218 18:28:02.003310 24 delete.go:95] Deleting pod "simpletest.rc-pfzfj" in namespace "gc-4088"
  I0218 18:28:02.040702 24 delete.go:95] Deleting pod "simpletest.rc-q4lng" in namespace "gc-4088"
  I0218 18:28:02.173094 24 delete.go:95] Deleting pod "simpletest.rc-r2z9h" in namespace "gc-4088"
  I0218 18:28:02.240040 24 delete.go:95] Deleting pod "simpletest.rc-r7kkl" in namespace "gc-4088"
  I0218 18:28:02.308045 24 delete.go:95] Deleting pod "simpletest.rc-rgv8x" in namespace "gc-4088"
  I0218 18:28:02.446072 24 delete.go:95] Deleting pod "simpletest.rc-rmw98" in namespace "gc-4088"
  I0218 18:28:02.504153 24 delete.go:95] Deleting pod "simpletest.rc-s4vrf" in namespace "gc-4088"
  I0218 18:28:02.557499 24 delete.go:95] Deleting pod "simpletest.rc-sww2x" in namespace "gc-4088"
  I0218 18:28:02.690240 24 delete.go:95] Deleting pod "simpletest.rc-tgcfv" in namespace "gc-4088"
  I0218 18:28:02.737495 24 delete.go:95] Deleting pod "simpletest.rc-tgkxg" in namespace "gc-4088"
  I0218 18:28:02.843206 24 delete.go:95] Deleting pod "simpletest.rc-ts4d5" in namespace "gc-4088"
  I0218 18:28:02.880293 24 delete.go:95] Deleting pod "simpletest.rc-v4fmz" in namespace "gc-4088"
  I0218 18:28:02.991351 24 delete.go:95] Deleting pod "simpletest.rc-v9bdn" in namespace "gc-4088"
  I0218 18:28:03.033316 24 delete.go:95] Deleting pod "simpletest.rc-vdjpw" in namespace "gc-4088"
  I0218 18:28:03.127855 24 delete.go:95] Deleting pod "simpletest.rc-w6vkf" in namespace "gc-4088"
  I0218 18:28:03.270999 24 delete.go:95] Deleting pod "simpletest.rc-wcj8s" in namespace "gc-4088"
  I0218 18:28:03.328329 24 delete.go:95] Deleting pod "simpletest.rc-x2t49" in namespace "gc-4088"
  I0218 18:28:03.352522 24 delete.go:95] Deleting pod "simpletest.rc-x47hl" in namespace "gc-4088"
  I0218 18:28:03.485088 24 delete.go:95] Deleting pod "simpletest.rc-xszzl" in namespace "gc-4088"
  I0218 18:28:03.587079 24 delete.go:95] Deleting pod "simpletest.rc-z4c76" in namespace "gc-4088"
  I0218 18:28:03.627906 24 delete.go:95] Deleting pod "simpletest.rc-z5f4x" in namespace "gc-4088"
  I0218 18:28:03.662797 24 delete.go:95] Deleting pod "simpletest.rc-zb7cn" in namespace "gc-4088"
  I0218 18:28:03.771193 24 delete.go:95] Deleting pod "simpletest.rc-zhvsv" in namespace "gc-4088"
  I0218 18:28:03.811567 24 delete.go:95] Deleting pod "simpletest.rc-zm22x" in namespace "gc-4088"
  I0218 18:28:03.945165 24 delete.go:95] Deleting pod "simpletest.rc-zm8j7" in namespace "gc-4088"
  I0218 18:28:04.024997 24 delete.go:95] Deleting pod "simpletest.rc-zwqqz" in namespace "gc-4088"
  I0218 18:28:04.080892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4088" for this suite. @ 02/18/25 18:28:04.098
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [6.883 seconds]
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:04.156
  I0218 18:28:04.156402 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:28:04.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:04.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:04.223
  STEP: Creating the pod @ 02/18/25 18:28:04.243
  I0218 18:28:06.905032 24 pod_client.go:173] Successfully updated pod "annotationupdate0fe254d6-7cf3-4634-b5ce-4a4afba09e72"
  I0218 18:28:10.995995 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7552" for this suite. @ 02/18/25 18:28:11.017
  << Timeline
------------------------------
SSSS
------------------------------
• [0.133 seconds]
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3164

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:11.044
  I0218 18:28:11.044576 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:28:11.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:11.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:11.105
  STEP: fetching services @ 02/18/25 18:28:11.123
  I0218 18:28:11.137321 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1019" for this suite. @ 02/18/25 18:28:11.157
  << Timeline
------------------------------
SSSS
------------------------------
• [6.797 seconds]
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:11.179
  I0218 18:28:11.179403 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:28:11.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:11.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:11.261
  STEP: creating a replication controller @ 02/18/25 18:28:11.277
  I0218 18:28:11.277709 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 create -f -'
  I0218 18:28:11.514162 24 builder.go:146] stderr: ""
  I0218 18:28:11.514215 24 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 02/18/25 18:28:11.514
  I0218 18:28:11.514307 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:28:11.644044 24 builder.go:146] stderr: ""
  I0218 18:28:11.644089 24 builder.go:147] stdout: "update-demo-nautilus-52smn update-demo-nautilus-hrqw5 "
  I0218 18:28:11.644202 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods update-demo-nautilus-52smn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:28:11.779163 24 builder.go:146] stderr: ""
  I0218 18:28:11.779214 24 builder.go:147] stdout: ""
  I0218 18:28:11.779232 24 kubectl.go:2499] update-demo-nautilus-52smn is created but not running
  I0218 18:28:16.780236 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:28:16.920971 24 builder.go:146] stderr: ""
  I0218 18:28:16.921024 24 builder.go:147] stdout: "update-demo-nautilus-52smn update-demo-nautilus-hrqw5 "
  I0218 18:28:16.921104 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods update-demo-nautilus-52smn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:28:17.043336 24 builder.go:146] stderr: ""
  I0218 18:28:17.043401 24 builder.go:147] stdout: "true"
  I0218 18:28:17.043548 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods update-demo-nautilus-52smn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:28:17.172023 24 builder.go:146] stderr: ""
  I0218 18:28:17.172073 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:28:17.172091 24 kubectl.go:2390] validating pod update-demo-nautilus-52smn
  I0218 18:28:17.223631 24 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:28:17.223726 24 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:28:17.223741 24 kubectl.go:2517] update-demo-nautilus-52smn is verified up and running
  I0218 18:28:17.223827 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods update-demo-nautilus-hrqw5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:28:17.356155 24 builder.go:146] stderr: ""
  I0218 18:28:17.356204 24 builder.go:147] stdout: "true"
  I0218 18:28:17.356284 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods update-demo-nautilus-hrqw5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:28:17.483027 24 builder.go:146] stderr: ""
  I0218 18:28:17.483067 24 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:28:17.483086 24 kubectl.go:2390] validating pod update-demo-nautilus-hrqw5
  I0218 18:28:17.514928 24 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:28:17.514975 24 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:28:17.514988 24 kubectl.go:2517] update-demo-nautilus-hrqw5 is verified up and running
  STEP: using delete to clean up resources @ 02/18/25 18:28:17.515
  I0218 18:28:17.515075 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 delete --grace-period=0 --force -f -'
  I0218 18:28:17.666721 24 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:28:17.666774 24 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0218 18:28:17.666848 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get rc,svc -l name=update-demo --no-headers'
  I0218 18:28:17.805028 24 builder.go:146] stderr: "No resources found in kubectl-6416 namespace.\n"
  I0218 18:28:17.805084 24 builder.go:147] stdout: ""
  I0218 18:28:17.805165 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6416 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0218 18:28:17.931200 24 builder.go:146] stderr: ""
  I0218 18:28:17.931252 24 builder.go:147] stdout: ""
  I0218 18:28:17.932144 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6416" for this suite. @ 02/18/25 18:28:17.956
  << Timeline
------------------------------
S
------------------------------
• [4.307 seconds]
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:17.979
  I0218 18:28:17.979042 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:28:17.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:18.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:18.057
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 02/18/25 18:28:18.072
  STEP: Saw pod success @ 02/18/25 18:28:22.148
  I0218 18:28:22.159103 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-43aebd1c-33ee-45ff-a6d8-a9f40740fb09 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:28:22.204
  I0218 18:28:22.244336 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5300" for this suite. @ 02/18/25 18:28:22.265
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [21.059 seconds]
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:22.31
  I0218 18:28:22.310170 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename watch @ 02/18/25 18:28:22.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:22.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:22.363
  STEP: creating a watch on configmaps with label A @ 02/18/25 18:28:22.387
  STEP: creating a watch on configmaps with label B @ 02/18/25 18:28:23.175
  STEP: creating a watch on configmaps with label A or B @ 02/18/25 18:28:23.186
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 02/18/25 18:28:23.197
  I0218 18:28:23.209905 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194830 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:23.210090 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194830 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 02/18/25 18:28:23.21
  I0218 18:28:23.236582 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194831 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:23.236730 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194831 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 02/18/25 18:28:23.236
  I0218 18:28:23.269100 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194832 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:23.269259 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194832 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 02/18/25 18:28:23.269
  I0218 18:28:23.288158 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194834 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:23.288211 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-984  93762f7f-f11a-4ab9-adca-7040e4f652d7 194834 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 02/18/25 18:28:23.288
  I0218 18:28:23.301885 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-984  1c0bfd7f-8dd8-4578-94a3-edd8218b11cf 194836 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:23.301990 24 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-984  1c0bfd7f-8dd8-4578-94a3-edd8218b11cf 194836 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 02/18/25 18:28:33.302
  I0218 18:28:33.322107 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-984  1c0bfd7f-8dd8-4578-94a3-edd8218b11cf 194902 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:33.322183 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-984  1c0bfd7f-8dd8-4578-94a3-edd8218b11cf 194902 0 2025-02-18 18:28:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-02-18 18:28:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:28:43.324502 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-984" for this suite. @ 02/18/25 18:28:43.351
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.276 seconds]
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:43.38
  I0218 18:28:43.380879 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename events @ 02/18/25 18:28:43.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:43.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:43.435
  STEP: Create set of events @ 02/18/25 18:28:43.452
  I0218 18:28:43.479502 24 core_events.go:198] created test-event-1
  I0218 18:28:43.502012 24 core_events.go:198] created test-event-2
  I0218 18:28:43.524855 24 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 02/18/25 18:28:43.524
  STEP: delete collection of events @ 02/18/25 18:28:43.549
  I0218 18:28:43.549076 24 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 02/18/25 18:28:43.608
  I0218 18:28:43.608728 24 core_events.go:230] requesting list of events to confirm quantity
  I0218 18:28:43.620665 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1015" for this suite. @ 02/18/25 18:28:43.634
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.473 seconds]
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:43.667
  I0218 18:28:43.667249 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename apf @ 02/18/25 18:28:43.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:43.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:43.743
  STEP: getting /apis @ 02/18/25 18:28:43.758
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 02/18/25 18:28:43.775
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 02/18/25 18:28:43.781
  STEP: creating @ 02/18/25 18:28:43.788
  STEP: getting @ 02/18/25 18:28:43.843
  STEP: listing @ 02/18/25 18:28:43.858
  STEP: watching @ 02/18/25 18:28:43.869
  I0218 18:28:43.869532 24 flowcontrol.go:394] starting watch
  STEP: patching @ 02/18/25 18:28:43.875
  STEP: updating @ 02/18/25 18:28:43.893
  I0218 18:28:43.922962 24 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 02/18/25 18:28:43.923
  STEP: patching /status @ 02/18/25 18:28:43.933
  STEP: updating /status @ 02/18/25 18:28:43.948
  STEP: deleting @ 02/18/25 18:28:43.983
  STEP: deleting a collection @ 02/18/25 18:28:44.029
  I0218 18:28:44.098075 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3581" for this suite. @ 02/18/25 18:28:44.116
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [88.347 seconds]
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:27:31.92
  I0218 18:27:31.920795 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename cronjob @ 02/18/25 18:27:31.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:27:31.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:27:31.972
  STEP: Creating a ReplaceConcurrent cronjob @ 02/18/25 18:27:31.988
  STEP: Ensuring a job is scheduled @ 02/18/25 18:27:32.008
  STEP: Ensuring exactly one is scheduled @ 02/18/25 18:28:02.023
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 02/18/25 18:28:02.049
  STEP: Ensuring the job is replaced with a new one @ 02/18/25 18:28:02.146
  STEP: Removing cronjob @ 02/18/25 18:29:00.168
  I0218 18:29:00.200215 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8853" for this suite. @ 02/18/25 18:29:00.243
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.210 seconds]
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:00.277
  I0218 18:29:00.277634 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename podtemplate @ 02/18/25 18:29:00.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:00.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:00.321
  I0218 18:29:00.447081 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7727" for this suite. @ 02/18/25 18:29:00.462
  << Timeline
------------------------------
SS
------------------------------
• [0.142 seconds]
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:00.49
  I0218 18:29:00.490895 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename subjectreview @ 02/18/25 18:29:00.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:00.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:00.549
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7757" @ 02/18/25 18:29:00.564
  I0218 18:29:00.576069 26 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-7757:e2e"
  I0218 18:29:00.576113 26 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7757"}
  I0218 18:29:00.576125 26 subjectreviews.go:71] saUID: "3f165f6e-a8ce-450e-a6fc-9cc93d8d57af"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7757:e2e" @ 02/18/25 18:29:00.576
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7757:e2e" @ 02/18/25 18:29:00.576
  I0218 18:29:00.583905 26 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7757:e2e" api 'list' configmaps in "subjectreview-7757" namespace @ 02/18/25 18:29:00.583
  I0218 18:29:00.590357 26 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7757:e2e" @ 02/18/25 18:29:00.59
  I0218 18:29:00.597732 26 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0218 18:29:00.597751 26 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0218 18:29:00.598597 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7757" for this suite. @ 02/18/25 18:29:00.613
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.145 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:00.651
  I0218 18:29:00.651559 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:29:00.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:00.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:00.694
  STEP: Counting existing ResourceQuota @ 02/18/25 18:29:00.708
  STEP: Creating a ResourceQuota @ 02/18/25 18:29:05.719
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:29:05.731
  I0218 18:29:07.746195 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2211" for this suite. @ 02/18/25 18:29:07.769
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.207 seconds]
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:07.836
  I0218 18:29:07.836864 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:29:07.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:07.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:07.893
  STEP: creating a ConfigMap @ 02/18/25 18:29:07.911
  STEP: fetching the ConfigMap @ 02/18/25 18:29:07.925
  STEP: patching the ConfigMap @ 02/18/25 18:29:07.938
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 02/18/25 18:29:07.95
  STEP: deleting the ConfigMap by collection with a label selector @ 02/18/25 18:29:07.969
  STEP: listing all ConfigMaps in test namespace @ 02/18/25 18:29:07.994
  I0218 18:29:08.012592 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2844" for this suite. @ 02/18/25 18:29:08.027
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.213 seconds]
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:08.063
  I0218 18:29:08.063241 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:29:08.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:08.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:08.12
  I0218 18:29:08.137991 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: creating the pod @ 02/18/25 18:29:08.138
  STEP: submitting the pod to kubernetes @ 02/18/25 18:29:08.138
  I0218 18:29:10.235953 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8195" for this suite. @ 02/18/25 18:29:10.261
  << Timeline
------------------------------
• [0.214 seconds]
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1362

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:10.278
  I0218 18:29:10.278318 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:29:10.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:10.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:10.322
  STEP: validating cluster-info @ 02/18/25 18:29:10.335
  I0218 18:29:10.335778 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-4474 cluster-info'
  I0218 18:29:10.463705 26 builder.go:146] stderr: ""
  I0218 18:29:10.463757 26 builder.go:147] stdout: "Kubernetes control plane is running at https://10.240.16.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0218 18:29:10.464722 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4474" for this suite. @ 02/18/25 18:29:10.476
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [4.191 seconds]
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:10.508
  I0218 18:29:10.508540 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename job @ 02/18/25 18:29:10.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:10.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:10.552
  STEP: Looking for a node to schedule job pod @ 02/18/25 18:29:10.571
  STEP: Creating a job @ 02/18/25 18:29:10.595
  STEP: Ensuring job fails @ 02/18/25 18:29:10.614
  I0218 18:29:14.649692 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3214" for this suite. @ 02/18/25 18:29:14.68
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.469 seconds]
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:14.722
  I0218 18:29:14.722505 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename proxy @ 02/18/25 18:29:14.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:14.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:14.769
  I0218 18:29:14.784094 26 proxy.go:293] Creating pod...
  I0218 18:29:16.822971 26 proxy.go:317] Creating service...
  I0218 18:29:16.843470 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/DELETE
  I0218 18:29:16.873295 26 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0218 18:29:16.873344 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/GET
  I0218 18:29:16.893325 26 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0218 18:29:16.893362 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/HEAD
  I0218 18:29:16.909737 26 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0218 18:29:16.909769 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/OPTIONS
  I0218 18:29:16.928381 26 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0218 18:29:16.928471 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/PATCH
  I0218 18:29:16.949854 26 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0218 18:29:16.949886 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/POST
  I0218 18:29:16.966289 26 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0218 18:29:16.966321 26 proxy.go:354] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/pods/agnhost/proxy/some/path/with/PUT
  I0218 18:29:16.984962 26 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0218 18:29:16.984995 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/DELETE
  I0218 18:29:17.008758 26 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0218 18:29:17.008790 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/GET
  I0218 18:29:17.029866 26 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0218 18:29:17.029899 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/HEAD
  I0218 18:29:17.058654 26 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0218 18:29:17.058684 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/OPTIONS
  I0218 18:29:17.089399 26 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0218 18:29:17.089501 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/PATCH
  I0218 18:29:17.109059 26 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0218 18:29:17.109091 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/POST
  I0218 18:29:17.130983 26 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0218 18:29:17.131017 26 proxy.go:365] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-7636/services/test-service/proxy/some/path/with/PUT
  I0218 18:29:17.152390 26 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0218 18:29:17.153295 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7636" for this suite. @ 02/18/25 18:29:17.176
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [34.249 seconds]
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:560

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:28:44.183
  I0218 18:28:44.183067 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 18:28:44.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:28:44.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:28:44.241
  I0218 18:28:44.292949 24 service_accounts.go:647] created pod
  STEP: Saw pod success @ 02/18/25 18:28:48.339
  I0218 18:29:18.340251 24 service_accounts.go:653] polling logs
  I0218 18:29:18.365605 24 service_accounts.go:663] Pod logs: 
  I0218 18:28:45.015413       1 log.go:245] OK: Got token
  I0218 18:28:45.015522       1 log.go:245] validating with in-cluster discovery
  I0218 18:28:45.016036       1 log.go:245] OK: got issuer https://c8htdgrh2b.kkp-qa-env.kkp.qa.lab.kubermatic.io:6443
  I0218 18:28:45.016072       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://c8htdgrh2b.kkp-qa-env.kkp.qa.lab.kubermatic.io:6443", Subject:"system:serviceaccount:svcaccounts-6562:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013d200), NotBefore:(*jwt.NumericDate)(0xc00013d2f0), IssuedAt:(*jwt.NumericDate)(0xc00013d210), ID:"153e7afb-b79b-4304-b1e4-6c1c084da1ee"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6562", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"0a5b98df-f251-476f-93c6-b146b19fd95d"}}}
  I0218 18:28:45.063716       1 log.go:245] OK: Constructed OIDC provider for issuer https://c8htdgrh2b.kkp-qa-env.kkp.qa.lab.kubermatic.io:6443
  I0218 18:28:45.072134       1 log.go:245] OK: Validated signature on JWT
  I0218 18:28:45.072275       1 log.go:245] OK: Got valid claims from token!
  I0218 18:28:45.072309       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://c8htdgrh2b.kkp-qa-env.kkp.qa.lab.kubermatic.io:6443", Subject:"system:serviceaccount:svcaccounts-6562:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000327330), NotBefore:(*jwt.NumericDate)(0xc000327358), IssuedAt:(*jwt.NumericDate)(0xc000327338), ID:"153e7afb-b79b-4304-b1e4-6c1c084da1ee"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6562", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"0a5b98df-f251-476f-93c6-b146b19fd95d"}}}

  I0218 18:29:18.365653 24 service_accounts.go:667] completed pod
  I0218 18:29:18.382046 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6562" for this suite. @ 02/18/25 18:29:18.411
  << Timeline
------------------------------
SSS
------------------------------
• [4.241 seconds]
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:17.206
  I0218 18:29:17.206076 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:29:17.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:17.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:17.251
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 02/18/25 18:29:17.267
  STEP: Saw pod success @ 02/18/25 18:29:21.321
  I0218 18:29:21.333404 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-082ed05c-5d3e-4a06-a1d1-ee703421b215 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:29:21.364
  I0218 18:29:21.406796 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1072" for this suite. @ 02/18/25 18:29:21.429
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.115 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:21.458
  I0218 18:29:21.458952 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename sysctl @ 02/18/25 18:29:21.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:21.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:21.517
  STEP: Creating a pod with one valid and two invalid sysctls @ 02/18/25 18:29:21.532
  I0218 18:29:21.545031 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4116" for this suite. @ 02/18/25 18:29:21.559
  << Timeline
------------------------------
SSS
------------------------------
• [0.783 seconds]
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:21.577
  I0218 18:29:21.577930 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename watch @ 02/18/25 18:29:21.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:21.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:21.633
  STEP: creating a watch on configmaps @ 02/18/25 18:29:21.649
  STEP: creating a new configmap @ 02/18/25 18:29:22.216
  STEP: modifying the configmap once @ 02/18/25 18:29:22.234
  STEP: closing the watch once it receives two notifications @ 02/18/25 18:29:22.255
  I0218 18:29:22.255390 26 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2390  8516474e-d6fe-44e7-9d8c-76d625dd5f67 195456 0 2025-02-18 18:29:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-02-18 18:29:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:29:22.255788 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2390  8516474e-d6fe-44e7-9d8c-76d625dd5f67 195457 0 2025-02-18 18:29:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-02-18 18:29:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 02/18/25 18:29:22.255
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 02/18/25 18:29:22.277
  STEP: deleting the configmap @ 02/18/25 18:29:22.283
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 02/18/25 18:29:22.301
  I0218 18:29:22.301982 26 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2390  8516474e-d6fe-44e7-9d8c-76d625dd5f67 195458 0 2025-02-18 18:29:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-02-18 18:29:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:29:22.302162 26 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2390  8516474e-d6fe-44e7-9d8c-76d625dd5f67 195459 0 2025-02-18 18:29:22 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-02-18 18:29:22 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:29:22.303053 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2390" for this suite. @ 02/18/25 18:29:22.324
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [16.418 seconds]
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:22.371
  I0218 18:29:22.371232 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:29:22.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:22.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:22.427
  STEP: Creating a ResourceQuota with terminating scope @ 02/18/25 18:29:22.442
  STEP: Ensuring ResourceQuota status is calculated @ 02/18/25 18:29:22.453
  STEP: Creating a ResourceQuota with not terminating scope @ 02/18/25 18:29:24.467
  STEP: Ensuring ResourceQuota status is calculated @ 02/18/25 18:29:24.48
  STEP: Creating a long running pod @ 02/18/25 18:29:26.532
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 02/18/25 18:29:26.573
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 02/18/25 18:29:28.599
  STEP: Deleting the pod @ 02/18/25 18:29:30.618
  STEP: Ensuring resource quota status released the pod usage @ 02/18/25 18:29:30.644
  STEP: Creating a terminating pod @ 02/18/25 18:29:32.658
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 02/18/25 18:29:32.68
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 02/18/25 18:29:34.693
  STEP: Deleting the pod @ 02/18/25 18:29:36.705
  STEP: Ensuring resource quota status released the pod usage @ 02/18/25 18:29:36.735
  I0218 18:29:38.748126 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-69" for this suite. @ 02/18/25 18:29:38.772
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [20.405 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:908

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:18.436
  I0218 18:29:18.436944 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:29:18.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:18.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:18.492
  STEP: Creating service test in namespace statefulset-6622 @ 02/18/25 18:29:18.507
  STEP: Creating statefulset ss in namespace statefulset-6622 @ 02/18/25 18:29:18.523
  I0218 18:29:18.554314 24 wait.go:40] Found 0 stateful pods, waiting for 1
  I0218 18:29:28.561063 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 02/18/25 18:29:28.589
  STEP: updating a scale subresource @ 02/18/25 18:29:28.605
  STEP: verifying the statefulset Spec.Replicas was modified @ 02/18/25 18:29:28.621
  STEP: Patch a scale subresource @ 02/18/25 18:29:28.636
  STEP: verifying the statefulset Spec.Replicas was modified @ 02/18/25 18:29:28.655
  I0218 18:29:28.672548 24 statefulset.go:138] Deleting all statefulset in ns statefulset-6622
  I0218 18:29:28.686144 24 rest.go:152] Scaling statefulset ss to 0
  I0218 18:29:38.745017 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:29:38.756171 24 rest.go:90] Deleting statefulset ss
  I0218 18:29:38.804018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6622" for this suite. @ 02/18/25 18:29:38.82
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.540 seconds]
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:38.852
  I0218 18:29:38.852522 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename ingress @ 02/18/25 18:29:38.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:38.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:38.931
  STEP: getting /apis @ 02/18/25 18:29:38.968
  STEP: getting /apis/networking.k8s.io @ 02/18/25 18:29:38.99
  STEP: getting /apis/networking.k8s.iov1 @ 02/18/25 18:29:38.998
  STEP: creating @ 02/18/25 18:29:39.005
  STEP: getting @ 02/18/25 18:29:39.058
  STEP: listing @ 02/18/25 18:29:39.069
  STEP: watching @ 02/18/25 18:29:39.092
  I0218 18:29:39.092765 24 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 02/18/25 18:29:39.111
  STEP: cluster-wide watching @ 02/18/25 18:29:39.133
  I0218 18:29:39.133264 24 ingress.go:198] starting watch
  STEP: patching @ 02/18/25 18:29:39.14
  STEP: updating @ 02/18/25 18:29:39.164
  I0218 18:29:39.195698 24 ingress.go:221] waiting for watch events with expected annotations
  I0218 18:29:39.195748 24 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 02/18/25 18:29:39.195
  STEP: updating /status @ 02/18/25 18:29:39.211
  STEP: get /status @ 02/18/25 18:29:39.239
  STEP: deleting @ 02/18/25 18:29:39.248
  STEP: deleting a collection @ 02/18/25 18:29:39.316
  I0218 18:29:39.360066 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-3194" for this suite. @ 02/18/25 18:29:39.375
  << Timeline
------------------------------
SSSS
------------------------------
• [4.243 seconds]
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:194

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:38.809
  I0218 18:29:38.809793 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:29:38.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:38.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:38.863
  STEP: Creating a pod to test downward api env vars @ 02/18/25 18:29:38.877
  STEP: Saw pod success @ 02/18/25 18:29:42.936
  I0218 18:29:42.947939 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downward-api-3b870e8e-88ec-4348-acc8-0f475efa948b container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:29:42.971
  I0218 18:29:43.008325 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-713" for this suite. @ 02/18/25 18:29:43.036
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.169 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:43.075
  I0218 18:29:43.075027 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename custom-resource-definition @ 02/18/25 18:29:43.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:43.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:43.12
  I0218 18:29:43.135539 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:29:44.204891 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3336" for this suite. @ 02/18/25 18:29:44.229
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [2.169 seconds]
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:44.25
  I0218 18:29:44.250638 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replication-controller @ 02/18/25 18:29:44.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:44.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:44.297
  STEP: Creating ReplicationController "e2e-rc-rsw5w" @ 02/18/25 18:29:44.313
  I0218 18:29:44.329058 26 rc.go:792] Get Replication Controller "e2e-rc-rsw5w" to confirm replicas
  I0218 18:29:45.329280 26 rc.go:792] Get Replication Controller "e2e-rc-rsw5w" to confirm replicas
  I0218 18:29:45.341000 26 rc.go:801] Found 1 replicas for "e2e-rc-rsw5w" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-rsw5w" @ 02/18/25 18:29:45.341
  STEP: Updating a scale subresource @ 02/18/25 18:29:45.35
  STEP: Verifying replicas where modified for replication controller "e2e-rc-rsw5w" @ 02/18/25 18:29:45.364
  I0218 18:29:45.364817 26 rc.go:792] Get Replication Controller "e2e-rc-rsw5w" to confirm replicas
  I0218 18:29:46.365011 26 rc.go:792] Get Replication Controller "e2e-rc-rsw5w" to confirm replicas
  I0218 18:29:46.375632 26 rc.go:801] Found 2 replicas for "e2e-rc-rsw5w" replication controller
  I0218 18:29:46.376543 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3618" for this suite. @ 02/18/25 18:29:46.4
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.291 seconds]
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:192

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:46.43
  I0218 18:29:46.430967 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 18:29:46.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:46.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:46.488
  I0218 18:29:46.558101 26 service_accounts.go:282] created pod pod-service-account-defaultsa
  I0218 18:29:46.558129 26 service_accounts.go:296] pod pod-service-account-defaultsa service account token volume mount: true
  I0218 18:29:46.580257 26 service_accounts.go:282] created pod pod-service-account-mountsa
  I0218 18:29:46.580279 26 service_accounts.go:296] pod pod-service-account-mountsa service account token volume mount: true
  I0218 18:29:46.593086 26 service_accounts.go:282] created pod pod-service-account-nomountsa
  I0218 18:29:46.593108 26 service_accounts.go:296] pod pod-service-account-nomountsa service account token volume mount: false
  I0218 18:29:46.606390 26 service_accounts.go:282] created pod pod-service-account-defaultsa-mountspec
  I0218 18:29:46.606413 26 service_accounts.go:296] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0218 18:29:46.623082 26 service_accounts.go:282] created pod pod-service-account-mountsa-mountspec
  I0218 18:29:46.623108 26 service_accounts.go:296] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0218 18:29:46.643169 26 service_accounts.go:282] created pod pod-service-account-nomountsa-mountspec
  I0218 18:29:46.643258 26 service_accounts.go:296] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0218 18:29:46.658029 26 service_accounts.go:282] created pod pod-service-account-defaultsa-nomountspec
  I0218 18:29:46.658066 26 service_accounts.go:296] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0218 18:29:46.677999 26 service_accounts.go:282] created pod pod-service-account-mountsa-nomountspec
  I0218 18:29:46.678037 26 service_accounts.go:296] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0218 18:29:46.692150 26 service_accounts.go:282] created pod pod-service-account-nomountsa-nomountspec
  I0218 18:29:46.692178 26 service_accounts.go:296] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0218 18:29:46.693118 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3373" for this suite. @ 02/18/25 18:29:46.706
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [7.926 seconds]
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:39.398
  I0218 18:29:39.398302 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:29:39.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:39.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:39.469
  STEP: Creating a test headless service @ 02/18/25 18:29:39.496
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2226 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2226;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2226 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2226;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2226.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-2226.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2226.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-2226.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-2226.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-2226.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-2226.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-2226.svc;check="$$(dig +notcp +noall +answer +search 114.27.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.27.114_udp@PTR;check="$$(dig +tcp +noall +answer +search 114.27.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.27.114_tcp@PTR;sleep 1; done
   @ 02/18/25 18:29:39.545
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2226 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2226;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2226 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2226;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2226.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2226.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2226.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2226.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2226.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2226.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2226.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2226.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2226.svc;check="$$(dig +notcp +noall +answer +search 114.27.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.27.114_udp@PTR;check="$$(dig +tcp +noall +answer +search 114.27.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.27.114_tcp@PTR;sleep 1; done
   @ 02/18/25 18:29:39.545
  STEP: creating a pod to probe DNS @ 02/18/25 18:29:39.545
  STEP: submitting the pod to kubernetes @ 02/18/25 18:29:39.545
  STEP: retrieving the pod @ 02/18/25 18:29:41.601
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:29:41.614
  I0218 18:29:41.641949 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.666776 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.700576 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2226 from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.719293 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2226 from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.741287 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.760926 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.781051 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.799414 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.898930 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.915880 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.938602 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2226 from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.960205 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2226 from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:41.977941 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:42.007683 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:42.040759 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:42.057227 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2226.svc from pod dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd: the server could not find the requested resource (get pods dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd)
  I0218 18:29:42.138911 24 dns_common.go:506] Lookups using dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-2226 agnhost_tcp@dns-test-service.dns-2226 agnhost_udp@dns-test-service.dns-2226.svc agnhost_tcp@dns-test-service.dns-2226.svc agnhost_udp@_http._tcp.dns-test-service.dns-2226.svc agnhost_tcp@_http._tcp.dns-test-service.dns-2226.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2226 jessie_tcp@dns-test-service.dns-2226 jessie_udp@dns-test-service.dns-2226.svc jessie_tcp@dns-test-service.dns-2226.svc jessie_udp@_http._tcp.dns-test-service.dns-2226.svc jessie_tcp@_http._tcp.dns-test-service.dns-2226.svc]

  I0218 18:29:42.182849 24 dns_common.go:514] Pod client logs for webserver: 
  I0218 18:29:42.201308 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0218 18:29:42.226798 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0218 18:29:47.182046 24 dns_common.go:546] DNS probes using dns-2226/dns-test-7007a7f7-28a8-42dd-be6e-4f9785d856bd succeeded

  STEP: deleting the pod @ 02/18/25 18:29:47.182
  STEP: deleting the test service @ 02/18/25 18:29:47.22
  STEP: deleting the test headless service @ 02/18/25 18:29:47.264
  I0218 18:29:47.294538 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2226" for this suite. @ 02/18/25 18:29:47.309
  << Timeline
------------------------------
SSSSS
------------------------------
• [5.836 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:47.332
  I0218 18:29:47.332551 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:29:47.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:47.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:47.395
  STEP: Setting up server cert @ 02/18/25 18:29:47.48
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:29:47.768
  STEP: Deploying the webhook pod @ 02/18/25 18:29:47.793
  STEP: Wait for the deployment to be ready @ 02/18/25 18:29:47.825
  I0218 18:29:47.845415 24 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0218 18:29:49.879189 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 29, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 29, 47, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 29, 48, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 29, 47, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-bcbfc85d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 02/18/25 18:29:51.893
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:29:51.919
  I0218 18:29:52.920139 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 02/18/25 18:29:52.968
  I0218 18:29:53.088341 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1459" for this suite. @ 02/18/25 18:29:53.112
  STEP: Destroying namespace "webhook-markers-9970" for this suite. @ 02/18/25 18:29:53.139
  << Timeline
------------------------------
• [9.971 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:46.729
  I0218 18:29:46.729168 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 18:29:46.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:46.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:46.778
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 02/18/25 18:29:46.793
  I0218 18:29:46.794293 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:29:49.194977 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:29:56.652302 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-40" for this suite. @ 02/18/25 18:29:56.684
  << Timeline
------------------------------
• [4.283 seconds]
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:53.174
  I0218 18:29:53.174623 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:29:53.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:53.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:53.253
  STEP: Creating a pod to test substitution in volume subpath @ 02/18/25 18:29:53.269
  STEP: Saw pod success @ 02/18/25 18:29:57.336
  I0218 18:29:57.349226 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod var-expansion-ed9b534c-4671-4a17-bb7f-5597d8e7e842 container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:29:57.374
  I0218 18:29:57.414153 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2087" for this suite. @ 02/18/25 18:29:57.435
  << Timeline
------------------------------
SSS
------------------------------
• [0.200 seconds]
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:57.458
  I0218 18:29:57.458142 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:29:57.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:57.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:57.508
  STEP: Creating a ResourceQuota @ 02/18/25 18:29:57.533
  STEP: Getting a ResourceQuota @ 02/18/25 18:29:57.546
  STEP: Updating a ResourceQuota @ 02/18/25 18:29:57.559
  STEP: Verifying a ResourceQuota was modified @ 02/18/25 18:29:57.576
  STEP: Deleting a ResourceQuota @ 02/18/25 18:29:57.591
  STEP: Verifying the deleted ResourceQuota @ 02/18/25 18:29:57.613
  I0218 18:29:57.624061 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9844" for this suite. @ 02/18/25 18:29:57.64
  << Timeline
------------------------------
SSS
------------------------------
• [4.269 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:56.702
  I0218 18:29:56.702544 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:29:56.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:56.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:56.761
  STEP: Creating configMap with name configmap-test-volume-map-d3e85754-7c1d-432e-8d69-e36220fd0520 @ 02/18/25 18:29:56.774
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:29:56.79
  STEP: Saw pod success @ 02/18/25 18:30:00.853
  I0218 18:30:00.864981 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-4884a9ba-4212-415d-b2e9-0169258a00eb container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:00.889
  I0218 18:30:00.928842 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7978" for this suite. @ 02/18/25 18:30:00.949
  << Timeline
------------------------------
• [9.285 seconds]
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:29:57.662
  I0218 18:29:57.662976 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:29:57.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:29:57.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:29:57.739
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4691 @ 02/18/25 18:29:57.756
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 02/18/25 18:29:57.785
  STEP: creating service externalsvc in namespace services-4691 @ 02/18/25 18:29:57.785
  STEP: creating replication controller externalsvc in namespace services-4691 @ 02/18/25 18:29:57.811
  I0218 18:29:57.841043      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4691, replica count: 2
  I0218 18:30:00.892358      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 02/18/25 18:30:00.909
  I0218 18:30:00.949345 24 resource.go:361] Creating new exec pod
  I0218 18:30:03.012013 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4691 exec execpods8tn5 -- /bin/sh -x -c nslookup clusterip-service.services-4691.svc.cluster.local'
  I0218 18:30:03.325629 24 builder.go:146] stderr: "+ nslookup clusterip-service.services-4691.svc.cluster.local\n"
  I0218 18:30:03.325710 24 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nclusterip-service.services-4691.svc.cluster.local\tcanonical name = externalsvc.services-4691.svc.cluster.local.\nName:\texternalsvc.services-4691.svc.cluster.local\nAddress: 10.240.21.70\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4691, will wait for the garbage collector to delete the pods @ 02/18/25 18:30:03.326
  I0218 18:30:03.405487 24 resources.go:139] Deleting ReplicationController externalsvc took: 18.395797ms
  I0218 18:30:03.505966 24 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.476836ms
  I0218 18:30:06.864545 24 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I0218 18:30:06.901394 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4691" for this suite. @ 02/18/25 18:30:06.926
  << Timeline
------------------------------
SS
------------------------------
• [0.369 seconds]
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:06.951
  I0218 18:30:06.951836 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename cronjob @ 02/18/25 18:30:06.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:06.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:07.001
  STEP: Creating a cronjob @ 02/18/25 18:30:07.017
  STEP: creating @ 02/18/25 18:30:07.017
  STEP: getting @ 02/18/25 18:30:07.036
  STEP: listing @ 02/18/25 18:30:07.046
  STEP: watching @ 02/18/25 18:30:07.056
  I0218 18:30:07.056134 24 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 02/18/25 18:30:07.062
  STEP: cluster-wide watching @ 02/18/25 18:30:07.08
  I0218 18:30:07.080982 24 cronjob.go:407] starting watch
  STEP: patching @ 02/18/25 18:30:07.088
  STEP: updating @ 02/18/25 18:30:07.115
  I0218 18:30:07.139764 24 cronjob.go:431] waiting for watch events with expected annotations
  I0218 18:30:07.139815 24 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 02/18/25 18:30:07.139
  STEP: updating /status @ 02/18/25 18:30:07.156
  STEP: get /status @ 02/18/25 18:30:07.182
  STEP: deleting @ 02/18/25 18:30:07.199
  STEP: deleting a collection @ 02/18/25 18:30:07.246
  I0218 18:30:07.286182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-675" for this suite. @ 02/18/25 18:30:07.297
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.278 seconds]
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:07.326
  I0218 18:30:07.326731 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:30:07.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:07.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:07.392
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 02/18/25 18:30:07.408
  STEP: Saw pod success @ 02/18/25 18:30:11.466
  I0218 18:30:11.483387 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-930587d6-4ca2-4a79-bf00-2c8747261108 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:11.506
  I0218 18:30:11.557651 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2011" for this suite. @ 02/18/25 18:30:11.584
  << Timeline
------------------------------
• [2.204 seconds]
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:11.606
  I0218 18:30:11.606295 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:30:11.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:11.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:11.661
  STEP: creating pod @ 02/18/25 18:30:11.678
  I0218 18:30:13.767290 24 pods.go:83] Pod pod-hostip-d2a0b806-5e2d-441b-be10-755324446c47 has hostIP: 10.0.0.2
  I0218 18:30:13.768311 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8710" for this suite. @ 02/18/25 18:30:13.791
  << Timeline
------------------------------
SSSS
------------------------------
• [2.307 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:13.814
  I0218 18:30:13.814644 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:30:13.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:13.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:13.876
  STEP: Creating configMap with name configmap-test-volume-map-3f84f259-634a-481c-99f6-01c6b995cc4f @ 02/18/25 18:30:13.891
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:30:13.903
  STEP: Saw pod success @ 02/18/25 18:30:15.968
  I0218 18:30:15.983695 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-ffb7e3fe-cca6-4064-8d7d-17ef4c48a59b container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:16.007
  I0218 18:30:16.078628 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5608" for this suite. @ 02/18/25 18:30:16.103
  << Timeline
------------------------------
SS
------------------------------
• [4.272 seconds]
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:16.125
  I0218 18:30:16.125262 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:30:16.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:16.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:16.178
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:30:16.195
  STEP: Saw pod success @ 02/18/25 18:30:20.27
  I0218 18:30:20.284309 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-dfea6369-c3b0-40d7-a8c7-6f33ec1fd8e6 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:20.306
  I0218 18:30:20.348391 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8957" for this suite. @ 02/18/25 18:30:20.377
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [22.392 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:00.972
  I0218 18:30:00.972574 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename subpath @ 02/18/25 18:30:00.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:01.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:01.025
  STEP: Setting up data @ 02/18/25 18:30:01.038
  STEP: Creating pod pod-subpath-test-downwardapi-s2nl @ 02/18/25 18:30:01.07
  STEP: Creating a pod to test atomic-volume-subpath @ 02/18/25 18:30:01.07
  STEP: Saw pod success @ 02/18/25 18:30:23.243
  I0218 18:30:23.253705 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-subpath-test-downwardapi-s2nl container test-container-subpath-downwardapi-s2nl: <nil>
  STEP: delete the pod @ 02/18/25 18:30:23.276
  STEP: Deleting pod pod-subpath-test-downwardapi-s2nl @ 02/18/25 18:30:23.309
  I0218 18:30:23.309918 26 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-s2nl" in namespace "subpath-1099"
  I0218 18:30:23.324594 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1099" for this suite. @ 02/18/25 18:30:23.347
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [3.223 seconds]
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:20.416
  I0218 18:30:20.416791 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename replication-controller @ 02/18/25 18:30:20.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:20.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:20.474
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 02/18/25 18:30:20.492
  STEP: When a replication controller with a matching selector is created @ 02/18/25 18:30:22.561
  STEP: Then the orphan pod is adopted @ 02/18/25 18:30:22.573
  I0218 18:30:23.597510 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9210" for this suite. @ 02/18/25 18:30:23.623
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [3.879 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:23.644
  I0218 18:30:23.644403 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:30:23.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:23.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:23.711
  STEP: Setting up server cert @ 02/18/25 18:30:23.8
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:30:24.07
  STEP: Deploying the webhook pod @ 02/18/25 18:30:24.086
  STEP: Wait for the deployment to be ready @ 02/18/25 18:30:24.148
  I0218 18:30:24.175376 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:30:26.211
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:30:26.232
  I0218 18:30:27.233705 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 02/18/25 18:30:27.257
  STEP: verifying the validating webhook match conditions @ 02/18/25 18:30:27.296
  STEP: updating the validating webhook match conditions @ 02/18/25 18:30:27.313
  STEP: verifying the validating webhook match conditions @ 02/18/25 18:30:27.333
  I0218 18:30:27.459696 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-91" for this suite. @ 02/18/25 18:30:27.486
  STEP: Destroying namespace "webhook-markers-8400" for this suite. @ 02/18/25 18:30:27.508
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [2.199 seconds]
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:27.535
  I0218 18:30:27.535230 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubelet-test @ 02/18/25 18:30:27.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:27.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:27.586
  I0218 18:30:29.686325 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2754" for this suite. @ 02/18/25 18:30:29.712
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.176 seconds]
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:23.374
  I0218 18:30:23.374552 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:30:23.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:23.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:23.424
  STEP: creating all guestbook components @ 02/18/25 18:30:23.438
  I0218 18:30:23.438780 26 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0218 18:30:23.438881 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 create -f -'
  I0218 18:30:23.661565 26 builder.go:146] stderr: ""
  I0218 18:30:23.661602 26 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0218 18:30:23.661633 26 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0218 18:30:23.661682 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 create -f -'
  I0218 18:30:23.881725 26 builder.go:146] stderr: ""
  I0218 18:30:23.881765 26 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0218 18:30:23.881816 26 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0218 18:30:23.881881 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 create -f -'
  I0218 18:30:24.026350 26 builder.go:146] stderr: ""
  I0218 18:30:24.026384 26 builder.go:147] stdout: "service/frontend created\n"
  I0218 18:30:24.026487 26 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0218 18:30:24.026540 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 create -f -'
  I0218 18:30:24.192694 26 builder.go:146] stderr: ""
  I0218 18:30:24.192742 26 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0218 18:30:24.192836 26 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0218 18:30:24.192914 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 create -f -'
  I0218 18:30:24.338107 26 builder.go:146] stderr: ""
  I0218 18:30:24.338152 26 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0218 18:30:24.338215 26 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.53
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0218 18:30:24.338257 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 create -f -'
  I0218 18:30:24.477056 26 builder.go:146] stderr: ""
  I0218 18:30:24.477097 26 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 02/18/25 18:30:24.477
  I0218 18:30:24.477119 26 kubectl.go:2269] Waiting for all frontend pods to be Running.
  I0218 18:30:29.528925 26 kubectl.go:2273] Waiting for frontend to serve content.
  I0218 18:30:29.568665 26 kubectl.go:2278] Trying to add a new entry to the guestbook.
  I0218 18:30:29.605271 26 kubectl.go:2283] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 02/18/25 18:30:29.627
  I0218 18:30:29.627962 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 delete --grace-period=0 --force -f -'
  I0218 18:30:29.782540 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:30:29.782598 26 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 02/18/25 18:30:29.782
  I0218 18:30:29.782704 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 delete --grace-period=0 --force -f -'
  I0218 18:30:29.937796 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:30:29.937848 26 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 02/18/25 18:30:29.937
  I0218 18:30:29.938001 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 delete --grace-period=0 --force -f -'
  I0218 18:30:30.101960 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:30:30.102009 26 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 02/18/25 18:30:30.102
  I0218 18:30:30.102155 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 delete --grace-period=0 --force -f -'
  I0218 18:30:30.243262 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:30:30.243321 26 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 02/18/25 18:30:30.243
  I0218 18:30:30.243568 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 delete --grace-period=0 --force -f -'
  I0218 18:30:30.405395 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:30:30.405470 26 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 02/18/25 18:30:30.405
  I0218 18:30:30.405635 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7285 delete --grace-period=0 --force -f -'
  I0218 18:30:30.508594 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:30:30.508637 26 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0218 18:30:30.509466 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7285" for this suite. @ 02/18/25 18:30:30.531
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [2.781 seconds]
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:29.75
  I0218 18:30:29.750185 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:30:29.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:29.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:29.816
  STEP: creating the pod @ 02/18/25 18:30:29.831
  STEP: submitting the pod to kubernetes @ 02/18/25 18:30:29.831
  STEP: verifying the pod is in kubernetes @ 02/18/25 18:30:31.909
  STEP: updating the pod @ 02/18/25 18:30:31.927
  I0218 18:30:32.460691 24 pod_client.go:173] Successfully updated pod "pod-update-a9ce5c11-b964-4362-9671-71b52baf8cd7"
  STEP: verifying the updated pod is in kubernetes @ 02/18/25 18:30:32.474
  I0218 18:30:32.483579 24 pods.go:391] Pod update OK
  I0218 18:30:32.484584 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6570" for this suite. @ 02/18/25 18:30:32.511
  << Timeline
------------------------------
SSSS
------------------------------
• [4.248 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:30.563
  I0218 18:30:30.563373 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:30:30.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:30.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:30.614
  STEP: Creating configMap with name configmap-test-volume-43e853f1-b324-405e-a46b-6c0c9d4f30c0 @ 02/18/25 18:30:30.628
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:30:30.639
  STEP: Saw pod success @ 02/18/25 18:30:34.701
  I0218 18:30:34.710996 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-352a7aef-9580-47c9-bd84-27aff26d3da4 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:34.735
  I0218 18:30:34.776212 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3516" for this suite. @ 02/18/25 18:30:34.795
  << Timeline
------------------------------
• [0.116 seconds]
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:34.813
  I0218 18:30:34.813042 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename aggregateddiscovery @ 02/18/25 18:30:34.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:34.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:34.874
  I0218 18:30:34.902916 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4743" for this suite. @ 02/18/25 18:30:34.914
  << Timeline
------------------------------
SS
------------------------------
• [4.309 seconds]
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:295

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:32.536
  I0218 18:30:32.536722 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:30:32.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:32.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:32.598
  STEP: Creating a pod to test downward api env vars @ 02/18/25 18:30:32.614
  STEP: Saw pod success @ 02/18/25 18:30:36.689
  I0218 18:30:36.704250 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downward-api-e2bb97f6-4368-44b3-a045-ba0bbf86750c container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:36.733
  I0218 18:30:36.787041 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9462" for this suite. @ 02/18/25 18:30:36.822
  << Timeline
------------------------------
• [0.131 seconds]
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:36.847
  I0218 18:30:36.847018 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename tables @ 02/18/25 18:30:36.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:36.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:36.904
  I0218 18:30:36.944552 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8757" for this suite. @ 02/18/25 18:30:36.959
  << Timeline
------------------------------
• [2.267 seconds]
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:34.932
  I0218 18:30:34.932250 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:30:34.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:34.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:34.987
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:30:35.001
  STEP: Saw pod success @ 02/18/25 18:30:37.072
  I0218 18:30:37.087257 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-73a20311-503a-42c0-8513-07f21bb0eda2 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:30:37.115
  I0218 18:30:37.159871 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4486" for this suite. @ 02/18/25 18:30:37.18
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [4.478 seconds]
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:37.208
  I0218 18:30:37.208317 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:30:37.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:37.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:37.254
  STEP: Creating secret with name s-test-opt-del-90d650b1-1ede-4ee4-a721-8c81e01dab6a @ 02/18/25 18:30:37.286
  STEP: Creating secret with name s-test-opt-upd-4dfb593e-6abc-4140-beea-0be5c4b6d6bc @ 02/18/25 18:30:37.304
  STEP: Creating the pod @ 02/18/25 18:30:37.32
  STEP: Deleting secret s-test-opt-del-90d650b1-1ede-4ee4-a721-8c81e01dab6a @ 02/18/25 18:30:39.475
  STEP: Updating secret s-test-opt-upd-4dfb593e-6abc-4140-beea-0be5c4b6d6bc @ 02/18/25 18:30:39.49
  STEP: Creating secret with name s-test-opt-create-905f93c4-6228-4a73-8256-75af80b64ea1 @ 02/18/25 18:30:39.509
  STEP: waiting to observe update in volume @ 02/18/25 18:30:39.524
  I0218 18:30:41.637146 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4321" for this suite. @ 02/18/25 18:30:41.66
  << Timeline
------------------------------
SSS
------------------------------
• [4.146 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:41.691
  I0218 18:30:41.691573 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:30:41.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:41.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:41.747
  STEP: Setting up server cert @ 02/18/25 18:30:41.804
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:30:42.018
  STEP: Deploying the webhook pod @ 02/18/25 18:30:42.042
  STEP: Wait for the deployment to be ready @ 02/18/25 18:30:42.084
  I0218 18:30:42.112922 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:30:44.146
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:30:44.169
  I0218 18:30:45.169682 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 02/18/25 18:30:45.355
  STEP: Creating a configMap that should be mutated @ 02/18/25 18:30:45.414
  STEP: Deleting the collection of validation webhooks @ 02/18/25 18:30:45.543
  STEP: Creating a configMap that should not be mutated @ 02/18/25 18:30:45.666
  I0218 18:30:45.784740 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-144" for this suite. @ 02/18/25 18:30:45.798
  STEP: Destroying namespace "webhook-markers-8296" for this suite. @ 02/18/25 18:30:45.818
  << Timeline
------------------------------
SS
------------------------------
• [9.293 seconds]
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:36.979
  I0218 18:30:36.979369 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:30:36.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:37.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:37.087
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1213 @ 02/18/25 18:30:37.11
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 02/18/25 18:30:37.153
  STEP: creating service externalsvc in namespace services-1213 @ 02/18/25 18:30:37.153
  STEP: creating replication controller externalsvc in namespace services-1213 @ 02/18/25 18:30:37.216
  I0218 18:30:37.243478      24 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1213, replica count: 2
  I0218 18:30:40.295505      24 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 02/18/25 18:30:40.305
  I0218 18:30:40.364541 24 resource.go:361] Creating new exec pod
  I0218 18:30:42.430778 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-1213 exec execpod2tq2v -- /bin/sh -x -c nslookup nodeport-service.services-1213.svc.cluster.local'
  I0218 18:30:42.741697 24 builder.go:146] stderr: "+ nslookup nodeport-service.services-1213.svc.cluster.local\n"
  I0218 18:30:42.741757 24 builder.go:147] stdout: "Server:\t\t169.254.20.10\nAddress:\t169.254.20.10#53\n\nnodeport-service.services-1213.svc.cluster.local\tcanonical name = externalsvc.services-1213.svc.cluster.local.\nName:\texternalsvc.services-1213.svc.cluster.local\nAddress: 10.240.27.127\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1213, will wait for the garbage collector to delete the pods @ 02/18/25 18:30:42.742
  I0218 18:30:42.840516 24 resources.go:139] Deleting ReplicationController externalsvc took: 35.111132ms
  I0218 18:30:42.941120 24 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.60147ms
  I0218 18:30:46.187033 24 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I0218 18:30:46.217285 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1213" for this suite. @ 02/18/25 18:30:46.236
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.306 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:45.842
  I0218 18:30:45.842200 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 02/18/25 18:30:45.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:45.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:45.902
  STEP: create the container to handle the HTTPGet hook request. @ 02/18/25 18:30:45.939
  STEP: create the pod with lifecycle hook @ 02/18/25 18:30:47.993
  STEP: delete the pod with lifecycle hook @ 02/18/25 18:30:50.045
  STEP: check prestop hook @ 02/18/25 18:30:52.084
  I0218 18:30:52.113730 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-18" for this suite. @ 02/18/25 18:30:52.133
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [0.116 seconds]
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:52.162
  I0218 18:30:52.162112 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename endpointslice @ 02/18/25 18:30:52.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:52.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:52.206
  I0218 18:30:52.251372 26 endpointslice.go:1045] Endpoints addresses: [100.64.30.10] , ports: [6443]
  I0218 18:30:52.251405 26 endpointslice.go:1075] EndpointSlices addresses: [100.64.30.10] , ports: [6443]
  I0218 18:30:52.252299 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2166" for this suite. @ 02/18/25 18:30:52.263
  << Timeline
------------------------------
S
------------------------------
• [6.849 seconds]
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:46.304
  I0218 18:30:46.304114 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:30:46.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:46.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:46.378
  STEP: Creating the pod @ 02/18/25 18:30:46.393
  I0218 18:30:49.029631 24 pod_client.go:173] Successfully updated pod "labelsupdate0c5705cd-30d6-46dc-8201-f204a83c8fc6"
  I0218 18:30:53.104966 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4073" for this suite. @ 02/18/25 18:30:53.134
  << Timeline
------------------------------
• [4.325 seconds]
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:52.281
  I0218 18:30:52.281114 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:30:52.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:52.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:52.326
  STEP: Creating projection with secret that has name projected-secret-test-3dd17954-12f9-4fb2-a2d1-880f2c81e2fd @ 02/18/25 18:30:52.341
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:30:52.353
  STEP: Saw pod success @ 02/18/25 18:30:56.426
  I0218 18:30:56.443766 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-secrets-4297ac28-bca9-4de2-a285-bfa1448389e3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:30:56.508
  I0218 18:30:56.570694 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9958" for this suite. @ 02/18/25 18:30:56.59
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.294 seconds]
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:56.643
  I0218 18:30:56.643822 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:30:56.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:56.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:56.69
  STEP: Creating Pod @ 02/18/25 18:30:56.704
  STEP: Reading file content from the nginx-container @ 02/18/25 18:30:58.755
  I0218 18:30:58.755529 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5818 PodName:pod-sharedvolume-7fcacb72-56e8-4264-86b9-5eb914c3c4f9 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:30:58.755553 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:30:58.755623 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/emptydir-5818/pods/pod-sharedvolume-7fcacb72-56e8-4264-86b9-5eb914c3c4f9/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0218 18:30:58.902297 26 exec_util.go:108] Exec stderr: ""
  I0218 18:30:58.903288 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5818" for this suite. @ 02/18/25 18:30:58.923
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [9.166 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:53.154
  I0218 18:30:53.154693 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename crd-webhook @ 02/18/25 18:30:53.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:53.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:53.232
  STEP: Setting up server cert @ 02/18/25 18:30:53.25
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 02/18/25 18:30:53.616
  STEP: Deploying the custom resource conversion webhook pod @ 02/18/25 18:30:53.629
  STEP: Wait for the deployment to be ready @ 02/18/25 18:30:53.654
  I0218 18:30:53.682868 24 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0218 18:30:55.717141 24 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 30, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 30, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 30, 53, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 30, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-99f4d744b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 02/18/25 18:30:57.738
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:30:57.776
  I0218 18:30:58.777875 24 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0218 18:30:58.802959 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Creating a v1 custom resource @ 02/18/25 18:31:01.512
  STEP: v2 custom resource should be converted @ 02/18/25 18:31:01.527
  I0218 18:31:02.268690 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1637" for this suite. @ 02/18/25 18:31:02.292
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.259 seconds]
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:02.327
  I0218 18:31:02.327050 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:31:02.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:02.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:02.387
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:31:02.404
  STEP: Saw pod success @ 02/18/25 18:31:06.468
  I0218 18:31:06.484359 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-7ab31c4e-1c0a-4999-b804-f7e9b797470f container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:31:06.507
  I0218 18:31:06.546117 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6113" for this suite. @ 02/18/25 18:31:06.57
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [28.219 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:30:58.956
  I0218 18:30:58.956822 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:30:58.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:30:58.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:30:59.002
  STEP: Counting existing ResourceQuota @ 02/18/25 18:31:16.027
  STEP: Creating a ResourceQuota @ 02/18/25 18:31:21.038
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:31:21.051
  STEP: Creating a ConfigMap @ 02/18/25 18:31:23.063
  STEP: Ensuring resource quota status captures configMap creation @ 02/18/25 18:31:23.086
  STEP: Deleting a ConfigMap @ 02/18/25 18:31:25.097
  STEP: Ensuring resource quota status released usage @ 02/18/25 18:31:25.119
  I0218 18:31:27.131966 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6695" for this suite. @ 02/18/25 18:31:27.156
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [24.433 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:06.593
  I0218 18:31:06.593988 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename subpath @ 02/18/25 18:31:06.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:06.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:06.651
  STEP: Setting up data @ 02/18/25 18:31:06.674
  STEP: Creating pod pod-subpath-test-projected-cqxk @ 02/18/25 18:31:06.699
  STEP: Creating a pod to test atomic-volume-subpath @ 02/18/25 18:31:06.699
  STEP: Saw pod success @ 02/18/25 18:31:30.9
  I0218 18:31:30.910616 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-subpath-test-projected-cqxk container test-container-subpath-projected-cqxk: <nil>
  STEP: delete the pod @ 02/18/25 18:31:30.935
  STEP: Deleting pod pod-subpath-test-projected-cqxk @ 02/18/25 18:31:30.971
  I0218 18:31:30.971104 24 delete.go:62] Deleting pod "pod-subpath-test-projected-cqxk" in namespace "subpath-7968"
  I0218 18:31:30.981624 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7968" for this suite. @ 02/18/25 18:31:31.008
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.264 seconds]
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:306

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:27.188
  I0218 18:31:27.188336 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 18:31:27.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:27.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:27.237
  STEP: Creating a pod to test service account token:  @ 02/18/25 18:31:27.251
  STEP: Saw pod success @ 02/18/25 18:31:31.332
  I0218 18:31:31.340304 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod test-pod-929ad836-6175-4483-bffa-1af57c2eea5b container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:31:31.37
  I0218 18:31:31.419816 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2810" for this suite. @ 02/18/25 18:31:31.438
  << Timeline
------------------------------
SS
------------------------------
• [0.402 seconds]
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:31.455
  I0218 18:31:31.455735 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename apf @ 02/18/25 18:31:31.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:31.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:31.505
  STEP: getting /apis @ 02/18/25 18:31:31.521
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 02/18/25 18:31:31.534
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 02/18/25 18:31:31.54
  STEP: creating @ 02/18/25 18:31:31.546
  STEP: getting @ 02/18/25 18:31:31.583
  STEP: listing @ 02/18/25 18:31:31.595
  STEP: watching @ 02/18/25 18:31:31.604
  I0218 18:31:31.604873 26 flowcontrol.go:620] starting watch
  STEP: patching @ 02/18/25 18:31:31.61
  STEP: updating @ 02/18/25 18:31:31.622
  I0218 18:31:31.649915 26 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 02/18/25 18:31:31.65
  STEP: patching /status @ 02/18/25 18:31:31.658
  STEP: updating /status @ 02/18/25 18:31:31.683
  STEP: deleting @ 02/18/25 18:31:31.705
  STEP: deleting a collection @ 02/18/25 18:31:31.746
  I0218 18:31:31.815129 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7187" for this suite. @ 02/18/25 18:31:31.838
  << Timeline
------------------------------
SSSSS
------------------------------
• [6.965 seconds]
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:31.864
  I0218 18:31:31.864043 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replicaset @ 02/18/25 18:31:31.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:31.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:31.917
  I0218 18:31:31.965824 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0218 18:31:36.976406 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 02/18/25 18:31:36.976
  STEP: Scaling up "test-rs" replicaset @ 02/18/25 18:31:36.976
  I0218 18:31:37.002272 26 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 02/18/25 18:31:37.002
  I0218 18:31:37.024899 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2140 with ReadyReplicas 1, AvailableReplicas 1
  I0218 18:31:37.042859 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2140 with ReadyReplicas 1, AvailableReplicas 1
  I0218 18:31:37.061356 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2140 with ReadyReplicas 1, AvailableReplicas 1
  I0218 18:31:37.086121 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2140 with ReadyReplicas 1, AvailableReplicas 1
  I0218 18:31:38.185269 26 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-2140 with ReadyReplicas 2, AvailableReplicas 2
  I0218 18:31:38.790710 26 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-2140 with ReadyReplicas 3 found true
  I0218 18:31:38.791753 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2140" for this suite. @ 02/18/25 18:31:38.813
  << Timeline
------------------------------
SSSSS
------------------------------
• [22.395 seconds]
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:31.033
  I0218 18:31:31.033713 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:31:31.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:31.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:31.088
  STEP: Creating pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868 @ 02/18/25 18:31:31.105
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:31:33.172
  I0218 18:31:33.195927 24 container_probe.go:1749] Initial restart count of pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 is 0
  I0218 18:31:33.209156 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:35.221105 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:37.232246 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:39.243949 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:41.256337 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:43.273226 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:45.285503 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:47.300748 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:49.314405 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:51.336760 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:53.350489 24 container_probe.go:1759] Get pod liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 in namespace container-probe-9868
  I0218 18:31:53.350533 24 container_probe.go:1763] Restart count of pod container-probe-9868/liveness-d5260f7d-a5cc-41af-afcb-a3973fe2f5b7 is now 1 (20.154555322s elapsed)
  STEP: deleting the pod @ 02/18/25 18:31:53.351
  I0218 18:31:53.384892 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9868" for this suite. @ 02/18/25 18:31:53.409
  << Timeline
------------------------------
SS
------------------------------
• [4.704 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:53.431
  I0218 18:31:53.431736 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 18:31:53.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:53.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:53.498
  I0218 18:31:53.512532 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 02/18/25 18:31:55.38
  I0218 18:31:55.380760 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=crd-publish-openapi-9468 --namespace=crd-publish-openapi-9468 create -f -'
  I0218 18:31:55.599625 24 builder.go:146] stderr: ""
  I0218 18:31:55.599676 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8907-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0218 18:31:55.599765 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=crd-publish-openapi-9468 --namespace=crd-publish-openapi-9468 delete e2e-test-crd-publish-openapi-8907-crds test-cr'
  I0218 18:31:55.736345 24 builder.go:146] stderr: ""
  I0218 18:31:55.736405 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8907-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0218 18:31:55.736542 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=crd-publish-openapi-9468 --namespace=crd-publish-openapi-9468 apply -f -'
  I0218 18:31:55.887554 24 builder.go:146] stderr: ""
  I0218 18:31:55.887629 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8907-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0218 18:31:55.887721 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=crd-publish-openapi-9468 --namespace=crd-publish-openapi-9468 delete e2e-test-crd-publish-openapi-8907-crds test-cr'
  I0218 18:31:56.041584 24 builder.go:146] stderr: ""
  I0218 18:31:56.041638 24 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8907-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 02/18/25 18:31:56.041
  I0218 18:31:56.041722 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=crd-publish-openapi-9468 explain e2e-test-crd-publish-openapi-8907-crds'
  I0218 18:31:56.168875 24 builder.go:146] stderr: ""
  I0218 18:31:56.168937 24 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8907-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0218 18:31:58.075471 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9468" for this suite. @ 02/18/25 18:31:58.117
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [82.149 seconds]
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:38.835
  I0218 18:31:38.835928 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename cronjob @ 02/18/25 18:31:38.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:38.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:38.881
  STEP: Creating a cronjob @ 02/18/25 18:31:38.894
  STEP: Ensuring more than one job is running at a time @ 02/18/25 18:31:38.905
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 02/18/25 18:33:00.915
  STEP: Removing cronjob @ 02/18/25 18:33:00.924
  I0218 18:33:00.941229 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5944" for this suite. @ 02/18/25 18:33:00.962
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.428 seconds]
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:01.001
  I0218 18:33:01.001211 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:33:01.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:01.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:01.043
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5280 @ 02/18/25 18:33:01.057
  STEP: changing the ExternalName service to type=NodePort @ 02/18/25 18:33:01.071
  STEP: creating replication controller externalname-service in namespace services-5280 @ 02/18/25 18:33:01.116
  I0218 18:33:01.130814      26 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5280, replica count: 2
  I0218 18:33:04.181344      26 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:33:04.181379 26 resource.go:361] Creating new exec pod
  I0218 18:33:07.265286 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5280 exec execpodfqgrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0218 18:33:07.527807 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.240.20.193) 80 port [tcp/http] succeeded!\n"
  I0218 18:33:07.527887 26 builder.go:147] stdout: "externalname-service-mhtxl"
  I0218 18:33:07.528010 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5280 exec execpodfqgrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.20.193 80'
  I0218 18:33:07.788780 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.20.193 80\nConnection to 10.240.20.193 80 port [tcp/http] succeeded!\n"
  I0218 18:33:07.788832 26 builder.go:147] stdout: "externalname-service-mhtxl"
  I0218 18:33:07.788950 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5280 exec execpodfqgrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.2 30859'
  I0218 18:33:08.047268 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.2 30859\nConnection to 10.0.0.2 30859 port [tcp/*] succeeded!\n"
  I0218 18:33:08.047324 26 builder.go:147] stdout: ""
  I0218 18:33:08.789492 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5280 exec execpodfqgrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.2 30859'
  I0218 18:33:09.068395 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.2 30859\nConnection to 10.0.0.2 30859 port [tcp/*] succeeded!\n"
  I0218 18:33:09.068491 26 builder.go:147] stdout: "externalname-service-mhtxl"
  I0218 18:33:09.068608 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5280 exec execpodfqgrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.5 30859'
  I0218 18:33:09.335202 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.5 30859\nConnection to 10.0.0.5 30859 port [tcp/*] succeeded!\n"
  I0218 18:33:09.335283 26 builder.go:147] stdout: "externalname-service-2pwkd"
  I0218 18:33:09.335846 26 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I0218 18:33:09.390112 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5280" for this suite. @ 02/18/25 18:33:09.412
  << Timeline
------------------------------
S
------------------------------
• [2.234 seconds]
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:09.433
  I0218 18:33:09.433467 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir-wrapper @ 02/18/25 18:33:09.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:09.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:09.477
  STEP: Cleaning up the secret @ 02/18/25 18:33:11.573
  STEP: Cleaning up the configmap @ 02/18/25 18:33:11.589
  STEP: Cleaning up the pod @ 02/18/25 18:33:11.608
  I0218 18:33:11.637290 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4047" for this suite. @ 02/18/25 18:33:11.652
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [2.188 seconds]
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1008

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:11.679
  I0218 18:33:11.679789 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename job @ 02/18/25 18:33:11.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:11.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:11.74
  STEP: Creating a job @ 02/18/25 18:33:11.754
  STEP: Ensure pods equal to parallelism count is attached to the job @ 02/18/25 18:33:11.765
  STEP: patching /status @ 02/18/25 18:33:13.786
  STEP: updating /status @ 02/18/25 18:33:13.8
  STEP: get /status @ 02/18/25 18:33:13.821
  I0218 18:33:13.833619 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3762" for this suite. @ 02/18/25 18:33:13.849
  << Timeline
------------------------------
SS
------------------------------
• [4.238 seconds]
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:13.871
  I0218 18:33:13.871838 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:33:13.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:13.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:13.919
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 02/18/25 18:33:13.933
  STEP: Saw pod success @ 02/18/25 18:33:17.997
  I0218 18:33:18.012284 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-40393a02-06ed-4e1b-a15a-f1d4e8e6fe1a container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:33:18.04
  I0218 18:33:18.071804 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1710" for this suite. @ 02/18/25 18:33:18.088
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.250 seconds]
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:18.123
  I0218 18:33:18.123910 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:33:18.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:18.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:18.165
  STEP: Creating configMap with name projected-configmap-test-volume-747b0532-9fda-4a29-aff3-fb926451f9de @ 02/18/25 18:33:18.178
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:33:18.192
  STEP: Saw pod success @ 02/18/25 18:33:22.249
  I0218 18:33:22.258295 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-bw8qq pod pod-projected-configmaps-4a071cb0-2035-4bbd-abee-b77afe42b230 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:33:22.286
  I0218 18:33:22.327176 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3550" for this suite. @ 02/18/25 18:33:22.351
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.227 seconds]
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:22.39
  I0218 18:33:22.390736 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:33:22.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:22.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:22.437
  STEP: Creating secret with name projected-secret-test-0f1a2010-3078-4863-9da1-6ef8fd0fc28c @ 02/18/25 18:33:22.451
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:33:22.462
  STEP: Saw pod success @ 02/18/25 18:33:24.503
  I0218 18:33:24.514570 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-secrets-74f4bf1e-27f9-44a9-9a09-76fb959819d6 container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:33:24.542
  I0218 18:33:24.578587 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4425" for this suite. @ 02/18/25 18:33:24.597
  << Timeline
------------------------------
S
------------------------------
• [4.239 seconds]
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:24.62
  I0218 18:33:24.620906 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename containers @ 02/18/25 18:33:24.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:24.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:24.663
  STEP: Creating a pod to test override arguments @ 02/18/25 18:33:24.677
  STEP: Saw pod success @ 02/18/25 18:33:28.737
  I0218 18:33:28.747595 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod client-containers-e76756e7-3946-468f-acb3-8571ab6b2fcc container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:33:28.774
  I0218 18:33:28.816112 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8483" for this suite. @ 02/18/25 18:33:28.839
  << Timeline
------------------------------
• [7.516 seconds]
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1788

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:28.862
  I0218 18:33:28.862324 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:33:28.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:28.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:28.918
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 02/18/25 18:33:28.933
  I0218 18:33:28.933252 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-4589 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0218 18:33:29.070172 26 builder.go:146] stderr: ""
  I0218 18:33:29.070233 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 02/18/25 18:33:29.07
  STEP: verifying the pod e2e-test-httpd-pod was created @ 02/18/25 18:33:34.122
  I0218 18:33:34.122207 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-4589 get pod e2e-test-httpd-pod -o json'
  I0218 18:33:34.250390 26 builder.go:146] stderr: ""
  I0218 18:33:34.250603 26 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"4db5e6234ccacecd2c46265d054164f35e8592befe8d535fb8484a64eb6f1f3b\",\n            \"cni.projectcalico.org/podIP\": \"172.25.0.64/32\",\n            \"cni.projectcalico.org/podIPs\": \"172.25.0.64/32\"\n        },\n        \"creationTimestamp\": \"2025-02-18T18:33:29Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-4589\",\n        \"resourceVersion\": \"199058\",\n        \"uid\": \"c10e4a3f-a1af-486f-8df4-5441cef5faca\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-z69rn\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"admiring-kalam-9d8f4776-dzdlc\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-z69rn\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-02-18T18:33:30Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-02-18T18:33:29Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-02-18T18:33:30Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-02-18T18:33:30Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-02-18T18:33:29Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://761180e615da2fc7e88788b2a83b148a15db709f973a89c289146b6e9194507e\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-02-18T18:33:29Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-z69rn\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"10.0.0.2\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.0.0.2\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.25.0.64\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.25.0.64\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-02-18T18:33:29Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 02/18/25 18:33:34.25
  I0218 18:33:34.250731 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-4589 replace -f -'
  I0218 18:33:34.492040 26 builder.go:146] stderr: ""
  I0218 18:33:34.492081 26 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 02/18/25 18:33:34.492
  I0218 18:33:34.502157 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-4589 delete pods e2e-test-httpd-pod'
  I0218 18:33:36.341393 26 builder.go:146] stderr: ""
  I0218 18:33:36.341555 26 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0218 18:33:36.342689 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4589" for this suite. @ 02/18/25 18:33:36.361
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [3.200 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:36.391
  I0218 18:33:36.391891 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-runtime @ 02/18/25 18:33:36.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:36.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:36.436
  STEP: create the container @ 02/18/25 18:33:36.449
  W0218 18:33:36.466416      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 02/18/25 18:33:36.466
  STEP: get the container status @ 02/18/25 18:33:39.51
  STEP: the container should be terminated @ 02/18/25 18:33:39.519
  STEP: the termination message should be set @ 02/18/25 18:33:39.519
  I0218 18:33:39.519551 26 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 02/18/25 18:33:39.519
  I0218 18:33:39.555087 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-263" for this suite. @ 02/18/25 18:33:39.577
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.192 seconds]
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:39.601
  I0218 18:33:39.601485 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename events @ 02/18/25 18:33:39.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:39.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:39.645
  STEP: Create set of events @ 02/18/25 18:33:39.659
  STEP: get a list of Events with a label in the current namespace @ 02/18/25 18:33:39.693
  STEP: delete a list of events @ 02/18/25 18:33:39.704
  I0218 18:33:39.704178 26 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 02/18/25 18:33:39.748
  I0218 18:33:39.758046 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9824" for this suite. @ 02/18/25 18:33:39.772
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [5.902 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:39.801
  I0218 18:33:39.801948 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:33:39.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:39.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:39.843
  STEP: Setting up server cert @ 02/18/25 18:33:39.901
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:33:40.033
  STEP: Deploying the webhook pod @ 02/18/25 18:33:40.056
  STEP: Wait for the deployment to be ready @ 02/18/25 18:33:40.085
  I0218 18:33:40.120319 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:33:42.148
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:33:42.172
  I0218 18:33:43.173076 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 02/18/25 18:33:43.194
  STEP: create a pod @ 02/18/25 18:33:43.248
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 02/18/25 18:33:45.307
  I0218 18:33:45.307147 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=webhook-1706 attach --namespace=webhook-1706 to-be-attached-pod -i -c=container1'
  I0218 18:33:45.524541 26 builder.go:135] rc: 1
  I0218 18:33:45.637044 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1706" for this suite. @ 02/18/25 18:33:45.662
  STEP: Destroying namespace "webhook-markers-4022" for this suite. @ 02/18/25 18:33:45.682
  << Timeline
------------------------------
SSS
------------------------------
• [4.230 seconds]
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:45.707
  I0218 18:33:45.707564 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:33:45.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:45.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:45.755
  STEP: Creating secret with name secret-test-f6a0bafc-769e-408c-9e83-be38fda63084 @ 02/18/25 18:33:45.768
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:33:45.782
  STEP: Saw pod success @ 02/18/25 18:33:49.836
  I0218 18:33:49.845645 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-secrets-590b0e55-1131-4bb8-96e6-1eb76ffc92fa container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:33:49.868
  I0218 18:33:49.906144 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8572" for this suite. @ 02/18/25 18:33:49.922
  << Timeline
------------------------------
• [4.903 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:49.939
  I0218 18:33:49.939353 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 18:33:49.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:49.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:49.986
  I0218 18:33:49.999685 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 02/18/25 18:33:52.059
  I0218 18:33:52.059566 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-9451 --namespace=crd-publish-openapi-9451 create -f -'
  I0218 18:33:52.241742 26 builder.go:146] stderr: ""
  I0218 18:33:52.241799 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8231-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0218 18:33:52.241886 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-9451 --namespace=crd-publish-openapi-9451 delete e2e-test-crd-publish-openapi-8231-crds test-cr'
  I0218 18:33:52.407822 26 builder.go:146] stderr: ""
  I0218 18:33:52.407867 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8231-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0218 18:33:52.407946 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-9451 --namespace=crd-publish-openapi-9451 apply -f -'
  I0218 18:33:52.573190 26 builder.go:146] stderr: ""
  I0218 18:33:52.573252 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8231-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0218 18:33:52.573337 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-9451 --namespace=crd-publish-openapi-9451 delete e2e-test-crd-publish-openapi-8231-crds test-cr'
  I0218 18:33:52.712090 26 builder.go:146] stderr: ""
  I0218 18:33:52.712141 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8231-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 02/18/25 18:33:52.712
  I0218 18:33:52.712235 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-9451 explain e2e-test-crd-publish-openapi-8231-crds'
  I0218 18:33:52.831927 26 builder.go:146] stderr: ""
  I0218 18:33:52.831998 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8231-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0218 18:33:54.793057 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9451" for this suite. @ 02/18/25 18:33:54.825
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.375 seconds]
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:54.867
  I0218 18:33:54.867148 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename csistoragecapacity @ 02/18/25 18:33:54.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:54.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:54.913
  STEP: getting /apis @ 02/18/25 18:33:54.93
  STEP: getting /apis/storage.k8s.io @ 02/18/25 18:33:54.947
  STEP: getting /apis/storage.k8s.io/v1 @ 02/18/25 18:33:54.952
  STEP: creating @ 02/18/25 18:33:54.959
  STEP: watching @ 02/18/25 18:33:55.004
  I0218 18:33:55.004240 26 csistoragecapacity.go:143] starting watch
  STEP: getting @ 02/18/25 18:33:55.043
  STEP: listing in namespace @ 02/18/25 18:33:55.053
  STEP: listing across namespaces @ 02/18/25 18:33:55.066
  STEP: patching @ 02/18/25 18:33:55.082
  STEP: updating @ 02/18/25 18:33:55.095
  I0218 18:33:55.113711 26 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0218 18:33:55.113791 26 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 02/18/25 18:33:55.113
  STEP: deleting a collection @ 02/18/25 18:33:55.155
  I0218 18:33:55.197862 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2143" for this suite. @ 02/18/25 18:33:55.217
  << Timeline
------------------------------
SSS
------------------------------
• [5.253 seconds]
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:33:55.244
  I0218 18:33:55.244745 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replicaset @ 02/18/25 18:33:55.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:33:55.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:33:55.312
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 02/18/25 18:33:55.326
  I0218 18:33:55.354324 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0218 18:34:00.367749 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 02/18/25 18:34:00.367
  STEP: getting scale subresource @ 02/18/25 18:34:00.367
  STEP: updating a scale subresource @ 02/18/25 18:34:00.379
  STEP: verifying the replicaset Spec.Replicas was modified @ 02/18/25 18:34:00.392
  STEP: Patch a scale subresource @ 02/18/25 18:34:00.404
  I0218 18:34:00.437811 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6340" for this suite. @ 02/18/25 18:34:00.464
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [22.471 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:00.513
  I0218 18:34:00.513282 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename subpath @ 02/18/25 18:34:00.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:00.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:00.588
  STEP: Setting up data @ 02/18/25 18:34:00.603
  STEP: Creating pod pod-subpath-test-configmap-6p6p @ 02/18/25 18:34:00.65
  STEP: Creating a pod to test atomic-volume-subpath @ 02/18/25 18:34:00.65
  STEP: Saw pod success @ 02/18/25 18:34:22.833
  I0218 18:34:22.842531 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-subpath-test-configmap-6p6p container test-container-subpath-configmap-6p6p: <nil>
  STEP: delete the pod @ 02/18/25 18:34:22.892
  STEP: Deleting pod pod-subpath-test-configmap-6p6p @ 02/18/25 18:34:22.932
  I0218 18:34:22.932343 26 delete.go:62] Deleting pod "pod-subpath-test-configmap-6p6p" in namespace "subpath-6465"
  I0218 18:34:22.945722 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6465" for this suite. @ 02/18/25 18:34:22.965
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.254 seconds]
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:22.992
  I0218 18:34:22.992383 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:34:22.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:23.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:23.057
  STEP: validating api versions @ 02/18/25 18:34:23.071
  I0218 18:34:23.071895 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-6227 api-versions'
  I0218 18:34:23.195228 26 builder.go:146] stderr: ""
  I0218 18:34:23.195289 26 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps.kubermatic.k8c.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncluster.k8s.io/v1alpha1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\noperatingsystemmanager.k8c.io/v1alpha1\npolicy.networking.k8s.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0218 18:34:23.196311 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6227" for this suite. @ 02/18/25 18:34:23.215
  << Timeline
------------------------------
S
------------------------------
• [4.332 seconds]
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:23.248
  I0218 18:34:23.248901 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:34:23.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:23.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:23.312
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-6202a4d2-e8a4-4179-b09d-8f8779c5d6f2 @ 02/18/25 18:34:23.358
  STEP: Creating the pod @ 02/18/25 18:34:23.379
  STEP: Updating configmap projected-configmap-test-upd-6202a4d2-e8a4-4179-b09d-8f8779c5d6f2 @ 02/18/25 18:34:25.473
  STEP: waiting to observe update in volume @ 02/18/25 18:34:25.486
  I0218 18:34:27.533715 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8093" for this suite. @ 02/18/25 18:34:27.559
  << Timeline
------------------------------
S
------------------------------
• [3.831 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:27.583
  I0218 18:34:27.583643 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:34:27.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:27.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:27.637
  STEP: Setting up server cert @ 02/18/25 18:34:27.72
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:34:27.838
  STEP: Deploying the webhook pod @ 02/18/25 18:34:27.856
  STEP: Wait for the deployment to be ready @ 02/18/25 18:34:27.886
  I0218 18:34:27.933011 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 34, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 34, 27, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-bcbfc85d\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 34, 27, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 34, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 02/18/25 18:34:29.945
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:34:29.98
  I0218 18:34:30.981519 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 02/18/25 18:34:31.004
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 02/18/25 18:34:31.059
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 02/18/25 18:34:31.108
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 02/18/25 18:34:31.131
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 02/18/25 18:34:31.188
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 02/18/25 18:34:31.213
  I0218 18:34:31.348905 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-565" for this suite. @ 02/18/25 18:34:31.378
  STEP: Destroying namespace "webhook-markers-1497" for this suite. @ 02/18/25 18:34:31.394
  << Timeline
------------------------------
SSS
------------------------------
• [11.266 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:31.417
  I0218 18:34:31.417953 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:34:31.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:31.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:31.48
  STEP: Counting existing ResourceQuota @ 02/18/25 18:34:31.5
  STEP: Creating a ResourceQuota @ 02/18/25 18:34:36.516
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:34:36.535
  STEP: Creating a ReplicaSet @ 02/18/25 18:34:38.55
  STEP: Ensuring resource quota status captures replicaset creation @ 02/18/25 18:34:38.572
  STEP: Deleting a ReplicaSet @ 02/18/25 18:34:40.591
  STEP: Ensuring resource quota status released usage @ 02/18/25 18:34:40.618
  I0218 18:34:42.643356 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6843" for this suite. @ 02/18/25 18:34:42.667
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.272 seconds]
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:42.69
  I0218 18:34:42.690254 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename events @ 02/18/25 18:34:42.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:42.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:42.739
  STEP: creating a test event @ 02/18/25 18:34:42.754
  STEP: listing all events in all namespaces @ 02/18/25 18:34:42.773
  STEP: patching the test event @ 02/18/25 18:34:42.787
  STEP: fetching the test event @ 02/18/25 18:34:42.805
  STEP: updating the test event @ 02/18/25 18:34:42.817
  STEP: getting the test event @ 02/18/25 18:34:42.859
  STEP: deleting the test event @ 02/18/25 18:34:42.873
  STEP: listing all events in all namespaces @ 02/18/25 18:34:42.902
  I0218 18:34:42.925462 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3903" for this suite. @ 02/18/25 18:34:42.941
  << Timeline
------------------------------
S
------------------------------
• [4.328 seconds]
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:42.965
  I0218 18:34:42.965590 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:34:42.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:43.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:43.044
  STEP: Creating configMap with name configmap-projected-all-test-volume-63cd5bde-5961-489c-99cf-be17e0641257 @ 02/18/25 18:34:43.061
  STEP: Creating secret with name secret-projected-all-test-volume-8eadc4bc-d9ff-4ad8-b8c1-d9deea319455 @ 02/18/25 18:34:43.071
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 02/18/25 18:34:43.087
  W0218 18:34:43.109333      26 warnings.go:70] volume "podinfo" (Projected): overlapping paths: "podname" (DownwardAPI) with "podname" (DownwardAPI)
  STEP: Saw pod success @ 02/18/25 18:34:47.154
  I0218 18:34:47.175524 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod projected-volume-fe8b00da-65f4-4db8-8c2c-45342ed9a0ed container projected-all-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:34:47.198
  I0218 18:34:47.237974 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5912" for this suite. @ 02/18/25 18:34:47.256
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [10.239 seconds]
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:742

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:47.301
  I0218 18:34:47.301418 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename job @ 02/18/25 18:34:47.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:47.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:47.359
  STEP: Creating a job @ 02/18/25 18:34:47.379
  STEP: Ensuring job reaches completions @ 02/18/25 18:34:47.407
  I0218 18:34:57.495193 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6303" for this suite. @ 02/18/25 18:34:57.519
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [16.396 seconds]
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:34:57.548
  I0218 18:34:57.548271 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:34:57.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:34:57.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:34:57.608
  STEP: Creating a ResourceQuota with best effort scope @ 02/18/25 18:34:57.623
  STEP: Ensuring ResourceQuota status is calculated @ 02/18/25 18:34:57.636
  STEP: Creating a ResourceQuota with not best effort scope @ 02/18/25 18:34:59.649
  STEP: Ensuring ResourceQuota status is calculated @ 02/18/25 18:34:59.659
  STEP: Creating a best-effort pod @ 02/18/25 18:35:01.672
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 02/18/25 18:35:01.722
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 02/18/25 18:35:03.737
  STEP: Deleting the pod @ 02/18/25 18:35:05.755
  STEP: Ensuring resource quota status released the pod usage @ 02/18/25 18:35:05.786
  STEP: Creating a not best-effort pod @ 02/18/25 18:35:07.799
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 02/18/25 18:35:07.823
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 02/18/25 18:35:09.837
  STEP: Deleting the pod @ 02/18/25 18:35:11.848
  STEP: Ensuring resource quota status released the pod usage @ 02/18/25 18:35:11.878
  I0218 18:35:13.896696 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4193" for this suite. @ 02/18/25 18:35:13.926
  << Timeline
------------------------------
SSSSS
------------------------------
• [5.291 seconds]
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:35:13.949
  I0218 18:35:13.949962 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replicaset @ 02/18/25 18:35:13.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:35:14.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:35:14.023
  STEP: Create a ReplicaSet @ 02/18/25 18:35:14.037
  STEP: Verify that the required pods have come up @ 02/18/25 18:35:14.051
  I0218 18:35:14.060988 26 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0218 18:35:19.077309 26 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 02/18/25 18:35:19.077
  I0218 18:35:19.088259 26 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 02/18/25 18:35:19.088
  STEP: DeleteCollection of the ReplicaSets @ 02/18/25 18:35:19.106
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 02/18/25 18:35:19.134
  I0218 18:35:19.151118 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6664" for this suite. @ 02/18/25 18:35:19.216
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [11.309 seconds]
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:35:19.254
  I0218 18:35:19.254046 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:35:19.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:35:19.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:35:19.33
  STEP: creating service in namespace services-7606 @ 02/18/25 18:35:19.362
  STEP: creating service affinity-nodeport in namespace services-7606 @ 02/18/25 18:35:19.362
  STEP: creating replication controller affinity-nodeport in namespace services-7606 @ 02/18/25 18:35:19.434
  I0218 18:35:19.454177      26 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7606, replica count: 3
  I0218 18:35:22.505258      26 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:35:22.549165 26 resource.go:361] Creating new exec pod
  I0218 18:35:25.626699 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-7606 exec execpod-affinity69ptf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0218 18:35:25.895067 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.240.22.108) 80 port [tcp/http] succeeded!\n"
  I0218 18:35:25.895130 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:35:25.895254 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-7606 exec execpod-affinity69ptf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.22.108 80'
  I0218 18:35:26.162708 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.22.108 80\nConnection to 10.240.22.108 80 port [tcp/http] succeeded!\n"
  I0218 18:35:26.162782 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:35:26.162912 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-7606 exec execpod-affinity69ptf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.5 30482'
  I0218 18:35:26.429489 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.5 30482\nConnection to 10.0.0.5 30482 port [tcp/*] succeeded!\n"
  I0218 18:35:26.429548 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:35:26.429676 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-7606 exec execpod-affinity69ptf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.3 30482'
  I0218 18:35:26.683874 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.3 30482\nConnection to 10.0.0.3 30482 port [tcp/*] succeeded!\n"
  I0218 18:35:26.683929 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:35:26.684039 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-7606 exec execpod-affinity69ptf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.0.3:30482/ ; done'
  I0218 18:35:27.051339 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:30482/\n"
  I0218 18:35:27.051405 26 builder.go:147] stdout: "\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw\naffinity-nodeport-h2fsw"
  I0218 18:35:27.051461 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051476 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051489 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051501 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051508 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051515 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051521 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051527 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051534 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051542 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051548 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051554 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051560 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051566 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051572 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.051578 26 service.go:242] Received response from host: affinity-nodeport-h2fsw
  I0218 18:35:27.052077 26 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7606, will wait for the garbage collector to delete the pods @ 02/18/25 18:35:27.088
  I0218 18:35:27.179520 26 resources.go:139] Deleting ReplicationController affinity-nodeport took: 24.337501ms
  I0218 18:35:27.280414 26 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.892166ms
  I0218 18:35:30.527530 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7606" for this suite. @ 02/18/25 18:35:30.545
  << Timeline
------------------------------
SSSSS
------------------------------
• [7.340 seconds]
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:35:30.571
  I0218 18:35:30.571108 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl-logs @ 02/18/25 18:35:30.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:35:30.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:35:30.642
  STEP: creating a pod @ 02/18/25 18:35:30.657
  I0218 18:35:30.657194 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.53 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0218 18:35:30.804940 26 builder.go:146] stderr: ""
  I0218 18:35:30.804996 26 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 02/18/25 18:35:30.805
  I0218 18:35:30.805538 26 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0218 18:35:32.830294 26 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 02/18/25 18:35:32.83
  I0218 18:35:32.830396 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 logs logs-generator logs-generator'
  I0218 18:35:32.993944 26 builder.go:146] stderr: ""
  I0218 18:35:32.994015 26 builder.go:147] stdout: "I0218 18:35:31.564771       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/66s 390\nI0218 18:35:31.765347       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/r55 437\nI0218 18:35:31.965850       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/k7n 480\nI0218 18:35:32.165057       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/jx46 248\nI0218 18:35:32.365491       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/7shm 400\nI0218 18:35:32.564760       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/9lpp 327\nI0218 18:35:32.765079       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/zxrl 388\nI0218 18:35:32.965512       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/mzk 561\n"
  STEP: limiting log lines @ 02/18/25 18:35:32.994
  I0218 18:35:32.994123 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 logs logs-generator logs-generator --tail=1'
  I0218 18:35:33.171852 26 builder.go:146] stderr: ""
  I0218 18:35:33.171924 26 builder.go:147] stdout: "I0218 18:35:32.965512       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/mzk 561\n"
  I0218 18:35:33.171942 26 logs.go:180] got output "I0218 18:35:32.965512       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/mzk 561\n"
  STEP: limiting log bytes @ 02/18/25 18:35:33.171
  I0218 18:35:33.172025 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 logs logs-generator logs-generator --limit-bytes=1'
  I0218 18:35:33.314659 26 builder.go:146] stderr: ""
  I0218 18:35:33.314704 26 builder.go:147] stdout: "I"
  I0218 18:35:33.314737 26 logs.go:186] got output "I"
  STEP: exposing timestamps @ 02/18/25 18:35:33.314
  I0218 18:35:33.314834 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 logs logs-generator logs-generator --tail=1 --timestamps'
  I0218 18:35:33.474212 26 builder.go:146] stderr: ""
  I0218 18:35:33.474265 26 builder.go:147] stdout: "2025-02-18T18:35:33.365144368Z I0218 18:35:33.365018       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/bkx9 208\n"
  I0218 18:35:33.474288 26 logs.go:192] got output "2025-02-18T18:35:33.365144368Z I0218 18:35:33.365018       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/bkx9 208\n"
  STEP: restricting to a time range @ 02/18/25 18:35:33.474
  I0218 18:35:35.974588 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 logs logs-generator logs-generator --since=1s'
  I0218 18:35:36.127517 26 builder.go:146] stderr: ""
  I0218 18:35:36.127592 26 builder.go:147] stdout: "I0218 18:35:35.165772       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/7bc 574\nI0218 18:35:35.365341       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/9kh 356\nI0218 18:35:35.565692       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/9p5 287\nI0218 18:35:35.765009       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/66c 209\nI0218 18:35:35.965518       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/w46 452\n"
  I0218 18:35:36.127693 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 logs logs-generator logs-generator --since=24h'
  I0218 18:35:36.323384 26 builder.go:146] stderr: ""
  I0218 18:35:36.323574 26 builder.go:147] stdout: "I0218 18:35:31.564771       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/66s 390\nI0218 18:35:31.765347       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/r55 437\nI0218 18:35:31.965850       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/k7n 480\nI0218 18:35:32.165057       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/jx46 248\nI0218 18:35:32.365491       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/7shm 400\nI0218 18:35:32.564760       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/9lpp 327\nI0218 18:35:32.765079       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/zxrl 388\nI0218 18:35:32.965512       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/mzk 561\nI0218 18:35:33.164768       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/jsgf 405\nI0218 18:35:33.365018       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/bkx9 208\nI0218 18:35:33.565406       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/kz9h 435\nI0218 18:35:33.765758       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/fjcb 594\nI0218 18:35:33.965203       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/9gs 311\nI0218 18:35:34.165593       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/kube-system/pods/2bxm 224\nI0218 18:35:34.364929       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/gs29 479\nI0218 18:35:34.565352       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/vvj 368\nI0218 18:35:34.765845       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/2j5z 499\nI0218 18:35:34.965379       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/bt6f 245\nI0218 18:35:35.165772       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/7bc 574\nI0218 18:35:35.365341       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/9kh 356\nI0218 18:35:35.565692       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/9p5 287\nI0218 18:35:35.765009       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/66c 209\nI0218 18:35:35.965518       1 logs_generator.go:76] 22 GET /api/v1/namespaces/default/pods/w46 452\nI0218 18:35:36.164866       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/hdg9 358\n"
  I0218 18:35:36.324076 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-logs-6049 delete pod logs-generator'
  I0218 18:35:37.859357 26 builder.go:146] stderr: ""
  I0218 18:35:37.859398 26 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0218 18:35:37.860248 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6049" for this suite. @ 02/18/25 18:35:37.884
  << Timeline
------------------------------
SSSS
------------------------------
• [243.768 seconds]
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:31:58.162
  I0218 18:31:58.162962 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:31:58.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:31:58.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:31:58.21
  STEP: Creating pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261 @ 02/18/25 18:31:58.224
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:32:00.271
  I0218 18:32:00.282166 24 container_probe.go:1749] Initial restart count of pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 is 0
  I0218 18:32:00.293679 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:02.304963 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:04.321350 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:06.337038 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:08.349552 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:10.362111 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:12.374105 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:14.384647 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:16.397938 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:18.412338 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:20.424019 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:22.438962 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:24.452119 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:26.462614 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:28.479913 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:30.492894 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:32.503566 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:34.515549 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:36.527864 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:38.544846 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:40.557337 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:42.567506 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:44.580367 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:46.591876 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:48.603055 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:50.616799 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:52.629784 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:54.645812 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:56.659605 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:32:58.670784 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:00.682808 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:02.695007 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:04.707153 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:06.718293 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:08.729585 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:10.740297 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:12.753721 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:14.767269 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:16.780651 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:18.797846 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:20.811204 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:22.824106 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:24.834308 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:26.850207 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:28.881070 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:30.891775 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:32.906540 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:34.925678 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:36.941527 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:38.953569 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:40.966701 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:42.977565 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:44.989136 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:47.002472 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:49.013580 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:51.024268 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:53.036053 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:55.046623 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:57.061176 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:33:59.074133 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:01.086065 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:03.097595 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:05.111012 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:07.123576 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:09.136961 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:11.150984 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:13.163267 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:15.173993 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:17.187534 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:19.198532 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:21.214236 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:23.225840 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:25.238625 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:27.250811 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:29.262262 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:31.280964 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:33.292536 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:35.304642 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:37.314970 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:39.340662 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:41.353149 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:43.363890 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:45.376029 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:47.400582 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:49.413495 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:51.427778 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:53.437857 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:55.451078 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:57.463786 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:34:59.474645 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:01.491369 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:03.508041 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:05.520282 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:07.533129 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:09.545737 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:11.559075 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:13.576989 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:15.590796 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:17.602249 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:19.614045 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:21.623924 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:23.639269 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:25.651628 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:27.663421 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:29.675780 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:31.687863 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:33.698814 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:35.712035 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:37.726969 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:39.738392 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:41.751686 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:43.764281 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:45.775071 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:47.785814 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:49.798039 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:51.810342 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:53.819856 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:55.835533 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:57.848174 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  I0218 18:35:59.861815 24 container_probe.go:1759] Get pod test-webserver-2d807492-00fc-44b3-8187-0d03cd1cdfa6 in namespace container-probe-9261
  STEP: deleting the pod @ 02/18/25 18:36:01.862
  I0218 18:36:01.893475 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9261" for this suite. @ 02/18/25 18:36:01.916
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [13.276 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:01.94
  I0218 18:36:01.940288 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:36:01.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:01.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:01.992
  STEP: Counting existing ResourceQuota @ 02/18/25 18:36:02.013
  STEP: Creating a ResourceQuota @ 02/18/25 18:36:07.025
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:36:07.041
  STEP: Creating a Pod that fits quota @ 02/18/25 18:36:09.052
  STEP: Ensuring ResourceQuota status captures the pod usage @ 02/18/25 18:36:09.084
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 02/18/25 18:36:11.099
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 02/18/25 18:36:11.106
  STEP: Ensuring a pod cannot update its resource requirements @ 02/18/25 18:36:11.114
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 02/18/25 18:36:11.125
  STEP: Deleting the pod @ 02/18/25 18:36:13.136
  STEP: Ensuring resource quota status released the pod usage @ 02/18/25 18:36:13.159
  I0218 18:36:15.172729 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2791" for this suite. @ 02/18/25 18:36:15.198
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.674 seconds]
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:15.232
  I0218 18:36:15.232523 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:36:15.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:15.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:15.282
  STEP: Creating a test headless service @ 02/18/25 18:36:15.298
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 223.23.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.23.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.23.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.23.223_tcp@PTR;sleep 1; done
   @ 02/18/25 18:36:15.341
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9007.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9007.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9007.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9007.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 223.23.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.23.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.23.240.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.240.23.223_tcp@PTR;sleep 1; done
   @ 02/18/25 18:36:15.341
  STEP: creating a pod to probe DNS @ 02/18/25 18:36:15.341
  STEP: submitting the pod to kubernetes @ 02/18/25 18:36:15.341
  STEP: retrieving the pod @ 02/18/25 18:36:17.393
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:36:17.402
  I0218 18:36:17.435614 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.453488 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.469564 24 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.487687 24 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.575721 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.595832 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.614858 24 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.630809 24 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local from pod dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389: the server could not find the requested resource (get pods dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389)
  I0218 18:36:17.698005 24 dns_common.go:506] Lookups using dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389 failed for: [agnhost_udp@dns-test-service.dns-9007.svc.cluster.local agnhost_tcp@dns-test-service.dns-9007.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local jessie_udp@dns-test-service.dns-9007.svc.cluster.local jessie_tcp@dns-test-service.dns-9007.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9007.svc.cluster.local]

  I0218 18:36:17.726039 24 dns_common.go:514] Pod client logs for webserver: 
  I0218 18:36:17.746670 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0218 18:36:17.770829 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0218 18:36:22.715078 24 dns_common.go:546] DNS probes using dns-9007/dns-test-411acc33-b7a4-4aa4-b4d4-7753365e1389 succeeded

  STEP: deleting the pod @ 02/18/25 18:36:22.715
  STEP: deleting the test service @ 02/18/25 18:36:22.745
  STEP: deleting the test headless service @ 02/18/25 18:36:22.818
  I0218 18:36:22.859634 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9007" for this suite. @ 02/18/25 18:36:22.887
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.559 seconds]
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:22.915
  I0218 18:36:22.915593 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename discovery @ 02/18/25 18:36:22.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:22.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:22.971
  STEP: Setting up server cert @ 02/18/25 18:36:22.993
  I0218 18:36:23.264521 24 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0218 18:36:23.270391 24 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0218 18:36:23.270456 24 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0218 18:36:23.270460 24 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0218 18:36:23.270463 24 discovery.go:139] Checking APIGroup: apps
  I0218 18:36:23.276527 24 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0218 18:36:23.276545 24 discovery.go:148] Versions found [{apps/v1 v1}]
  I0218 18:36:23.276549 24 discovery.go:154] apps/v1 matches apps/v1
  I0218 18:36:23.276552 24 discovery.go:139] Checking APIGroup: events.k8s.io
  I0218 18:36:23.288815 24 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0218 18:36:23.288836 24 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0218 18:36:23.288839 24 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0218 18:36:23.288842 24 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0218 18:36:23.295525 24 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0218 18:36:23.295554 24 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0218 18:36:23.295557 24 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0218 18:36:23.295560 24 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0218 18:36:23.301611 24 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0218 18:36:23.301647 24 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0218 18:36:23.301655 24 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0218 18:36:23.301664 24 discovery.go:139] Checking APIGroup: autoscaling
  I0218 18:36:23.307873 24 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0218 18:36:23.307896 24 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0218 18:36:23.307903 24 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0218 18:36:23.307909 24 discovery.go:139] Checking APIGroup: batch
  I0218 18:36:23.314203 24 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0218 18:36:23.314228 24 discovery.go:148] Versions found [{batch/v1 v1}]
  I0218 18:36:23.314232 24 discovery.go:154] batch/v1 matches batch/v1
  I0218 18:36:23.314235 24 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0218 18:36:23.320717 24 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0218 18:36:23.320746 24 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0218 18:36:23.320763 24 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0218 18:36:23.320768 24 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0218 18:36:23.328404 24 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0218 18:36:23.328462 24 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0218 18:36:23.328472 24 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0218 18:36:23.328482 24 discovery.go:139] Checking APIGroup: policy
  I0218 18:36:23.335465 24 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0218 18:36:23.335490 24 discovery.go:148] Versions found [{policy/v1 v1}]
  I0218 18:36:23.335497 24 discovery.go:154] policy/v1 matches policy/v1
  I0218 18:36:23.335504 24 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0218 18:36:23.341324 24 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0218 18:36:23.341352 24 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0218 18:36:23.341360 24 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0218 18:36:23.341368 24 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0218 18:36:23.347880 24 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0218 18:36:23.347900 24 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0218 18:36:23.347908 24 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0218 18:36:23.347914 24 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0218 18:36:23.353968 24 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0218 18:36:23.353992 24 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0218 18:36:23.353999 24 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0218 18:36:23.354006 24 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0218 18:36:23.360632 24 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0218 18:36:23.360662 24 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0218 18:36:23.360672 24 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0218 18:36:23.360683 24 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0218 18:36:23.366404 24 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0218 18:36:23.366487 24 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0218 18:36:23.366497 24 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0218 18:36:23.366508 24 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0218 18:36:23.373098 24 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0218 18:36:23.373127 24 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0218 18:36:23.373134 24 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0218 18:36:23.373149 24 discovery.go:139] Checking APIGroup: node.k8s.io
  I0218 18:36:23.379198 24 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0218 18:36:23.379224 24 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0218 18:36:23.379235 24 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0218 18:36:23.379245 24 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0218 18:36:23.388768 24 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0218 18:36:23.388792 24 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0218 18:36:23.388799 24 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0218 18:36:23.388841 24 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0218 18:36:23.394716 24 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0218 18:36:23.394742 24 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0218 18:36:23.394768 24 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0218 18:36:23.394791 24 discovery.go:139] Checking APIGroup: apps.kubermatic.k8c.io
  I0218 18:36:23.400869 24 discovery.go:147] PreferredVersion.GroupVersion: apps.kubermatic.k8c.io/v1
  I0218 18:36:23.400893 24 discovery.go:148] Versions found [{apps.kubermatic.k8c.io/v1 v1}]
  I0218 18:36:23.400904 24 discovery.go:154] apps.kubermatic.k8c.io/v1 matches apps.kubermatic.k8c.io/v1
  I0218 18:36:23.400910 24 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0218 18:36:23.406836 24 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0218 18:36:23.406870 24 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0218 18:36:23.406889 24 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0218 18:36:23.406896 24 discovery.go:139] Checking APIGroup: cluster.k8s.io
  I0218 18:36:23.412716 24 discovery.go:147] PreferredVersion.GroupVersion: cluster.k8s.io/v1alpha1
  I0218 18:36:23.412734 24 discovery.go:148] Versions found [{cluster.k8s.io/v1alpha1 v1alpha1}]
  I0218 18:36:23.412746 24 discovery.go:154] cluster.k8s.io/v1alpha1 matches cluster.k8s.io/v1alpha1
  I0218 18:36:23.412773 24 discovery.go:139] Checking APIGroup: operatingsystemmanager.k8c.io
  I0218 18:36:23.419857 24 discovery.go:147] PreferredVersion.GroupVersion: operatingsystemmanager.k8c.io/v1alpha1
  I0218 18:36:23.419885 24 discovery.go:148] Versions found [{operatingsystemmanager.k8c.io/v1alpha1 v1alpha1}]
  I0218 18:36:23.419893 24 discovery.go:154] operatingsystemmanager.k8c.io/v1alpha1 matches operatingsystemmanager.k8c.io/v1alpha1
  I0218 18:36:23.419899 24 discovery.go:139] Checking APIGroup: policy.networking.k8s.io
  I0218 18:36:23.425791 24 discovery.go:147] PreferredVersion.GroupVersion: policy.networking.k8s.io/v1alpha1
  I0218 18:36:23.425826 24 discovery.go:148] Versions found [{policy.networking.k8s.io/v1alpha1 v1alpha1}]
  I0218 18:36:23.425836 24 discovery.go:154] policy.networking.k8s.io/v1alpha1 matches policy.networking.k8s.io/v1alpha1
  I0218 18:36:23.425846 24 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0218 18:36:23.431793 24 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0218 18:36:23.431817 24 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0218 18:36:23.431824 24 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0218 18:36:23.432906 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5965" for this suite. @ 02/18/25 18:36:23.452
  << Timeline
------------------------------
• [4.259 seconds]
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:23.476
  I0218 18:36:23.476851 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename security-context @ 02/18/25 18:36:23.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:23.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:23.534
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 02/18/25 18:36:23.549
  STEP: Saw pod success @ 02/18/25 18:36:27.603
  I0218 18:36:27.614908 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod security-context-38066227-965e-4866-8fff-a4dc61cc7059 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:36:27.638
  I0218 18:36:27.689629 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8089" for this suite. @ 02/18/25 18:36:27.716
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.240 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:27.757
  I0218 18:36:27.757213 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:36:27.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:27.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:27.809
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 02/18/25 18:36:27.825
  STEP: Saw pod success @ 02/18/25 18:36:31.886
  I0218 18:36:31.896123 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-59e72722-a7f0-4402-92a0-e9f32d92a819 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:36:31.917
  I0218 18:36:31.956866 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3598" for this suite. @ 02/18/25 18:36:31.98
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [3.338 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:32.008
  I0218 18:36:32.008666 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename custom-resource-definition @ 02/18/25 18:36:32.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:32.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:32.054
  I0218 18:36:32.069705 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  I0218 18:36:35.310675 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4107" for this suite. @ 02/18/25 18:36:35.331
  << Timeline
------------------------------
SSSSSS
------------------------------
• [3.793 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:35.353
  I0218 18:36:35.353063 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:36:35.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:35.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:35.403
  STEP: Setting up server cert @ 02/18/25 18:36:35.47
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:36:35.658
  STEP: Deploying the webhook pod @ 02/18/25 18:36:35.677
  STEP: Wait for the deployment to be ready @ 02/18/25 18:36:35.716
  I0218 18:36:35.740540 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:36:37.778
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:36:37.812
  I0218 18:36:38.812909 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 02/18/25 18:36:38.837
  STEP: create the configmap with a random name @ 02/18/25 18:36:38.909
  STEP: verify the configmap is mutated @ 02/18/25 18:36:38.961
  STEP: create the configmap with 'skip-me' name @ 02/18/25 18:36:38.961
  I0218 18:36:39.095934 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2656" for this suite. @ 02/18/25 18:36:39.116
  STEP: Destroying namespace "webhook-markers-7799" for this suite. @ 02/18/25 18:36:39.131
  << Timeline
------------------------------
SS
------------------------------
• [6.889 seconds]
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1527

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:39.15
  I0218 18:36:39.150910 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:36:39.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:39.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:39.2
  STEP: creating Agnhost RC @ 02/18/25 18:36:39.216
  I0218 18:36:39.216620 24 kubectl.go:1534] namespace kubectl-4457
  I0218 18:36:39.216689 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-4457 create -f -'
  I0218 18:36:39.421993 24 builder.go:146] stderr: ""
  I0218 18:36:39.422022 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 02/18/25 18:36:39.422
  I0218 18:36:40.434061 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:36:40.434103 24 framework.go:733] Found 0 / 1
  I0218 18:36:41.434398 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:36:41.434494 24 framework.go:733] Found 1 / 1
  I0218 18:36:41.434516 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0218 18:36:41.446503 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:36:41.446524 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0218 18:36:41.446531 24 kubectl.go:1541] wait on agnhost-primary startup in kubectl-4457 
  I0218 18:36:41.446618 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-4457 logs agnhost-primary-h42gw agnhost-primary'
  I0218 18:36:41.599057 24 builder.go:146] stderr: ""
  I0218 18:36:41.599112 24 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 02/18/25 18:36:41.599
  I0218 18:36:41.599199 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-4457 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0218 18:36:41.757088 24 builder.go:146] stderr: ""
  I0218 18:36:41.757127 24 builder.go:147] stdout: "service/rm2 exposed\n"
  I0218 18:36:41.766703 24 utils.go:1203] Service rm2 in namespace kubectl-4457 found.
  STEP: exposing service @ 02/18/25 18:36:43.787
  I0218 18:36:43.787168 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-4457 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0218 18:36:43.943931 24 builder.go:146] stderr: ""
  I0218 18:36:43.944017 24 builder.go:147] stdout: "service/rm3 exposed\n"
  I0218 18:36:43.956291 24 utils.go:1203] Service rm3 in namespace kubectl-4457 found.
  I0218 18:36:45.980115 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4457" for this suite. @ 02/18/25 18:36:46.005
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [0.218 seconds]
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:46.046
  I0218 18:36:46.046462 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:36:46.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:46.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:46.097
  I0218 18:36:46.228164 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-734" for this suite. @ 02/18/25 18:36:46.247
  << Timeline
------------------------------
S
------------------------------
• [70.699 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:35:37.917
  I0218 18:35:37.917185 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:35:37.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:35:37.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:35:37.971
  STEP: Creating service test in namespace statefulset-1782 @ 02/18/25 18:35:38.006
  STEP: Creating a new StatefulSet @ 02/18/25 18:35:38.021
  I0218 18:35:38.053380 26 wait.go:40] Found 0 stateful pods, waiting for 3
  I0218 18:35:48.057138 26 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:35:48.057172 26 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:35:48.057182 26 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 02/18/25 18:35:48.093
  I0218 18:35:48.125764 26 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 02/18/25 18:35:48.125
  STEP: Not applying an update when the partition is greater than the number of replicas @ 02/18/25 18:35:58.157
  STEP: Performing a canary update @ 02/18/25 18:35:58.157
  I0218 18:35:58.192323 26 statefulset.go:2510] Updating stateful set ss2
  I0218 18:35:58.234677 26 wait.go:74] Waiting for Pod statefulset-1782/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 02/18/25 18:36:08.222
  I0218 18:36:08.310360 26 wait.go:40] Found 2 stateful pods, waiting for 3
  I0218 18:36:18.311053 26 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:36:18.311089 26 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:36:18.311100 26 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 02/18/25 18:36:18.34
  I0218 18:36:18.367918 26 statefulset.go:2510] Updating stateful set ss2
  I0218 18:36:18.395090 26 wait.go:74] Waiting for Pod statefulset-1782/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0218 18:36:28.442090 26 statefulset.go:2510] Updating stateful set ss2
  I0218 18:36:28.495023 26 wait.go:56] Waiting for StatefulSet statefulset-1782/ss2 to complete update
  I0218 18:36:28.495068 26 wait.go:63] Waiting for Pod statefulset-1782/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0218 18:36:38.473045 26 statefulset.go:138] Deleting all statefulset in ns statefulset-1782
  I0218 18:36:38.484848 26 rest.go:152] Scaling statefulset ss2 to 0
  I0218 18:36:48.523839 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:36:48.536276 26 rest.go:90] Deleting statefulset ss2
  I0218 18:36:48.576669 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1782" for this suite. @ 02/18/25 18:36:48.599
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.259 seconds]
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:46.267
  I0218 18:36:46.267082 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:36:46.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:46.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:46.332
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:36:46.348
  STEP: Saw pod success @ 02/18/25 18:36:50.407
  I0218 18:36:50.417321 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-0a04af4c-bb08-4ee7-bf2a-2c9280554360 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:36:50.448
  I0218 18:36:50.487492 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-261" for this suite. @ 02/18/25 18:36:50.51
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.471 seconds]
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:48.632
  I0218 18:36:48.632894 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:36:48.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:48.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:48.694
  STEP: Creating secret with name s-test-opt-del-bc96e21a-2a69-4c41-86eb-f843e5b77d15 @ 02/18/25 18:36:48.725
  STEP: Creating secret with name s-test-opt-upd-6a90a4d3-7b2d-4ee3-99e3-8c62222fbde0 @ 02/18/25 18:36:48.738
  STEP: Creating the pod @ 02/18/25 18:36:48.754
  STEP: Deleting secret s-test-opt-del-bc96e21a-2a69-4c41-86eb-f843e5b77d15 @ 02/18/25 18:36:50.921
  STEP: Updating secret s-test-opt-upd-6a90a4d3-7b2d-4ee3-99e3-8c62222fbde0 @ 02/18/25 18:36:50.937
  STEP: Creating secret with name s-test-opt-create-aebf62b4-e35c-43cf-addb-61846841cc64 @ 02/18/25 18:36:50.95
  STEP: waiting to observe update in volume @ 02/18/25 18:36:50.962
  I0218 18:36:53.063214 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9145" for this suite. @ 02/18/25 18:36:53.085
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.283 seconds]
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:53.11
  I0218 18:36:53.110907 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:36:53.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:53.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:53.16
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:36:53.175
  STEP: Saw pod success @ 02/18/25 18:36:57.247
  I0218 18:36:57.269590 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-eb7bd7bf-a6ae-4c2d-9893-617589f2b752 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:36:57.314
  I0218 18:36:57.352046 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-167" for this suite. @ 02/18/25 18:36:57.376
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.271 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:57.403
  I0218 18:36:57.403157 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:36:57.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:57.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:57.468
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 02/18/25 18:36:57.484
  STEP: Saw pod success @ 02/18/25 18:37:01.544
  I0218 18:37:01.558841 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-43f2ba12-087e-46fe-8f12-60ff2613772a container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:37:01.584
  I0218 18:37:01.626827 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3641" for this suite. @ 02/18/25 18:37:01.656
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.359 seconds]
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3373

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:01.693
  I0218 18:37:01.693796 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:37:01.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:01.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:01.75
  STEP: creating a Service @ 02/18/25 18:37:01.79
  STEP: watching for the Service to be added @ 02/18/25 18:37:01.853
  I0218 18:37:01.860340 26 service.go:3425] Found Service test-service-q5g6z in namespace services-1876 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31730}]
  I0218 18:37:01.860393 26 service.go:3432] Service test-service-q5g6z created
  STEP: Getting /status @ 02/18/25 18:37:01.86
  I0218 18:37:01.870597 26 service.go:3443] Service test-service-q5g6z has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 02/18/25 18:37:01.87
  STEP: watching for the Service to be patched @ 02/18/25 18:37:01.887
  I0218 18:37:01.894011 26 service.go:3466] observed Service test-service-q5g6z in namespace services-1876 with annotations: map[] & LoadBalancer: {[]}
  I0218 18:37:01.894061 26 service.go:3469] Found Service test-service-q5g6z in namespace services-1876 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc00379c720 []}]}
  I0218 18:37:01.894077 26 service.go:3476] Service test-service-q5g6z has service status patched
  STEP: updating the ServiceStatus @ 02/18/25 18:37:01.894
  I0218 18:37:01.926557 26 service.go:3496] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 02/18/25 18:37:01.926
  I0218 18:37:01.933721 26 service.go:3507] Observed Service test-service-q5g6z in namespace services-1876 with annotations: map[] & Conditions: []
  I0218 18:37:01.933757 26 service.go:3518] Observed Service test-service-q5g6z in namespace services-1876 with annotations: map[patchedstatus:true] & Conditions: []
  I0218 18:37:01.933868 26 service.go:3514] Found Service test-service-q5g6z in namespace services-1876 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0218 18:37:01.933906 26 service.go:3525] Service test-service-q5g6z has service status updated
  STEP: patching the service @ 02/18/25 18:37:01.933
  STEP: watching for the Service to be patched @ 02/18/25 18:37:01.957
  I0218 18:37:01.968767 26 service.go:3548] observed Service test-service-q5g6z in namespace services-1876 with labels: map[test-service-static:true]
  I0218 18:37:01.968836 26 service.go:3548] observed Service test-service-q5g6z in namespace services-1876 with labels: map[test-service-static:true]
  I0218 18:37:01.968901 26 service.go:3548] observed Service test-service-q5g6z in namespace services-1876 with labels: map[test-service-static:true]
  I0218 18:37:01.968917 26 service.go:3551] Found Service test-service-q5g6z in namespace services-1876 with labels: map[test-service:patched test-service-static:true]
  I0218 18:37:01.968926 26 service.go:3558] Service test-service-q5g6z patched
  STEP: deleting the service @ 02/18/25 18:37:01.968
  STEP: watching for the Service to be deleted @ 02/18/25 18:37:02.009
  I0218 18:37:02.016476 26 service.go:3582] Observed event: ADDED
  I0218 18:37:02.016919 26 service.go:3582] Observed event: MODIFIED
  I0218 18:37:02.017059 26 service.go:3582] Observed event: MODIFIED
  I0218 18:37:02.017085 26 service.go:3582] Observed event: MODIFIED
  I0218 18:37:02.017120 26 service.go:3578] Found Service test-service-q5g6z in namespace services-1876 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0218 18:37:02.017135 26 service.go:3587] Service test-service-q5g6z deleted
  I0218 18:37:02.018039 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1876" for this suite. @ 02/18/25 18:37:02.036
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.902 seconds]
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:02.061
  I0218 18:37:02.061956 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename gc @ 02/18/25 18:37:02.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:02.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:02.115
  STEP: create the deployment @ 02/18/25 18:37:02.134
  W0218 18:37:02.149861      26 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 02/18/25 18:37:02.149
  STEP: delete the deployment @ 02/18/25 18:37:02.276
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 02/18/25 18:37:02.295
  STEP: Gathering metrics @ 02/18/25 18:37:02.852
  W0218 18:37:02.910820      26 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0218 18:37:02.910861 26 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0218 18:37:02.911848 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-33" for this suite. @ 02/18/25 18:37:02.928
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [16.367 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:36:50.537
  I0218 18:36:50.537120 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:36:50.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:36:50.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:36:50.584
  STEP: Setting up server cert @ 02/18/25 18:36:50.649
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:36:51.069
  STEP: Deploying the webhook pod @ 02/18/25 18:36:51.08
  STEP: Wait for the deployment to be ready @ 02/18/25 18:36:51.115
  I0218 18:36:51.142944 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:36:53.181
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:36:53.216
  I0218 18:36:54.216517 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 02/18/25 18:36:54.236
  STEP: Registering slow webhook via the AdmissionRegistration API @ 02/18/25 18:36:54.236
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 02/18/25 18:36:54.301
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 02/18/25 18:36:55.331
  STEP: Registering slow webhook via the AdmissionRegistration API @ 02/18/25 18:36:55.331
  STEP: Having no error when timeout is longer than webhook latency @ 02/18/25 18:36:56.428
  STEP: Registering slow webhook via the AdmissionRegistration API @ 02/18/25 18:36:56.428
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 02/18/25 18:37:01.559
  STEP: Registering slow webhook via the AdmissionRegistration API @ 02/18/25 18:37:01.559
  I0218 18:37:06.825091 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9709" for this suite. @ 02/18/25 18:37:06.856
  STEP: Destroying namespace "webhook-markers-7953" for this suite. @ 02/18/25 18:37:06.88
  << Timeline
------------------------------
S
------------------------------
• [4.276 seconds]
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:06.906
  I0218 18:37:06.906750 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:37:06.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:06.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:06.969
  STEP: Creating secret with name secret-test-map-5c0c0fd6-f7a5-4760-82b7-18904ef305c8 @ 02/18/25 18:37:07
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:37:07.012
  STEP: Saw pod success @ 02/18/25 18:37:11.072
  I0218 18:37:11.083130 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-secrets-7dfc204b-d77a-43a3-85a2-1b3b7846fa53 container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:37:11.106
  I0218 18:37:11.143627 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8376" for this suite. @ 02/18/25 18:37:11.163
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
↺ [FLAKEY TEST - TOOK 2 ATTEMPTS TO PASS] [4.302 seconds]
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:11.201
  I0218 18:37:11.201987 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename runtimeclass @ 02/18/25 18:37:11.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:11.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:11.26
  STEP: getting /apis @ 02/18/25 18:37:11.276
  STEP: getting /apis/node.k8s.io @ 02/18/25 18:37:11.294
  STEP: getting /apis/node.k8s.io/v1 @ 02/18/25 18:37:11.3
  STEP: creating @ 02/18/25 18:37:11.308
  STEP: watching @ 02/18/25 18:37:11.354
  I0218 18:37:11.354296 24 runtimeclass.go:275] starting watch
  STEP: getting @ 02/18/25 18:37:14.378
  STEP: listing @ 02/18/25 18:37:14.389
  STEP: patching @ 02/18/25 18:37:14.4
  STEP: updating @ 02/18/25 18:37:14.411
  I0218 18:37:14.423416 24 runtimeclass.go:305] waiting for watch events with expected annotations
  [FAILED] in [It] - k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:310 @ 02/18/25 18:37:14.423
  I0218 18:37:14.424559 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: dump namespace information after failure @ 02/18/25 18:37:14.448
  STEP: Collecting events from namespace "runtimeclass-2909". @ 02/18/25 18:37:14.448
  STEP: Found 0 events. @ 02/18/25 18:37:14.46
  I0218 18:37:14.472769 24 resource.go:168] POD  NODE  PHASE  GRACE  CONDITIONS
  I0218 18:37:14.472846 24 resource.go:178] 
  I0218 18:37:14.487039 24 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-bw8qq
  I0218 18:37:14.500055 24 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-bw8qq    d4090fd0-4999-4918-a78b-48f9beb10564 201812 0 2025-02-18 14:38:08 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/e2e-f75a9edb-3796-4c12-9c61-a798d518cf9d:95 kubernetes.io/hostname:admiring-kalam-9d8f4776-bw8qq kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:f0fc4a63-9478-4713-a141-989662c55aa5 node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:188.245.32.195 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-bw8qq csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283779"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"92:f2:8f:1e:12:5b"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:188.245.32.195 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {kube-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.3.0/24\"":{}}}} } {kubelet Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {machine-controller Update v1 2025-02-18 14:38:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:38:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {e2e.test Update v1 2025-02-18 18:21:36 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:kubernetes.io/e2e-f75a9edb-3796-4c12-9c61-a798d518cf9d":{}}}} } {kubelet Update v1 2025-02-18 18:37:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.3.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283779,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.3.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:38:48 +0000 UTC,LastTransitionTime:2025-02-18 14:38:48 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:37:06 +0000 UTC,LastTransitionTime:2025-02-18 14:38:08 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:37:06 +0000 UTC,LastTransitionTime:2025-02-18 14:38:08 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:37:06 +0000 UTC,LastTransitionTime:2025-02-18 14:38:08 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:37:06 +0000 UTC,LastTransitionTime:2025-02-18 14:38:33 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:188.245.32.195,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-bw8qq,},NodeAddress{Type:InternalIP,Address:10.0.0.3,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:a41331d8913e4af58a60ed43f81773a5,SystemUUID:a41331d8-913e-4af5-8a60-ed43f81773a5,BootID:b458d9ec-ce84-4f5a-acc8-18d8ae2a9938,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:24aaf2626d6b27864c29de2097e8bbb840b3a414271bf7c8995e431e47d8408e registry.k8s.io/e2e-test-images/jessie-dnsutils:1.7],SizeBytes:112030336,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[registry.k8s.io/conformance@sha256:9d8db58a6401a33017934ace3c609d85663e253242bf93122174be20af612d1d registry.k8s.io/conformance:v1.32.1],SizeBytes:86333002,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5 registry.k8s.io/etcd:3.5.16-0],SizeBytes:57680541,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nautilus@sha256:80ba6c8c44f9623f06e868a1aa66026c8ec438ad814f9ec95e9333b415fe3550 registry.k8s.io/e2e-test-images/nautilus:1.7],SizeBytes:49641698,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:3fe7acf013d1264ffded116b80a73dc129a449b0fccdb8d21af8279f2233f36e registry.k8s.io/e2e-test-images/httpd:2.4.39-4],SizeBytes:41901587,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/sample-apiserver@sha256:19d4ecf1e0731b9ea55aca9c070d520f68b96ed0defbcc0e4eefe97b3d663ca3 registry.k8s.io/e2e-test-images/sample-apiserver:1.29.2],SizeBytes:39672997,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nonewprivs@sha256:8ac1264691820febacf3aea5d152cbde6d10685731ec14966a9401c6f47a68ac registry.k8s.io/e2e-test-images/nonewprivs:1.3],SizeBytes:3263463,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:37:14.500087 24 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-bw8qq
  I0218 18:37:14.512170 24 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-bw8qq
  I0218 18:37:14.547705 24 dump.go:128] kube-system/kube-proxy-7jqlc started at 2025-02-18 14:38:09 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.547743 24 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:37:14.547759 24 dump.go:128] kube-system/hcloud-csi-node-9v5nh started at 2025-02-18 14:38:09 +0000 UTC (0+3 container statuses recorded)
  I0218 18:37:14.547771 24 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:37:14.547779 24 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:37:14.547803 24 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:37:14.547814 24 dump.go:128] kube-system/envoy-agent-qqggb started at 2025-02-18 14:38:09 +0000 UTC (1+2 container statuses recorded)
  I0218 18:37:14.547824 24 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:37:14.547835 24 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:37:14.547844 24 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:37:14.547855 24 dump.go:128] kube-system/canal-pjv2d started at 2025-02-18 14:38:09 +0000 UTC (2+2 container statuses recorded)
  I0218 18:37:14.547864 24 dump.go:130] 	Init container install-cni ready: true, restart count 2
  I0218 18:37:14.547872 24 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:37:14.547880 24 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:37:14.547891 24 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:37:14.547901 24 dump.go:128] conformance/e2e-conformance-test started at 2025-02-18 18:23:07 +0000 UTC (0+2 container statuses recorded)
  I0218 18:37:14.547909 24 dump.go:134] 	Container conformance-container ready: true, restart count 0
  I0218 18:37:14.547918 24 dump.go:134] 	Container output-container ready: true, restart count 0
  I0218 18:37:14.547928 24 dump.go:128] kube-system/node-local-dns-txbgn started at 2025-02-18 14:38:09 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.547937 24 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:37:14.653503 24 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-bw8qq
  I0218 18:37:14.653529 24 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-dp7t2
  I0218 18:37:14.664179 24 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-dp7t2    77e0bbe2-5f20-44d9-a95b-3d4ef472dc70 200053 0 2025-02-18 14:38:06 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/hostname:admiring-kalam-9d8f4776-dp7t2 kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:c4cee83e-96e7-42fe-abc3-9c4005ab817b node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:138.199.204.83 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-dp7t2 csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283799"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"fe:c8:76:0c:72:8d"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:138.199.204.83 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {kube-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.1.0/24\"":{}}}} } {kubelet Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {machine-controller Update v1 2025-02-18 14:38:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:38:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {kubelet Update v1 2025-02-18 18:34:58 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.1.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283799,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.1.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:38:43 +0000 UTC,LastTransitionTime:2025-02-18 14:38:43 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:34:58 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:34:58 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:34:58 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:34:58 +0000 UTC,LastTransitionTime:2025-02-18 14:38:30 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:138.199.204.83,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-dp7t2,},NodeAddress{Type:InternalIP,Address:10.0.0.5,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:de13497e573a42b9a6ec6ebee3ca08ae,SystemUUID:de13497e-573a-42b9-a6ec-6ebee3ca08ae,BootID:66e51c7f-cb11-416a-9196-b66dbabed2aa,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:24aaf2626d6b27864c29de2097e8bbb840b3a414271bf7c8995e431e47d8408e registry.k8s.io/e2e-test-images/jessie-dnsutils:1.7],SizeBytes:112030336,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[registry.k8s.io/conformance@sha256:9d8db58a6401a33017934ace3c609d85663e253242bf93122174be20af612d1d registry.k8s.io/conformance:v1.32.1],SizeBytes:86333002,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5 registry.k8s.io/etcd:3.5.16-0],SizeBytes:57680541,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nautilus@sha256:80ba6c8c44f9623f06e868a1aa66026c8ec438ad814f9ec95e9333b415fe3550 registry.k8s.io/e2e-test-images/nautilus:1.7],SizeBytes:49641698,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:3fe7acf013d1264ffded116b80a73dc129a449b0fccdb8d21af8279f2233f36e registry.k8s.io/e2e-test-images/httpd:2.4.39-4],SizeBytes:41901587,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/sample-apiserver@sha256:19d4ecf1e0731b9ea55aca9c070d520f68b96ed0defbcc0e4eefe97b3d663ca3 registry.k8s.io/e2e-test-images/sample-apiserver:1.29.2],SizeBytes:39672997,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:37:14.664200 24 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-dp7t2
  I0218 18:37:14.674933 24 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-dp7t2
  I0218 18:37:14.705733 24 dump.go:128] kube-system/envoy-agent-8zr84 started at 2025-02-18 14:38:08 +0000 UTC (1+2 container statuses recorded)
  I0218 18:37:14.705763 24 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:37:14.705776 24 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:37:14.705799 24 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:37:14.705811 24 dump.go:128] subpath-1334/pod-subpath-test-configmap-qs4g started at 2025-02-18 18:37:03 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.705821 24 dump.go:134] 	Container test-container-subpath-configmap-qs4g ready: true, restart count 0
  I0218 18:37:14.705832 24 dump.go:128] kube-system/hcloud-csi-node-xmg4j started at 2025-02-18 14:38:08 +0000 UTC (0+3 container statuses recorded)
  I0218 18:37:14.705841 24 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:37:14.705851 24 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:37:14.705859 24 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:37:14.705869 24 dump.go:128] kube-system/kube-proxy-r5hhd started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.705879 24 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:37:14.705889 24 dump.go:128] kube-system/node-local-dns-j6zp9 started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.705898 24 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:37:14.705908 24 dump.go:128] kube-system/canal-4pjrc started at 2025-02-18 14:38:08 +0000 UTC (2+2 container statuses recorded)
  I0218 18:37:14.705915 24 dump.go:130] 	Init container install-cni ready: true, restart count 2
  I0218 18:37:14.705924 24 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:37:14.705935 24 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:37:14.705944 24 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:37:14.818676 24 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-dp7t2
  I0218 18:37:14.818703 24 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-dzdlc
  I0218 18:37:14.834111 24 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-dzdlc    8fe170d9-5a0b-405c-896b-9b708fa5c2df 201262 0 2025-02-18 14:38:00 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/hostname:admiring-kalam-9d8f4776-dzdlc kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:c91325ba-1278-4fe7-b5e8-8170b1e29f2d node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:128.140.44.25 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-dzdlc csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283765"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"82:80:27:38:bc:6a"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:128.140.44.25 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{kubelet Update v1 2025-02-18 14:38:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:01 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {kube-controller-manager Update v1 2025-02-18 14:38:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.0.0/24\"":{}}}} } {machine-controller Update v1 2025-02-18 14:38:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:39:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {kubelet Update v1 2025-02-18 18:36:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.0.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283765,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.0.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:39:04 +0000 UTC,LastTransitionTime:2025-02-18 14:39:04 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:36:40 +0000 UTC,LastTransitionTime:2025-02-18 14:38:00 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:36:40 +0000 UTC,LastTransitionTime:2025-02-18 14:38:00 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:36:40 +0000 UTC,LastTransitionTime:2025-02-18 14:38:00 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:36:40 +0000 UTC,LastTransitionTime:2025-02-18 14:38:44 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:128.140.44.25,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-dzdlc,},NodeAddress{Type:InternalIP,Address:10.0.0.2,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:9808e0d02d844e98a379a2e3936b9f80,SystemUUID:9808e0d0-2d84-4e98-a379-a2e3936b9f80,BootID:af255d7d-025c-4d7e-9be2-c87d270442d9,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:24aaf2626d6b27864c29de2097e8bbb840b3a414271bf7c8995e431e47d8408e registry.k8s.io/e2e-test-images/jessie-dnsutils:1.7],SizeBytes:112030336,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[registry.k8s.io/conformance@sha256:9d8db58a6401a33017934ace3c609d85663e253242bf93122174be20af612d1d registry.k8s.io/conformance:v1.32.1],SizeBytes:86333002,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/etcd@sha256:c6a9d11cc5c04b114ccdef39a9265eeef818e3d02f5359be035ae784097fdec5 registry.k8s.io/etcd:3.5.16-0],SizeBytes:57680541,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nautilus@sha256:80ba6c8c44f9623f06e868a1aa66026c8ec438ad814f9ec95e9333b415fe3550 registry.k8s.io/e2e-test-images/nautilus:1.7],SizeBytes:49641698,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:3fe7acf013d1264ffded116b80a73dc129a449b0fccdb8d21af8279f2233f36e registry.k8s.io/e2e-test-images/httpd:2.4.39-4],SizeBytes:41901587,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/sample-apiserver@sha256:19d4ecf1e0731b9ea55aca9c070d520f68b96ed0defbcc0e4eefe97b3d663ca3 registry.k8s.io/e2e-test-images/sample-apiserver:1.29.2],SizeBytes:39672997,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nonewprivs@sha256:8ac1264691820febacf3aea5d152cbde6d10685731ec14966a9401c6f47a68ac registry.k8s.io/e2e-test-images/nonewprivs:1.3],SizeBytes:3263463,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:37:14.834135 24 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-dzdlc
  I0218 18:37:14.847124 24 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-dzdlc
  I0218 18:37:14.871946 24 dump.go:128] kube-system/canal-k5hdp started at 2025-02-18 14:38:01 +0000 UTC (2+2 container statuses recorded)
  I0218 18:37:14.871985 24 dump.go:130] 	Init container install-cni ready: true, restart count 1
  I0218 18:37:14.871997 24 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:37:14.872008 24 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:37:14.872016 24 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:37:14.872033 24 dump.go:128] kube-system/node-local-dns-6flf8 started at 2025-02-18 14:38:01 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.872050 24 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:37:14.872071 24 dump.go:128] kube-system/kube-proxy-g6w79 started at 2025-02-18 14:38:01 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:14.872088 24 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:37:14.872100 24 dump.go:128] kube-system/hcloud-csi-node-njgf6 started at 2025-02-18 14:38:01 +0000 UTC (0+3 container statuses recorded)
  I0218 18:37:14.872109 24 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:37:14.872118 24 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:37:14.872127 24 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:37:14.872137 24 dump.go:128] kube-system/envoy-agent-47nm9 started at 2025-02-18 14:38:01 +0000 UTC (1+2 container statuses recorded)
  I0218 18:37:14.872150 24 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:37:14.872167 24 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:37:14.872186 24 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:37:14.967165 24 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-dzdlc
  I0218 18:37:14.967198 24 dump.go:109] 
  Logging node info for node admiring-kalam-9d8f4776-qvphf
  I0218 18:37:14.980770 24 dump.go:114] Node Info: &Node{ObjectMeta:{admiring-kalam-9d8f4776-qvphf    f098ea70-2415-436e-be0b-9ba91dbb5346 201892 0 2025-02-18 14:38:06 +0000 UTC <nil> <nil> map[beta.kubernetes.io/arch:amd64 beta.kubernetes.io/instance-type:ccx23 beta.kubernetes.io/os:linux csi.hetzner.cloud/location:nbg1 failure-domain.beta.kubernetes.io/region:nbg1 failure-domain.beta.kubernetes.io/zone:nbg1-dc3 kubernetes.io/arch:amd64 kubernetes.io/hostname:admiring-kalam-9d8f4776-qvphf kubernetes.io/os:linux machine:md-c8htdgrh2b-qw5swfrwdr machine-controller/owned-by:aa8189e3-d372-4afd-a5d5-52f8e1bf6332 node.kubernetes.io/instance-type:ccx23 system/cluster:c8htdgrh2b system/project:xxb5nvhqd6 topology.kubernetes.io/region:nbg1 topology.kubernetes.io/zone:nbg1-dc3 v1.machine-controller.kubermatic.io/operating-system:ubuntu x-kubernetes.io/distribution:ubuntu] map[alpha.kubernetes.io/provided-node-ip:94.130.226.111 cluster.k8s.io/machine:kube-system/admiring-kalam-9d8f4776-qvphf csi.volume.kubernetes.io/nodeid:{"csi.hetzner.cloud":"60283787"} flannel.alpha.coreos.com/backend-data:{"VNI":1,"VtepMAC":"b6:25:46:43:c7:aa"} flannel.alpha.coreos.com/backend-type:vxlan flannel.alpha.coreos.com/kube-subnet-manager:true flannel.alpha.coreos.com/public-ip:94.130.226.111 node.alpha.kubernetes.io/ttl:0 volumes.kubernetes.io/controller-managed-attach-detach:true] [] [] [{kube-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:node.alpha.kubernetes.io/ttl":{}}},"f:spec":{"f:podCIDR":{},"f:podCIDRs":{".":{},"v:\"172.25.2.0/24\"":{}}}} } {kubelet Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:alpha.kubernetes.io/provided-node-ip":{},"f:volumes.kubernetes.io/controller-managed-attach-detach":{}},"f:labels":{".":{},"f:beta.kubernetes.io/arch":{},"f:beta.kubernetes.io/os":{},"f:kubernetes.io/arch":{},"f:kubernetes.io/hostname":{},"f:kubernetes.io/os":{}}}} } {user-cluster-controller-manager Update v1 2025-02-18 14:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:x-kubernetes.io/distribution":{}}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{"f:beta.kubernetes.io/instance-type":{},"f:failure-domain.beta.kubernetes.io/region":{},"f:failure-domain.beta.kubernetes.io/zone":{},"f:node.kubernetes.io/instance-type":{},"f:topology.kubernetes.io/region":{},"f:topology.kubernetes.io/zone":{}}},"f:spec":{"f:providerID":{}}} } {hcloud-cloud-controller-manager Update v1 2025-02-18 14:38:07 +0000 UTC FieldsV1 {"f:status":{"f:addresses":{"k:{\"type\":\"ExternalIP\"}":{".":{},"f:address":{},"f:type":{}},"k:{\"type\":\"InternalIP\"}":{"f:address":{}}}}} status} {machine-controller Update v1 2025-02-18 14:38:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:cluster.k8s.io/machine":{}},"f:labels":{"f:machine":{},"f:machine-controller/owned-by":{},"f:system/cluster":{},"f:system/project":{},"f:v1.machine-controller.kubermatic.io/operating-system":{}}}} } {flanneld Update v1 2025-02-18 14:38:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:flannel.alpha.coreos.com/backend-data":{},"f:flannel.alpha.coreos.com/backend-type":{},"f:flannel.alpha.coreos.com/kube-subnet-manager":{},"f:flannel.alpha.coreos.com/public-ip":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"NetworkUnavailable\"}":{".":{},"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}}}} status} {kubelet Update v1 2025-02-18 18:37:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:csi.volume.kubernetes.io/nodeid":{}},"f:labels":{"f:csi.hetzner.cloud/location":{}}},"f:status":{"f:conditions":{"k:{\"type\":\"DiskPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"MemoryPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"PIDPressure\"}":{"f:lastHeartbeatTime":{}},"k:{\"type\":\"Ready\"}":{"f:lastHeartbeatTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{}}},"f:daemonEndpoints":{"f:kubeletEndpoint":{"f:Port":{}}},"f:images":{},"f:nodeInfo":{"f:architecture":{},"f:bootID":{},"f:containerRuntimeVersion":{},"f:kernelVersion":{},"f:kubeProxyVersion":{},"f:kubeletVersion":{},"f:machineID":{},"f:operatingSystem":{},"f:osImage":{},"f:systemUUID":{}}}} status}]},Spec:NodeSpec{PodCIDR:172.25.2.0/24,DoNotUseExternalID:,ProviderID:hcloud://60283787,Unschedulable:false,Taints:[]Taint{},ConfigSource:nil,PodCIDRs:[172.25.2.0/24],},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {<nil>} 4 DecimalSI},ephemeral-storage: {{160970244096 0} {<nil>}  BinarySI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{16368885760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3600 -3} {<nil>} 3600m DecimalSI},ephemeral-storage: {{142725735799 0} {<nil>} 142725735799 DecimalSI},hugepages-1Gi: {{0 0} {<nil>} 0 DecimalSI},hugepages-2Mi: {{0 0} {<nil>} 0 DecimalSI},memory: {{15844597760 0} {<nil>}  BinarySI},pods: {{110 0} {<nil>} 110 DecimalSI},},Phase:,Conditions:[]NodeCondition{NodeCondition{Type:NetworkUnavailable,Status:False,LastHeartbeatTime:2025-02-18 14:38:44 +0000 UTC,LastTransitionTime:2025-02-18 14:38:44 +0000 UTC,Reason:FlannelIsUp,Message:Flannel is running on this node,},NodeCondition{Type:MemoryPressure,Status:False,LastHeartbeatTime:2025-02-18 18:37:11 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientMemory,Message:kubelet has sufficient memory available,},NodeCondition{Type:DiskPressure,Status:False,LastHeartbeatTime:2025-02-18 18:37:11 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasNoDiskPressure,Message:kubelet has no disk pressure,},NodeCondition{Type:PIDPressure,Status:False,LastHeartbeatTime:2025-02-18 18:37:11 +0000 UTC,LastTransitionTime:2025-02-18 14:38:06 +0000 UTC,Reason:KubeletHasSufficientPID,Message:kubelet has sufficient PID available,},NodeCondition{Type:Ready,Status:True,LastHeartbeatTime:2025-02-18 18:37:11 +0000 UTC,LastTransitionTime:2025-02-18 14:38:29 +0000 UTC,Reason:KubeletReady,Message:kubelet is posting ready status,},},Addresses:[]NodeAddress{NodeAddress{Type:ExternalIP,Address:94.130.226.111,},NodeAddress{Type:Hostname,Address:admiring-kalam-9d8f4776-qvphf,},NodeAddress{Type:InternalIP,Address:10.0.0.4,},},DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:f5aef8dc128c47d1b552a02823b82c5b,SystemUUID:f5aef8dc-128c-47d1-b552-a02823b82c5b,BootID:3fcbd55d-c9fe-4979-afd5-d54ae7a98ebe,KernelVersion:6.8.0-51-generic,OSImage:Ubuntu 24.04.1 LTS,ContainerRuntimeVersion:containerd://1.7.25,KubeletVersion:v1.32.1,KubeProxyVersion:v1.32.1,OperatingSystem:linux,Architecture:amd64,},Images:[]ContainerImage{ContainerImage{Names:[quay.io/calico/node@sha256:a819b2cb3dbeaa3849e99f40a5af60641bedc4d063456a718ad089ef38250389 quay.io/calico/node:v3.29.1],SizeBytes:142742492,},ContainerImage{Names:[quay.io/calico/cni@sha256:fb35441ca9be59ebc2a3a00e6951f879d0edbecb3c1314defa3c4e927f4628c1 quay.io/calico/cni:v3.29.1],SizeBytes:97647856,},ContainerImage{Names:[docker.io/library/nginx@sha256:91734281c0ebfc6f1aea979cffeed5079cfe786228a71cc6f1f46a228cde6e34 docker.io/library/nginx:latest],SizeBytes:72188133,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85 registry.k8s.io/e2e-test-images/agnhost:2.53],SizeBytes:54468442,},ContainerImage{Names:[docker.io/envoyproxy/envoy@sha256:5d17b613824732465c64a44ecc4ece631a0054db3ff5f5e3aeedfd095173ab05 docker.io/envoyproxy/envoy:v1.26.1],SizeBytes:53619729,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22 registry.k8s.io/e2e-test-images/httpd:2.4.38-4],SizeBytes:40764257,},ContainerImage{Names:[quay.io/calico/kube-controllers@sha256:44acab15d22ed702aec4deca59bdc15fdddc1da49b865a370d3978fcf5730569 quay.io/calico/kube-controllers:v3.29.1],SizeBytes:35634862,},ContainerImage{Names:[docker.io/hetznercloud/hcloud-csi-driver@sha256:67c50d535c831158f1de3a09fb1013751e5c435cbc949339e571de6668193cd4 docker.io/hetznercloud/hcloud-csi-driver:v2.11.0],SizeBytes:33468291,},ContainerImage{Names:[docker.io/flannel/flannel@sha256:b6b426436c5b221226033a90d77544243a2010692dcf6fa7dfe76f732256fd2e docker.io/flannel/flannel:v0.24.4],SizeBytes:32735995,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-attacher@sha256:a399393ff5bd156277c56bae0c08389b1a1b95b7fd6ea44a316ce55e0dd559d7 registry.k8s.io/sig-storage/csi-attacher:v4.8.0],SizeBytes:32231444,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-provisioner@sha256:672e45d6a55678abc1d102de665b5cbd63848e75dc7896f238c8eaaf3c7d322f registry.k8s.io/sig-storage/csi-provisioner:v5.1.0],SizeBytes:32167411,},ContainerImage{Names:[registry.k8s.io/kube-proxy@sha256:0244651801747edf2368222f93a7d17cba6e668a890db72532d6b67a7e06dca5 registry.k8s.io/kube-proxy:v1.32.1],SizeBytes:30908485,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-resizer@sha256:ab774734705a906561e15b67f6a96538f3ad520335d636f793aaafe87a3b5200 registry.k8s.io/sig-storage/csi-resizer:v1.12.0],SizeBytes:30896583,},ContainerImage{Names:[registry.k8s.io/dns/k8s-dns-node-cache@sha256:d2504aceb7db88ce24779a750522b22eeda061868376fcf3dea19e3d1cff911e registry.k8s.io/dns/k8s-dns-node-cache:1.22.20],SizeBytes:30467856,},ContainerImage{Names:[registry.k8s.io/kas-network-proxy/proxy-agent@sha256:a61124c6a86c3a2e1212858a4d82958f727e1bca4fb7e324fde2e7b16f0c6c15 registry.k8s.io/kas-network-proxy/proxy-agent:v0.31.0],SizeBytes:28932086,},ContainerImage{Names:[registry.k8s.io/metrics-server/metrics-server@sha256:1c0419326500f1704af580d12a579671b2c3a06a8aa918cd61d0a35fb2d6b3ce registry.k8s.io/metrics-server/metrics-server:v0.7.0],SizeBytes:19435023,},ContainerImage{Names:[registry.k8s.io/coredns/coredns@sha256:a0ead06651cf580044aeb0a0feba63591858fb2e43ade8c9dea45a6a89ae7e5e registry.k8s.io/coredns/coredns:v1.10.1],SizeBytes:16190758,},ContainerImage{Names:[registry.k8s.io/sig-storage/livenessprobe@sha256:2c5f9dc4ea5ac5509d93c664ae7982d4ecdec40ca7b0638c24e5b16243b8360f registry.k8s.io/sig-storage/livenessprobe:v2.15.0],SizeBytes:14996438,},ContainerImage{Names:[registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:d7138bcc3aa5f267403d45ad4292c95397e421ea17a0035888850f424c7de25d registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0],SizeBytes:14781503,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/nginx@sha256:5c99cf6a02adda929b10321dbf4ecfa00d87be9ba4fb456006237d530ab4baa1 registry.k8s.io/e2e-test-images/nginx:1.14-4],SizeBytes:6978614,},ContainerImage{Names:[quay.io/kubermatic/network-interface-manager@sha256:4ed1259255ba2972731975e9be32dbfdc8682be55191dc00a515f7d9198eb741 quay.io/kubermatic/network-interface-manager:v2.27.0-rc.0],SizeBytes:4025816,},ContainerImage{Names:[registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9 registry.k8s.io/e2e-test-images/busybox:1.36.1-1],SizeBytes:2223659,},ContainerImage{Names:[registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a registry.k8s.io/pause:3.10],SizeBytes:320368,},ContainerImage{Names:[registry.k8s.io/pause@sha256:9001185023633d17a2f98ff69b6ff2615b8ea02a825adffa40422f51dfdcde9d registry.k8s.io/pause:3.8],SizeBytes:311286,},},VolumesInUse:[],VolumesAttached:[]AttachedVolume{},Config:nil,RuntimeHandlers:[]NodeRuntimeHandler{},Features:nil,},}
  I0218 18:37:14.980815 24 dump.go:116] 
  Logging kubelet events for node admiring-kalam-9d8f4776-qvphf
  I0218 18:37:14.996191 24 dump.go:121] 
  Logging pods the kubelet thinks are on node admiring-kalam-9d8f4776-qvphf
  I0218 18:37:15.050623 24 dump.go:128] kube-system/hcloud-csi-node-rz8p6 started at 2025-02-18 14:38:08 +0000 UTC (0+3 container statuses recorded)
  I0218 18:37:15.050650 24 dump.go:134] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 18:37:15.050663 24 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:37:15.050673 24 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:37:15.050688 24 dump.go:128] kube-system/kube-proxy-9khcg started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050698 24 dump.go:134] 	Container kube-proxy ready: true, restart count 0
  I0218 18:37:15.050709 24 dump.go:128] kube-system/node-local-dns-2qvpq started at 2025-02-18 14:38:08 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050719 24 dump.go:134] 	Container node-cache ready: true, restart count 0
  I0218 18:37:15.050730 24 dump.go:128] kube-system/canal-k7jmz started at 2025-02-18 14:38:08 +0000 UTC (2+2 container statuses recorded)
  I0218 18:37:15.050739 24 dump.go:130] 	Init container install-cni ready: true, restart count 2
  I0218 18:37:15.050746 24 dump.go:130] 	Init container mount-bpffs ready: true, restart count 0
  I0218 18:37:15.050753 24 dump.go:134] 	Container calico-node ready: true, restart count 0
  I0218 18:37:15.050763 24 dump.go:134] 	Container kube-flannel ready: true, restart count 0
  I0218 18:37:15.050771 24 dump.go:128] kube-system/envoy-agent-mtdqj started at 2025-02-18 14:38:08 +0000 UTC (1+2 container statuses recorded)
  I0218 18:37:15.050781 24 dump.go:130] 	Init container create-dummy-interface ready: true, restart count 0
  I0218 18:37:15.050806 24 dump.go:134] 	Container assign-address ready: true, restart count 0
  I0218 18:37:15.050818 24 dump.go:134] 	Container envoy-agent ready: true, restart count 0
  I0218 18:37:15.050829 24 dump.go:128] kube-system/calico-kube-controllers-776c584756-6ljhp started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050838 24 dump.go:134] 	Container calico-kube-controllers ready: true, restart count 0
  I0218 18:37:15.050848 24 dump.go:128] kube-system/metrics-server-98f8d75b6-6wxtx started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050856 24 dump.go:134] 	Container metrics-server ready: true, restart count 0
  I0218 18:37:15.050866 24 dump.go:128] kube-system/konnectivity-agent-69d96bd65-tmvh5 started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050875 24 dump.go:134] 	Container konnectivity-agent ready: true, restart count 0
  I0218 18:37:15.050886 24 dump.go:128] kube-system/metrics-server-98f8d75b6-m68l8 started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050893 24 dump.go:134] 	Container metrics-server ready: true, restart count 0
  I0218 18:37:15.050903 24 dump.go:128] kube-system/coredns-6f84685c69-f5l5j started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050910 24 dump.go:134] 	Container coredns ready: true, restart count 0
  I0218 18:37:15.050920 24 dump.go:128] kube-system/coredns-6f84685c69-jnt8h started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050929 24 dump.go:134] 	Container coredns ready: true, restart count 0
  I0218 18:37:15.050940 24 dump.go:128] kube-system/konnectivity-agent-69d96bd65-lfwdq started at 2025-02-18 14:38:29 +0000 UTC (0+1 container statuses recorded)
  I0218 18:37:15.050948 24 dump.go:134] 	Container konnectivity-agent ready: true, restart count 0
  I0218 18:37:15.050957 24 dump.go:128] kube-system/hcloud-csi-controller-58497d4b88-4qwtc started at 2025-02-18 14:38:29 +0000 UTC (0+5 container statuses recorded)
  I0218 18:37:15.050966 24 dump.go:134] 	Container csi-attacher ready: true, restart count 0
  I0218 18:37:15.050975 24 dump.go:134] 	Container csi-provisioner ready: true, restart count 0
  I0218 18:37:15.050987 24 dump.go:134] 	Container csi-resizer ready: true, restart count 0
  I0218 18:37:15.050996 24 dump.go:134] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 18:37:15.051006 24 dump.go:134] 	Container liveness-probe ready: true, restart count 0
  I0218 18:37:15.166998 24 kubelet_metrics.go:206] 
  Latency metrics for node admiring-kalam-9d8f4776-qvphf
  STEP: Destroying namespace "runtimeclass-2909" for this suite. @ 02/18/25 18:37:15.167

  Attempt #1 Failed.  Retrying ↺ @ 02/18/25 18:37:15.183

  STEP: Creating a kubernetes client @ 02/18/25 18:37:15.183
  I0218 18:37:15.183839 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename runtimeclass @ 02/18/25 18:37:15.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:15.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:15.23
  STEP: getting /apis @ 02/18/25 18:37:15.247
  STEP: getting /apis/node.k8s.io @ 02/18/25 18:37:15.264
  STEP: getting /apis/node.k8s.io/v1 @ 02/18/25 18:37:15.27
  STEP: creating @ 02/18/25 18:37:15.277
  STEP: watching @ 02/18/25 18:37:15.318
  I0218 18:37:15.318338 24 runtimeclass.go:275] starting watch
  STEP: getting @ 02/18/25 18:37:15.339
  STEP: listing @ 02/18/25 18:37:15.349
  STEP: patching @ 02/18/25 18:37:15.36
  STEP: updating @ 02/18/25 18:37:15.376
  I0218 18:37:15.391849 24 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 02/18/25 18:37:15.392
  STEP: deleting a collection @ 02/18/25 18:37:15.433
  I0218 18:37:15.468201 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1310" for this suite. @ 02/18/25 18:37:15.48
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.276 seconds]
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:15.511
  I0218 18:37:15.511379 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:37:15.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:15.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:15.57
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:37:15.591
  STEP: Saw pod success @ 02/18/25 18:37:19.647
  I0218 18:37:19.660909 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-d94c3e48-b139-443d-92bb-66ec649c7cd4 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:37:19.687
  I0218 18:37:19.739361 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3178" for this suite. @ 02/18/25 18:37:19.765
  << Timeline
------------------------------
SSSS
------------------------------
• [4.391 seconds]
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:19.792
  I0218 18:37:19.792251 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 02/18/25 18:37:19.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:19.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:19.843
  STEP: creating a target pod @ 02/18/25 18:37:19.858
  STEP: adding an ephemeral container @ 02/18/25 18:37:21.919
  STEP: checking pod container endpoints @ 02/18/25 18:37:23.968
  I0218 18:37:23.968381 24 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7844 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:23.968400 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:23.968519 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/ephemeral-containers-test-7844/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0218 18:37:24.112055 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:24.141927 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7844" for this suite. @ 02/18/25 18:37:24.166
  << Timeline
------------------------------
SSSSS
------------------------------
• [24.454 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:02.975
  I0218 18:37:02.975316 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename subpath @ 02/18/25 18:37:02.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:03.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:03.03
  STEP: Setting up data @ 02/18/25 18:37:03.053
  STEP: Creating pod pod-subpath-test-configmap-qs4g @ 02/18/25 18:37:03.088
  STEP: Creating a pod to test atomic-volume-subpath @ 02/18/25 18:37:03.088
  STEP: Saw pod success @ 02/18/25 18:37:27.291
  I0218 18:37:27.300539 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-subpath-test-configmap-qs4g container test-container-subpath-configmap-qs4g: <nil>
  STEP: delete the pod @ 02/18/25 18:37:27.331
  STEP: Deleting pod pod-subpath-test-configmap-qs4g @ 02/18/25 18:37:27.374
  I0218 18:37:27.374195 26 delete.go:62] Deleting pod "pod-subpath-test-configmap-qs4g" in namespace "subpath-1334"
  I0218 18:37:27.386596 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1334" for this suite. @ 02/18/25 18:37:27.413
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.715 seconds]
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:24.189
  I0218 18:37:24.189729 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 02/18/25 18:37:24.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:24.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:24.242
  STEP: Setting up the test @ 02/18/25 18:37:24.263
  STEP: Creating hostNetwork=false pod @ 02/18/25 18:37:24.263
  STEP: Creating hostNetwork=true pod @ 02/18/25 18:37:26.322
  STEP: Running the test @ 02/18/25 18:37:30.412
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 02/18/25 18:37:30.412
  I0218 18:37:30.412393 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:30.412414 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:30.412524 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0218 18:37:30.549506 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:30.549566 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:30.549584 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:30.549669 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0218 18:37:30.684235 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:30.684302 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:30.684316 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:30.684398 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0218 18:37:30.841942 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:30.841997 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:30.842013 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:30.842100 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0218 18:37:30.989944 24 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 02/18/25 18:37:30.989
  I0218 18:37:30.990021 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:30.990036 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:30.990131 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0218 18:37:31.122929 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:31.122991 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:31.123005 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:31.123126 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0218 18:37:31.252068 24 exec_util.go:108] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 02/18/25 18:37:31.252
  I0218 18:37:31.252210 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:31.252225 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:31.252313 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0218 18:37:31.404845 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:31.404911 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:31.404926 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:31.405021 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0218 18:37:31.557130 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:31.557201 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:31.557216 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:31.557316 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0218 18:37:31.704984 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:31.705044 24 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5877 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:37:31.705058 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:37:31.705145 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5877/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0218 18:37:31.857168 24 exec_util.go:108] Exec stderr: ""
  I0218 18:37:31.858108 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5877" for this suite. @ 02/18/25 18:37:31.885
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.166 seconds]
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:31.916
  I0218 18:37:31.916505 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename runtimeclass @ 02/18/25 18:37:31.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:31.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:31.968
  STEP: Deleting RuntimeClass runtimeclass-6019-delete-me @ 02/18/25 18:37:31.996
  STEP: Waiting for the RuntimeClass to disappear @ 02/18/25 18:37:32.016
  I0218 18:37:32.051247 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6019" for this suite. @ 02/18/25 18:37:32.067
  << Timeline
------------------------------
• [14.828 seconds]
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:32.084
  I0218 18:37:32.084558 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename gc @ 02/18/25 18:37:32.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:32.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:32.134
  STEP: create the rc @ 02/18/25 18:37:32.161
  W0218 18:37:32.176225      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 02/18/25 18:37:38.338
  STEP: wait for the rc to be deleted @ 02/18/25 18:37:38.783
  I0218 18:37:40.286582 24 garbage_collector.go:670] 81 pods remaining
  I0218 18:37:40.286624 24 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0218 18:37:40.286635 24 garbage_collector.go:678] 
  I0218 18:37:41.353159 24 garbage_collector.go:670] 71 pods remaining
  I0218 18:37:41.353183 24 garbage_collector.go:677] 67 pods has nil DeletionTimestamp
  I0218 18:37:41.353187 24 garbage_collector.go:678] 
  I0218 18:37:42.137756 24 garbage_collector.go:670] 58 pods remaining
  I0218 18:37:42.137796 24 garbage_collector.go:677] 57 pods has nil DeletionTimestamp
  I0218 18:37:42.137826 24 garbage_collector.go:678] 
  I0218 18:37:43.299145 24 garbage_collector.go:670] 43 pods remaining
  I0218 18:37:43.299168 24 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0218 18:37:43.299176 24 garbage_collector.go:678] 
  I0218 18:37:44.260154 24 garbage_collector.go:670] 29 pods remaining
  I0218 18:37:44.260190 24 garbage_collector.go:677] 29 pods has nil DeletionTimestamp
  I0218 18:37:44.260201 24 garbage_collector.go:678] 
  I0218 18:37:45.196055 24 garbage_collector.go:670] 17 pods remaining
  I0218 18:37:45.196080 24 garbage_collector.go:677] 15 pods has nil DeletionTimestamp
  I0218 18:37:45.196087 24 garbage_collector.go:678] 
  I0218 18:37:46.144033 24 garbage_collector.go:670] 0 pods remaining
  I0218 18:37:46.144056 24 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0218 18:37:46.144059 24 garbage_collector.go:678] 
  STEP: Gathering metrics @ 02/18/25 18:37:46.803
  W0218 18:37:46.827614      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0218 18:37:46.827644 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0218 18:37:46.828554 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-38" for this suite. @ 02/18/25 18:37:46.871
  << Timeline
------------------------------
SSSSSS
------------------------------
• [23.010 seconds]
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3683

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:46.921
  I0218 18:37:46.921706 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:37:46.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:46.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:46.968
  STEP: creating service multiprotocol-test in namespace services-4121 @ 02/18/25 18:37:46.988
  STEP: creating pod pod1 in namespace services-4121 @ 02/18/25 18:37:47.045
  STEP: Creating pod pod1 in namespace services-4121 @ 02/18/25 18:37:47.045
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4121 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 02/18/25 18:37:49.162
  I0218 18:37:49.210837 24 service.go:4553] successfully validated that service multiprotocol-test in namespace services-4121 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 02/18/25 18:37:49.21
  I0218 18:37:49.210900 24 resource.go:361] Creating new exec pod
  I0218 18:37:51.253638 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80'
  I0218 18:37:51.491451 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.19.59 80\nConnection to 10.240.19.59 80 port [tcp/http] succeeded!\n"
  I0218 18:37:51.491500 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:37:51.491608 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.240.19.59 80'
  I0218 18:37:53.734295 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.240.19.59 80\n"
  I0218 18:37:53.734335 24 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 02/18/25 18:37:53.734
  I0218 18:37:53.761288 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80'
  I0218 18:37:54.005763 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.19.59 80\nConnection to 10.240.19.59 80 port [tcp/http] succeeded!\n"
  I0218 18:37:54.005831 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:37:54.005984 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.240.19.59 80'
  I0218 18:37:56.246476 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.240.19.59 80\n"
  I0218 18:37:56.246531 24 builder.go:147] stdout: ""
  I0218 18:37:56.246653 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.240.19.59 80'
  I0218 18:37:58.526341 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.240.19.59 80\n"
  I0218 18:37:58.526392 24 builder.go:147] stdout: ""
  I0218 18:37:58.526539 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.240.19.59 80'
  I0218 18:38:00.815357 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.240.19.59 80\n"
  I0218 18:38:00.815414 24 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 02/18/25 18:38:00.815
  I0218 18:38:00.844050 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.240.19.59 80'
  I0218 18:38:03.099814 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.240.19.59 80\n"
  I0218 18:38:03.099878 24 builder.go:147] stdout: "pod1"
  I0218 18:38:03.100001 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80'
  I0218 18:38:05.365595 24 builder.go:135] rc: 1
  I0218 18:38:05.365695 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.240.19.59 80
  nc: connect to 10.240.19.59 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0218 18:38:05.365772 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80'
  I0218 18:38:07.636944 24 builder.go:135] rc: 1
  I0218 18:38:07.637046 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.240.19.59 80
  nc: connect to 10.240.19.59 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0218 18:38:07.637162 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80'
  I0218 18:38:09.892376 24 builder.go:135] rc: 1
  I0218 18:38:09.892485 24 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-4121 exec execpodsch9d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.59 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.240.19.59 80
  nc: connect to 10.240.19.59 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0218 18:38:09.893330 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4121" for this suite. @ 02/18/25 18:38:09.914
  << Timeline
------------------------------
S
------------------------------
• [0.253 seconds]
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1720

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:09.935
  I0218 18:38:09.935540 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:38:09.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:09.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:09.997
  I0218 18:38:10.029584 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-6918 version'
  I0218 18:38:10.147278 24 builder.go:146] stderr: ""
  I0218 18:38:10.147372 24 builder.go:147] stdout: "Client Version: v1.32.1\nKustomize Version: v5.5.0\nServer Version: v1.32.1\n"
  I0218 18:38:10.148605 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6918" for this suite. @ 02/18/25 18:38:10.166
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.166 seconds]
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:10.204
  I0218 18:38:10.204587 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename security-context-test @ 02/18/25 18:38:10.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:10.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:10.25
  I0218 18:38:14.329383 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8473" for this suite. @ 02/18/25 18:38:14.352
  << Timeline
------------------------------
S
------------------------------
• [51.751 seconds]
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:37:27.459
  I0218 18:37:27.459203 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:37:27.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:37:27.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:37:27.516
  STEP: Creating pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618 @ 02/18/25 18:37:27.533
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:37:29.592
  I0218 18:37:29.604138 26 container_probe.go:1749] Initial restart count of pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 is 0
  I0218 18:37:29.618700 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:31.640566 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:33.778174 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:35.957219 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:38.345827 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:40.406954 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:42.685217 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:44.873195 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:46.883283 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:48.903323 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:50.913568 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:52.924731 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:54.937063 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:56.954135 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:37:58.965354 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:00.977139 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:02.989688 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:05.000395 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:07.019566 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:09.035943 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:11.050616 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:13.064420 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:15.079784 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:17.095882 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:19.107177 26 container_probe.go:1759] Get pod busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 in namespace container-probe-618
  I0218 18:38:19.107225 26 container_probe.go:1763] Restart count of pod container-probe-618/busybox-b5b23add-1680-41b1-96fc-ede265f3adb1 is now 1 (49.503054713s elapsed)
  STEP: deleting the pod @ 02/18/25 18:38:19.107
  I0218 18:38:19.167038 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-618" for this suite. @ 02/18/25 18:38:19.194
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.843 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:14.372
  I0218 18:38:14.372305 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:38:14.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:14.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:14.42
  STEP: Setting up server cert @ 02/18/25 18:38:14.481
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:38:14.676
  STEP: Deploying the webhook pod @ 02/18/25 18:38:14.699
  STEP: Wait for the deployment to be ready @ 02/18/25 18:38:14.723
  I0218 18:38:14.768219 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:38:16.8
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:38:16.828
  I0218 18:38:17.828893 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0218 18:38:17.850560 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5855-crds.webhook.example.com via the AdmissionRegistration API @ 02/18/25 18:38:18.382
  STEP: Creating a custom resource that should be mutated by the webhook @ 02/18/25 18:38:18.438
  I0218 18:38:21.155312 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5751" for this suite. @ 02/18/25 18:38:21.178
  STEP: Destroying namespace "webhook-markers-74" for this suite. @ 02/18/25 18:38:21.197
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.303 seconds]
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:21.231
  I0218 18:38:21.231854 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename lease-test @ 02/18/25 18:38:21.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:21.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:21.304
  I0218 18:38:21.493459 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9810" for this suite. @ 02/18/25 18:38:21.509
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.256 seconds]
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:19.231
  I0218 18:38:19.231619 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:38:19.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:19.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:19.298
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:38:19.317
  STEP: Saw pod success @ 02/18/25 18:38:23.377
  I0218 18:38:23.388891 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-e71becfc-60c0-4bac-8b97-01b647f468cf container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:38:23.414
  I0218 18:38:23.453522 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6070" for this suite. @ 02/18/25 18:38:23.473
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.231 seconds]
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:23.494
  I0218 18:38:23.494528 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:38:23.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:23.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:23.554
  STEP: Creating a ResourceQuota @ 02/18/25 18:38:23.593
  STEP: Getting a ResourceQuota @ 02/18/25 18:38:23.609
  STEP: Listing all ResourceQuotas with LabelSelector @ 02/18/25 18:38:23.622
  STEP: Patching the ResourceQuota @ 02/18/25 18:38:23.637
  STEP: Deleting a Collection of ResourceQuotas @ 02/18/25 18:38:23.653
  STEP: Verifying the deleted ResourceQuota @ 02/18/25 18:38:23.679
  I0218 18:38:23.690199 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4641" for this suite. @ 02/18/25 18:38:23.706
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.240 seconds]
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:21.551
  I0218 18:38:21.551680 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename security-context @ 02/18/25 18:38:21.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:21.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:21.601
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 02/18/25 18:38:21.619
  STEP: Saw pod success @ 02/18/25 18:38:25.674
  I0218 18:38:25.685623 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod security-context-31b40616-1a3b-4dd8-89ba-a69af19ada0a container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:38:25.721
  I0218 18:38:25.753954 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8693" for this suite. @ 02/18/25 18:38:25.775
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.184 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:25.818
  I0218 18:38:25.818198 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename custom-resource-definition @ 02/18/25 18:38:25.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:25.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:25.909
  STEP: fetching the /apis discovery document @ 02/18/25 18:38:25.925
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 02/18/25 18:38:25.936
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 02/18/25 18:38:25.936
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 02/18/25 18:38:25.936
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 02/18/25 18:38:25.945
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 02/18/25 18:38:25.945
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 02/18/25 18:38:25.964
  I0218 18:38:25.965541 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9665" for this suite. @ 02/18/25 18:38:25.985
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.349 seconds]
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:23.757
  I0218 18:38:23.757693 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:38:23.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:23.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:23.81
  I0218 18:38:23.826555 26 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0218 18:38:23.871813 26 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 02/18/25 18:38:23.871
  I0218 18:38:25.896324 26 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0218 18:38:25.909282 26 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0218 18:38:25.934386 26 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0218 18:38:27.969111 26 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0218 18:38:27.987951 26 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0218 18:38:28.034326 26 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5538d569-21cd-4de0-9c5f-4d1db15007b2",
      ResourceVersion: (string) (len=6) "204517",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6ff565599d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:38:28.047208 26 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-6ff565599d" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f31f879-b9d1-4b58-88e6-5ef99c07b5f8",
      ResourceVersion: (string) (len=6) "204507",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5538d569-21cd-4de0-9c5f-4d1db15007b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 35 33 38 64 35  36 39 2d 32 31 63 64 2d  |\"5538d569-21cd-|
              00000120  34 64 65 30 2d 39 63 35  66 2d 34 64 31 64 62 31  |4de0-9c5f-4d1db1|
              00000130  35 30 30 37 62 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5007b2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:38:28.047231 26 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0218 18:38:28.047509 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a9ec0bf-e91b-40ff-869c-70618251169f",
      ResourceVersion: (string) (len=6) "204516",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5538d569-21cd-4de0-9c5f-4d1db15007b2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 35 33 38 64 35 36  |"uid\":\"5538d56|
              000000b0  39 2d 32 31 63 64 2d 34  64 65 30 2d 39 63 35 66  |9-21cd-4de0-9c5f|
              000000c0  2d 34 64 31 64 62 31 35  30 30 37 62 32 5c 22 7d  |-4d1db15007b2\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:38:28.063813 26 deployment.go:68] Pod "test-rolling-update-deployment-6ff565599d-65926" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6ff565599d-65926",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6ff565599d-",
      Namespace: (string) (len=15) "deployment-9090",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17a7483a-ae5c-437b-95bb-c519eef4ab00",
      ResourceVersion: (string) (len=6) "204506",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ff565599d",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "029886b93ce8a3cd318ea063051310da8476aa68f89fe7f8da37dd29d83104c8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.109/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.109/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6ff565599d",
          UID: (types.UID) (len=36) "9f31f879-b9d1-4b58-88e6-5ef99c07b5f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  33 31 66 38 37 39 2d 62  |d\":\"9f31f879-b|
              00000090  39 64 31 2d 34 62 35 38  2d 38 38 65 36 2d 35 65  |9d1-4b58-88e6-5e|
              000000a0  66 39 39 63 30 37 62 35  66 38 5c 22 7d 22 3a 7b  |f99c07b5f8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500706,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 30 2e 31  30 39 5c 22 7d 22 3a 7b  |2.25.0.109\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gns2j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gns2j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500707,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500705,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500705,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875500706,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://7428d368ec403e5d9348d47ca34e9bdb57f6c01512f1bfefd5a194086c22f74c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-gns2j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:38:28.064989 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9090" for this suite. @ 02/18/25 18:38:28.091
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.318 seconds]
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:28.128
  I0218 18:38:28.128170 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename disruption @ 02/18/25 18:38:28.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:28.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:28.203
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:38:28.242
  STEP: Updating PodDisruptionBudget status @ 02/18/25 18:38:30.252
  STEP: Waiting for all pods to be running @ 02/18/25 18:38:30.277
  I0218 18:38:30.287625 26 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 02/18/25 18:38:32.291
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:38:32.332
  STEP: Patching PodDisruptionBudget status @ 02/18/25 18:38:32.363
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:38:32.388
  I0218 18:38:32.401774 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2908" for this suite. @ 02/18/25 18:38:32.426
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [11.724 seconds]
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:32.46
  I0218 18:38:32.460727 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:38:32.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:32.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:32.522
  STEP: Creating a test externalName service @ 02/18/25 18:38:32.54
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4671.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-4671.svc.cluster.local; sleep 1; done
   @ 02/18/25 18:38:32.555
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4671.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4671.svc.cluster.local; sleep 1; done
   @ 02/18/25 18:38:32.555
  STEP: creating a pod to probe DNS @ 02/18/25 18:38:32.555
  STEP: submitting the pod to kubernetes @ 02/18/25 18:38:32.555
  STEP: retrieving the pod @ 02/18/25 18:38:34.602
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:38:34.612
  I0218 18:38:34.659566 26 dns_common.go:571] DNS probes using dns-test-df189e56-73bb-4808-a136-6167626ba858 succeeded

  STEP: changing the externalName to bar.example.com @ 02/18/25 18:38:34.659
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4671.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-4671.svc.cluster.local; sleep 1; done
   @ 02/18/25 18:38:34.684
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4671.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4671.svc.cluster.local; sleep 1; done
   @ 02/18/25 18:38:34.684
  STEP: creating a second pod to probe DNS @ 02/18/25 18:38:34.684
  STEP: submitting the pod to kubernetes @ 02/18/25 18:38:34.684
  STEP: retrieving the pod @ 02/18/25 18:38:36.764
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:38:36.776
  I0218 18:38:36.801897 26 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-4671.svc.cluster.local from pod  dns-4671/dns-test-8db017d1-5801-4329-8f6f-5d6a354f3c80 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0218 18:38:36.822653 26 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-4671.svc.cluster.local from pod  dns-4671/dns-test-8db017d1-5801-4329-8f6f-5d6a354f3c80 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0218 18:38:36.822706 26 dns_common.go:506] Lookups using dns-4671/dns-test-8db017d1-5801-4329-8f6f-5d6a354f3c80 failed for: [agnhost_udp@dns-test-service-3.dns-4671.svc.cluster.local jessie_udp@dns-test-service-3.dns-4671.svc.cluster.local]

  I0218 18:38:36.849039 26 dns_common.go:514] Pod client logs for webserver: 
  I0218 18:38:36.874169 26 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0218 18:38:36.901187 26 dns_common.go:514] Pod client logs for jessie-querier: 
  I0218 18:38:41.821652 26 dns_common.go:571] DNS probes using dns-test-8db017d1-5801-4329-8f6f-5d6a354f3c80 succeeded

  STEP: changing the service to type=ClusterIP @ 02/18/25 18:38:41.821
  W0218 18:38:41.860072      26 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4671.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-4671.svc.cluster.local; sleep 1; done
   @ 02/18/25 18:38:41.86
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4671.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4671.svc.cluster.local; sleep 1; done
   @ 02/18/25 18:38:41.86
  STEP: creating a third pod to probe DNS @ 02/18/25 18:38:41.86
  STEP: submitting the pod to kubernetes @ 02/18/25 18:38:41.869
  STEP: retrieving the pod @ 02/18/25 18:38:43.91
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:38:43.925
  I0218 18:38:43.977616 26 dns_common.go:571] DNS probes using dns-test-aac564a2-dd21-4067-a755-45bf29ce9913 succeeded

  STEP: deleting the pod @ 02/18/25 18:38:43.978
  STEP: deleting the pod @ 02/18/25 18:38:44.013
  STEP: deleting the pod @ 02/18/25 18:38:44.051
  STEP: deleting the test externalName service @ 02/18/25 18:38:44.089
  I0218 18:38:44.132502 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4671" for this suite. @ 02/18/25 18:38:44.161
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [0.329 seconds]
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:44.199
  I0218 18:38:44.199708 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename csinodes @ 02/18/25 18:38:44.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:44.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:44.275
  STEP: Creating initial csiNode "e2e-csinode-qz9kh" @ 02/18/25 18:38:44.292
  STEP: Getting initial csiNode "e2e-csinode-qz9kh" @ 02/18/25 18:38:44.305
  STEP: Patching initial csiNode: "e2e-csinode-qz9kh" @ 02/18/25 18:38:44.322
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-qz9kh=patched" @ 02/18/25 18:38:44.335
  STEP: Delete initial csiNode: "e2e-csinode-qz9kh" @ 02/18/25 18:38:44.347
  STEP: Confirm deletion of csiNode "e2e-csinode-qz9kh" @ 02/18/25 18:38:44.37
  STEP: Creating replacement csiNode "e2e-csinode-8glnz" @ 02/18/25 18:38:44.381
  STEP: Getting replacement csiNode "e2e-csinode-8glnz" @ 02/18/25 18:38:44.395
  STEP: Updating replacement csiNode "e2e-csinode-8glnz" @ 02/18/25 18:38:44.406
  STEP: DeleteCollection of CSINodes with "e2e-csinode-8glnz=updated" label @ 02/18/25 18:38:44.452
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-8glnz=updated" @ 02/18/25 18:38:44.473
  I0218 18:38:44.490293 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-1283" for this suite. @ 02/18/25 18:38:44.507
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.284 seconds]
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:44.538
  I0218 18:38:44.538465 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:38:44.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:44.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:44.597
  STEP: Creating secret with name secret-test-3fd8a241-d250-42fb-b7ab-2df4d472a767 @ 02/18/25 18:38:44.613
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:38:44.629
  STEP: Saw pod success @ 02/18/25 18:38:48.69
  I0218 18:38:48.707818 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-secrets-7be75ff3-5441-4899-a060-c2c717b667a9 container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:38:48.734
  I0218 18:38:48.782185 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-136" for this suite. @ 02/18/25 18:38:48.799
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.420 seconds]
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:48.838
  I0218 18:38:48.838253 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename validating-admission-policy @ 02/18/25 18:38:48.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:48.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:48.892
  STEP: getting /apis @ 02/18/25 18:38:48.94
  STEP: getting /apis/admissionregistration.k8s.io @ 02/18/25 18:38:48.96
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 02/18/25 18:38:48.966
  STEP: creating @ 02/18/25 18:38:48.973
  STEP: getting @ 02/18/25 18:38:49.049
  STEP: listing @ 02/18/25 18:38:49.058
  STEP: watching @ 02/18/25 18:38:49.069
  I0218 18:38:49.069689 26 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 02/18/25 18:38:49.076
  STEP: updating @ 02/18/25 18:38:49.09
  I0218 18:38:49.115317 26 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 02/18/25 18:38:49.115
  STEP: deleting a collection @ 02/18/25 18:38:49.164
  I0218 18:38:49.218388 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2609" for this suite. @ 02/18/25 18:38:49.239
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [4.301 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:49.271
  I0218 18:38:49.271989 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:38:49.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:49.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:49.324
  STEP: Creating projection with secret that has name projected-secret-test-map-456fca5a-d8f2-4231-9c01-a8580605d076 @ 02/18/25 18:38:49.354
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:38:49.384
  STEP: Saw pod success @ 02/18/25 18:38:53.456
  I0218 18:38:53.469015 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-secrets-630db05e-9f56-4553-a5e6-ff718a0f2f94 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:38:53.491
  I0218 18:38:53.531066 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8423" for this suite. @ 02/18/25 18:38:53.55
  << Timeline
------------------------------
SSSS
------------------------------
• [4.269 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:53.578
  I0218 18:38:53.578413 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:38:53.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:53.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:53.64
  STEP: Creating configMap with name configmap-test-volume-10cfe37a-810b-49d2-b878-5f4546159534 @ 02/18/25 18:38:53.659
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:38:53.676
  STEP: Saw pod success @ 02/18/25 18:38:57.73
  I0218 18:38:57.738801 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-2bbeceb2-924c-4838-9df6-3e6424268c9d container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:38:57.765
  I0218 18:38:57.808942 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9452" for this suite. @ 02/18/25 18:38:57.83
  << Timeline
------------------------------
S
------------------------------
• [2.400 seconds]
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:57.85
  I0218 18:38:57.850384 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:38:57.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:57.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:57.904
  I0218 18:38:57.919312 26 deployment.go:1645] Creating simple deployment test-new-deployment
  I0218 18:38:57.969243 26 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 02/18/25 18:39:00.019
  STEP: updating a scale subresource @ 02/18/25 18:39:00.03
  STEP: verifying the deployment Spec.Replicas was modified @ 02/18/25 18:39:00.049
  STEP: Patch a scale subresource @ 02/18/25 18:39:00.065
  I0218 18:39:00.151548 26 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0cddb87-67c4-4e41-9f4d-9a3f6246bd79",
      ResourceVersion: (string) (len=6) "205027",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-685b768f58\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:39:00.161159 26 deployment.go:40] New ReplicaSet "test-new-deployment-685b768f58" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3728b40e-ebfe-4ed4-b114-2aaf91681e2a",
      ResourceVersion: (string) (len=6) "205038",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "a0cddb87-67c4-4e41-9f4d-9a3f6246bd79",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 30 63 64 64 62  38 37 2d 36 37 63 34 2d  |\"a0cddb87-67c4-|
              00000120  34 65 34 31 2d 39 66 34  64 2d 39 61 33 66 36 32  |4e41-9f4d-9a3f62|
              00000130  34 36 62 64 37 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |46bd79\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:39:00.175179 26 deployment.go:68] Pod "test-new-deployment-685b768f58-cmsln" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-cmsln",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "097f21c4-0822-4b07-a0f9-ac5ca4445688",
      ResourceVersion: (string) (len=6) "205040",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "3728b40e-ebfe-4ed4-b114-2aaf91681e2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 38 62 34 30 65 2d 65  |d\":\"3728b40e-e|
              00000090  62 66 65 2d 34 65 64 34  2d 62 31 31 34 2d 32 61  |bfe-4ed4-b114-2a|
              000000a0  61 66 39 31 36 38 31 65  32 61 5c 22 7d 22 3a 7b  |af91681e2a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26tc4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26tc4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-26tc4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:39:00.175751 26 deployment.go:68] Pod "test-new-deployment-685b768f58-mxdn7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-685b768f58-mxdn7",
      GenerateName: (string) (len=31) "test-new-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-4967",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ea574bb-703f-4347-918b-f348954e2241",
      ResourceVersion: (string) (len=6) "205019",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "61c548268c7ada8ef58f120c1761a7e44d4550dd891f50dba4c84fe39e122421",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.115/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.115/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-685b768f58",
          UID: (types.UID) (len=36) "3728b40e-ebfe-4ed4-b114-2aaf91681e2a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 37  32 38 62 34 30 65 2d 65  |d\":\"3728b40e-e|
              00000090  62 66 65 2d 34 65 64 34  2d 62 31 31 34 2d 32 61  |bfe-4ed4-b114-2a|
              000000a0  61 66 39 31 36 38 31 65  32 61 5c 22 7d 22 3a 7b  |af91681e2a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 30 2e 31  31 35 5c 22 7d 22 3a 7b  |2.25.0.115\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zzn2f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zzn2f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875500737,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875500737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875500738,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://679a29f21ebe1350b293679a686442d028b1aa7c936838b66a345c23a27ee8dd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zzn2f",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:39:00.176602 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4967" for this suite. @ 02/18/25 18:39:00.211
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [1.177 seconds]
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:00.261
  I0218 18:39:00.261033 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename validating-admission-policy @ 02/18/25 18:39:00.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:00.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:00.358
  STEP: creating the policy @ 02/18/25 18:39:00.394
  STEP: waiting until the marker is denied @ 02/18/25 18:39:00.449
  STEP: testing a replicated Deployment to be allowed @ 02/18/25 18:39:00.771
  STEP: testing a non-replicated ReplicaSet not to be denied @ 02/18/25 18:39:01.02
  I0218 18:39:01.334096 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-2541" for this suite. @ 02/18/25 18:39:01.381
  << Timeline
------------------------------
S
------------------------------
• [4.346 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:01.44
  I0218 18:39:01.440175 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:39:01.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:01.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:01.485
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 02/18/25 18:39:01.501
  STEP: Saw pod success @ 02/18/25 18:39:05.641
  I0218 18:39:05.651743 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-bw8qq pod pod-60bcb063-674b-48d6-8008-484745ca6b7e container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:39:05.699
  I0218 18:39:05.749616 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5691" for this suite. @ 02/18/25 18:39:05.767
  << Timeline
------------------------------
SSS
------------------------------
• [4.298 seconds]
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:05.79
  I0218 18:39:05.790043 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:39:05.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:05.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:05.85
  STEP: Creating secret with name secret-test-c07724a8-2c4f-4b08-8f34-cbf8f7227319 @ 02/18/25 18:39:05.864
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:39:05.886
  STEP: Saw pod success @ 02/18/25 18:39:09.966
  I0218 18:39:09.975140 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-secrets-42d23c93-849d-4074-be64-9c2979ee0af2 container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:39:09.998
  I0218 18:39:10.047013 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3633" for this suite. @ 02/18/25 18:39:10.066
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.569 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:10.114
  I0218 18:39:10.114620 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 18:39:10.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:10.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:10.173
  I0218 18:39:10.188187 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 02/18/25 18:39:12.122
  I0218 18:39:12.123055 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-6563 --namespace=crd-publish-openapi-6563 create -f -'
  I0218 18:39:12.301563 26 builder.go:146] stderr: ""
  I0218 18:39:12.301636 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2609-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0218 18:39:12.301732 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-6563 --namespace=crd-publish-openapi-6563 delete e2e-test-crd-publish-openapi-2609-crds test-cr'
  I0218 18:39:12.476412 26 builder.go:146] stderr: ""
  I0218 18:39:12.476496 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2609-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0218 18:39:12.476582 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-6563 --namespace=crd-publish-openapi-6563 apply -f -'
  I0218 18:39:12.644553 26 builder.go:146] stderr: ""
  I0218 18:39:12.644598 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2609-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0218 18:39:12.644673 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-6563 --namespace=crd-publish-openapi-6563 delete e2e-test-crd-publish-openapi-2609-crds test-cr'
  I0218 18:39:12.787908 26 builder.go:146] stderr: ""
  I0218 18:39:12.787967 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2609-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 02/18/25 18:39:12.787
  I0218 18:39:12.788062 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-6563 explain e2e-test-crd-publish-openapi-2609-crds'
  I0218 18:39:12.909417 26 builder.go:146] stderr: ""
  I0218 18:39:12.909536 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2609-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0218 18:39:14.626646 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6563" for this suite. @ 02/18/25 18:39:14.665
  << Timeline
------------------------------
SSSS
------------------------------
• [3.411 seconds]
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:14.688
  I0218 18:39:14.688650 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 18:39:14.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:14.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:14.734
  I0218 18:39:14.749283 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  W0218 18:39:17.397633      26 warnings.go:70] unknown field "alpha"
  W0218 18:39:17.397652      26 warnings.go:70] unknown field "beta"
  W0218 18:39:17.397655      26 warnings.go:70] unknown field "delta"
  W0218 18:39:17.397658      26 warnings.go:70] unknown field "epsilon"
  W0218 18:39:17.397661      26 warnings.go:70] unknown field "gamma"
  I0218 18:39:18.043837 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9466" for this suite. @ 02/18/25 18:39:18.069
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.239 seconds]
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:18.122
  I0218 18:39:18.122046 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename runtimeclass @ 02/18/25 18:39:18.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:18.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:18.213
  I0218 18:39:18.320964 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9280" for this suite. @ 02/18/25 18:39:18.34
  << Timeline
------------------------------
SSSSSS
------------------------------
• [0.704 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:18.367
  I0218 18:39:18.367090 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename custom-resource-definition @ 02/18/25 18:39:18.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:18.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:18.418
  I0218 18:39:18.435894 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:39:19.034413 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5091" for this suite. @ 02/18/25 18:39:19.056
  << Timeline
------------------------------
S
------------------------------
• [2.199 seconds]
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:19.074
  I0218 18:39:19.074046 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:39:19.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:19.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:19.121
  STEP: Create a pod @ 02/18/25 18:39:19.136
  STEP: patching /status @ 02/18/25 18:39:21.2
  I0218 18:39:21.223067 26 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0218 18:39:21.223949 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7746" for this suite. @ 02/18/25 18:39:21.251
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.174 seconds]
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:21.303
  I0218 18:39:21.303965 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename security-context-test @ 02/18/25 18:39:21.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:21.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:21.35
  I0218 18:39:25.439256 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3149" for this suite. @ 02/18/25 18:39:25.463
  << Timeline
------------------------------
SSS
------------------------------
• [12.194 seconds]
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:25.482
  I0218 18:39:25.482639 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:39:25.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:25.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:25.53
  STEP: creating service endpoint-test2 in namespace services-5129 @ 02/18/25 18:39:25.545
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5129 to expose endpoints map[] @ 02/18/25 18:39:25.567
  I0218 18:39:25.593757 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5129 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5129 @ 02/18/25 18:39:25.593
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5129 to expose endpoints map[pod1:[80]] @ 02/18/25 18:39:27.647
  I0218 18:39:27.687376 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5129 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 02/18/25 18:39:27.687
  I0218 18:39:27.687416 26 resource.go:361] Creating new exec pod
  I0218 18:39:30.736270 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5129 exec execpodcgd4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0218 18:39:30.996086 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.240.30.18) 80 port [tcp/http] succeeded!\n"
  I0218 18:39:30.996142 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:39:30.996249 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5129 exec execpodcgd4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.30.18 80'
  I0218 18:39:31.251587 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.30.18 80\nConnection to 10.240.30.18 80 port [tcp/http] succeeded!\n"
  I0218 18:39:31.251646 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5129 @ 02/18/25 18:39:31.251
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5129 to expose endpoints map[pod1:[80] pod2:[80]] @ 02/18/25 18:39:33.311
  I0218 18:39:33.375465 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5129 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 02/18/25 18:39:33.375
  I0218 18:39:34.376278 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5129 exec execpodcgd4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0218 18:39:34.651627 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.240.30.18) 80 port [tcp/http] succeeded!\n"
  I0218 18:39:34.651682 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:39:34.651805 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5129 exec execpodcgd4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.30.18 80'
  I0218 18:39:34.899769 26 builder.go:146] stderr: "+ + ncecho -v hostName -t -w 2 10.240.30.18 80\n\nConnection to 10.240.30.18 80 port [tcp/http] succeeded!\n"
  I0218 18:39:34.899826 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5129 @ 02/18/25 18:39:34.899
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5129 to expose endpoints map[pod2:[80]] @ 02/18/25 18:39:34.932
  I0218 18:39:36.010133 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5129 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 02/18/25 18:39:36.01
  I0218 18:39:37.011108 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5129 exec execpodcgd4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0218 18:39:37.283366 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.240.30.18) 80 port [tcp/http] succeeded!\n"
  I0218 18:39:37.283462 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:39:37.283572 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5129 exec execpodcgd4n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.30.18 80'
  I0218 18:39:37.525588 26 builder.go:146] stderr: "+ nc -v -t -w 2 10.240.30.18 80\n+ echo hostName\nConnection to 10.240.30.18 80 port [tcp/http] succeeded!\n"
  I0218 18:39:37.525649 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5129 @ 02/18/25 18:39:37.525
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5129 to expose endpoints map[] @ 02/18/25 18:39:37.555
  I0218 18:39:37.585492 26 service.go:4460] successfully validated that service endpoint-test2 in namespace services-5129 exposes endpoints map[]
  I0218 18:39:37.633571 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5129" for this suite. @ 02/18/25 18:39:37.657
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [6.842 seconds]
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:37.688
  I0218 18:39:37.688864 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:39:37.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:37.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:37.743
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5366 @ 02/18/25 18:39:37.758
  STEP: changing the ExternalName service to type=ClusterIP @ 02/18/25 18:39:37.772
  STEP: creating replication controller externalname-service in namespace services-5366 @ 02/18/25 18:39:37.808
  I0218 18:39:37.822726      26 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5366, replica count: 2
  I0218 18:39:40.873928      26 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:39:40.873947 26 resource.go:361] Creating new exec pod
  I0218 18:39:43.917539 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5366 exec execpodfmsvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0218 18:39:44.204299 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.240.21.89) 80 port [tcp/http] succeeded!\n"
  I0218 18:39:44.204351 26 builder.go:147] stdout: "externalname-service-lvqq8"
  I0218 18:39:44.204514 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5366 exec execpodfmsvp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.21.89 80'
  I0218 18:39:44.453139 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.21.89 80\nConnection to 10.240.21.89 80 port [tcp/http] succeeded!\n"
  I0218 18:39:44.453184 26 builder.go:147] stdout: "externalname-service-cjp9s"
  I0218 18:39:44.453686 26 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I0218 18:39:44.493291 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5366" for this suite. @ 02/18/25 18:39:44.515
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.240 seconds]
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:44.541
  I0218 18:39:44.541591 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:39:44.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:44.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:44.588
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:39:44.602
  STEP: Saw pod success @ 02/18/25 18:39:48.661
  I0218 18:39:48.676757 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-6ab73ed8-5688-4a83-94de-d9d00f26c6a0 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:39:48.702
  I0218 18:39:48.737562 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-267" for this suite. @ 02/18/25 18:39:48.764
  << Timeline
------------------------------
SSSSS
------------------------------
• [8.353 seconds]
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1102

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:48.786
  I0218 18:39:48.786635 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename job @ 02/18/25 18:39:48.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:48.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:48.846
  STEP: Creating a suspended job @ 02/18/25 18:39:48.872
  STEP: Patching the Job @ 02/18/25 18:39:48.886
  STEP: Watching for Job to be patched @ 02/18/25 18:39:48.919
  I0218 18:39:48.926813 26 job.go:1309] Event ADDED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w] and annotations: map[]
  I0218 18:39:48.926859 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w] and annotations: map[]
  I0218 18:39:48.926909 26 job.go:1312] Event MODIFIED found for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[]
  STEP: Updating the job @ 02/18/25 18:39:48.926
  STEP: Watching for Job to be updated @ 02/18/25 18:39:48.952
  I0218 18:39:48.958674 26 job.go:1312] Event MODIFIED found for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:48.958731 26 job.go:1180] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 02/18/25 18:39:48.958
  I0218 18:39:48.968202 26 job.go:1187] Job: e2e-m8j4w as labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched]
  STEP: Waiting for job to complete @ 02/18/25 18:39:48.968
  STEP: Delete a job collection with a labelselector @ 02/18/25 18:39:57.039
  STEP: Watching for Job to be deleted @ 02/18/25 18:39:57.062
  I0218 18:39:57.070369 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.072826 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.072890 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.074842 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.074875 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.075004 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.075061 26 job.go:1309] Event MODIFIED observed for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  I0218 18:39:57.075087 26 job.go:1312] Event DELETED found for Job e2e-m8j4w in namespace job-9550 with labels: map[e2e-job-label:e2e-m8j4w e2e-m8j4w:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 02/18/25 18:39:57.075
  I0218 18:39:57.095643 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9550" for this suite. @ 02/18/25 18:39:57.119
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [0.151 seconds]
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:57.146
  I0218 18:39:57.146843 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubelet-test @ 02/18/25 18:39:57.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:57.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:57.193
  I0218 18:39:57.268722 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8956" for this suite. @ 02/18/25 18:39:57.281
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [0.143 seconds]
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:878

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:57.309
  I0218 18:39:57.309697 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 18:39:57.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:57.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:57.358
  STEP: Creating a Serviceaccount "e2e-sa-2hzrd" in namespace "svcaccounts-8939" @ 02/18/25 18:39:57.374
  STEP: Creating a ServiceaccountToken "e2e-sa-2hzrd" in namespace "svcaccounts-8939" @ 02/18/25 18:39:57.388
  STEP: Creating a TokenReview for "e2e-sa-2hzrd" in namespace "svcaccounts-8939" @ 02/18/25 18:39:57.403
  I0218 18:39:57.413269 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8939" for this suite. @ 02/18/25 18:39:57.43
  << Timeline
------------------------------
• [4.156 seconds]
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:39:57.454
  I0218 18:39:57.454837 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubelet-test @ 02/18/25 18:39:57.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:39:57.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:39:57.503
  I0218 18:40:01.565122 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3278" for this suite. @ 02/18/25 18:40:01.589
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [2.209 seconds]
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:01.618
  I0218 18:40:01.618554 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename containers @ 02/18/25 18:40:01.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:01.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:01.68
  I0218 18:40:03.781868 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1795" for this suite. @ 02/18/25 18:40:03.803
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [0.117 seconds]
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:03.837
  I0218 18:40:03.837011 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:40:03.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:03.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:03.898
  STEP: Creating configMap that has name configmap-test-emptyKey-81c0c08e-64f6-4769-a865-31e1618018fc @ 02/18/25 18:40:03.913
  I0218 18:40:03.921892 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1901" for this suite. @ 02/18/25 18:40:03.939
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.266 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:03.958
  I0218 18:40:03.958165 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:40:03.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:03.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:04.002
  STEP: Creating configMap with name projected-configmap-test-volume-map-161ad1ad-bb48-4bfa-9fc5-85ac7bf123b8 @ 02/18/25 18:40:04.015
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:40:04.03
  STEP: Saw pod success @ 02/18/25 18:40:08.108
  I0218 18:40:08.118556 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-projected-configmaps-e43824f0-7db6-422c-9f57-54e78cd9acb6 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:40:08.146
  I0218 18:40:08.185833 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5498" for this suite. @ 02/18/25 18:40:08.208
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [4.251 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:08.235
  I0218 18:40:08.235201 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:40:08.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:08.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:08.297
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 02/18/25 18:40:08.311
  STEP: Saw pod success @ 02/18/25 18:40:12.366
  I0218 18:40:12.378995 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-f105fd4a-8206-4fad-a23e-4eb5304a2931 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:40:12.402
  I0218 18:40:12.442196 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8032" for this suite. @ 02/18/25 18:40:12.469
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [10.890 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:12.499
  I0218 18:40:12.499602 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 18:40:12.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:12.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:12.55
  STEP: set up a multi version CRD @ 02/18/25 18:40:12.565
  I0218 18:40:12.566268 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: rename a version @ 02/18/25 18:40:17.181
  STEP: check the new version name is served @ 02/18/25 18:40:17.214
  STEP: check the old version name is removed @ 02/18/25 18:40:18.77
  STEP: check the other version is not changed @ 02/18/25 18:40:19.692
  I0218 18:40:23.333860 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4075" for this suite. @ 02/18/25 18:40:23.371
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [6.480 seconds]
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:23.399
  I0218 18:40:23.399281 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 02/18/25 18:40:23.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:23.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:23.447
  STEP: creating a target pod @ 02/18/25 18:40:23.478
  STEP: adding an ephemeral container @ 02/18/25 18:40:25.537
  STEP: checking pod container endpoints @ 02/18/25 18:40:29.593
  I0218 18:40:29.593642 26 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-279 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:40:29.593660 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:40:29.593715 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/ephemeral-containers-test-279/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0218 18:40:29.742151 26 exec_util.go:108] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 02/18/25 18:40:29.767
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 02/18/25 18:40:29.779
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 02/18/25 18:40:29.813
  I0218 18:40:29.829579 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-279" for this suite. @ 02/18/25 18:40:29.857
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [0.171 seconds]
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:29.892
  I0218 18:40:29.892908 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 18:40:29.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:29.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:29.941
  STEP: apply creating a deployment @ 02/18/25 18:40:29.959
  I0218 18:40:30.021971 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4383" for this suite. @ 02/18/25 18:40:30.038
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [11.232 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:30.076
  I0218 18:40:30.076420 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:40:30.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:30.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:30.13
  STEP: Counting existing ResourceQuota @ 02/18/25 18:40:30.149
  STEP: Creating a ResourceQuota @ 02/18/25 18:40:35.165
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:40:35.187
  STEP: Creating a ReplicationController @ 02/18/25 18:40:37.198
  STEP: Ensuring resource quota status captures replication controller creation @ 02/18/25 18:40:37.223
  STEP: Deleting a ReplicationController @ 02/18/25 18:40:39.235
  STEP: Ensuring resource quota status released usage @ 02/18/25 18:40:39.248
  I0218 18:40:41.260979 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4655" for this suite. @ 02/18/25 18:40:41.287
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [76.701 seconds]
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:40:41.319
  I0218 18:40:41.319498 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:40:41.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:40:41.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:40:41.388
  STEP: Creating pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377 @ 02/18/25 18:40:41.403
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:40:43.457
  I0218 18:40:43.466998 26 container_probe.go:1749] Initial restart count of pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d is 0
  I0218 18:40:43.477963 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:45.490871 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:47.501959 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:49.512082 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:51.521978 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:53.535860 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:55.549392 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:57.560259 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:40:59.572341 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:01.585031 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:03.596624 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:05.608381 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:07.621694 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:09.635716 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:11.648808 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:13.663365 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:15.674823 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:17.687298 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:19.699858 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:21.718647 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:23.732072 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:25.743986 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:27.755417 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:29.768376 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:31.781909 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:33.794037 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:35.806396 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:37.818846 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:39.829691 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:41.841740 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:43.853772 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:45.867740 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:47.882779 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:49.903060 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:51.916388 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:53.928677 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:55.942828 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:57.953559 26 container_probe.go:1759] Get pod test-grpc-0d43876c-7aa7-4670-8713-1947194b640d in namespace container-probe-5377
  I0218 18:41:57.953598 26 container_probe.go:1763] Restart count of pod container-probe-5377/test-grpc-0d43876c-7aa7-4670-8713-1947194b640d is now 1 (1m14.486561679s elapsed)
  STEP: deleting the pod @ 02/18/25 18:41:57.954
  I0218 18:41:57.978349 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5377" for this suite. @ 02/18/25 18:41:58.002
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [4.247 seconds]
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:41:58.03
  I0218 18:41:58.030033 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:41:58.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:41:58.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:41:58.09
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 02/18/25 18:41:58.107
  STEP: Saw pod success @ 02/18/25 18:42:02.163
  I0218 18:42:02.172950 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-8d8538ba-32cf-4d0a-8fda-f5acb275e92e container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:42:02.201
  I0218 18:42:02.240233 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5753" for this suite. @ 02/18/25 18:42:02.262
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [17.064 seconds]
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:02.294
  I0218 18:42:02.294794 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pod-network-test @ 02/18/25 18:42:02.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:02.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:02.347
  STEP: Performing setup for networking test in namespace pod-network-test-2946 @ 02/18/25 18:42:02.363
  STEP: creating a selector @ 02/18/25 18:42:02.363
  STEP: Creating the service pods in kubernetes @ 02/18/25 18:42:02.363
  I0218 18:42:02.363351 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 02/18/25 18:42:16.649
  I0218 18:42:18.707621 26 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0218 18:42:18.707661 26 networking.go:42] Breadth first check of 172.25.3.151 on host 10.0.0.3...
  I0218 18:42:18.717285 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.0.133:9080/dial?request=hostname&protocol=http&host=172.25.3.151&port=8083&tries=1'] Namespace:pod-network-test-2946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:42:18.717325 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:42:18.717412 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-2946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.0.133%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.25.3.151%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:42:18.854689 26 utils.go:356] Waiting for responses: map[]
  I0218 18:42:18.854728 26 utils.go:360] reached 172.25.3.151 after 0/1 tries
  I0218 18:42:18.854742 26 networking.go:42] Breadth first check of 172.25.1.241 on host 10.0.0.5...
  I0218 18:42:18.867242 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.0.133:9080/dial?request=hostname&protocol=http&host=172.25.1.241&port=8083&tries=1'] Namespace:pod-network-test-2946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:42:18.867267 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:42:18.867336 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-2946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.0.133%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.25.1.241%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:42:19.010097 26 utils.go:356] Waiting for responses: map[]
  I0218 18:42:19.010140 26 utils.go:360] reached 172.25.1.241 after 0/1 tries
  I0218 18:42:19.010159 26 networking.go:42] Breadth first check of 172.25.0.132 on host 10.0.0.2...
  I0218 18:42:19.019839 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.0.133:9080/dial?request=hostname&protocol=http&host=172.25.0.132&port=8083&tries=1'] Namespace:pod-network-test-2946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:42:19.019881 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:42:19.019975 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-2946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.0.133%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.25.0.132%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:42:19.155827 26 utils.go:356] Waiting for responses: map[]
  I0218 18:42:19.155871 26 utils.go:360] reached 172.25.0.132 after 0/1 tries
  I0218 18:42:19.155884 26 networking.go:42] Breadth first check of 172.25.2.252 on host 10.0.0.4...
  I0218 18:42:19.167403 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.0.133:9080/dial?request=hostname&protocol=http&host=172.25.2.252&port=8083&tries=1'] Namespace:pod-network-test-2946 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:42:19.167465 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:42:19.167532 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-2946/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.0.133%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.25.2.252%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:42:19.310810 26 utils.go:356] Waiting for responses: map[]
  I0218 18:42:19.310858 26 utils.go:360] reached 172.25.2.252 after 0/1 tries
  I0218 18:42:19.310887 26 networking.go:53] Going to retry 0 out of 4 pods....
  I0218 18:42:19.311760 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2946" for this suite. @ 02/18/25 18:42:19.337
  << Timeline
------------------------------
• [0.248 seconds]
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3599

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:19.36
  I0218 18:42:19.360868 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:42:19.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:19.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:19.41
  STEP: creating a collection of services @ 02/18/25 18:42:19.425
  I0218 18:42:19.425469 26 service.go:3635] Creating e2e-svc-a-npnzk
  I0218 18:42:19.451679 26 service.go:3635] Creating e2e-svc-b-dqj4g
  I0218 18:42:19.472976 26 service.go:3635] Creating e2e-svc-c-7nz5s
  STEP: deleting service collection @ 02/18/25 18:42:19.507
  I0218 18:42:19.578586 26 service.go:3670] Collection of services has been deleted
  I0218 18:42:19.579573 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7054" for this suite. @ 02/18/25 18:42:19.59
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [243.754 seconds]
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:38:26.008
  I0218 18:38:26.008979 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:38:26.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:38:26.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:38:26.056
  STEP: Creating pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696 @ 02/18/25 18:38:26.07
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:38:28.113
  I0218 18:38:28.133035 24 container_probe.go:1749] Initial restart count of pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d is 0
  I0218 18:38:28.146705 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:30.158788 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:32.168984 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:34.195802 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:36.209749 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:38.222002 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:40.237582 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:42.250564 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:44.264010 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:46.280486 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:48.295629 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:50.308732 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:52.319134 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:54.330557 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:56.344917 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:38:58.358152 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:00.370586 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:02.381590 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:04.390954 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:06.405317 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:08.422158 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:10.436830 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:12.449503 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:14.459341 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:16.476225 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:18.490866 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:20.504047 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:22.515607 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:24.524780 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:26.536749 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:28.551226 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:30.560947 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:32.572235 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:34.588274 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:36.600488 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:38.611740 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:40.623756 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:42.640985 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:44.651910 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:46.664189 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:48.679580 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:50.690950 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:52.709341 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:54.725024 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:56.736603 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:39:58.747561 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:00.761629 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:02.776655 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:04.791522 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:06.803680 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:08.822096 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:10.835117 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:12.851050 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:14.862593 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:16.877157 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:18.889696 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:20.900740 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:22.912684 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:24.924364 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:26.936863 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:28.955116 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:30.967298 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:32.978573 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:34.988094 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:37.000874 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:39.015030 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:41.024272 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:43.037238 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:45.047307 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:47.056945 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:49.068700 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:51.081731 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:53.094272 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:55.108265 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:57.120495 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:40:59.130561 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:01.143544 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:03.156525 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:05.170488 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:07.189166 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:09.201563 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:11.216839 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:13.228665 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:15.241254 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:17.256037 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:19.266929 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:21.290116 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:23.302565 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:25.313290 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:27.328397 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:29.339196 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:31.353536 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:33.368667 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:35.381816 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:37.392653 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:39.404506 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:41.417614 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:43.429932 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:45.441163 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:47.456679 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:49.472768 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:51.487596 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:53.499079 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:55.512877 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:57.523705 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:41:59.535129 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:01.545899 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:03.558818 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:05.569967 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:07.582248 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:09.594070 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:11.604849 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:13.616161 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:15.627742 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:17.638388 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:19.651227 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:21.665607 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:23.677654 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:25.689738 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  I0218 18:42:27.700081 24 container_probe.go:1759] Get pod liveness-f3f23640-427c-429e-bd4c-08c068c3264d in namespace container-probe-6696
  STEP: deleting the pod @ 02/18/25 18:42:29.701
  I0218 18:42:29.727808 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6696" for this suite. @ 02/18/25 18:42:29.746
  << Timeline
------------------------------
• [4.429 seconds]
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:29.765
  I0218 18:42:29.765969 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:42:29.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:29.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:29.814
  STEP: Creating configMap with name cm-test-opt-del-ae415a58-e5d2-4dfd-9ca8-c90283141b08 @ 02/18/25 18:42:29.843
  STEP: Creating configMap with name cm-test-opt-upd-b931f812-412e-404a-a3e8-e424eccaae38 @ 02/18/25 18:42:29.855
  STEP: Creating the pod @ 02/18/25 18:42:29.867
  STEP: Deleting configmap cm-test-opt-del-ae415a58-e5d2-4dfd-9ca8-c90283141b08 @ 02/18/25 18:42:32.003
  STEP: Updating configmap cm-test-opt-upd-b931f812-412e-404a-a3e8-e424eccaae38 @ 02/18/25 18:42:32.018
  STEP: Creating configMap with name cm-test-opt-create-e782e999-b69c-44f5-905e-cf1abf809998 @ 02/18/25 18:42:32.031
  STEP: waiting to observe update in volume @ 02/18/25 18:42:32.045
  I0218 18:42:34.154728 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1773" for this suite. @ 02/18/25 18:42:34.172
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [15.098 seconds]
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:19.619
  I0218 18:42:19.619361 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:42:19.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:19.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:19.666
  STEP: creating a replication controller @ 02/18/25 18:42:19.685
  I0218 18:42:19.685684 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 create -f -'
  I0218 18:42:19.904895 26 builder.go:146] stderr: ""
  I0218 18:42:19.904949 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 02/18/25 18:42:19.905
  I0218 18:42:19.905085 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:42:20.034759 26 builder.go:146] stderr: ""
  I0218 18:42:20.034810 26 builder.go:147] stdout: "update-demo-nautilus-bf866 update-demo-nautilus-zj95v "
  I0218 18:42:20.034905 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-bf866 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:42:20.156309 26 builder.go:146] stderr: ""
  I0218 18:42:20.156354 26 builder.go:147] stdout: ""
  I0218 18:42:20.156371 26 kubectl.go:2499] update-demo-nautilus-bf866 is created but not running
  I0218 18:42:25.157627 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:42:25.287577 26 builder.go:146] stderr: ""
  I0218 18:42:25.287608 26 builder.go:147] stdout: "update-demo-nautilus-bf866 update-demo-nautilus-zj95v "
  I0218 18:42:25.287653 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-bf866 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:42:25.407757 26 builder.go:146] stderr: ""
  I0218 18:42:25.407802 26 builder.go:147] stdout: "true"
  I0218 18:42:25.407886 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-bf866 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:42:25.540339 26 builder.go:146] stderr: ""
  I0218 18:42:25.540387 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:42:25.540406 26 kubectl.go:2390] validating pod update-demo-nautilus-bf866
  I0218 18:42:25.563834 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:42:25.563903 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:42:25.563915 26 kubectl.go:2517] update-demo-nautilus-bf866 is verified up and running
  I0218 18:42:25.563982 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-zj95v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:42:25.692718 26 builder.go:146] stderr: ""
  I0218 18:42:25.692764 26 builder.go:147] stdout: "true"
  I0218 18:42:25.692834 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-zj95v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:42:25.775238 26 builder.go:146] stderr: ""
  I0218 18:42:25.775268 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:42:25.775275 26 kubectl.go:2390] validating pod update-demo-nautilus-zj95v
  I0218 18:42:25.804098 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:42:25.804134 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:42:25.804143 26 kubectl.go:2517] update-demo-nautilus-zj95v is verified up and running
  STEP: scaling down the replication controller @ 02/18/25 18:42:25.804
  I0218 18:42:25.806322 26 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0218 18:42:25.806370 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0218 18:42:26.945565 26 builder.go:146] stderr: ""
  I0218 18:42:26.945612 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 02/18/25 18:42:26.945
  I0218 18:42:26.945729 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:42:27.073355 26 builder.go:146] stderr: ""
  I0218 18:42:27.073411 26 builder.go:147] stdout: "update-demo-nautilus-bf866 update-demo-nautilus-zj95v "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 02/18/25 18:42:27.073
  I0218 18:42:32.073679 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:42:32.197859 26 builder.go:146] stderr: ""
  I0218 18:42:32.197899 26 builder.go:147] stdout: "update-demo-nautilus-zj95v "
  I0218 18:42:32.197977 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-zj95v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:42:32.311316 26 builder.go:146] stderr: ""
  I0218 18:42:32.311363 26 builder.go:147] stdout: "true"
  I0218 18:42:32.311470 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-zj95v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:42:32.430355 26 builder.go:146] stderr: ""
  I0218 18:42:32.430402 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:42:32.430417 26 kubectl.go:2390] validating pod update-demo-nautilus-zj95v
  I0218 18:42:32.449606 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:42:32.449672 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:42:32.449688 26 kubectl.go:2517] update-demo-nautilus-zj95v is verified up and running
  STEP: scaling up the replication controller @ 02/18/25 18:42:32.449
  I0218 18:42:32.453420 26 kubectl.go:319] scanned /root for discovery docs: <nil>
  I0218 18:42:32.453514 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0218 18:42:33.611554 26 builder.go:146] stderr: ""
  I0218 18:42:33.611601 26 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 02/18/25 18:42:33.611
  I0218 18:42:33.611689 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0218 18:42:33.761126 26 builder.go:146] stderr: ""
  I0218 18:42:33.761175 26 builder.go:147] stdout: "update-demo-nautilus-l9jd6 update-demo-nautilus-zj95v "
  I0218 18:42:33.761266 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-l9jd6 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:42:33.883748 26 builder.go:146] stderr: ""
  I0218 18:42:33.883796 26 builder.go:147] stdout: "true"
  I0218 18:42:33.883881 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-l9jd6 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:42:33.997632 26 builder.go:146] stderr: ""
  I0218 18:42:33.997672 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:42:33.997693 26 kubectl.go:2390] validating pod update-demo-nautilus-l9jd6
  I0218 18:42:34.029778 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:42:34.029821 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:42:34.029830 26 kubectl.go:2517] update-demo-nautilus-l9jd6 is verified up and running
  I0218 18:42:34.029886 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-zj95v -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0218 18:42:34.144832 26 builder.go:146] stderr: ""
  I0218 18:42:34.144874 26 builder.go:147] stdout: "true"
  I0218 18:42:34.144974 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods update-demo-nautilus-zj95v -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0218 18:42:34.276780 26 builder.go:146] stderr: ""
  I0218 18:42:34.276826 26 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0218 18:42:34.276842 26 kubectl.go:2390] validating pod update-demo-nautilus-zj95v
  I0218 18:42:34.293843 26 kubectl.go:2410] got data: {
    "image": "nautilus.jpg"
  }

  I0218 18:42:34.293879 26 kubectl.go:2415] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0218 18:42:34.293885 26 kubectl.go:2517] update-demo-nautilus-zj95v is verified up and running
  STEP: using delete to clean up resources @ 02/18/25 18:42:34.293
  I0218 18:42:34.293931 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 delete --grace-period=0 --force -f -'
  I0218 18:42:34.408146 26 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0218 18:42:34.408178 26 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0218 18:42:34.408218 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get rc,svc -l name=update-demo --no-headers'
  I0218 18:42:34.542906 26 builder.go:146] stderr: "No resources found in kubectl-144 namespace.\n"
  I0218 18:42:34.542958 26 builder.go:147] stdout: ""
  I0218 18:42:34.543075 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-144 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0218 18:42:34.674942 26 builder.go:146] stderr: ""
  I0218 18:42:34.674995 26 builder.go:147] stdout: ""
  I0218 18:42:34.675873 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-144" for this suite. @ 02/18/25 18:42:34.694
  << Timeline
------------------------------
• [16.264 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:34.202
  I0218 18:42:34.202168 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:42:34.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:34.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:34.262
  STEP: Discovering how many secrets are in namespace by default @ 02/18/25 18:42:34.277
  STEP: Counting existing ResourceQuota @ 02/18/25 18:42:39.303
  STEP: Creating a ResourceQuota @ 02/18/25 18:42:44.315
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:42:44.329
  STEP: Creating a Secret @ 02/18/25 18:42:46.342
  STEP: Ensuring resource quota status captures secret creation @ 02/18/25 18:42:46.375
  STEP: Deleting a secret @ 02/18/25 18:42:48.389
  STEP: Ensuring resource quota status released usage @ 02/18/25 18:42:48.405
  I0218 18:42:50.417999 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8036" for this suite. @ 02/18/25 18:42:50.442
  << Timeline
------------------------------
S
------------------------------
• [4.233 seconds]
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:50.469
  I0218 18:42:50.469885 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:42:50.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:50.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:50.517
  STEP: Creating a pod to test downward api env vars @ 02/18/25 18:42:50.532
  STEP: Saw pod success @ 02/18/25 18:42:54.59
  I0218 18:42:54.601218 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downward-api-2ce0970e-7f93-486c-a7e2-f72eea4fbe45 container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:42:54.624
  I0218 18:42:54.663294 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2942" for this suite. @ 02/18/25 18:42:54.684
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [3.720 seconds]
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:54.715
  I0218 18:42:54.715643 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename init-container @ 02/18/25 18:42:54.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:54.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:54.763
  STEP: creating the pod @ 02/18/25 18:42:54.777
  I0218 18:42:54.777299 24 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0218 18:42:58.395220 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4869" for this suite. @ 02/18/25 18:42:58.417
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [5.239 seconds]
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:58.448
  I0218 18:42:58.448850 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename replicaset @ 02/18/25 18:42:58.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:58.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:58.513
  STEP: Create a Replicaset @ 02/18/25 18:42:58.54
  STEP: Verify that the required pods have come up. @ 02/18/25 18:42:58.554
  I0218 18:42:58.563480 24 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0218 18:43:03.578076 24 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 02/18/25 18:43:03.578
  STEP: Getting /status @ 02/18/25 18:43:03.578
  I0218 18:43:03.589382 24 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 02/18/25 18:43:03.589
  I0218 18:43:03.619160 24 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 02/18/25 18:43:03.619
  I0218 18:43:03.626806 24 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0218 18:43:03.626949 24 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.627218 24 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.627475 24 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.627522 24 replica_set.go:682] Found replicaset test-rs in namespace replicaset-8044 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0218 18:43:03.627540 24 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 02/18/25 18:43:03.627
  I0218 18:43:03.627567 24 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0218 18:43:03.640824 24 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 02/18/25 18:43:03.64
  I0218 18:43:03.648347 24 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0218 18:43:03.648534 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.648660 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.648792 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.648825 24 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-8044 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0218 18:43:03.648948 24 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0218 18:43:03.648988 24 replica_set.go:718] Found replicaset test-rs in namespace replicaset-8044 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0218 18:43:03.649005 24 replica_set.go:729] Replicaset test-rs has a patched status
  I0218 18:43:03.649920 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8044" for this suite. @ 02/18/25 18:43:03.668
  << Timeline
------------------------------
SSSS
------------------------------
• [79.484 seconds]
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:42:34.72
  I0218 18:42:34.720238 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:42:34.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:42:34.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:42:34.771
  STEP: Creating configMap with name cm-test-opt-del-5ff5064d-8fb5-49bb-8942-d8e845cd4d5b @ 02/18/25 18:42:34.797
  STEP: Creating configMap with name cm-test-opt-upd-1b65a7fb-2dd7-47f9-b565-1b3d3ce0ec75 @ 02/18/25 18:42:34.809
  STEP: Creating the pod @ 02/18/25 18:42:34.822
  STEP: Deleting configmap cm-test-opt-del-5ff5064d-8fb5-49bb-8942-d8e845cd4d5b @ 02/18/25 18:42:36.99
  STEP: Updating configmap cm-test-opt-upd-1b65a7fb-2dd7-47f9-b565-1b3d3ce0ec75 @ 02/18/25 18:42:37.012
  STEP: Creating configMap with name cm-test-opt-create-93add061-7836-41c3-8663-3808c00e4bdc @ 02/18/25 18:42:37.027
  STEP: waiting to observe update in volume @ 02/18/25 18:42:37.039
  I0218 18:43:54.168505 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2748" for this suite. @ 02/18/25 18:43:54.188
  << Timeline
------------------------------
S
------------------------------
• [4.049 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:43:54.206
  I0218 18:43:54.206114 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:43:54.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:43:54.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:43:54.256
  STEP: Setting up server cert @ 02/18/25 18:43:54.316
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:43:54.511
  STEP: Deploying the webhook pod @ 02/18/25 18:43:54.53
  STEP: Wait for the deployment to be ready @ 02/18/25 18:43:54.563
  I0218 18:43:54.594577 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:43:56.628
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:43:56.646
  I0218 18:43:57.646377 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 02/18/25 18:43:57.83
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 02/18/25 18:43:57.92
  STEP: Deleting the collection of validation webhooks @ 02/18/25 18:43:57.98
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 02/18/25 18:43:58.092
  I0218 18:43:58.202165 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5799" for this suite. @ 02/18/25 18:43:58.22
  STEP: Destroying namespace "webhook-markers-3188" for this suite. @ 02/18/25 18:43:58.238
  << Timeline
------------------------------
S
------------------------------
• [0.160 seconds]
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:839

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:43:58.257
  I0218 18:43:58.257907 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 18:43:58.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:43:58.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:43:58.321
  STEP: Creating ServiceAccount "e2e-sa-7c8cc"  @ 02/18/25 18:43:58.335
  I0218 18:43:58.352140 26 service_accounts.go:854] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7c8cc"  @ 02/18/25 18:43:58.352
  I0218 18:43:58.381362 26 service_accounts.go:868] AutomountServiceAccountToken: true
  I0218 18:43:58.382524 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1118" for this suite. @ 02/18/25 18:43:58.399
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [0.669 seconds]
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:43:58.425
  I0218 18:43:58.425850 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:43:58.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:43:58.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:43:58.498
  STEP: create deployment with httpd image @ 02/18/25 18:43:58.518
  I0218 18:43:58.519136 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7725 create -f -'
  I0218 18:43:58.701238 26 builder.go:146] stderr: ""
  I0218 18:43:58.701283 26 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 02/18/25 18:43:58.701
  I0218 18:43:58.701377 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7725 diff -f -'
  I0218 18:43:58.913089 26 builder.go:135] rc: 1
  I0218 18:43:58.913199 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=kubectl-7725 delete -f -'
  I0218 18:43:59.052820 26 builder.go:146] stderr: ""
  I0218 18:43:59.052867 26 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0218 18:43:59.053869 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7725" for this suite. @ 02/18/25 18:43:59.079
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.386 seconds]
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:43:59.119
  I0218 18:43:59.119612 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 18:43:59.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:43:59.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:43:59.176
  I0218 18:43:59.197454 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  W0218 18:44:01.791641      26 warnings.go:70] unknown field "alpha"
  W0218 18:44:01.791660      26 warnings.go:70] unknown field "beta"
  W0218 18:44:01.791664      26 warnings.go:70] unknown field "delta"
  W0218 18:44:01.791666      26 warnings.go:70] unknown field "epsilon"
  W0218 18:44:01.791669      26 warnings.go:70] unknown field "gamma"
  I0218 18:44:02.459103 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4532" for this suite. @ 02/18/25 18:44:02.484
  << Timeline
------------------------------
SSS
------------------------------
• [62.560 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:757

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:43:03.692
  I0218 18:43:03.692932 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:43:03.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:43:03.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:43:03.741
  STEP: Creating service test in namespace statefulset-4546 @ 02/18/25 18:43:03.756
  STEP: Creating stateful set ss in namespace statefulset-4546 @ 02/18/25 18:43:03.768
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4546 @ 02/18/25 18:43:03.783
  I0218 18:43:03.798785 24 wait.go:40] Found 0 stateful pods, waiting for 1
  I0218 18:43:13.794461 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 02/18/25 18:43:13.794
  I0218 18:43:13.807546 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:43:14.082833 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:43:14.082886 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:43:14.082899 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:43:14.092871 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0218 18:43:24.095298 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:43:24.095333 24 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0218 18:43:24.145533 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 9.999999619s
  I0218 18:43:25.163336 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 8.983498194s
  I0218 18:43:26.175208 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 7.966047975s
  I0218 18:43:27.193987 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 6.953946854s
  I0218 18:43:28.210829 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 5.934922423s
  I0218 18:43:29.229285 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 4.918040138s
  I0218 18:43:30.244979 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 3.899950409s
  I0218 18:43:31.264104 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 2.883939921s
  I0218 18:43:32.281923 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 1.865017244s
  I0218 18:43:33.300278 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 3 for another 847.689079ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4546 @ 02/18/25 18:43:34.3
  I0218 18:43:34.316517 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:43:34.575880 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:43:34.575931 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:43:34.575948 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:43:34.576032 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:43:34.839473 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0218 18:43:34.839528 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:43:34.839546 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:43:34.839621 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:43:35.091068 24 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0218 18:43:35.091120 24 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:43:35.091140 24 rest.go:263] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:43:35.107326 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0218 18:43:45.102660 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:43:45.102721 24 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:43:45.102732 24 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 02/18/25 18:43:45.102
  I0218 18:43:45.114122 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:43:45.357360 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:43:45.357407 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:43:45.357421 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:43:45.357547 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:43:45.593958 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:43:45.594011 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:43:45.594033 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:43:45.594129 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=statefulset-4546 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:43:45.853657 24 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:43:45.853704 24 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:43:45.853721 24 rest.go:263] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:43:45.853733 24 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0218 18:43:45.862924 24 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0218 18:43:55.882655 24 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:43:55.882691 24 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:43:55.882701 24 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0218 18:43:55.920894 24 resource.go:168] POD   NODE                           PHASE    GRACE  CONDITIONS
  I0218 18:43:55.920950 24 resource.go:175] ss-0  admiring-kalam-9d8f4776-dp7t2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:03 +0000 UTC  }]
  I0218 18:43:55.920972 24 resource.go:175] ss-1  admiring-kalam-9d8f4776-dzdlc  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  }]
  I0218 18:43:55.920991 24 resource.go:175] ss-2  admiring-kalam-9d8f4776-bw8qq  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:45 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  }]
  I0218 18:43:55.920996 24 resource.go:178] 
  I0218 18:43:55.921002 24 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 3
  I0218 18:43:56.934013 24 resource.go:168] POD   NODE                           PHASE      GRACE  CONDITIONS
  I0218 18:43:56.934121 24 resource.go:175] ss-1  admiring-kalam-9d8f4776-dzdlc  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:46 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:46 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  }]
  I0218 18:43:56.934152 24 resource.go:175] ss-2  admiring-kalam-9d8f4776-bw8qq  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:56 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:45 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:45 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:43:24 +0000 UTC  }]
  I0218 18:43:56.934161 24 resource.go:178] 
  I0218 18:43:56.934172 24 statefulset.go:2416] StatefulSet ss has not reached scale 0, at 2
  I0218 18:43:57.949106 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 7.974606013s
  I0218 18:43:58.959005 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 6.959406679s
  I0218 18:43:59.969375 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 5.950294121s
  I0218 18:44:00.980298 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 4.940122483s
  I0218 18:44:01.990708 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 3.929233249s
  I0218 18:44:03.002319 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 2.917793619s
  I0218 18:44:04.026334 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 1.906202992s
  I0218 18:44:05.047767 24 statefulset.go:2421] Verifying statefulset ss doesn't scale past 0 for another 882.561608ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4546 @ 02/18/25 18:44:06.048
  I0218 18:44:06.059035 24 rest.go:152] Scaling statefulset ss to 0
  I0218 18:44:06.089504 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:44:06.104495 24 statefulset.go:138] Deleting all statefulset in ns statefulset-4546
  I0218 18:44:06.116160 24 rest.go:152] Scaling statefulset ss to 0
  I0218 18:44:06.137337 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:44:06.156169 24 rest.go:90] Deleting statefulset ss
  I0218 18:44:06.201345 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4546" for this suite. @ 02/18/25 18:44:06.225
  << Timeline
------------------------------
S
------------------------------
• [4.253 seconds]
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:02.508
  I0218 18:44:02.508968 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename containers @ 02/18/25 18:44:02.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:02.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:02.566
  STEP: Creating a pod to test override command @ 02/18/25 18:44:02.581
  STEP: Saw pod success @ 02/18/25 18:44:06.633
  I0218 18:44:06.642547 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod client-containers-55517231-d279-495b-a97f-d21cc936dc6b container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:44:06.665
  I0218 18:44:06.704884 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7428" for this suite. @ 02/18/25 18:44:06.729
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.489 seconds]
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1687

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:06.255
  I0218 18:44:06.255387 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:44:06.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:06.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:06.309
  STEP: creating Agnhost RC @ 02/18/25 18:44:06.326
  I0218 18:44:06.326098 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-8477 create -f -'
  I0218 18:44:06.543798 24 builder.go:146] stderr: ""
  I0218 18:44:06.543846 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 02/18/25 18:44:06.543
  I0218 18:44:07.554037 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:44:07.554139 24 framework.go:733] Found 1 / 1
  I0218 18:44:07.554163 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 02/18/25 18:44:07.554
  I0218 18:44:07.568744 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:44:07.568786 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0218 18:44:07.568872 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-8477 patch pod agnhost-primary-lt2d7 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0218 18:44:07.697483 24 builder.go:146] stderr: ""
  I0218 18:44:07.697517 24 builder.go:147] stdout: "pod/agnhost-primary-lt2d7 patched\n"
  STEP: checking annotations @ 02/18/25 18:44:07.697
  I0218 18:44:07.709081 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:44:07.709109 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0218 18:44:07.709693 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8477" for this suite. @ 02/18/25 18:44:07.731
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [2.542 seconds]
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:07.75
  I0218 18:44:07.750597 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:44:07.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:07.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:07.795
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 02/18/25 18:44:07.813
  I0218 18:44:07.813094 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-8888 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0218 18:44:07.919634 24 builder.go:146] stderr: ""
  I0218 18:44:07.919671 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 02/18/25 18:44:07.919
  I0218 18:44:07.919766 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-8888 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0218 18:44:08.082127 24 builder.go:146] stderr: ""
  I0218 18:44:08.082174 24 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 02/18/25 18:44:08.082
  I0218 18:44:08.112338 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-8888 delete pods e2e-test-httpd-pod'
  I0218 18:44:10.238866 24 builder.go:146] stderr: ""
  I0218 18:44:10.238911 24 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0218 18:44:10.239721 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8888" for this suite. @ 02/18/25 18:44:10.26
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.308 seconds]
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:10.335
  I0218 18:44:10.335004 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:44:10.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:10.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:10.39
  I0218 18:44:10.408741 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: creating the pod @ 02/18/25 18:44:10.409
  STEP: submitting the pod to kubernetes @ 02/18/25 18:44:10.409
  I0218 18:44:12.604836 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1351" for this suite. @ 02/18/25 18:44:12.624
  << Timeline
------------------------------
SSS
------------------------------
• [4.241 seconds]
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:12.648
  I0218 18:44:12.648154 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:44:12.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:12.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:12.701
  STEP: Creating a pod to test downward api env vars @ 02/18/25 18:44:12.715
  STEP: Saw pod success @ 02/18/25 18:44:16.767
  I0218 18:44:16.778740 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downward-api-d9c7e7dd-6f21-453f-b539-42c6c59019ca container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:44:16.805
  I0218 18:44:16.848910 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4652" for this suite. @ 02/18/25 18:44:16.871
  << Timeline
------------------------------
SSSS
------------------------------
• [11.614 seconds]
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:06.783
  I0218 18:44:06.783785 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:44:06.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:06.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:06.838
  STEP: creating service in namespace services-995 @ 02/18/25 18:44:06.857
  STEP: creating service affinity-nodeport-transition in namespace services-995 @ 02/18/25 18:44:06.857
  STEP: creating replication controller affinity-nodeport-transition in namespace services-995 @ 02/18/25 18:44:06.889
  I0218 18:44:06.903548      26 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-995, replica count: 3
  I0218 18:44:09.954943      26 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:44:10.000834 26 resource.go:361] Creating new exec pod
  I0218 18:44:13.084609 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-995 exec execpod-affinityr4rff -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0218 18:44:13.336792 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.240.30.165) 80 port [tcp/http] succeeded!\n"
  I0218 18:44:13.336849 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:44:13.336971 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-995 exec execpod-affinityr4rff -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.30.165 80'
  I0218 18:44:13.611944 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.30.165 80\nConnection to 10.240.30.165 80 port [tcp/http] succeeded!\n"
  I0218 18:44:13.611998 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:44:13.612129 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-995 exec execpod-affinityr4rff -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.4 32513'
  I0218 18:44:13.851987 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.4 32513\nConnection to 10.0.0.4 32513 port [tcp/*] succeeded!\n"
  I0218 18:44:13.852039 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:44:13.852162 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-995 exec execpod-affinityr4rff -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.3 32513'
  I0218 18:44:14.113709 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.3 32513\nConnection to 10.0.0.3 32513 port [tcp/*] succeeded!\n"
  I0218 18:44:14.113764 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:44:14.138343 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-995 exec execpod-affinityr4rff -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.0.3:32513/ ; done'
  I0218 18:44:14.507358 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n"
  I0218 18:44:14.507421 26 builder.go:147] stdout: "\naffinity-nodeport-transition-cj5j9\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-cj5j9\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-cj5j9\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-67ttf\naffinity-nodeport-transition-rqnzg"
  I0218 18:44:14.507479 26 service.go:242] Received response from host: affinity-nodeport-transition-cj5j9
  I0218 18:44:14.507491 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507499 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.507506 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.507513 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507519 26 service.go:242] Received response from host: affinity-nodeport-transition-cj5j9
  I0218 18:44:14.507525 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.507537 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507544 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.507549 26 service.go:242] Received response from host: affinity-nodeport-transition-cj5j9
  I0218 18:44:14.507555 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.507561 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507567 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507573 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507579 26 service.go:242] Received response from host: affinity-nodeport-transition-67ttf
  I0218 18:44:14.507584 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.530603 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-995 exec execpod-affinityr4rff -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.0.0.3:32513/ ; done'
  I0218 18:44:14.892857 26 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.0.0.3:32513/\n"
  I0218 18:44:14.892921 26 builder.go:147] stdout: "\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg\naffinity-nodeport-transition-rqnzg"
  I0218 18:44:14.892946 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.892964 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.892980 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.892992 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.892999 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893005 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893012 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893018 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893025 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893031 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893043 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893053 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893064 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893095 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893105 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893116 26 service.go:242] Received response from host: affinity-nodeport-transition-rqnzg
  I0218 18:44:14.893613 26 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-995, will wait for the garbage collector to delete the pods @ 02/18/25 18:44:14.925
  I0218 18:44:15.003284 26 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 16.963951ms
  I0218 18:44:15.103947 26 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.658608ms
  I0218 18:44:18.352895 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-995" for this suite. @ 02/18/25 18:44:18.377
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.279 seconds]
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:18.409
  I0218 18:44:18.409109 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename events @ 02/18/25 18:44:18.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:18.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:18.469
  STEP: creating a test event @ 02/18/25 18:44:18.487
  STEP: listing events in all namespaces @ 02/18/25 18:44:18.497
  STEP: listing events in test namespace @ 02/18/25 18:44:18.511
  STEP: listing events with field selection filtering on source @ 02/18/25 18:44:18.524
  STEP: listing events with field selection filtering on reportingController @ 02/18/25 18:44:18.534
  STEP: getting the test event @ 02/18/25 18:44:18.544
  STEP: patching the test event @ 02/18/25 18:44:18.557
  STEP: getting the test event @ 02/18/25 18:44:18.574
  STEP: updating the test event @ 02/18/25 18:44:18.583
  STEP: getting the test event @ 02/18/25 18:44:18.598
  STEP: deleting the test event @ 02/18/25 18:44:18.609
  STEP: listing events in all namespaces @ 02/18/25 18:44:18.626
  STEP: listing events in test namespace @ 02/18/25 18:44:18.639
  I0218 18:44:18.653578 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7105" for this suite. @ 02/18/25 18:44:18.668
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [3.280 seconds]
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:16.893
  I0218 18:44:16.893371 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename aggregateddiscovery @ 02/18/25 18:44:16.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:16.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:16.948
  I0218 18:44:16.966620 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  I0218 18:44:20.118025 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2221" for this suite. @ 02/18/25 18:44:20.143
  << Timeline
------------------------------
SSS
------------------------------
• [4.082 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:20.178
  I0218 18:44:20.178048 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:44:20.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:20.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:20.228
  STEP: Setting up server cert @ 02/18/25 18:44:20.298
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:44:20.659
  STEP: Deploying the webhook pod @ 02/18/25 18:44:20.673
  STEP: Wait for the deployment to be ready @ 02/18/25 18:44:20.704
  I0218 18:44:20.731195 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:44:22.785
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:44:22.809
  I0218 18:44:23.810528 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 02/18/25 18:44:23.833
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 02/18/25 18:44:23.898
  STEP: Creating a dummy validating-webhook-configuration object @ 02/18/25 18:44:23.969
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 02/18/25 18:44:23.997
  STEP: Creating a dummy mutating-webhook-configuration object @ 02/18/25 18:44:24.017
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 02/18/25 18:44:24.046
  I0218 18:44:24.200333 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8424" for this suite. @ 02/18/25 18:44:24.223
  STEP: Destroying namespace "webhook-markers-8730" for this suite. @ 02/18/25 18:44:24.243
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [21.161 seconds]
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:18.704
  I0218 18:44:18.704474 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pod-network-test @ 02/18/25 18:44:18.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:18.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:18.762
  STEP: Performing setup for networking test in namespace pod-network-test-8539 @ 02/18/25 18:44:18.779
  STEP: creating a selector @ 02/18/25 18:44:18.779
  STEP: Creating the service pods in kubernetes @ 02/18/25 18:44:18.779
  I0218 18:44:18.779839 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 02/18/25 18:44:33.082
  I0218 18:44:35.181476 26 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0218 18:44:35.181525 26 utils.go:496] Going to poll 172.25.3.155 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:44:35.195292 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.25.3.155 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8539 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:44:35.195324 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:44:35.195377 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8539/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.25.3.155+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:44:36.334322 26 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0218 18:44:36.334375 26 utils.go:496] Going to poll 172.25.1.253 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:44:36.345295 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.25.1.253 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8539 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:44:36.345334 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:44:36.345420 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8539/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.25.1.253+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:44:37.484602 26 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0218 18:44:37.484645 26 utils.go:496] Going to poll 172.25.0.142 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:44:37.498265 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.25.0.142 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8539 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:44:37.498288 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:44:37.498382 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8539/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.25.0.142+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:44:38.653327 26 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0218 18:44:38.653356 26 utils.go:496] Going to poll 172.25.2.253 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:44:38.666334 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.25.2.253 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8539 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:44:38.666354 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:44:38.666394 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8539/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.25.2.253+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:44:39.821348 26 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0218 18:44:39.822326 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8539" for this suite. @ 02/18/25 18:44:39.844
  << Timeline
------------------------------
SSSSS
------------------------------
• [5.552 seconds]
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:39.87
  I0218 18:44:39.870385 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename proxy @ 02/18/25 18:44:39.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:39.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:39.921
  STEP: starting an echo server on multiple ports @ 02/18/25 18:44:39.974
  STEP: creating replication controller proxy-service-w5ftq in namespace proxy-8451 @ 02/18/25 18:44:39.974
  I0218 18:44:39.989868      26 runners.go:193] Created replication controller with name: proxy-service-w5ftq, namespace: proxy-8451, replica count: 1
  I0218 18:44:41.040369      26 runners.go:193] proxy-service-w5ftq Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:44:42.041546      26 runners.go:193] proxy-service-w5ftq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:44:42.056150 26 proxy.go:230] setup took 2.104478076s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 02/18/25 18:44:42.056
  I0218 18:44:42.113241 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 56.638178ms)
  I0218 18:44:42.114289 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 57.65915ms)
  I0218 18:44:42.122239 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 65.62143ms)
  I0218 18:44:42.122239 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 65.890805ms)
  I0218 18:44:42.122282 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 65.748651ms)
  I0218 18:44:42.122301 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 65.784475ms)
  I0218 18:44:42.122305 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 66.071245ms)
  I0218 18:44:42.122326 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 65.811055ms)
  I0218 18:44:42.124053 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 67.778658ms)
  I0218 18:44:42.124537 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 67.972009ms)
  I0218 18:44:42.127415 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 70.768144ms)
  I0218 18:44:42.128402 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 72.058301ms)
  I0218 18:44:42.128454 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 72.054355ms)
  I0218 18:44:42.133523 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 76.942031ms)
  I0218 18:44:42.133587 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 77.035832ms)
  I0218 18:44:42.133604 26 proxy.go:558] (0) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 77.237885ms)
  I0218 18:44:42.159129 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 25.272231ms)
  I0218 18:44:42.159889 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.07837ms)
  I0218 18:44:42.160677 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.781937ms)
  I0218 18:44:42.161313 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 27.551862ms)
  I0218 18:44:42.161326 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 27.621126ms)
  I0218 18:44:42.162474 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 28.540486ms)
  I0218 18:44:42.162474 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 28.478002ms)
  I0218 18:44:42.163169 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 29.225514ms)
  I0218 18:44:42.163211 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 29.552866ms)
  I0218 18:44:42.163338 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 29.688449ms)
  I0218 18:44:42.166499 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 32.644025ms)
  I0218 18:44:42.167997 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 34.226359ms)
  I0218 18:44:42.169789 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 35.825991ms)
  I0218 18:44:42.169919 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 36.070939ms)
  I0218 18:44:42.170390 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 36.492852ms)
  I0218 18:44:42.173679 26 proxy.go:558] (1) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 39.884452ms)
  I0218 18:44:42.193924 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 20.111304ms)
  I0218 18:44:42.197264 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 23.500572ms)
  I0218 18:44:42.197690 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 23.761192ms)
  I0218 18:44:42.199395 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 25.522216ms)
  I0218 18:44:42.199404 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 25.544009ms)
  I0218 18:44:42.199807 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 25.840354ms)
  I0218 18:44:42.200164 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 26.238541ms)
  I0218 18:44:42.200167 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 26.126943ms)
  I0218 18:44:42.200187 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.181115ms)
  I0218 18:44:42.200626 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 26.6643ms)
  I0218 18:44:42.201550 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 27.546695ms)
  I0218 18:44:42.201551 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 27.683029ms)
  I0218 18:44:42.207477 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 33.455763ms)
  I0218 18:44:42.207477 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 33.510544ms)
  I0218 18:44:42.207998 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 34.076725ms)
  I0218 18:44:42.208851 26 proxy.go:558] (2) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 35.11961ms)
  I0218 18:44:42.230648 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 21.62059ms)
  I0218 18:44:42.230671 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 21.668642ms)
  I0218 18:44:42.230811 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 21.551426ms)
  I0218 18:44:42.231066 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 22.020621ms)
  I0218 18:44:42.232938 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 23.902115ms)
  I0218 18:44:42.232943 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.829785ms)
  I0218 18:44:42.234883 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 25.985311ms)
  I0218 18:44:42.234907 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 25.738861ms)
  I0218 18:44:42.239054 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 29.842209ms)
  I0218 18:44:42.239064 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 29.7957ms)
  I0218 18:44:42.240685 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 31.533569ms)
  I0218 18:44:42.240683 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 31.456503ms)
  I0218 18:44:42.242496 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 33.27323ms)
  I0218 18:44:42.243535 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 34.603936ms)
  I0218 18:44:42.244742 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 35.469046ms)
  I0218 18:44:42.244750 26 proxy.go:558] (3) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 35.574003ms)
  I0218 18:44:42.264695 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 19.667709ms)
  I0218 18:44:42.265719 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 20.809944ms)
  I0218 18:44:42.265731 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 20.864686ms)
  I0218 18:44:42.266266 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 21.355212ms)
  I0218 18:44:42.267006 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 22.211657ms)
  I0218 18:44:42.268305 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.276315ms)
  I0218 18:44:42.268342 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 23.283867ms)
  I0218 18:44:42.268342 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 23.356866ms)
  I0218 18:44:42.268361 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 23.415133ms)
  I0218 18:44:42.270255 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 25.440964ms)
  I0218 18:44:42.273900 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 29.012545ms)
  I0218 18:44:42.273900 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 28.881919ms)
  I0218 18:44:42.273932 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 28.877001ms)
  I0218 18:44:42.274923 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 29.977773ms)
  I0218 18:44:42.276209 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 31.221811ms)
  I0218 18:44:42.278402 26 proxy.go:558] (4) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 33.4269ms)
  I0218 18:44:42.300256 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 21.563464ms)
  I0218 18:44:42.300782 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 22.255642ms)
  I0218 18:44:42.301546 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 22.901352ms)
  I0218 18:44:42.302849 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 23.967442ms)
  I0218 18:44:42.303614 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 24.839771ms)
  I0218 18:44:42.303614 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 25.012791ms)
  I0218 18:44:42.303624 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 25.113161ms)
  I0218 18:44:42.303704 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 24.927533ms)
  I0218 18:44:42.304011 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 25.153783ms)
  I0218 18:44:42.308987 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 30.163682ms)
  I0218 18:44:42.308992 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 30.126056ms)
  I0218 18:44:42.312237 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 33.504406ms)
  I0218 18:44:42.313051 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 34.413992ms)
  I0218 18:44:42.313656 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 34.891447ms)
  I0218 18:44:42.313724 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 34.807081ms)
  I0218 18:44:42.323904 26 proxy.go:558] (5) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 45.075153ms)
  I0218 18:44:42.342221 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 17.94297ms)
  I0218 18:44:42.343318 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 19.332586ms)
  I0218 18:44:42.344666 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 20.70787ms)
  I0218 18:44:42.344672 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 20.585817ms)
  I0218 18:44:42.345410 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 21.109373ms)
  I0218 18:44:42.345718 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 21.516203ms)
  I0218 18:44:42.345720 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.553409ms)
  I0218 18:44:42.347636 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.41277ms)
  I0218 18:44:42.348030 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 23.808423ms)
  I0218 18:44:42.349708 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 25.460834ms)
  I0218 18:44:42.349739 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 25.700554ms)
  I0218 18:44:42.349740 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 25.59181ms)
  I0218 18:44:42.350862 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 26.799283ms)
  I0218 18:44:42.353230 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 29.051423ms)
  I0218 18:44:42.353254 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 29.218274ms)
  I0218 18:44:42.354727 26 proxy.go:558] (6) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 30.458765ms)
  I0218 18:44:42.372411 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 17.603241ms)
  I0218 18:44:42.373283 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 18.338023ms)
  I0218 18:44:42.375047 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 20.016753ms)
  I0218 18:44:42.376626 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 21.635343ms)
  I0218 18:44:42.376650 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 21.775443ms)
  I0218 18:44:42.378712 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 23.642354ms)
  I0218 18:44:42.378757 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 23.683486ms)
  I0218 18:44:42.379655 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 24.674674ms)
  I0218 18:44:42.379737 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 24.702316ms)
  I0218 18:44:42.383285 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 28.224372ms)
  I0218 18:44:42.383865 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 28.852245ms)
  I0218 18:44:42.383886 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 29.103401ms)
  I0218 18:44:42.383953 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 28.9761ms)
  I0218 18:44:42.385886 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 30.958436ms)
  I0218 18:44:42.387117 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 32.232847ms)
  I0218 18:44:42.391336 26 proxy.go:558] (7) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 36.400533ms)
  I0218 18:44:42.426181 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 34.540501ms)
  I0218 18:44:42.428026 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 36.632192ms)
  I0218 18:44:42.431922 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 40.518614ms)
  I0218 18:44:42.432260 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 40.488408ms)
  I0218 18:44:42.433490 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 41.673767ms)
  I0218 18:44:42.433496 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 41.90218ms)
  I0218 18:44:42.433534 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 41.896672ms)
  I0218 18:44:42.433535 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 41.994578ms)
  I0218 18:44:42.434254 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 42.48182ms)
  I0218 18:44:42.434396 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 42.705736ms)
  I0218 18:44:42.434708 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 42.981229ms)
  I0218 18:44:42.434941 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 43.345136ms)
  I0218 18:44:42.439723 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 47.992701ms)
  I0218 18:44:42.440556 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 48.869056ms)
  I0218 18:44:42.445128 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 53.571794ms)
  I0218 18:44:42.445515 26 proxy.go:558] (8) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 54.047459ms)
  I0218 18:44:42.466270 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 20.429832ms)
  I0218 18:44:42.467799 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.962473ms)
  I0218 18:44:42.468588 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 22.925888ms)
  I0218 18:44:42.468630 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 22.918457ms)
  I0218 18:44:42.469071 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.509916ms)
  I0218 18:44:42.469144 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 23.267402ms)
  I0218 18:44:42.469617 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 23.830927ms)
  I0218 18:44:42.469664 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.865939ms)
  I0218 18:44:42.471191 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 25.44488ms)
  I0218 18:44:42.474125 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 28.307246ms)
  I0218 18:44:42.474168 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 28.433865ms)
  I0218 18:44:42.474162 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 28.277841ms)
  I0218 18:44:42.476465 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 30.830823ms)
  I0218 18:44:42.477327 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 31.435872ms)
  I0218 18:44:42.477785 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 32.007619ms)
  I0218 18:44:42.480028 26 proxy.go:558] (9) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 34.177957ms)
  I0218 18:44:42.499038 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 18.846247ms)
  I0218 18:44:42.502193 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 22.112939ms)
  I0218 18:44:42.502269 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 21.885056ms)
  I0218 18:44:42.503123 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 22.820902ms)
  I0218 18:44:42.503583 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 23.363887ms)
  I0218 18:44:42.504467 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 24.050156ms)
  I0218 18:44:42.504691 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 24.41235ms)
  I0218 18:44:42.505672 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 25.327924ms)
  I0218 18:44:42.506743 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.355066ms)
  I0218 18:44:42.506766 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 26.580755ms)
  I0218 18:44:42.507171 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 26.82455ms)
  I0218 18:44:42.508123 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 27.795468ms)
  I0218 18:44:42.509521 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 29.286386ms)
  I0218 18:44:42.510871 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 30.501068ms)
  I0218 18:44:42.511494 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 31.205066ms)
  I0218 18:44:42.513926 26 proxy.go:558] (10) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 33.789304ms)
  I0218 18:44:42.535037 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 20.848161ms)
  I0218 18:44:42.535069 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 21.073849ms)
  I0218 18:44:42.535822 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 21.405037ms)
  I0218 18:44:42.539358 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 24.960052ms)
  I0218 18:44:42.539368 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 25.172881ms)
  I0218 18:44:42.539731 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 25.656658ms)
  I0218 18:44:42.539790 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 25.560714ms)
  I0218 18:44:42.540898 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 26.589257ms)
  I0218 18:44:42.540897 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 26.757309ms)
  I0218 18:44:42.540944 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 26.67808ms)
  I0218 18:44:42.541421 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 27.072333ms)
  I0218 18:44:42.541483 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 27.464321ms)
  I0218 18:44:42.541875 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 27.561317ms)
  I0218 18:44:42.546772 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 32.693438ms)
  I0218 18:44:42.547379 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 33.130795ms)
  I0218 18:44:42.547993 26 proxy.go:558] (11) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 33.625278ms)
  I0218 18:44:42.568379 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 20.164033ms)
  I0218 18:44:42.570074 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 21.835683ms)
  I0218 18:44:42.570081 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.702633ms)
  I0218 18:44:42.570131 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.84747ms)
  I0218 18:44:42.570702 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 22.457736ms)
  I0218 18:44:42.571916 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 23.629515ms)
  I0218 18:44:42.571930 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 23.711929ms)
  I0218 18:44:42.573129 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 24.977518ms)
  I0218 18:44:42.573735 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 25.408525ms)
  I0218 18:44:42.573765 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 25.394694ms)
  I0218 18:44:42.574405 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 26.331329ms)
  I0218 18:44:42.575585 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 27.390359ms)
  I0218 18:44:42.576529 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 28.481578ms)
  I0218 18:44:42.578577 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 30.247749ms)
  I0218 18:44:42.578875 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 30.497974ms)
  I0218 18:44:42.580032 26 proxy.go:558] (12) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 31.716032ms)
  I0218 18:44:42.601241 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 20.938707ms)
  I0218 18:44:42.601282 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 20.996123ms)
  I0218 18:44:42.601265 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.172698ms)
  I0218 18:44:42.601841 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 21.503635ms)
  I0218 18:44:42.604227 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 23.930106ms)
  I0218 18:44:42.604228 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 23.887973ms)
  I0218 18:44:42.604257 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 23.840642ms)
  I0218 18:44:42.604267 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 23.936736ms)
  I0218 18:44:42.604362 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.980521ms)
  I0218 18:44:42.604387 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 24.013251ms)
  I0218 18:44:42.605267 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 24.981604ms)
  I0218 18:44:42.608704 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 28.564282ms)
  I0218 18:44:42.609508 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 29.296881ms)
  I0218 18:44:42.609555 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 29.381728ms)
  I0218 18:44:42.613206 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 33.004085ms)
  I0218 18:44:42.613209 26 proxy.go:558] (13) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 32.825427ms)
  I0218 18:44:42.630806 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 17.402259ms)
  I0218 18:44:42.632728 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 19.163852ms)
  I0218 18:44:42.632728 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 19.236272ms)
  I0218 18:44:42.632761 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 19.074459ms)
  I0218 18:44:42.634134 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 20.383174ms)
  I0218 18:44:42.634180 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 20.64052ms)
  I0218 18:44:42.636819 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 23.054463ms)
  I0218 18:44:42.636869 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 23.367081ms)
  I0218 18:44:42.636868 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 23.27958ms)
  I0218 18:44:42.636871 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 23.209054ms)
  I0218 18:44:42.636935 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 23.675343ms)
  I0218 18:44:42.637861 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 24.193532ms)
  I0218 18:44:42.642228 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 28.520477ms)
  I0218 18:44:42.642628 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 29.016241ms)
  I0218 18:44:42.642652 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 29.399716ms)
  I0218 18:44:42.642668 26 proxy.go:558] (14) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 28.877132ms)
  I0218 18:44:42.665615 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 22.844907ms)
  I0218 18:44:42.665668 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 22.95358ms)
  I0218 18:44:42.665676 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 22.94724ms)
  I0218 18:44:42.666842 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 23.960561ms)
  I0218 18:44:42.667540 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 24.713842ms)
  I0218 18:44:42.667812 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 24.886581ms)
  I0218 18:44:42.667841 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 24.939341ms)
  I0218 18:44:42.667964 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 24.975946ms)
  I0218 18:44:42.669388 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.438821ms)
  I0218 18:44:42.669401 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.57128ms)
  I0218 18:44:42.669740 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 26.716147ms)
  I0218 18:44:42.674053 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 31.099406ms)
  I0218 18:44:42.674071 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 31.234418ms)
  I0218 18:44:42.675849 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 32.861801ms)
  I0218 18:44:42.675860 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 32.992197ms)
  I0218 18:44:42.675917 26 proxy.go:558] (15) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 33.003154ms)
  I0218 18:44:42.697356 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.390154ms)
  I0218 18:44:42.697393 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 21.144986ms)
  I0218 18:44:42.701746 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 25.657379ms)
  I0218 18:44:42.701757 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 25.479762ms)
  I0218 18:44:42.702164 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 25.970319ms)
  I0218 18:44:42.702205 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 26.027355ms)
  I0218 18:44:42.702592 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 26.571021ms)
  I0218 18:44:42.703210 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 26.929709ms)
  I0218 18:44:42.703295 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 27.206474ms)
  I0218 18:44:42.703862 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 27.715388ms)
  I0218 18:44:42.703879 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 27.655688ms)
  I0218 18:44:42.704151 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 28.085615ms)
  I0218 18:44:42.704195 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 28.218654ms)
  I0218 18:44:42.707682 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 31.532107ms)
  I0218 18:44:42.708865 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 32.66703ms)
  I0218 18:44:42.711235 26 proxy.go:558] (16) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 34.996646ms)
  I0218 18:44:42.728860 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 17.230701ms)
  I0218 18:44:42.728860 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 17.507736ms)
  I0218 18:44:42.731260 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 19.80177ms)
  I0218 18:44:42.737552 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 26.006032ms)
  I0218 18:44:42.737561 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 26.162577ms)
  I0218 18:44:42.737559 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 25.969016ms)
  I0218 18:44:42.737674 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.180113ms)
  I0218 18:44:42.737719 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 26.422336ms)
  I0218 18:44:42.737727 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.090339ms)
  I0218 18:44:42.737748 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 26.160834ms)
  I0218 18:44:42.737776 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 26.381485ms)
  I0218 18:44:42.737788 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 26.162497ms)
  I0218 18:44:42.739289 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 27.61748ms)
  I0218 18:44:42.741694 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 30.160858ms)
  I0218 18:44:42.741735 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 30.141098ms)
  I0218 18:44:42.743846 26 proxy.go:558] (17) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 32.302021ms)
  I0218 18:44:42.761573 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 17.581938ms)
  I0218 18:44:42.762857 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 18.813957ms)
  I0218 18:44:42.763636 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 19.727759ms)
  I0218 18:44:42.763688 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 19.50863ms)
  I0218 18:44:42.763676 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 19.585876ms)
  I0218 18:44:42.764072 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 19.878556ms)
  I0218 18:44:42.764788 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 20.78755ms)
  I0218 18:44:42.765357 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 21.238136ms)
  I0218 18:44:42.765388 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 21.159758ms)
  I0218 18:44:42.765901 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 21.816303ms)
  I0218 18:44:42.765902 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 21.635572ms)
  I0218 18:44:42.769341 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 25.154103ms)
  I0218 18:44:42.769504 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 25.280453ms)
  I0218 18:44:42.770131 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 26.198501ms)
  I0218 18:44:42.771369 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 27.21729ms)
  I0218 18:44:42.772137 26 proxy.go:558] (18) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 27.915027ms)
  I0218 18:44:42.793378 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:443/proxy/tlsrewritem... (200; 21.093279ms)
  I0218 18:44:42.795358 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 22.961863ms)
  I0218 18:44:42.797261 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:160/proxy/: foo (200; 25.077689ms)
  I0218 18:44:42.797261 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:462/proxy/: tls qux (200; 24.937238ms)
  I0218 18:44:42.797287 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">test<... (200; 25.022126ms)
  I0218 18:44:42.799162 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 26.697781ms)
  I0218 18:44:42.799180 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/https:proxy-service-w5ftq-s9hgk:460/proxy/: tls baz (200; 26.673074ms)
  I0218 18:44:42.799770 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:162/proxy/: bar (200; 27.274917ms)
  I0218 18:44:42.799810 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/proxy-service-w5ftq-s9hgk/proxy/rewriteme">test</a> (200; 27.304591ms)
  I0218 18:44:42.800258 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname2/proxy/: tls qux (200; 27.849338ms)
  I0218 18:44:42.800687 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/: <a href="/api/v1/namespaces/proxy-8451/pods/http:proxy-service-w5ftq-s9hgk:1080/proxy/rewriteme">... (200; 28.339325ms)
  I0218 18:44:42.801312 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname1/proxy/: foo (200; 29.069991ms)
  I0218 18:44:42.802364 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/services/https:proxy-service-w5ftq:tlsportname1/proxy/: tls baz (200; 29.960557ms)
  I0218 18:44:42.802409 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname1/proxy/: foo (200; 30.04269ms)
  I0218 18:44:42.805012 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/services/http:proxy-service-w5ftq:portname2/proxy/: bar (200; 32.65335ms)
  I0218 18:44:42.806025 26 proxy.go:558] (19) /api/v1/namespaces/proxy-8451/services/proxy-service-w5ftq:portname2/proxy/: bar (200; 33.841472ms)
  STEP: deleting ReplicationController proxy-service-w5ftq in namespace proxy-8451, will wait for the garbage collector to delete the pods @ 02/18/25 18:44:42.806
  I0218 18:44:42.883309 26 resources.go:139] Deleting ReplicationController proxy-service-w5ftq took: 14.887634ms
  I0218 18:44:42.984151 26 resources.go:163] Terminating ReplicationController proxy-service-w5ftq pods took: 100.836184ms
  I0218 18:44:45.386013 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8451" for this suite. @ 02/18/25 18:44:45.407
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.249 seconds]
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:45.436
  I0218 18:44:45.436485 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:44:45.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:45.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:45.501
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:44:45.515
  STEP: Saw pod success @ 02/18/25 18:44:49.579
  I0218 18:44:49.588582 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-9f6c68ba-db0b-4c53-a72d-de705a1d3478 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:44:49.613
  I0218 18:44:49.647949 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5554" for this suite. @ 02/18/25 18:44:49.668
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.274 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:49.699
  I0218 18:44:49.699322 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:44:49.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:49.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:49.755
  STEP: Creating configMap with name projected-configmap-test-volume-1607d303-eab7-467c-9f41-213c84c35647 @ 02/18/25 18:44:49.769
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:44:49.78
  STEP: Saw pod success @ 02/18/25 18:44:53.832
  I0218 18:44:53.843823 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-configmaps-d537b408-029d-49fb-b95e-a916c945e85c container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:44:53.882
  I0218 18:44:53.932854 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6706" for this suite. @ 02/18/25 18:44:53.952
  << Timeline
------------------------------
SSSSSS
------------------------------
• [8.335 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:53.98
  I0218 18:44:53.980393 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 02/18/25 18:44:53.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:54.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:54.051
  STEP: create the container to handle the HTTPGet hook request. @ 02/18/25 18:44:54.081
  STEP: create the pod with lifecycle hook @ 02/18/25 18:44:56.137
  STEP: delete the pod with lifecycle hook @ 02/18/25 18:44:58.184
  STEP: check prestop hook @ 02/18/25 18:45:02.247
  I0218 18:45:02.278567 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7435" for this suite. @ 02/18/25 18:45:02.299
  << Timeline
------------------------------
SSSSSS
------------------------------
• [3.608 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:02.322
  I0218 18:45:02.322153 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:45:02.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:02.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:02.376
  STEP: Setting up server cert @ 02/18/25 18:45:02.444
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:45:02.604
  STEP: Deploying the webhook pod @ 02/18/25 18:45:02.619
  STEP: Wait for the deployment to be ready @ 02/18/25 18:45:02.653
  I0218 18:45:02.680560 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:45:04.714
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:45:04.735
  I0218 18:45:05.735214 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 02/18/25 18:45:05.762
  I0218 18:45:05.867252 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7870" for this suite. @ 02/18/25 18:45:05.895
  STEP: Destroying namespace "webhook-markers-1406" for this suite. @ 02/18/25 18:45:05.914
  << Timeline
------------------------------
SSS
------------------------------
• [0.309 seconds]
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:05.934
  I0218 18:45:05.934809 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename ingressclass @ 02/18/25 18:45:05.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:05.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:05.994
  STEP: getting /apis @ 02/18/25 18:45:06.01
  STEP: getting /apis/networking.k8s.io @ 02/18/25 18:45:06.025
  STEP: getting /apis/networking.k8s.iov1 @ 02/18/25 18:45:06.031
  STEP: creating @ 02/18/25 18:45:06.037
  STEP: getting @ 02/18/25 18:45:06.075
  STEP: listing @ 02/18/25 18:45:06.092
  STEP: watching @ 02/18/25 18:45:06.101
  I0218 18:45:06.101964 26 ingressclass.go:348] starting watch
  STEP: patching @ 02/18/25 18:45:06.111
  STEP: updating @ 02/18/25 18:45:06.122
  I0218 18:45:06.134834 26 ingressclass.go:364] waiting for watch events with expected annotations
  I0218 18:45:06.134899 26 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 02/18/25 18:45:06.135
  STEP: deleting a collection @ 02/18/25 18:45:06.169
  I0218 18:45:06.208046 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1895" for this suite. @ 02/18/25 18:45:06.221
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.300 seconds]
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:06.255
  I0218 18:45:06.255051 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 18:45:06.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:06.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:06.307
  STEP: Creating configMap configmap-7931/configmap-test-35f56ad1-08c1-4cf9-a77a-3336f75b4c7f @ 02/18/25 18:45:06.324
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:45:06.344
  STEP: Saw pod success @ 02/18/25 18:45:10.434
  I0218 18:45:10.447589 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-f8430ca6-46f0-491e-b743-13c5b476b854 container env-test: <nil>
  STEP: delete the pod @ 02/18/25 18:45:10.47
  I0218 18:45:10.505669 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7931" for this suite. @ 02/18/25 18:45:10.53
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.295 seconds]
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:10.568
  I0218 18:45:10.568926 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename init-container @ 02/18/25 18:45:10.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:10.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:10.627
  STEP: creating the pod @ 02/18/25 18:45:10.644
  I0218 18:45:10.644529 26 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0218 18:45:14.808865 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2786" for this suite. @ 02/18/25 18:45:14.837
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [50.710 seconds]
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:199

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:44:24.272
  I0218 18:44:24.272761 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename job @ 02/18/25 18:44:24.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:44:24.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:44:24.321
  STEP: Looking for a node to schedule job pods @ 02/18/25 18:44:24.335
  STEP: Creating a job @ 02/18/25 18:44:24.347
  STEP: Waiting for all the pods to be ready @ 02/18/25 18:44:24.369
  STEP: Fetch all running pods @ 02/18/25 18:44:26.41
  STEP: Evict all the Pods @ 02/18/25 18:44:26.436
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-9mlcb/job-4530 @ 02/18/25 18:44:26.436
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-6f8v6/job-4530 @ 02/18/25 18:44:26.436
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-w284h/job-4530 @ 02/18/25 18:44:26.436
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-6f8v6/job-4530 to be deleted @ 02/18/25 18:44:26.524
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-9mlcb/job-4530 to be deleted @ 02/18/25 18:44:26.544
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-w284h/job-4530 to be deleted @ 02/18/25 18:44:26.545
  STEP: Ensuring job reaches completions @ 02/18/25 18:44:32.599
  I0218 18:45:14.935194 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4530" for this suite. @ 02/18/25 18:45:14.962
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [2.655 seconds]
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:14.883
  I0218 18:45:14.883209 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename validating-admission-policy @ 02/18/25 18:45:14.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:14.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:14.936
  STEP: creating a policy with variables @ 02/18/25 18:45:14.966
  STEP: waiting until the marker is denied @ 02/18/25 18:45:15.027
  STEP: testing a replicated Deployment to be allowed @ 02/18/25 18:45:16.325
  STEP: testing a non-replicated ReplicaSet not to be denied @ 02/18/25 18:45:16.715
  I0218 18:45:17.250023 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1661" for this suite. @ 02/18/25 18:45:17.385
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.351 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:14.989
  I0218 18:45:14.989631 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:45:14.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:15.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:15.049
  STEP: Creating projection with secret that has name projected-secret-test-e2fa07ea-fa77-47db-910c-7f30d2fa2fbe @ 02/18/25 18:45:15.065
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:45:15.075
  STEP: Saw pod success @ 02/18/25 18:45:19.233
  I0218 18:45:19.242852 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-secrets-8fab2eda-1505-464d-ad7a-f72ad4283046 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:45:19.265
  I0218 18:45:19.300822 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1864" for this suite. @ 02/18/25 18:45:19.323
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.098 seconds]
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:19.357
  I0218 18:45:19.357354 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:45:19.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:19.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:19.399
  I0218 18:45:19.425541 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4067" for this suite. @ 02/18/25 18:45:19.44
  << Timeline
------------------------------
S
------------------------------
• [2.201 seconds]
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:19.456
  I0218 18:45:19.456692 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename disruption @ 02/18/25 18:45:19.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:19.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:19.495
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:45:19.524
  STEP: Waiting for all pods to be running @ 02/18/25 18:45:19.586
  I0218 18:45:19.601779 24 disruption.go:691] running pods: 0 < 3
  I0218 18:45:21.619828 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4767" for this suite. @ 02/18/25 18:45:21.642
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [243.819 seconds]
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:21.664
  I0218 18:45:21.664809 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:45:21.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:21.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:21.717
  STEP: Creating pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416 @ 02/18/25 18:45:21.732
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:45:23.772
  I0218 18:45:23.784556 24 container_probe.go:1749] Initial restart count of pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 is 0
  I0218 18:45:23.802009 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:25.815052 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:27.826728 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:29.837612 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:31.849709 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:33.862276 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:35.874760 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:37.887914 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:39.901215 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:41.912826 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:43.936086 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:45.949812 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:47.960043 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:49.972723 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:51.986626 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:54.000189 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:56.011243 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:45:58.029690 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:00.044707 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:02.061088 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:04.073400 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:06.084179 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:08.097808 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:10.110223 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:12.120897 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:14.133488 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:16.148498 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:18.159974 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:20.180096 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:22.194349 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:24.205397 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:26.218353 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:28.231324 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:30.242657 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:32.256557 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:34.270347 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:36.283963 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:38.297218 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:40.311982 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:42.330949 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:44.342710 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:46.358835 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:48.372486 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:50.386631 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:52.399528 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:54.411619 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:56.432478 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:46:58.446823 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:00.457088 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:02.471922 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:04.483798 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:06.495377 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:08.508418 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:10.520320 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:12.533119 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:14.551779 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:16.564141 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:18.576397 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:20.594883 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:22.606827 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:24.619921 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:26.633708 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:28.649733 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:30.663563 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:32.675085 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:34.687015 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:36.702239 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:38.715092 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:40.727982 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:42.740342 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:44.752536 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:46.764876 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:48.776633 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:50.788189 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:52.802077 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:54.823052 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:56.849753 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:47:58.863964 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:00.876087 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:02.889170 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:04.899595 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:06.912509 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:08.924724 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:10.936070 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:12.950946 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:14.964912 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:16.983992 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:18.996906 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:21.007413 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:23.020082 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:25.032412 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:27.043668 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:29.056739 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:31.069132 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:33.079581 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:35.092929 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:37.106122 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:39.117100 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:41.130145 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:43.142355 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:45.152778 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:47.166967 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:49.178671 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:51.191020 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:53.209622 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:55.221787 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:57.233046 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:48:59.247267 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:01.259399 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:03.277848 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:05.290419 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:07.303478 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:09.314773 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:11.327716 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:13.339375 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:15.349805 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:17.362847 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:19.378540 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:21.391881 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  I0218 18:49:23.406087 24 container_probe.go:1759] Get pod busybox-3a6ef5c2-4ef8-4b30-b9e8-1e1241eeea08 in namespace container-probe-7416
  STEP: deleting the pod @ 02/18/25 18:49:25.407
  I0218 18:49:25.434504 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7416" for this suite. @ 02/18/25 18:49:25.455
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [4.259 seconds]
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:49:25.497
  I0218 18:49:25.497619 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:49:25.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:49:25.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:49:25.56
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:49:25.573
  STEP: Saw pod success @ 02/18/25 18:49:29.638
  I0218 18:49:29.649024 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-f7b2d8cf-63d7-47c3-b4e9-7aee0ff297e5 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:49:29.68
  I0218 18:49:29.715372 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2488" for this suite. @ 02/18/25 18:49:29.738
  << Timeline
------------------------------
• [9.264 seconds]
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:49:29.758
  I0218 18:49:29.758072 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:49:29.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:49:29.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:49:29.811
  I0218 18:49:29.853105 24 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0218 18:49:34.862856 24 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 02/18/25 18:49:34.862
  I0218 18:49:34.862921 24 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 02/18/25 18:49:34.893
  I0218 18:49:38.952642 24 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8929",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2e91a07-bd47-4ab5-8b1d-be6569bcb15a",
      ResourceVersion: (string) (len=6) "210886",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501374,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-69b989f764\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:49:38.964519 24 deployment.go:40] New ReplicaSet "test-cleanup-deployment-69b989f764" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8929",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6eda55cd-4a24-40e2-88d6-30baec5b0033",
      ResourceVersion: (string) (len=6) "210876",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501374,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "f2e91a07-bd47-4ab5-8b1d-be6569bcb15a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 32 65 39 31 61  30 37 2d 62 64 34 37 2d  |\"f2e91a07-bd47-|
              00000120  34 61 62 35 2d 38 62 31  64 2d 62 65 36 35 36 39  |4ab5-8b1d-be6569|
              00000130  62 63 62 31 35 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |bcb15a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:49:38.979676 24 deployment.go:68] Pod "test-cleanup-deployment-69b989f764-wlvkp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-69b989f764-wlvkp",
      GenerateName: (string) (len=35) "test-cleanup-deployment-69b989f764-",
      Namespace: (string) (len=15) "deployment-8929",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e92d8938-b7e9-4624-8996-40d9a9d84676",
      ResourceVersion: (string) (len=6) "210875",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501374,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69b989f764"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f41fc614800d4d9079a1f06c2684aad3484f8d4ff5073a9d511b3f4f47ddee1e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.11/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.11/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-69b989f764",
          UID: (types.UID) (len=36) "6eda55cd-4a24-40e2-88d6-30baec5b0033",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 65  64 61 35 35 63 64 2d 34  |d\":\"6eda55cd-4|
              00000090  61 32 34 2d 34 30 65 32  2d 38 38 64 36 2d 33 30  |a24-40e2-88d6-30|
              000000a0  62 61 65 63 35 62 30 30  33 33 5c 22 7d 22 3a 7b  |baec5b0033\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501376,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 31  31 5c 22 7d 22 3a 7b 22  |2.25.1.11\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wrtqz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wrtqz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501377,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501374,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501374,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501377,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://bd557a06d53d4531b956d62a0060f7801f7ee019df27a71d20f9454e8d9856f1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wrtqz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:49:38.980483 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8929" for this suite. @ 02/18/25 18:49:39.003
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [300.375 seconds]
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:45:17.562
  I0218 18:45:17.562274 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename cronjob @ 02/18/25 18:45:17.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:45:17.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:45:17.731
  STEP: Creating a suspended cronjob @ 02/18/25 18:45:17.745
  STEP: Ensuring no jobs are scheduled @ 02/18/25 18:45:17.848
  STEP: Ensuring no job exists by listing jobs explicitly @ 02/18/25 18:50:17.848
  STEP: Removing cronjob @ 02/18/25 18:50:17.865
  I0218 18:50:17.894976 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4707" for this suite. @ 02/18/25 18:50:17.92
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.782 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:50:17.984
  I0218 18:50:17.984117 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:50:17.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:50:18.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:50:18.036
  STEP: Setting up server cert @ 02/18/25 18:50:18.094
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:50:18.334
  STEP: Deploying the webhook pod @ 02/18/25 18:50:18.351
  STEP: Wait for the deployment to be ready @ 02/18/25 18:50:18.38
  I0218 18:50:18.414302 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:50:20.447
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:50:20.473
  I0218 18:50:21.474146 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 02/18/25 18:50:21.494
  STEP: Creating a custom resource definition that should be denied by the webhook @ 02/18/25 18:50:21.547
  I0218 18:50:21.547638 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:50:21.714877 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8953" for this suite. @ 02/18/25 18:50:21.733
  STEP: Destroying namespace "webhook-markers-3167" for this suite. @ 02/18/25 18:50:21.749
  << Timeline
------------------------------
• [20.346 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:968

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:50:21.768
  I0218 18:50:21.768191 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:50:21.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:50:21.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:50:21.819
  STEP: Creating service test in namespace statefulset-5552 @ 02/18/25 18:50:21.835
  I0218 18:50:21.875413 26 wait.go:40] Found 0 stateful pods, waiting for 1
  I0218 18:50:31.877784 26 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 02/18/25 18:50:31.901
  I0218 18:50:31.954517 26 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:50:31.954553 26 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0218 18:50:41.953670 26 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:50:41.953708 26 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 02/18/25 18:50:41.975
  STEP: Delete all of the StatefulSets @ 02/18/25 18:50:41.985
  STEP: Verify that StatefulSets have been deleted @ 02/18/25 18:50:42.004
  I0218 18:50:42.016995 26 statefulset.go:138] Deleting all statefulset in ns statefulset-5552
  I0218 18:50:42.077107 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5552" for this suite. @ 02/18/25 18:50:42.096
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.238 seconds]
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:50:42.126
  I0218 18:50:42.126541 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:50:42.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:50:42.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:50:42.183
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:50:42.197
  STEP: Saw pod success @ 02/18/25 18:50:46.254
  I0218 18:50:46.265499 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-5e97980a-8915-4d70-a7af-630dc42b7b1e container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:50:46.288
  I0218 18:50:46.319394 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3403" for this suite. @ 02/18/25 18:50:46.347
  << Timeline
------------------------------
SSSS
------------------------------
• [37.482 seconds]
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:50:46.369
  I0218 18:50:46.369791 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename aggregator @ 02/18/25 18:50:46.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:50:46.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:50:46.415
  I0218 18:50:46.430502 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Registering the sample API server. @ 02/18/25 18:50:46.431
  I0218 18:50:46.672316 26 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0218 18:50:46.766245 26 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0218 18:50:48.870558 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:50:50.885715 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:50:52.889560 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:50:54.882593 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:50:56.883969 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:50:58.883697 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:00.883375 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:02.882363 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:04.883257 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:06.885082 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:08.883846 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:10.885971 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:12.881978 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:14.884494 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:16.883311 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:18.881164 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:20.886110 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 50, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6bbcf6575d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:51:23.058668 26 aggregator.go:755] Waited 153.95441ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 02/18/25 18:51:23.233
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 02/18/25 18:51:23.242
  STEP: List APIServices @ 02/18/25 18:51:23.262
  I0218 18:51:23.275597 26 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 02/18/25 18:51:23.275
  I0218 18:51:23.300418 26 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 02/18/25 18:51:23.3
  I0218 18:51:23.326764 26 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.February, 18, 18, 51, 22, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 02/18/25 18:51:23.326
  I0218 18:51:23.337712 26 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-02-18 18:51:22 +0000 UTC Passed all checks passed}
  I0218 18:51:23.337741 26 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0218 18:51:23.337754 26 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 02/18/25 18:51:23.337
  I0218 18:51:23.363108 26 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1354196228" @ 02/18/25 18:51:23.363
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 02/18/25 18:51:23.404
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 02/18/25 18:51:23.435
  STEP: Patch APIService Status @ 02/18/25 18:51:23.447
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 02/18/25 18:51:23.47
  I0218 18:51:23.480650 26 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-02-18 18:51:22 +0000 UTC Passed all checks passed}
  I0218 18:51:23.480699 26 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0218 18:51:23.480738 26 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0218 18:51:23.480758 26 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 02/18/25 18:51:23.48
  STEP: Confirm that the generated APIService has been deleted @ 02/18/25 18:51:23.505
  I0218 18:51:23.505196 26 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I0218 18:51:23.517718 26 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0218 18:51:23.517814 26 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I0218 18:51:23.816973 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4806" for this suite. @ 02/18/25 18:51:23.832
  << Timeline
------------------------------
SSS
------------------------------
• [6.899 seconds]
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:23.856
  I0218 18:51:23.856875 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:51:23.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:23.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:23.906
  STEP: creating a Deployment @ 02/18/25 18:51:23.933
  STEP: waiting for Deployment to be created @ 02/18/25 18:51:23.947
  STEP: waiting for all Replicas to be Ready @ 02/18/25 18:51:23.953
  I0218 18:51:23.962129 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:23.962149 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:23.979951 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:23.979998 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:24.033708 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:24.033737 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:24.058491 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:24.058520 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0218 18:51:25.275016 26 deployment.go:246] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0218 18:51:25.275061 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0218 18:51:25.499909 26 deployment.go:248] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 02/18/25 18:51:25.499
  I0218 18:51:25.519965 26 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 02/18/25 18:51:25.52
  I0218 18:51:25.527082 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527113 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527128 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527140 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527156 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527165 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527459 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527499 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 0
  I0218 18:51:25.527521 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:25.527532 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:25.527659 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.527672 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.527730 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.527751 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.534258 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.534279 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.552926 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.552973 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:25.569095 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:25.569123 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:25.590635 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:25.590665 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:26.519102 26 deployment.go:309] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:26.519143 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:26.582637 26 deployment.go:311] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  STEP: listing Deployments @ 02/18/25 18:51:26.582
  I0218 18:51:26.595563 26 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 02/18/25 18:51:26.595
  I0218 18:51:26.627476 26 deployment.go:360] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 02/18/25 18:51:26.627
  I0218 18:51:26.659830 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:26.659941 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:26.685131 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:26.717241 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:26.732407 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:28.286408 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:29.322715 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:29.393506 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:29.407884 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0218 18:51:30.526873 26 deployment.go:389] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 02/18/25 18:51:30.573
  STEP: fetching the DeploymentStatus @ 02/18/25 18:51:30.595
  I0218 18:51:30.613167 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:30.613464 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:30.613519 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:30.613542 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:30.613714 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 1
  I0218 18:51:30.613836 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:30.613883 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 3
  I0218 18:51:30.615589 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:30.615630 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 2
  I0218 18:51:30.615650 26 deployment.go:449] observed Deployment test-deployment in namespace deployment-1670 with ReadyReplicas 3
  STEP: deleting the Deployment @ 02/18/25 18:51:30.615
  I0218 18:51:30.646773 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647001 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647052 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647070 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647277 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647302 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647335 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647609 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647635 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647655 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.647853 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.648010 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.648027 26 deployment.go:475] observed event type MODIFIED
  I0218 18:51:30.659037 26 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0218 18:51:30.670522 26 deployment.go:657] ReplicaSet "test-deployment-564597bcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-564597bcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b868b61-e854-483f-9ff2-71dfc780923f",
      ResourceVersion: (string) (len=6) "211712",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501483,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c772c90c-7bf6-4bd5-83c8-3e540bfa0f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 37 37 32  63 39 30 63 2d 37 62 66  |":\"c772c90c-7bf|
              00000130  36 2d 34 62 64 35 2d 38  33 63 38 2d 33 65 35 34  |6-4bd5-83c8-3e54|
              00000140  30 62 66 61 30 66 33 35  5c 22 7d 22 3a 7b 7d 7d  |0bfa0f35\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "564597bcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0218 18:51:30.682413 26 deployment.go:657] ReplicaSet "test-deployment-79899bcfcc":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79899bcfcc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "874f83de-0526-469d-9f6c-5b92e96ae9ba",
      ResourceVersion: (string) (len=6) "211819",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c772c90c-7bf6-4bd5-83c8-3e540bfa0f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 37 37 32  63 39 30 63 2d 37 62 66  |":\"c772c90c-7bf|
              00000130  36 2d 34 62 64 35 2d 38  33 63 38 2d 33 65 35 34  |6-4bd5-83c8-3e54|
              00000140  30 62 66 61 30 66 33 35  5c 22 7d 22 3a 7b 7d 7d  |0bfa0f35\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0218 18:51:30.695830 26 deployment.go:669] pod: "test-deployment-79899bcfcc-68qcp":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-68qcp",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8877713a-7427-4397-aa73-3b12ff84d6fb",
      ResourceVersion: (string) (len=6) "211782",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e98ac1bbed485446b0070372dc9dfda76a2d0885fc48e1fd64ef70c34e4861e3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.158/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "874f83de-0526-469d-9f6c-5b92e96ae9ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 37 34 66 38 33 64 65  |uid\":\"874f83de|
              000000a0  2d 30 35 32 36 2d 34 36  39 64 2d 39 66 36 63 2d  |-0526-469d-9f6c-|
              000000b0  35 62 39 32 65 39 36 61  65 39 62 61 5c 22 7d 22  |5b92e96ae9ba\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 33 2e 31  35 38 5c 22 7d 22 3a 7b  |2.25.3.158\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6rc42",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6rc42",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) (len=12) "172.25.3.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.3.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501488,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://255d109ea4d11f6b8e12d4f55fe0f0401cff08051d962bb63529795fe76e368f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6rc42",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0218 18:51:30.696502 26 deployment.go:669] pod: "test-deployment-79899bcfcc-d4lmr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-79899bcfcc-d4lmr",
      GenerateName: (string) (len=27) "test-deployment-79899bcfcc-",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d06a481d-5fb1-471a-9266-4120e8606e30",
      ResourceVersion: (string) (len=6) "211836",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "79899bcfcc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.19/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7823bc1c7d72273c61060b2ff7240ecef365b5113fc4e15983bb98d5bec8a54b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.19/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-79899bcfcc",
          UID: (types.UID) (len=36) "874f83de-0526-469d-9f6c-5b92e96ae9ba",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 37 34 66 38 33 64 65  |uid\":\"874f83de|
              000000a0  2d 30 35 32 36 2d 34 36  39 64 2d 39 66 36 63 2d  |-0526-469d-9f6c-|
              000000b0  35 62 39 32 65 39 36 61  65 39 62 61 5c 22 7d 22  |5b92e96ae9ba\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 31  39 5c 22 7d 22 3a 7b 22  |2.25.1.19\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-46c4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-46c4h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.19",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.19"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501489,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501490,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3d4847fa61569293d6e827e1234dc433a4d37cadcb38e8b31eb2066c4ef4a487",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-46c4h",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0218 18:51:30.696893 26 deployment.go:657] ReplicaSet "test-deployment-f78d658f9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-f78d658f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8080375-2d18-4a37-850d-0776b73f30ce",
      ResourceVersion: (string) (len=6) "211827",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501485,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "c772c90c-7bf6-4bd5-83c8-3e540bfa0f35",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 37 37 32  63 39 30 63 2d 37 62 66  |":\"c772c90c-7bf|
              00000130  36 2d 34 62 64 35 2d 38  33 63 38 2d 33 65 35 34  |6-4bd5-83c8-3e54|
              00000140  30 62 66 61 30 66 33 35  5c 22 7d 22 3a 7b 7d 7d  |0bfa0f35\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0218 18:51:30.711763 26 deployment.go:669] pod: "test-deployment-f78d658f9-9b6sw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-9b6sw",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a99b57d-ba6e-4472-a52a-24a2034ada19",
      ResourceVersion: (string) (len=6) "211821",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501491,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "14832cf96cbbe523d34317b242c285aeaf0f733d58b3ef5585f87fc7a63f7388",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) "",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) ""
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "d8080375-2d18-4a37-850d-0776b73f30ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 38 30 38 30 33 37 35  |uid\":\"d8080375|
              000000a0  2d 32 64 31 38 2d 34 61  33 37 2d 38 35 30 64 2d  |-2d18-4a37-850d-|
              000000b0  30 37 37 36 62 37 33 66  33 30 63 65 5c 22 7d 22  |0776b73f30ce\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=703) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |:phase":{},"f:po|
              00000260  64 49 50 22 3a 7b 7d 2c  22 66 3a 70 6f 64 49 50  |dIP":{},"f:podIP|
              00000270  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000280  22 69 70 5c 22 3a 5c 22  31 37 32 2e 32 35 2e 30  |"ip\":\"172.25.0|
              00000290  2e 31 35 39 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |.159\"}":{".":{}|
              000002a0  2c 22 66 3a 69 70 22 3a  7b 7d 7d 7d 2c 22 66 3a  |,"f:ip":{}}},"f:|
              000002b0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9c5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9c5v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501486,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501487,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501490,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://72562e4ed01394ff5575f7ae25771b7ae831caab8c780240d5d3b15ca991191c"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://72562e4ed01394ff5575f7ae25771b7ae831caab8c780240d5d3b15ca991191c",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-l9c5v",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0218 18:51:30.712894 26 deployment.go:669] pod: "test-deployment-f78d658f9-xms4d":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-f78d658f9-xms4d",
      GenerateName: (string) (len=26) "test-deployment-f78d658f9-",
      Namespace: (string) (len=15) "deployment-1670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c41fc98-d1db-432a-a6e3-c4f30a711c5f",
      ResourceVersion: (string) (len=6) "211824",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501485,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501492,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "f78d658f9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.18/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3c70c8feeff5a8279e09e63e9cd00a991b72cc625d42f23aa2b2605ef372cc1e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-f78d658f9",
          UID: (types.UID) (len=36) "d8080375-2d18-4a37-850d-0776b73f30ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 38 30 38 30 33 37 35  |uid\":\"d8080375|
              000000a0  2d 32 64 31 38 2d 34 61  33 37 2d 38 35 30 64 2d  |-2d18-4a37-850d-|
              000000b0  30 37 37 36 62 37 33 66  33 30 63 65 5c 22 7d 22  |0776b73f30ce\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 31  38 5c 22 7d 22 3a 7b 22  |2.25.1.18\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-phm9w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-phm9w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501486,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501485,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501485,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501486,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://cce2ac45e237c1ab1aee29cdc245916480cdf159510f6878b3996e3f1ffbffad",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-phm9w",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0218 18:51:30.713871 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1670" for this suite. @ 02/18/25 18:51:30.734
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.294 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:30.767
  I0218 18:51:30.767688 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:51:30.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:30.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:30.828
  STEP: Creating configMap with name projected-configmap-test-volume-b30e0b21-b5c9-4d77-bff8-8d17bd2745ea @ 02/18/25 18:51:30.852
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:51:30.866
  STEP: Saw pod success @ 02/18/25 18:51:34.925
  I0218 18:51:34.938217 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-configmaps-5696bc3d-7c3a-49fb-8629-1eb068c06129 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:51:34.968
  I0218 18:51:35.021818 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6156" for this suite. @ 02/18/25 18:51:35.043
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.222 seconds]
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:35.077
  I0218 18:51:35.077344 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename volumeattachment @ 02/18/25 18:51:35.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:35.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:35.128
  STEP: Create VolumeAttachment "va-e2e-8g4g2" on node "admiring-kalam-9d8f4776-qvphf" @ 02/18/25 18:51:35.158
  STEP: Patch VolumeAttachment "va-e2e-8g4g2" on node "admiring-kalam-9d8f4776-qvphf" @ 02/18/25 18:51:35.173
  STEP: Reading "va-e2e-8g4g2" Status @ 02/18/25 18:51:35.186
  STEP: Patching "va-e2e-8g4g2" Status @ 02/18/25 18:51:35.199
  I0218 18:51:35.213840 26 volume_attachment.go:224] "va-e2e-8g4g2" Status.Attached: true
  STEP: Updating "va-e2e-8g4g2" Status @ 02/18/25 18:51:35.213
  I0218 18:51:35.237826 26 volume_attachment.go:240] "va-e2e-8g4g2" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-8g4g2" on node "admiring-kalam-9d8f4776-qvphf" @ 02/18/25 18:51:35.237
  STEP: Confirm deletion of VolumeAttachment "va-e2e-8g4g2" on node "admiring-kalam-9d8f4776-qvphf" @ 02/18/25 18:51:35.252
  I0218 18:51:35.264909 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-6043" for this suite. @ 02/18/25 18:51:35.28
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [7.579 seconds]
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:35.309
  I0218 18:51:35.309992 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:51:35.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:35.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:35.356
  I0218 18:51:35.372324 26 deployment.go:1196] Creating deployment "webserver-deployment"
  I0218 18:51:35.384631 26 deployment.go:1200] Waiting for observed generation 1
  I0218 18:51:37.404791 26 deployment.go:1205] Waiting for all required pods to come up
  I0218 18:51:37.453685 26 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 02/18/25 18:51:37.453
  I0218 18:51:37.453786 26 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0218 18:51:37.477660 26 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0218 18:51:37.512053 26 deployment.go:314] Updating deployment webserver-deployment
  I0218 18:51:37.512095 26 deployment.go:1224] Waiting for observed generation 2
  I0218 18:51:39.681170 26 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0218 18:51:39.693576 26 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0218 18:51:39.711944 26 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0218 18:51:39.743516 26 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0218 18:51:39.743550 26 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0218 18:51:39.752596 26 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0218 18:51:39.776938 26 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0218 18:51:39.776993 26 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0218 18:51:39.811684 26 deployment.go:314] Updating deployment webserver-deployment
  I0218 18:51:39.811729 26 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0218 18:51:39.857648 26 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0218 18:51:42.096582 26 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0218 18:51:42.274509 26 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e12e1ee-58c0-450b-a482-8c2dce25a93f",
      ResourceVersion: (string) (len=6) "212359",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      UnavailableReplicas: (int32) 23,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-6fc69b9478\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:51:42.373176 26 deployment.go:40] New ReplicaSet "webserver-deployment-6fc69b9478" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6fc69b9478",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
      ResourceVersion: (string) (len=6) "212266",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "6e12e1ee-58c0-450b-a482-8c2dce25a93f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 65 31 32 65 31  65 65 2d 35 38 63 30 2d  |\"6e12e1ee-58c0-|
              00000120  34 35 30 62 2d 61 34 38  32 2d 38 63 32 64 63 65  |450b-a482-8c2dce|
              00000130  32 35 61 39 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |25a93f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:51:42.373229 26 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0218 18:51:42.373889 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-685b768f58",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
      ResourceVersion: (string) (len=6) "212356",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "6e12e1ee-58c0-450b-a482-8c2dce25a93f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 65 31 32 65 31  65 65 2d 35 38 63 30 2d  |\"6e12e1ee-58c0-|
              00000120  34 35 30 62 2d 61 34 38  32 2d 38 63 32 64 63 65  |450b-a482-8c2dce|
              00000130  32 35 61 39 33 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |25a93f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501502,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 10,
      AvailableReplicas: (int32) 10,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:51:42.474481 26 deployment.go:68] Pod "webserver-deployment-685b768f58-2bhfl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-2bhfl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69bc25c5-dd15-4baf-8402-8721606ed173",
      ResourceVersion: (string) (len=6) "212348",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.166/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c85c3dc0c1833168d160b0c8f85ad7af70237a5d10f766ee5140c05469e0f3f6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vkpjk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vkpjk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vkpjk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.475094 26 deployment.go:68] Pod "webserver-deployment-685b768f58-57qfr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-57qfr",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04c048c1-b669-44c5-bf51-6098ea7df2bd",
      ResourceVersion: (string) (len=6) "212305",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "03ab0527543ecbdebf381dae1b5544f8ade3633cbac8a6c339e26afeeb052624",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.168/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.168/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mwts5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mwts5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mwts5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.475737 26 deployment.go:68] Pod "webserver-deployment-685b768f58-74j8p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-74j8p",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6c5c1aaa-40b4-4a6c-993b-88df65516054",
      ResourceVersion: (string) (len=6) "212303",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.169/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.169/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "49cafa78dd2976e745d51bcdbb95dc5df6d40573bd04f0a461b5f4528cb0c12e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtjpr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtjpr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xtjpr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.476363 26 deployment.go:68] Pod "webserver-deployment-685b768f58-7cvv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7cvv5",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c776b508-8031-47f2-820a-46c9367ccd76",
      ResourceVersion: (string) (len=6) "212319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "627cbf3e4b1536df867c6935bdfe0a940048113406f5fe51663f0bbb9debc057",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.164/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-24ckj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-24ckj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-24ckj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.477024 26 deployment.go:68] Pod "webserver-deployment-685b768f58-7jkkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7jkkf",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "661ff818-2539-4dd6-b801-13975113e358",
      ResourceVersion: (string) (len=6) "212353",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "42c478967132da0eaf6ca2661485a4ccbe87f15ad6e1719a9dae401f9f61b81f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.2.17/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.2.17/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fk4lk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fk4lk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-qvphf",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fk4lk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.477653 26 deployment.go:68] Pod "webserver-deployment-685b768f58-7mq97" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-7mq97",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11f73041-e105-4f30-b9c7-51229d680a80",
      ResourceVersion: (string) (len=6) "212313",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e8e4004fd48f4ba834b6da9e3dea342e47eb15bd13978676a290d2aa10139332",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hbfxf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hbfxf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-hbfxf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.478230 26 deployment.go:68] Pod "webserver-deployment-685b768f58-8m6cl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-8m6cl",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab55b398-b6fc-4faa-943e-05c643df149d",
      ResourceVersion: (string) (len=6) "212024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e4c17e806f3625ccbc834966d6e7742ae0efa24fc6968806b3420d6c4b935c72",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 30 2e 31  36 32 5c 22 7d 22 3a 7b  |2.25.0.162\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rc6cs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rc6cs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c2c7bf4485f6b5152df3fe10b23243c9501aef909e6a36314e1b56a42fe18bf4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rc6cs",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.478858 26 deployment.go:68] Pod "webserver-deployment-685b768f58-c2ltp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-c2ltp",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "877c5df4-f8aa-4a4f-9eb1-08fd062d04dc",
      ResourceVersion: (string) (len=6) "212350",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3415a28622ded439088fe9fb6e7834ec4ca7a8773f137accf5e7e6991d0fa420",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.2.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.2.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 32 2e 31  35 5c 22 7d 22 3a 7b 22  |2.25.2.15\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ts4hd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ts4hd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-qvphf",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.4"
        }
      },
      PodIP: (string) (len=11) "172.25.2.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.2.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6790c3a6d309dce73dcdd9a6bd2289cf5609846e267a4da0f882b87c335f3395",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ts4hd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.480131 26 deployment.go:68] Pod "webserver-deployment-685b768f58-d6vtd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-d6vtd",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "11eb4326-9c4f-4fb4-9431-e8542e17238f",
      ResourceVersion: (string) (len=6) "212036",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.20/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.20/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6edad3219a039ac2cb6883e67ea2eb184dc0a35386b3303978e55de139440523"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 32  30 5c 22 7d 22 3a 7b 22  |2.25.1.20\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vl8br",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vl8br",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://62ad5620f2f4583bf86575aa28cd00884221915c5c9b8757723b70303a086cbc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vl8br",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.480748 26 deployment.go:68] Pod "webserver-deployment-685b768f58-kmrq6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-kmrq6",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ecfe7c29-f4b7-44f6-986d-9a43f4ad3a25",
      ResourceVersion: (string) (len=6) "212317",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0ec7cb2b7d11073031c0760a56ac60547ae1b1be939431f6fac70f97d0c12a9b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.28/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xcqpq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xcqpq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xcqpq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.481346 26 deployment.go:68] Pod "webserver-deployment-685b768f58-lmbp4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-lmbp4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cb0294f-2451-4105-9213-4ea9303a9118",
      ResourceVersion: (string) (len=6) "212040",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.2.12/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "847e6a5708eed79d56330aedabdd4868f2a4aa327715a7c61571bfcf56ac5c80",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.2.12/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 32 2e 31  32 5c 22 7d 22 3a 7b 22  |2.25.2.12\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jktn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jktn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-qvphf",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.4"
        }
      },
      PodIP: (string) (len=11) "172.25.2.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.2.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b7b44f0acad518639997e26934e1447bafdebdb32c2d87200029c5d3dca155fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5jktn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.481980 26 deployment.go:68] Pod "webserver-deployment-685b768f58-pbvp4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-pbvp4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "166e2ee0-3931-4e85-8307-4c515f259034",
      ResourceVersion: (string) (len=6) "212316",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c709b675fae73144754aaefe601893dcd8015af8a2e23431888f6f91f8733472",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.170/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.170/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6ldtr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6ldtr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-6ldtr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.482637 26 deployment.go:68] Pod "webserver-deployment-685b768f58-r4794" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-r4794",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bbcce4b3-422e-474b-be5c-c9566509c58e",
      ResourceVersion: (string) (len=6) "212294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.166/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6c854e743761fce1509c3cf2b19b9da390607c0d33a866964c56333ee335dc64",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c7xzc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c7xzc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c7xzc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.483287 26 deployment.go:68] Pod "webserver-deployment-685b768f58-s8gt2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-s8gt2",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9bb9789-a6ea-4f7d-82dd-2263744d81b2",
      ResourceVersion: (string) (len=6) "212320",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "30cb9176fd62dcdfae1b26ff518c7b81719cd2214e8797339393cad037655418",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.163/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.163/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sjfpn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sjfpn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-sjfpn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.484025 26 deployment.go:68] Pod "webserver-deployment-685b768f58-sbn4n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sbn4n",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4cbcfec2-bb28-4126-9966-e558ca6b6646",
      ResourceVersion: (string) (len=6) "212339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "867ce238a4e3115b3b21e134144015b7024528dc19926c5da5bd8c8c620d27f2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 32  34 5c 22 7d 22 3a 7b 22  |2.25.1.24\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-56bfj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-56bfj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501501,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e0cf42d153e079e4d164302d9c4cff678996a5bfa934b6301c1aac0c2ce78be4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-56bfj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.484681 26 deployment.go:68] Pod "webserver-deployment-685b768f58-sxpg7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-sxpg7",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75385df7-7341-4cea-9632-c814ece152d5",
      ResourceVersion: (string) (len=6) "212047",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1c235e4aeed1c4b8d69756e8bf3c16b15e7a2706bafe81a8b4200856ac0cb470",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.2.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.2.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 32 2e 31  33 5c 22 7d 22 3a 7b 22  |2.25.2.13\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jhdj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jhdj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-qvphf",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.4"
        }
      },
      PodIP: (string) (len=11) "172.25.2.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.2.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0002e6c0306758cd1eb9b97796610d58f516494aea81301032e99cd3de1b8418",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9jhdj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.486920 26 deployment.go:68] Pod "webserver-deployment-685b768f58-tm9f4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-tm9f4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6666c7cb-1567-4eb7-b1c0-9da481ec3dbd",
      ResourceVersion: (string) (len=6) "212030",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "26605afe660a803400e0fb514e0b3d64d5c84f8da7c8e508353ccc8571e6db06",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.21/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.21/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 32  31 5c 22 7d 22 3a 7b 22  |2.25.1.21\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tlngz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tlngz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0bdd7effc567a956d3ce53b504422607dd9306682c9587cdee99cc75281cef17",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tlngz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.488400 26 deployment.go:68] Pod "webserver-deployment-685b768f58-xkfvc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-xkfvc",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70f72968-7b11-4ff2-9ff9-3dbe0c6baf2a",
      ResourceVersion: (string) (len=6) "212048",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.22/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9e19503ef62e79d814d0be680c6ed330fa141e0d3c5b0ebfad399e05c41bb647",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 32  32 5c 22 7d 22 3a 7b 22  |2.25.1.22\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qr6jb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qr6jb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://683b71af4c06b6e70bc6ee11abda3d4fe34173b6af032efa1509f251d5997752",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qr6jb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.489595 26 deployment.go:68] Pod "webserver-deployment-685b768f58-zkgm4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zkgm4",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc1fe1ad-4054-4332-a68d-216e9731bca3",
      ResourceVersion: (string) (len=6) "212028",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.160/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.160/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "08dad3cbdcc7cb10615d2ad7bac4f1a24aafc864b3681719e879129625255faa"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 33 2e 31  36 30 5c 22 7d 22 3a 7b  |2.25.3.160\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zl9x4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zl9x4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) (len=12) "172.25.3.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.3.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://67b7b743691fbb309b0ee6fa67f9494963381feaa7e74cd915f2adf198f0dbf1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zl9x4",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.490657 26 deployment.go:68] Pod "webserver-deployment-685b768f58-zqh9t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-685b768f58-zqh9t",
      GenerateName: (string) (len=32) "webserver-deployment-685b768f58-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d62d491-02da-4363-9421-925d5fb32d93",
      ResourceVersion: (string) (len=6) "212017",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "685b768f58"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "408d997f33aa1696bab4f686a04e0378a1110f2d677af7271bb52d466593933c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.159/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.159/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-685b768f58",
          UID: (types.UID) (len=36) "7e90bc1d-5746-4263-b085-48cb7247c8fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 65  39 30 62 63 31 64 2d 35  |d\":\"7e90bc1d-5|
              00000090  37 34 36 2d 34 32 36 33  2d 62 30 38 35 2d 34 38  |746-4263-b085-48|
              000000a0  63 62 37 32 34 37 63 38  66 63 5c 22 7d 22 3a 7b  |cb7247c8fc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 33 2e 31  35 39 5c 22 7d 22 3a 7b  |2.25.3.159\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cxtbf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cxtbf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501495,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) (len=12) "172.25.3.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.3.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501496,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://97f0b556e0f6cf0abb383b00211872c20bb73a43877ce22c907583faeef6cd33",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cxtbf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.491695 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-6mk5w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-6mk5w",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9b85dc5-161b-46bc-9dec-4836b4df253d",
      ResourceVersion: (string) (len=6) "212318",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "78489adaa8651356008f9dc38903330f992c13eed297eccf7eb76be64c4ce834",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.2.16/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.2.16/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48pl8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48pl8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-qvphf",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.4"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-48pl8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.492763 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-74shp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-74shp",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87a23fe3-ec0f-44af-8b80-13249433cd69",
      ResourceVersion: (string) (len=6) "212299",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2c41af44e7afbeb0f5ed4fd20ef32030f6c3497ff4893c7b893fa72a8167c815",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.23/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  35 2e 31 2e 32 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |5.1.23\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qp6rh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qp6rh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-qp6rh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.493781 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-8z9nt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-8z9nt",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8389f618-0238-415d-af58-96a92cc96bcc",
      ResourceVersion: (string) (len=6) "212335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "10a8bec652b72f475d82ccec5925c80ce8655b235285386c0f199969d21e3b39",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.165/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.165/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fhwsb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fhwsb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fhwsb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.494869 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-bxzpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-bxzpr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13c38e79-fa57-4c2b-9635-69d3be31d033",
      ResourceVersion: (string) (len=6) "212295",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "414ccbd8893a05478fb099b941e3352bd6e66f29cf31130ead3fe655071355c1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.167/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.167/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nppxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nppxc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nppxc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.495921 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-cnq7z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-cnq7z",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6865141-c053-453b-95a6-834b6741f0d9",
      ResourceVersion: (string) (len=6) "212336",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.29/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aed0dab18be0ee02317fee1460b9ab62506d515eea3a9fbdb332f9eeb49855fd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vbrkp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vbrkp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vbrkp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.496987 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-drxl2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-drxl2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dfd8ca07-8c4d-4d7e-83c1-8fb659864b65",
      ResourceVersion: (string) (len=6) "212337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f24ecf28df5625ea7423f9d01555107f73af68d6bbf450faa4afcc359b612d26",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.164/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  35 2e 30 2e 31 36 34 5c  22 7d 22 3a 7b 22 2e 22  |5.0.164\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-khzr2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-khzr2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-khzr2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.498072 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-dv8wr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-dv8wr",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df94d3b5-64b2-4d2d-aa0a-fdba38206d9d",
      ResourceVersion: (string) (len=6) "212285",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8d4f5713a884fa7a4cdc7c2c9a40b6675792963ee04718b73a008bd8dc245b0f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.2.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.2.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  35 2e 32 2e 31 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |5.2.14\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6znr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6znr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-qvphf",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.4",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.4"
        }
      },
      PodIP: (string) (len=11) "172.25.2.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.2.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-s6znr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.499151 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-h8t8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-h8t8c",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "191fec05-eb4c-4684-b06a-00dbedd792d9",
      ResourceVersion: (string) (len=6) "212278",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.161/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.161/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5eed87721e983b7c15629ecc3e0e2a4c007479a34a4699e61417a51607a87f5"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  35 2e 33 2e 31 36 31 5c  22 7d 22 3a 7b 22 2e 22  |5.3.161\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jm54j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jm54j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) (len=12) "172.25.3.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.3.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jm54j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.500523 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-j6s2x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-j6s2x",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c94663a-af28-4d5d-a408-8e567ce79c41",
      ResourceVersion: (string) (len=6) "212328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.171/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.171/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3b22c77d18f06c2fa5c9ed5de8fa5ac18f5c76613a670e495223057a18428be7"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rwr6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rwr6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9rwr6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.501731 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-w58dj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-w58dj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6dff447-1b4e-4cb4-9f52-f3cba7bd2ad9",
      ResourceVersion: (string) (len=6) "212302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.3.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.3.162/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0cf31dc65a9c5522d253ba9b38d0bd86bf89d8ee73335bdd14fc04089b6c9c80"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dptxv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dptxv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-bw8qq",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dptxv",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.502905 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-wjdzj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-wjdzj",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b13fe8f7-bfb2-477c-a678-ea48e5a44097",
      ResourceVersion: (string) (len=6) "212300",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.26/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0149eba53457d3e92b3ddb365840921ef1b368c29de1f5272c94025e96e75cdd"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jn66j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jn66j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jn66j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.504144 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-xs8nv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-xs8nv",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd90fec6-8562-44b7-bb6d-7c97add3343d",
      ResourceVersion: (string) (len=6) "212311",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "64c19087739a262f4f80559300510e53f3b6ba0b1eb9ee276a154dbc8675b4f2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.165/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.165/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 37 32 2e 32  |:{\"ip\":\"172.2|
              00000290  35 2e 30 2e 31 36 35 5c  22 7d 22 3a 7b 22 2e 22  |5.0.165\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nwh75",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nwh75",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nwh75",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.505732 26 deployment.go:68] Pod "webserver-deployment-6fc69b9478-zwzb2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6fc69b9478-zwzb2",
      GenerateName: (string) (len=32) "webserver-deployment-6fc69b9478-",
      Namespace: (string) (len=15) "deployment-8209",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b67ba39c-9551-409c-9007-ce757b8eca7d",
      ResourceVersion: (string) (len=6) "212298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fc69b9478",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7c99f0766e8f9dc1703272dc77eea26143f045ade24c1a8c75a341e4eb6ab28b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.25/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6fc69b9478",
          UID: (types.UID) (len=36) "610742aa-a841-4d73-b731-d8d8d60e33d1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 31  30 37 34 32 61 61 2d 61  |d\":\"610742aa-a|
              00000090  38 34 31 2d 34 64 37 33  2d 62 37 33 31 2d 64 38  |841-4d73-b731-d8|
              000000a0  64 38 64 36 30 65 33 33  64 31 5c 22 7d 22 3a 7b  |d8d60e33d1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k2pl9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k2pl9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k2pl9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:51:42.506747 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8209" for this suite. @ 02/18/25 18:51:42.684
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [3.612 seconds]
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:43.004
  I0218 18:51:43.004435 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 18:51:43.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:43.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:43.28
  I0218 18:51:43.298227 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  I0218 18:51:46.577153 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5119" for this suite. @ 02/18/25 18:51:46.598
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.275 seconds]
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:46.622
  I0218 18:51:46.622142 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:51:46.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:46.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:46.664
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 02/18/25 18:51:46.679
  STEP: Saw pod success @ 02/18/25 18:51:50.744
  I0218 18:51:50.753714 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-54014db4-09b9-4977-b485-dec006b78226 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:51:50.776
  I0218 18:51:50.828524 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8651" for this suite. @ 02/18/25 18:51:50.85
  << Timeline
------------------------------
SSS
------------------------------
• [71.759 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:51:50.901
  I0218 18:51:50.901538 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:51:50.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:51:50.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:51:51.013
  STEP: Creating service test in namespace statefulset-2790 @ 02/18/25 18:51:51.029
  STEP: Creating a new StatefulSet @ 02/18/25 18:51:51.05
  I0218 18:51:51.184048 26 wait.go:40] Found 0 stateful pods, waiting for 3
  I0218 18:52:01.106084 26 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:52:01.106119 26 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:52:01.106130 26 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0218 18:52:01.139813 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-2790 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:52:01.402998 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:52:01.403045 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:52:01.403059 26 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 02/18/25 18:52:01.433
  I0218 18:52:01.464031 26 statefulset.go:2510] Updating stateful set ss2
  STEP: Creating a new revision @ 02/18/25 18:52:01.464
  STEP: Updating Pods in reverse ordinal order @ 02/18/25 18:52:11.486
  I0218 18:52:11.502711 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-2790 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:52:11.751089 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:52:11.751164 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:52:11.751185 26 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 02/18/25 18:52:21.822
  I0218 18:52:21.822881 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-2790 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0218 18:52:22.086977 26 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0218 18:52:22.087031 26 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0218 18:52:22.087051 26 statefulset.go:2453] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0218 18:52:32.138693 26 statefulset.go:2510] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 02/18/25 18:52:42.172
  I0218 18:52:42.189475 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=statefulset-2790 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0218 18:52:42.444605 26 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0218 18:52:42.444677 26 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0218 18:52:42.444698 26 statefulset.go:2477] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0218 18:52:52.495243 26 statefulset.go:138] Deleting all statefulset in ns statefulset-2790
  I0218 18:52:52.509811 26 rest.go:152] Scaling statefulset ss2 to 0
  I0218 18:53:02.551266 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:53:02.564386 26 rest.go:90] Deleting statefulset ss2
  I0218 18:53:02.621721 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2790" for this suite. @ 02/18/25 18:53:02.644
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [21.432 seconds]
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:02.68
  I0218 18:53:02.680311 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:53:02.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:02.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:02.729
  I0218 18:53:02.765869 26 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0218 18:53:07.781292 26 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 02/18/25 18:53:07.781
  I0218 18:53:07.781369 26 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0218 18:53:09.792730 26 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0218 18:53:09.817019 26 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0218 18:53:11.854033 26 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0218 18:53:11.875840 26 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0218 18:53:11.896856 26 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0218 18:53:11.925794 26 deployment.go:314] Updating deployment test-rollover-deployment
  I0218 18:53:11.925834 26 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0218 18:53:13.952676 26 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0218 18:53:13.971749 26 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0218 18:53:13.992650 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0218 18:53:13.992731 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:53:16.016911 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0218 18:53:16.016981 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:53:18.021616 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0218 18:53:18.021688 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:53:20.018727 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0218 18:53:20.018788 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:53:22.019075 26 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0218 18:53:22.019161 26 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 53, 13, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 53, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-7fb4c746bc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0218 18:53:24.018272 26 deployment.go:95] 
  I0218 18:53:24.018330 26 deployment.go:974] Ensure that both old replica sets have no replicas
  I0218 18:53:24.051721 26 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5475",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ebb1703-606d-4880-b8ef-984c5662c654",
      ResourceVersion: (string) (len=6) "213604",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501589,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-7fb4c746bc\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:53:24.061479 26 deployment.go:40] New ReplicaSet "test-rollover-deployment-7fb4c746bc" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5475",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c3aadbb7-ed6e-4ba9-a7ef-4511682b3cc1",
      ResourceVersion: (string) (len=6) "213593",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ebb1703-606d-4880-b8ef-984c5662c654",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 65 62 62 31 37  30 33 2d 36 30 36 64 2d  |\"9ebb1703-606d-|
              00000120  34 38 38 30 2d 62 38 65  66 2d 39 38 34 63 35 36  |4880-b8ef-984c56|
              00000130  36 32 63 36 35 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |62c654\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:53:24.061510 26 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0218 18:53:24.061746 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5475",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a3c8eb98-1fd0-4d27-bc0c-d782793e59d4",
      ResourceVersion: (string) (len=6) "213602",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501582,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ebb1703-606d-4880-b8ef-984c5662c654",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501582,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 65 62 62 31 37 30 33  2d 36 30 36 64 2d 34 38  |9ebb1703-606d-48|
              000000c0  38 30 2d 62 38 65 66 2d  39 38 34 63 35 36 36 32  |80-b8ef-984c5662|
              000000d0  63 36 35 34 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |c654\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:53:24.062015 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-6f6c9688c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5475",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2eaba596-3214-405c-8065-7544892dc634",
      ResourceVersion: (string) (len=6) "213532",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501589,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9ebb1703-606d-4880-b8ef-984c5662c654",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 65 62 62 31 37  30 33 2d 36 30 36 64 2d  |\"9ebb1703-606d-|
              00000120  34 38 38 30 2d 62 38 65  66 2d 39 38 34 63 35 36  |4880-b8ef-984c56|
              00000130  36 32 63 36 35 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |62c654\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f6c9688c5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:53:24.073669 26 deployment.go:68] Pod "test-rollover-deployment-7fb4c746bc-q42p7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-7fb4c746bc-q42p7",
      GenerateName: (string) (len=36) "test-rollover-deployment-7fb4c746bc-",
      Namespace: (string) (len=15) "deployment-5475",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8e38420-a1db-4c03-bbf4-c983d9a2f1e6",
      ResourceVersion: (string) (len=6) "213551",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501591,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fb4c746bc"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "aac7b1caa2193e040c1abe4ad01dcb1ba1bc6292f538356c4ba6acb748348444",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "172.25.0.176/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "172.25.0.176/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-7fb4c746bc",
          UID: (types.UID) (len=36) "c3aadbb7-ed6e-4ba9-a7ef-4511682b3cc1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501591,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 33  61 61 64 62 62 37 2d 65  |d\":\"c3aadbb7-e|
              00000090  64 36 65 2d 34 62 61 39  2d 61 37 65 66 2d 34 35  |d6e-4ba9-a7ef-45|
              000000a0  31 31 36 38 32 62 33 63  63 31 5c 22 7d 22 3a 7b  |11682b3cc1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 30 2e 31  37 36 5c 22 7d 22 3a 7b  |2.25.0.176\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mjj4t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mjj4t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501593,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) (len=12) "172.25.0.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "172.25.0.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501592,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85",
          ContainerID: (string) (len=77) "containerd://d5b2482b912147cf6c467e1ed3cb246e0da8e39f4c58a56a3f48e2ae0b89b996",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mjj4t",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:53:24.074728 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5475" for this suite. @ 02/18/25 18:53:24.098
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [17.131 seconds]
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:24.131
  I0218 18:53:24.131140 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pod-network-test @ 02/18/25 18:53:24.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:24.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:24.189
  STEP: Performing setup for networking test in namespace pod-network-test-3801 @ 02/18/25 18:53:24.207
  STEP: creating a selector @ 02/18/25 18:53:24.207
  STEP: Creating the service pods in kubernetes @ 02/18/25 18:53:24.207
  I0218 18:53:24.207560 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 02/18/25 18:53:38.471
  I0218 18:53:40.560762 26 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0218 18:53:40.560797 26 utils.go:496] Going to poll 172.25.3.170 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:53:40.574219 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.25.3.170:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3801 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:53:40.574250 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:53:40.574312 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-3801/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.25.3.170%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:53:40.725810 26 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0218 18:53:40.725859 26 utils.go:496] Going to poll 172.25.1.35 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:53:40.735729 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.25.1.35:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3801 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:53:40.735770 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:53:40.735850 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-3801/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.25.1.35%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:53:40.920829 26 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0218 18:53:40.920873 26 utils.go:496] Going to poll 172.25.0.177 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:53:40.931477 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.25.0.177:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3801 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:53:40.931499 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:53:40.931549 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-3801/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.25.0.177%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:53:41.070833 26 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0218 18:53:41.070882 26 utils.go:496] Going to poll 172.25.2.18 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0218 18:53:41.083004 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.25.2.18:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3801 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:53:41.083035 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:53:41.083096 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-3801/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.25.2.18%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0218 18:53:41.220963 26 utils.go:513] Found all 1 expected endpoints: [netserver-3]
  I0218 18:53:41.221930 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3801" for this suite. @ 02/18/25 18:53:41.243
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [244.084 seconds]
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:49:39.036
  I0218 18:49:39.036410 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:49:39.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:49:39.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:49:39.117
  STEP: Creating pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745 @ 02/18/25 18:49:39.131
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:49:41.178
  I0218 18:49:41.190088 24 container_probe.go:1749] Initial restart count of pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f is 0
  I0218 18:49:41.204817 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:43.216417 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:45.227938 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:47.239400 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:49.259965 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:51.279597 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:53.293506 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:55.305282 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:57.316932 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:49:59.328130 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:01.340502 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:03.352922 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:05.365389 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:07.378652 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:09.389784 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:11.402945 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:13.415250 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:15.426603 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:17.449185 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:19.462632 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:21.472981 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:23.483527 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:25.496331 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:27.510494 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:29.522676 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:31.536898 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:33.547317 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:35.557962 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:37.573683 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:39.586936 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:41.598820 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:43.611921 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:45.624349 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:47.634354 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:49.646492 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:51.659481 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:53.671842 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:55.684771 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:57.703822 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:50:59.715766 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:01.727747 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:03.740121 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:05.755904 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:07.766189 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:09.782670 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:11.797222 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:13.808783 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:15.822322 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:17.835915 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:19.847215 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:21.862072 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:23.873526 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:25.885181 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:27.899956 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:29.914096 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:31.927126 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:33.940081 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:35.953249 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:38.010810 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:40.164829 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:42.255882 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:44.267152 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:46.277784 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:48.290010 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:50.301613 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:52.317386 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:54.327942 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:56.361174 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:51:58.376645 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:00.389559 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:02.401915 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:04.414190 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:06.426036 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:08.437685 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:10.450672 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:12.471986 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:14.481348 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:16.508713 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:18.521053 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:20.533948 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:22.545407 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:24.557812 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:26.571050 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:28.584315 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:30.595646 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:32.606883 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:34.619053 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:36.632009 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:38.645368 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:40.661950 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:42.679633 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:44.692112 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:46.703745 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:48.715881 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:50.735119 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:52.747088 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:54.760372 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:56.772495 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:52:58.784024 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:00.796923 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:02.810971 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:04.823616 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:06.838027 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:08.850730 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:10.862410 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:12.875000 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:14.886835 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:16.902077 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:18.912631 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:20.926954 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:22.938888 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:24.950409 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:26.961750 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:28.973776 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:30.986023 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:32.998783 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:35.011263 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:37.021919 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:39.035952 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  I0218 18:53:41.046542 24 container_probe.go:1759] Get pod test-grpc-abb71d07-728b-4a67-9e65-23663ce8ba6f in namespace container-probe-6745
  STEP: deleting the pod @ 02/18/25 18:53:43.047
  I0218 18:53:43.079280 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6745" for this suite. @ 02/18/25 18:53:43.1
  << Timeline
------------------------------
SSSS
------------------------------
• [8.640 seconds]
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:41.271
  I0218 18:53:41.271584 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:53:41.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:41.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:41.329
  STEP: creating service multi-endpoint-test in namespace services-714 @ 02/18/25 18:53:41.344
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-714 to expose endpoints map[] @ 02/18/25 18:53:41.379
  I0218 18:53:41.409803 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-714 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-714 @ 02/18/25 18:53:41.409
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-714 to expose endpoints map[pod1:[100]] @ 02/18/25 18:53:43.463
  I0218 18:53:43.508964 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-714 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-714 @ 02/18/25 18:53:43.509
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-714 to expose endpoints map[pod1:[100] pod2:[101]] @ 02/18/25 18:53:45.569
  I0218 18:53:45.622830 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-714 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 02/18/25 18:53:45.622
  I0218 18:53:45.622904 26 resource.go:361] Creating new exec pod
  I0218 18:53:48.662940 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-714 exec execpodg6bm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0218 18:53:48.943480 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.240.18.19) 80 port [tcp/http] succeeded!\n"
  I0218 18:53:48.943551 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:53:48.943681 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-714 exec execpodg6bm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.18.19 80'
  I0218 18:53:49.199328 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.18.19 80\nConnection to 10.240.18.19 80 port [tcp/http] succeeded!\n"
  I0218 18:53:49.199398 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:53:49.199542 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-714 exec execpodg6bm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0218 18:53:49.450171 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.240.18.19) 81 port [tcp/*] succeeded!\n"
  I0218 18:53:49.450215 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:53:49.450315 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-714 exec execpodg6bm8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.18.19 81'
  I0218 18:53:49.694800 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.18.19 81\nConnection to 10.240.18.19 81 port [tcp/*] succeeded!\n"
  I0218 18:53:49.694880 26 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-714 @ 02/18/25 18:53:49.694
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-714 to expose endpoints map[pod2:[101]] @ 02/18/25 18:53:49.728
  I0218 18:53:49.769712 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-714 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-714 @ 02/18/25 18:53:49.769
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-714 to expose endpoints map[] @ 02/18/25 18:53:49.808
  I0218 18:53:49.833157 26 service.go:4460] successfully validated that service multi-endpoint-test in namespace services-714 exposes endpoints map[]
  I0218 18:53:49.877219 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-714" for this suite. @ 02/18/25 18:53:49.893
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [8.333 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:43.125
  I0218 18:53:43.125420 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 02/18/25 18:53:43.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:43.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:43.181
  STEP: create the container to handle the HTTPGet hook request. @ 02/18/25 18:53:43.211
  STEP: create the pod with lifecycle hook @ 02/18/25 18:53:45.278
  STEP: check poststart hook @ 02/18/25 18:53:47.329
  STEP: delete the pod with lifecycle hook @ 02/18/25 18:53:47.357
  I0218 18:53:51.411122 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1988" for this suite. @ 02/18/25 18:53:51.436
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [2.364 seconds]
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1388

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:51.473
  I0218 18:53:51.473333 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:53:51.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:51.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:51.518
  I0218 18:53:51.532320 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 create -f -'
  I0218 18:53:51.740834 24 builder.go:146] stderr: ""
  I0218 18:53:51.740879 24 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0218 18:53:51.740960 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 create -f -'
  I0218 18:53:51.931505 24 builder.go:146] stderr: ""
  I0218 18:53:51.931537 24 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 02/18/25 18:53:51.931
  I0218 18:53:52.945765 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:53:52.945790 24 framework.go:733] Found 1 / 1
  I0218 18:53:52.945807 24 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0218 18:53:52.958831 24 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0218 18:53:52.958871 24 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0218 18:53:52.958940 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 describe pod agnhost-primary-mz7kl'
  I0218 18:53:53.111905 24 builder.go:146] stderr: ""
  I0218 18:53:53.112011 24 builder.go:147] stdout: "Name:             agnhost-primary-mz7kl\nNamespace:        kubectl-2296\nPriority:         0\nService Account:  default\nNode:             admiring-kalam-9d8f4776-dzdlc/10.0.0.2\nStart Time:       Tue, 18 Feb 2025 18:53:51 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: a9494af82e6f5105b3800e5c8db8232b2b5a152bfad28d2b0ac7a0a8659d7092\n                  cni.projectcalico.org/podIP: 172.25.0.181/32\n                  cni.projectcalico.org/podIPs: 172.25.0.181/32\nStatus:           Running\nIP:               172.25.0.181\nIPs:\n  IP:           172.25.0.181\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7d09bb7daf12026dec0c0309d85bd90fab9a670d8bb26456a1cc3c56689e1b4d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.53\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:99c6b4bb4a1e1df3f0b3752168c89358794d02258ebebc26bf21c29399011a85\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 18 Feb 2025 18:53:52 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-sqjdk (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-sqjdk:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-2296/agnhost-primary-mz7kl to admiring-kalam-9d8f4776-dzdlc\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.53\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0218 18:53:53.112105 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 describe rc agnhost-primary'
  I0218 18:53:53.263210 24 builder.go:146] stderr: ""
  I0218 18:53:53.263302 24 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2296\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.53\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-mz7kl\n"
  I0218 18:53:53.263399 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 describe service agnhost-primary'
  I0218 18:53:53.423891 24 builder.go:146] stderr: ""
  I0218 18:53:53.423944 24 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2296\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.240.29.133\nIPs:                      10.240.29.133\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                172.25.0.181:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0218 18:53:53.449168 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 describe node admiring-kalam-9d8f4776-bw8qq'
  I0218 18:53:53.644592 24 builder.go:146] stderr: ""
  I0218 18:53:53.644778 24 builder.go:147] stdout: "Name:               admiring-kalam-9d8f4776-bw8qq\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=ccx23\n                    beta.kubernetes.io/os=linux\n                    csi.hetzner.cloud/location=nbg1\n                    failure-domain.beta.kubernetes.io/region=nbg1\n                    failure-domain.beta.kubernetes.io/zone=nbg1-dc3\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/e2e-f75a9edb-3796-4c12-9c61-a798d518cf9d=95\n                    kubernetes.io/hostname=admiring-kalam-9d8f4776-bw8qq\n                    kubernetes.io/os=linux\n                    machine=md-c8htdgrh2b-qw5swfrwdr\n                    machine-controller/owned-by=f0fc4a63-9478-4713-a141-989662c55aa5\n                    node.kubernetes.io/instance-type=ccx23\n                    system/cluster=c8htdgrh2b\n                    system/project=xxb5nvhqd6\n                    topology.kubernetes.io/region=nbg1\n                    topology.kubernetes.io/zone=nbg1-dc3\n                    v1.machine-controller.kubermatic.io/operating-system=ubuntu\n                    x-kubernetes.io/distribution=ubuntu\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 188.245.32.195\n                    cluster.k8s.io/machine: kube-system/admiring-kalam-9d8f4776-bw8qq\n                    csi.volume.kubernetes.io/nodeid: {\"csi.hetzner.cloud\":\"60283779\"}\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"92:f2:8f:1e:12:5b\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 188.245.32.195\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 18 Feb 2025 14:38:08 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  admiring-kalam-9d8f4776-bw8qq\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 18 Feb 2025 18:53:45 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 18 Feb 2025 14:38:48 +0000   Tue, 18 Feb 2025 14:38:48 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Tue, 18 Feb 2025 18:52:27 +0000   Tue, 18 Feb 2025 14:38:08 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 18 Feb 2025 18:52:27 +0000   Tue, 18 Feb 2025 14:38:08 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 18 Feb 2025 18:52:27 +0000   Tue, 18 Feb 2025 14:38:08 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 18 Feb 2025 18:52:27 +0000   Tue, 18 Feb 2025 14:38:33 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  ExternalIP:  188.245.32.195\n  Hostname:    admiring-kalam-9d8f4776-bw8qq\n  InternalIP:  10.0.0.3\nCapacity:\n  cpu:                4\n  ephemeral-storage:  157197504Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15985240Ki\n  pods:               110\nAllocatable:\n  cpu:                3600m\n  ephemeral-storage:  142725735799\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15473240Ki\n  pods:               110\nSystem Info:\n  Machine ID:                    a41331d8913e4af58a60ed43f81773a5\n  System UUID:                   a41331d8-913e-4af5-8a60-ed43f81773a5\n  Boot ID:                       b458d9ec-ce84-4f5a-acc8-18d8ae2a9938\n  Kernel Version:                6.8.0-51-generic\n  OS Image:                      Ubuntu 24.04.1 LTS\n  Operating System:              linux\n  Architecture:                  amd64\n  Container Runtime Version:     containerd://1.7.25\n  Kubelet Version:               v1.32.1\n  Kube-Proxy Version:            v1.32.1\nPodCIDR:                         172.25.3.0/24\nPodCIDRs:                        172.25.3.0/24\nProviderID:                      hcloud://60283779\nNon-terminated Pods:             (7 in total)\n  Namespace                      Name                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                      ----                       ------------  ----------  ---------------  -------------  ---\n  conformance                    e2e-conformance-test       0 (0%)        0 (0%)      0 (0%)           0 (0%)         30m\n  container-lifecycle-hook-1988  pod-handle-http-request    0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  kube-system                    canal-pjv2d                250m (6%)     0 (0%)      0 (0%)           0 (0%)         4h15m\n  kube-system                    envoy-agent-qqggb          100m (2%)     1 (27%)     64Mi (0%)        512Mi (3%)     4h15m\n  kube-system                    hcloud-csi-node-9v5nh      0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h15m\n  kube-system                    kube-proxy-7jqlc           75m (2%)      250m (6%)   50Mi (0%)        250Mi (1%)     4h15m\n  kube-system                    node-local-dns-txbgn       0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h15m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                425m (11%)  1250m (34%)\n  memory             114Mi (0%)  762Mi (5%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0218 18:53:53.644889 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-2296 describe namespace kubectl-2296'
  I0218 18:53:53.800963 24 builder.go:146] stderr: ""
  I0218 18:53:53.801026 24 builder.go:147] stdout: "Name:         kubectl-2296\nLabels:       e2e-framework=kubectl\n              e2e-run=150a1882-3794-4f04-9826-916de9fe882b\n              kubernetes.io/metadata.name=kubectl-2296\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0218 18:53:53.802007 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2296" for this suite. @ 02/18/25 18:53:53.82
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.244 seconds]
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:49.92
  I0218 18:53:49.920574 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:53:49.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:49.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:49.979
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:53:49.994
  STEP: Saw pod success @ 02/18/25 18:53:54.057
  I0218 18:53:54.068671 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-c6eeeab6-3b5b-4cf5-9448-9dc93176a152 container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:53:54.09
  I0218 18:53:54.128752 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4614" for this suite. @ 02/18/25 18:53:54.146
  << Timeline
------------------------------
SSSS
------------------------------
• [2.475 seconds]
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:54.169
  I0218 18:53:54.169843 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:53:54.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:54.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:54.227
  I0218 18:53:54.242299 26 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0218 18:53:54.258397 26 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0218 18:53:54.282186 26 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  I0218 18:53:56.317875 26 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0218 18:53:56.338257 26 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0218 18:53:56.386488 26 deployment.go:314] Updating deployment test-recreate-deployment
  I0218 18:53:56.386512 26 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0218 18:53:56.583376 26 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b369bd29-8c34-4dc9-8955-2728d012c725",
      ResourceVersion: (string) (len=6) "214149",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501634,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501634,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-59cddbdd4b\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:53:56.597937 26 deployment.go:40] New ReplicaSet "test-recreate-deployment-59cddbdd4b" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b59de5ce-7cf6-4f4a-bc17-77ffee8ab1c8",
      ResourceVersion: (string) (len=6) "214146",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "b369bd29-8c34-4dc9-8955-2728d012c725",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 36 39 62 64  32 39 2d 38 63 33 34 2d  |\"b369bd29-8c34-|
              00000120  34 64 63 39 2d 38 39 35  35 2d 32 37 32 38 64 30  |4dc9-8955-2728d0|
              00000130  31 32 63 37 32 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |12c725\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:53:56.597957 26 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0218 18:53:56.598183 26 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-db85869db",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "118e8b92-ca07-4bfc-91c5-4bbb13d9ec1f",
      ResourceVersion: (string) (len=6) "214138",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501634,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "b369bd29-8c34-4dc9-8955-2728d012c725",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 36 39 62 64  32 39 2d 38 63 33 34 2d  |\"b369bd29-8c34-|
              00000120  34 64 63 39 2d 38 39 35  35 2d 32 37 32 38 64 30  |4dc9-8955-2728d0|
              00000130  31 32 63 37 32 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |12c725\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "db85869db"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.53",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:53:56.607964 26 deployment.go:68] Pod "test-recreate-deployment-59cddbdd4b-4tcw8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-59cddbdd4b-4tcw8",
      GenerateName: (string) (len=36) "test-recreate-deployment-59cddbdd4b-",
      Namespace: (string) (len=15) "deployment-7552",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b642a098-777d-4fce-87f2-145063553843",
      ResourceVersion: (string) (len=6) "214151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "59cddbdd4b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-59cddbdd4b",
          UID: (types.UID) (len=36) "b59de5ce-7cf6-4f4a-bc17-77ffee8ab1c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 35  39 64 65 35 63 65 2d 37  |d\":\"b59de5ce-7|
              00000090  63 66 36 2d 34 66 34 61  2d 62 63 31 37 2d 37 37  |cf6-4f4a-bc17-77|
              000000a0  66 66 65 65 38 61 62 31  63 38 5c 22 7d 22 3a 7b  |ffee8ab1c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p7wwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p7wwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dzdlc",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p7wwx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:53:56.608890 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7552" for this suite. @ 02/18/25 18:53:56.623
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.399 seconds]
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:53.86
  I0218 18:53:53.860854 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:53:53.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:53.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:53.908
  STEP: Creating a test headless service @ 02/18/25 18:53:53.925
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-8497.svc.cluster.local;sleep 1; done
   @ 02/18/25 18:53:53.939
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-8497.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-8497.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-8497.svc.cluster.local;sleep 1; done
   @ 02/18/25 18:53:53.939
  STEP: creating a pod to probe DNS @ 02/18/25 18:53:53.939
  STEP: submitting the pod to kubernetes @ 02/18/25 18:53:53.939
  STEP: retrieving the pod @ 02/18/25 18:53:56.003
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:53:56.014
  I0218 18:53:56.040980 24 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.061096 24 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.075688 24 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.093630 24 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.113805 24 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.138101 24 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.155620 24 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.171167 24 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-8497.svc.cluster.local from pod dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31: the server could not find the requested resource (get pods dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31)
  I0218 18:53:56.171189 24 dns_common.go:506] Lookups using dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31 failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local agnhost_udp@dns-test-service-2.dns-8497.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-8497.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-8497.svc.cluster.local jessie_udp@dns-test-service-2.dns-8497.svc.cluster.local jessie_tcp@dns-test-service-2.dns-8497.svc.cluster.local]

  I0218 18:53:56.237354 24 dns_common.go:514] Pod client logs for webserver: 
  I0218 18:53:56.291219 24 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0218 18:53:56.332910 24 dns_common.go:514] Pod client logs for jessie-querier: 
  I0218 18:54:01.157159 24 dns_common.go:546] DNS probes using dns-8497/dns-test-4d7ce3c0-9df5-4c8a-9f57-46b522b25f31 succeeded

  STEP: deleting the pod @ 02/18/25 18:54:01.157
  STEP: deleting the test headless service @ 02/18/25 18:54:01.185
  I0218 18:54:01.226632 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8497" for this suite. @ 02/18/25 18:54:01.244
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [6.744 seconds]
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:53:56.681
  I0218 18:53:56.681356 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:53:56.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:53:56.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:53:56.74
  STEP: creating the pod @ 02/18/25 18:53:56.753
  STEP: submitting the pod to kubernetes @ 02/18/25 18:53:56.753
  W0218 18:53:56.769669      26 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 02/18/25 18:53:58.799
  STEP: updating the pod @ 02/18/25 18:53:58.81
  I0218 18:53:59.341124 26 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-efa518c0-bac3-4df7-9cea-78c8ce592e1e"
  I0218 18:54:03.378170 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5670" for this suite. @ 02/18/25 18:54:03.405
  << Timeline
------------------------------
SSS
------------------------------
• [0.256 seconds]
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3189

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:03.429
  I0218 18:54:03.429643 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 18:54:03.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:03.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:03.48
  STEP: creating an Endpoint @ 02/18/25 18:54:03.504
  STEP: waiting for available Endpoint @ 02/18/25 18:54:03.521
  STEP: listing all Endpoints @ 02/18/25 18:54:03.53
  STEP: updating the Endpoint @ 02/18/25 18:54:03.547
  STEP: fetching the Endpoint @ 02/18/25 18:54:03.565
  STEP: patching the Endpoint @ 02/18/25 18:54:03.578
  STEP: fetching the Endpoint @ 02/18/25 18:54:03.599
  STEP: deleting the Endpoint by Collection @ 02/18/25 18:54:03.611
  STEP: waiting for Endpoint deletion @ 02/18/25 18:54:03.638
  STEP: fetching the Endpoint @ 02/18/25 18:54:03.644
  I0218 18:54:03.655610 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3687" for this suite. @ 02/18/25 18:54:03.67
  << Timeline
------------------------------
S
------------------------------
• [4.245 seconds]
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:03.688
  I0218 18:54:03.688727 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:54:03.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:03.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:03.737
  STEP: Creating projection with secret that has name projected-secret-test-map-ffc8888f-bf6a-4e86-a1b2-e2876a4f586e @ 02/18/25 18:54:03.752
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:54:03.763
  STEP: Saw pod success @ 02/18/25 18:54:07.824
  I0218 18:54:07.834910 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-secrets-91840eed-4b57-41a4-a423-8c733cc58b3d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:54:07.858
  I0218 18:54:07.892083 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4519" for this suite. @ 02/18/25 18:54:07.918
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [7.301 seconds]
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:861

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:01.268
  I0218 18:54:01.268145 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename job @ 02/18/25 18:54:01.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:01.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:01.337
  STEP: Creating a job @ 02/18/25 18:54:01.356
  STEP: Ensuring active pods == parallelism @ 02/18/25 18:54:01.374
  STEP: Orphaning one of the Job's Pods @ 02/18/25 18:54:03.405
  I0218 18:54:03.950633 24 pod_client.go:173] Successfully updated pod "adopt-release-g5h27"
  STEP: Checking that the Job readopts the Pod @ 02/18/25 18:54:03.95
  STEP: Removing the labels from the Job's Pod @ 02/18/25 18:54:05.977
  I0218 18:54:06.509313 24 pod_client.go:173] Successfully updated pod "adopt-release-g5h27"
  STEP: Checking that the Job releases the Pod @ 02/18/25 18:54:06.509
  I0218 18:54:08.532524 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-41" for this suite. @ 02/18/25 18:54:08.552
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.263 seconds]
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:08.589
  I0218 18:54:08.589326 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename disruption @ 02/18/25 18:54:08.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:08.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:08.652
  STEP: creating the pdb @ 02/18/25 18:54:08.687
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:54:08.697
  STEP: updating the pdb @ 02/18/25 18:54:08.711
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:54:08.734
  STEP: patching the pdb @ 02/18/25 18:54:08.743
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:54:08.768
  STEP: Waiting for the pdb to be deleted @ 02/18/25 18:54:08.799
  I0218 18:54:08.814165 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4794" for this suite. @ 02/18/25 18:54:08.835
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [3.396 seconds]
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:07.943
  I0218 18:54:07.943925 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 18:54:07.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:07.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:08.008
  I0218 18:54:08.024638 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  W0218 18:54:08.025814      26 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000c87400 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0218 18:54:10.631537      26 warnings.go:70] unknown field "alpha"
  W0218 18:54:10.631559      26 warnings.go:70] unknown field "beta"
  W0218 18:54:10.631564      26 warnings.go:70] unknown field "delta"
  W0218 18:54:10.631569      26 warnings.go:70] unknown field "epsilon"
  W0218 18:54:10.631574      26 warnings.go:70] unknown field "gamma"
  I0218 18:54:11.292744 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3904" for this suite. @ 02/18/25 18:54:11.321
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.213 seconds]
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:11.358
  I0218 18:54:11.358753 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:54:11.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:11.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:11.414
  STEP: creating a secret @ 02/18/25 18:54:11.427
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 02/18/25 18:54:11.439
  STEP: patching the secret @ 02/18/25 18:54:11.448
  STEP: deleting the secret using a LabelSelector @ 02/18/25 18:54:11.482
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 02/18/25 18:54:11.502
  I0218 18:54:11.516711 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3567" for this suite. @ 02/18/25 18:54:11.533
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [2.306 seconds]
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:11.579
  I0218 18:54:11.579774 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:54:11.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:11.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:11.626
  STEP: Creating a test headless service @ 02/18/25 18:54:11.641
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1826.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-1826.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 02/18/25 18:54:11.653
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1826.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1826.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 02/18/25 18:54:11.653
  STEP: creating a pod to probe DNS @ 02/18/25 18:54:11.653
  STEP: submitting the pod to kubernetes @ 02/18/25 18:54:11.653
  STEP: retrieving the pod @ 02/18/25 18:54:13.7
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:54:13.71
  I0218 18:54:13.788659 26 dns_common.go:546] DNS probes using dns-1826/dns-test-a49aa2e0-020f-4810-880f-1cc5b92874ac succeeded

  STEP: deleting the pod @ 02/18/25 18:54:13.789
  STEP: deleting the test headless service @ 02/18/25 18:54:13.82
  I0218 18:54:13.854404 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1826" for this suite. @ 02/18/25 18:54:13.87
  << Timeline
------------------------------
SS
------------------------------
• [5.288 seconds]
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:08.861
  I0218 18:54:08.861275 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename gc @ 02/18/25 18:54:08.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:08.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:08.946
  I0218 18:54:09.044981 24 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ad016614-35f0-4ede-b246-22811c91d9bf", Controller:(*bool)(0xc0034f138a), BlockOwnerDeletion:(*bool)(0xc0034f138b)}}
  I0218 18:54:09.061289 24 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"f526c919-064e-4e3d-98ce-4a51f8f7d35b", Controller:(*bool)(0xc00392373a), BlockOwnerDeletion:(*bool)(0xc00392373b)}}
  I0218 18:54:09.079623 24 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"711301d9-5689-4e89-9c5e-81ed4de57516", Controller:(*bool)(0xc003923b5a), BlockOwnerDeletion:(*bool)(0xc003923b5b)}}
  I0218 18:54:14.120182 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1670" for this suite. @ 02/18/25 18:54:14.133
  << Timeline
------------------------------
SS
------------------------------
• [3.966 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:13.888
  I0218 18:54:13.888952 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:54:13.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:13.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:13.938
  STEP: Setting up server cert @ 02/18/25 18:54:14.002
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:54:14.354
  STEP: Deploying the webhook pod @ 02/18/25 18:54:14.37
  STEP: Wait for the deployment to be ready @ 02/18/25 18:54:14.401
  I0218 18:54:14.428985 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:54:16.463
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:54:16.51
  I0218 18:54:17.511009 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 02/18/25 18:54:17.534
  STEP: create a pod that should be updated by the webhook @ 02/18/25 18:54:17.592
  I0218 18:54:17.787025 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4685" for this suite. @ 02/18/25 18:54:17.811
  STEP: Destroying namespace "webhook-markers-3091" for this suite. @ 02/18/25 18:54:17.833
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.828 seconds]
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:14.151
  I0218 18:54:14.151406 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:54:14.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:14.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:14.203
  STEP: Creating the pod @ 02/18/25 18:54:14.224
  I0218 18:54:16.851976 24 pod_client.go:173] Successfully updated pod "annotationupdatebddda959-ff53-44e3-bbbe-f38291eb3f2b"
  I0218 18:54:20.931719 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5185" for this suite. @ 02/18/25 18:54:20.955
  << Timeline
------------------------------
• [4.259 seconds]
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:118

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:17.871
  I0218 18:54:17.871934 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:54:17.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:17.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:17.933
  STEP: Creating a pod to test downward api env vars @ 02/18/25 18:54:17.945
  STEP: Saw pod success @ 02/18/25 18:54:22.014
  I0218 18:54:22.025042 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downward-api-29e95ca1-b81f-404f-8721-55c601d06fc3 container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:54:22.052
  I0218 18:54:22.095141 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3098" for this suite. @ 02/18/25 18:54:22.116
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.354 seconds]
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:20.981
  I0218 18:54:20.981079 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename disruption @ 02/18/25 18:54:20.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:21.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:21.034
  STEP: Creating a kubernetes client @ 02/18/25 18:54:21.05
  I0218 18:54:21.050593 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename disruption-2 @ 02/18/25 18:54:21.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:21.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:21.11
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:54:21.14
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:54:21.164
  STEP: Waiting for the pdb to be processed @ 02/18/25 18:54:21.192
  STEP: listing a collection of PDBs across all namespaces @ 02/18/25 18:54:23.204
  STEP: listing a collection of PDBs in namespace disruption-6787 @ 02/18/25 18:54:23.219
  STEP: deleting a collection of PDBs @ 02/18/25 18:54:23.229
  STEP: Waiting for the PDB collection to be deleted @ 02/18/25 18:54:23.256
  I0218 18:54:23.266018 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7986" for this suite. @ 02/18/25 18:54:23.284
  I0218 18:54:23.300822 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6787" for this suite. @ 02/18/25 18:54:23.315
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [4.282 seconds]
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:23.347
  I0218 18:54:23.347783 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:54:23.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:23.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:23.401
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:54:23.419
  STEP: Saw pod success @ 02/18/25 18:54:27.506
  I0218 18:54:27.514336 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-668f48e8-fbe8-4320-8fd4-fb7e73f8a86b container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:54:27.544
  I0218 18:54:27.582527 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-659" for this suite. @ 02/18/25 18:54:27.606
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [8.390 seconds]
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:27.656
  I0218 18:54:27.656637 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 02/18/25 18:54:27.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:27.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:27.749
  STEP: create the container to handle the HTTPGet hook request. @ 02/18/25 18:54:27.778
  STEP: create the pod with lifecycle hook @ 02/18/25 18:54:29.866
  STEP: check poststart hook @ 02/18/25 18:54:31.914
  STEP: delete the pod with lifecycle hook @ 02/18/25 18:54:31.946
  I0218 18:54:36.001066 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4602" for this suite. @ 02/18/25 18:54:36.028
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.292 seconds]
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:36.054
  I0218 18:54:36.054777 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:54:36.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:36.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:36.102
  STEP: Creating secret with name secret-test-58808610-49ee-4c85-b1bf-265626c86c70 @ 02/18/25 18:54:36.117
  STEP: Creating a pod to test consume secrets @ 02/18/25 18:54:36.143
  STEP: Saw pod success @ 02/18/25 18:54:40.204
  I0218 18:54:40.217056 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-secrets-75d34523-d26a-4107-816c-b5ddf89744e8 container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 18:54:40.248
  I0218 18:54:40.294197 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5037" for this suite. @ 02/18/25 18:54:40.323
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.238 seconds]
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:40.371
  I0218 18:54:40.371206 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename replicaset @ 02/18/25 18:54:40.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:40.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:40.45
  I0218 18:54:40.468314 24 replica_set.go:191] Creating ReplicaSet my-hostname-basic-a5d35cfa-fec7-402d-a979-773c0efceb06
  I0218 18:54:40.498382 24 resource.go:87] Pod name my-hostname-basic-a5d35cfa-fec7-402d-a979-773c0efceb06: Found 0 pods out of 1
  I0218 18:54:45.510789 24 resource.go:87] Pod name my-hostname-basic-a5d35cfa-fec7-402d-a979-773c0efceb06: Found 1 pods out of 1
  I0218 18:54:45.510828 24 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-a5d35cfa-fec7-402d-a979-773c0efceb06" is running
  I0218 18:54:45.522700 24 replica_set.go:220] Pod "my-hostname-basic-a5d35cfa-fec7-402d-a979-773c0efceb06-rx42s" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:41 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:40 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:41 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:41 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:40 +0000 UTC Reason: Message:}])
  I0218 18:54:45.522740 24 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 02/18/25 18:54:45.522
  I0218 18:54:45.570821 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9011" for this suite. @ 02/18/25 18:54:45.586
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.107 seconds]
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:45.617
  I0218 18:54:45.617986 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename runtimeclass @ 02/18/25 18:54:45.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:45.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:45.665
  I0218 18:54:45.696391 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7721" for this suite. @ 02/18/25 18:54:45.711
  << Timeline
------------------------------
SSSS
------------------------------
• [0.281 seconds]
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:45.732
  I0218 18:54:45.732232 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename fake-node @ 02/18/25 18:54:45.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:45.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:45.784
  STEP: Create "e2e-fake-node-nw4dg" @ 02/18/25 18:54:45.8
  STEP: Getting "e2e-fake-node-nw4dg" @ 02/18/25 18:54:45.815
  STEP: Patching "e2e-fake-node-nw4dg" @ 02/18/25 18:54:45.826
  STEP: Listing nodes with LabelSelector "e2e-fake-node-nw4dg=patched" @ 02/18/25 18:54:45.84
  STEP: Updating "e2e-fake-node-nw4dg" @ 02/18/25 18:54:45.852
  STEP: Delete "e2e-fake-node-nw4dg" @ 02/18/25 18:54:45.897
  STEP: Confirm deletion of "e2e-fake-node-nw4dg" @ 02/18/25 18:54:45.933
  I0218 18:54:45.963317 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-3927" for this suite. @ 02/18/25 18:54:45.986
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [2.470 seconds]
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:46.022
  I0218 18:54:46.022693 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename proxy @ 02/18/25 18:54:46.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:46.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:46.096
  I0218 18:54:46.110384 24 proxy.go:387] Creating pod...
  I0218 18:54:48.149963 24 proxy.go:411] Creating service...
  I0218 18:54:48.170461 24 proxy.go:448] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=DELETE
  I0218 18:54:48.196227 24 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0218 18:54:48.196267 24 proxy.go:448] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=OPTIONS
  I0218 18:54:48.213657 24 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0218 18:54:48.213700 24 proxy.go:448] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=PATCH
  I0218 18:54:48.231116 24 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0218 18:54:48.231153 24 proxy.go:448] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=POST
  I0218 18:54:48.246217 24 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0218 18:54:48.246247 24 proxy.go:448] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=PUT
  I0218 18:54:48.262670 24 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0218 18:54:48.262693 24 proxy.go:459] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=DELETE
  I0218 18:54:48.290723 24 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0218 18:54:48.290746 24 proxy.go:459] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0218 18:54:48.315952 24 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0218 18:54:48.315983 24 proxy.go:459] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=PATCH
  I0218 18:54:48.348077 24 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0218 18:54:48.348129 24 proxy.go:459] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=POST
  I0218 18:54:48.379286 24 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0218 18:54:48.379345 24 proxy.go:459] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=PUT
  I0218 18:54:48.405844 24 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0218 18:54:48.405882 24 proxy.go:479] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=GET
  I0218 18:54:48.415491 24 proxy.go:487] http.Client request:GET StatusCode:301
  I0218 18:54:48.415534 24 proxy.go:479] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=GET
  I0218 18:54:48.428601 24 proxy.go:487] http.Client request:GET StatusCode:301
  I0218 18:54:48.428632 24 proxy.go:479] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/pods/agnhost/proxy?method=HEAD
  I0218 18:54:48.437636 24 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0218 18:54:48.437666 24 proxy.go:479] Starting http.Client for https://10.240.16.1:443/api/v1/namespaces/proxy-8912/services/e2e-proxy-test-service/proxy?method=HEAD
  I0218 18:54:48.450721 24 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0218 18:54:48.451597 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8912" for this suite. @ 02/18/25 18:54:48.473
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.196 seconds]
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:48.501
  I0218 18:54:48.501152 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename watch @ 02/18/25 18:54:48.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:48.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:48.549
  STEP: creating a new configmap @ 02/18/25 18:54:48.564
  STEP: modifying the configmap once @ 02/18/25 18:54:48.577
  STEP: modifying the configmap a second time @ 02/18/25 18:54:48.602
  STEP: deleting the configmap @ 02/18/25 18:54:48.64
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 02/18/25 18:54:48.656
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 02/18/25 18:54:48.663
  I0218 18:54:48.663694 24 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-949  a6c06e73-c9af-4306-9a87-cbd037a0c7a3 215244 0 2025-02-18 18:54:48 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-02-18 18:54:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:54:48.663860 24 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-949  a6c06e73-c9af-4306-9a87-cbd037a0c7a3 215246 0 2025-02-18 18:54:48 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-02-18 18:54:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0218 18:54:48.664682 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-949" for this suite. @ 02/18/25 18:54:48.681
  << Timeline
------------------------------
SSSS
------------------------------
• [2.330 seconds]
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:48.702
  I0218 18:54:48.702932 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:54:48.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:48.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:48.754
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6001.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-6001.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 02/18/25 18:54:48.768
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6001.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6001.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 02/18/25 18:54:48.768
  STEP: creating a pod to probe /etc/hosts @ 02/18/25 18:54:48.768
  STEP: submitting the pod to kubernetes @ 02/18/25 18:54:48.768
  STEP: retrieving the pod @ 02/18/25 18:54:50.816
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:54:50.833
  I0218 18:54:50.949310 24 dns_common.go:546] DNS probes using dns-6001/dns-test-834808ce-c58a-436a-8131-22566d482c00 succeeded

  STEP: deleting the pod @ 02/18/25 18:54:50.949
  I0218 18:54:50.996673 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6001" for this suite. @ 02/18/25 18:54:51.016
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [5.239 seconds]
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:51.046
  I0218 18:54:51.046724 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename replication-controller @ 02/18/25 18:54:51.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:51.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:51.097
  STEP: Creating replication controller my-hostname-basic-b43f8d3f-7375-462b-a9d0-066170be029d @ 02/18/25 18:54:51.112
  I0218 18:54:51.140507 24 resource.go:87] Pod name my-hostname-basic-b43f8d3f-7375-462b-a9d0-066170be029d: Found 0 pods out of 1
  I0218 18:54:56.159792 24 resource.go:87] Pod name my-hostname-basic-b43f8d3f-7375-462b-a9d0-066170be029d: Found 1 pods out of 1
  I0218 18:54:56.159842 24 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-b43f8d3f-7375-462b-a9d0-066170be029d" are running
  I0218 18:54:56.173720 24 rc.go:523] Pod "my-hostname-basic-b43f8d3f-7375-462b-a9d0-066170be029d-xc5h9" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:51 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:51 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:51 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:51 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-02-18 18:54:51 +0000 UTC Reason: Message:}])
  I0218 18:54:56.173745 24 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 02/18/25 18:54:56.173
  I0218 18:54:56.244525 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3323" for this suite. @ 02/18/25 18:54:56.267
  << Timeline
------------------------------
SS
------------------------------
• [3.230 seconds]
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:56.289
  I0218 18:54:56.289511 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-runtime @ 02/18/25 18:54:56.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:56.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:56.343
  STEP: create the container @ 02/18/25 18:54:56.358
  W0218 18:54:56.385611      24 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 02/18/25 18:54:56.385
  STEP: get the container status @ 02/18/25 18:54:59.433
  STEP: the container should be terminated @ 02/18/25 18:54:59.443
  STEP: the termination message should be set @ 02/18/25 18:54:59.443
  I0218 18:54:59.443366 24 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 02/18/25 18:54:59.443
  I0218 18:54:59.474406 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6282" for this suite. @ 02/18/25 18:54:59.496
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [10.800 seconds]
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:59.53
  I0218 18:54:59.530039 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename services @ 02/18/25 18:54:59.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:59.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:59.574
  STEP: creating service in namespace services-7756 @ 02/18/25 18:54:59.591
  STEP: creating service affinity-clusterip-transition in namespace services-7756 @ 02/18/25 18:54:59.591
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7756 @ 02/18/25 18:54:59.615
  I0218 18:54:59.637884      24 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7756, replica count: 3
  I0218 18:55:02.689195      24 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:55:02.708313 24 resource.go:361] Creating new exec pod
  I0218 18:55:05.747770 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-7756 exec execpod-affinity8j6mv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0218 18:55:06.010532 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.240.29.41) 80 port [tcp/http] succeeded!\n"
  I0218 18:55:06.010596 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:55:06.010706 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-7756 exec execpod-affinity8j6mv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.29.41 80'
  I0218 18:55:06.269721 24 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.29.41 80\nConnection to 10.240.29.41 80 port [tcp/http] succeeded!\n"
  I0218 18:55:06.269799 24 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0218 18:55:06.296056 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-7756 exec execpod-affinity8j6mv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.29.41:80/ ; done'
  I0218 18:55:06.645178 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n"
  I0218 18:55:06.645246 24 builder.go:147] stdout: "\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-fpk7l\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-2g7xv\naffinity-clusterip-transition-fpk7l\naffinity-clusterip-transition-fpk7l\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-2g7xv\naffinity-clusterip-transition-2g7xv\naffinity-clusterip-transition-fpk7l\naffinity-clusterip-transition-fpk7l\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-2g7xv"
  I0218 18:55:06.645263 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645273 24 service.go:242] Received response from host: affinity-clusterip-transition-fpk7l
  I0218 18:55:06.645281 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645287 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645294 24 service.go:242] Received response from host: affinity-clusterip-transition-2g7xv
  I0218 18:55:06.645301 24 service.go:242] Received response from host: affinity-clusterip-transition-fpk7l
  I0218 18:55:06.645307 24 service.go:242] Received response from host: affinity-clusterip-transition-fpk7l
  I0218 18:55:06.645313 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645319 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645335 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645347 24 service.go:242] Received response from host: affinity-clusterip-transition-2g7xv
  I0218 18:55:06.645353 24 service.go:242] Received response from host: affinity-clusterip-transition-2g7xv
  I0218 18:55:06.645358 24 service.go:242] Received response from host: affinity-clusterip-transition-fpk7l
  I0218 18:55:06.645364 24 service.go:242] Received response from host: affinity-clusterip-transition-fpk7l
  I0218 18:55:06.645369 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:06.645375 24 service.go:242] Received response from host: affinity-clusterip-transition-2g7xv
  I0218 18:55:06.668915 24 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=services-7756 exec execpod-affinity8j6mv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.240.29.41:80/ ; done'
  I0218 18:55:07.036049 24 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.240.29.41:80/\n"
  I0218 18:55:07.036114 24 builder.go:147] stdout: "\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq\naffinity-clusterip-transition-lf9pq"
  I0218 18:55:07.036131 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036141 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036150 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036156 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036163 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036192 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036199 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036215 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036222 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036227 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036233 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036238 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036256 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036262 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036267 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036273 24 service.go:242] Received response from host: affinity-clusterip-transition-lf9pq
  I0218 18:55:07.036792 24 service.go:4203] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7756, will wait for the garbage collector to delete the pods @ 02/18/25 18:55:07.06
  I0218 18:55:07.139224 24 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 15.349847ms
  I0218 18:55:07.240343 24 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.112823ms
  I0218 18:55:10.285899 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7756" for this suite. @ 02/18/25 18:55:10.314
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [60.130 seconds]
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:54:22.152
  I0218 18:54:22.152112 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:54:22.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:54:22.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:54:22.199
  I0218 18:55:22.243900 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1066" for this suite. @ 02/18/25 18:55:22.264
  << Timeline
------------------------------
SSS
------------------------------
• [24.300 seconds]
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:55:10.347
  I0218 18:55:10.347980 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:55:10.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:55:10.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:55:10.399
  I0218 18:55:34.605579 24 container_probe.go:92] Container started at 2025-02-18 18:55:11 +0000 UTC, pod became ready at 2025-02-18 18:55:32 +0000 UTC
  I0218 18:55:34.606582 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7072" for this suite. @ 02/18/25 18:55:34.63
  << Timeline
------------------------------
S
------------------------------
• [34.318 seconds]
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:55:22.286
  I0218 18:55:22.286872 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-runtime @ 02/18/25 18:55:22.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:55:22.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:55:22.336
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 02/18/25 18:55:22.379
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 02/18/25 18:55:48.252
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 02/18/25 18:55:48.428
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 02/18/25 18:55:48.599
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 02/18/25 18:55:48.599
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 02/18/25 18:55:49.114
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 02/18/25 18:55:51.21
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 02/18/25 18:55:53.251
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 02/18/25 18:55:53.278
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 02/18/25 18:55:53.278
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 02/18/25 18:55:53.341
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 02/18/25 18:55:54.381
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 02/18/25 18:55:56.47
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 02/18/25 18:55:56.49
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 02/18/25 18:55:56.49
  I0218 18:55:56.559581 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1474" for this suite. @ 02/18/25 18:55:56.579
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [25.874 seconds]
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:55:34.651
  I0218 18:55:34.651965 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename gc @ 02/18/25 18:55:34.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:55:34.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:55:34.703
  STEP: create the rc1 @ 02/18/25 18:55:34.736
  STEP: create the rc2 @ 02/18/25 18:55:34.752
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 02/18/25 18:55:40.89
  STEP: delete the rc simpletest-rc-to-be-deleted @ 02/18/25 18:55:47.433
  STEP: wait for the rc to be deleted @ 02/18/25 18:55:47.634
  I0218 18:55:52.666628 24 garbage_collector.go:762] 69 pods remaining
  I0218 18:55:52.666649 24 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0218 18:55:52.666653 24 garbage_collector.go:770] 
  STEP: Gathering metrics @ 02/18/25 18:55:57.671
  W0218 18:55:57.705142      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0218 18:55:57.705174 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0218 18:55:57.705195 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2gqmd" in namespace "gc-504"
  I0218 18:55:57.735616 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2pfnc" in namespace "gc-504"
  I0218 18:55:57.774073 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2s6gk" in namespace "gc-504"
  I0218 18:55:57.797929 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4c2mx" in namespace "gc-504"
  I0218 18:55:57.819766 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jddk" in namespace "gc-504"
  I0218 18:55:57.842824 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-55qkh" in namespace "gc-504"
  I0218 18:55:57.865384 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-56r5h" in namespace "gc-504"
  I0218 18:55:57.890761 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5nrzd" in namespace "gc-504"
  I0218 18:55:57.923574 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rxvf" in namespace "gc-504"
  I0218 18:55:57.954006 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5t2v7" in namespace "gc-504"
  I0218 18:55:57.974051 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6jq8m" in namespace "gc-504"
  I0218 18:55:58.006472 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lf4d" in namespace "gc-504"
  I0218 18:55:58.041739 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7h92t" in namespace "gc-504"
  I0218 18:55:58.083340 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7hnxp" in namespace "gc-504"
  I0218 18:55:58.115788 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7k74c" in namespace "gc-504"
  I0218 18:55:58.151271 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nw2d" in namespace "gc-504"
  I0218 18:55:58.181995 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-884rg" in namespace "gc-504"
  I0218 18:55:58.212499 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8c5xs" in namespace "gc-504"
  I0218 18:55:58.245717 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8kkqb" in namespace "gc-504"
  I0218 18:55:58.281812 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mh6k" in namespace "gc-504"
  I0218 18:55:58.310140 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94mjm" in namespace "gc-504"
  I0218 18:55:58.352549 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9cbtw" in namespace "gc-504"
  I0218 18:55:58.377882 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pf65" in namespace "gc-504"
  I0218 18:55:58.422102 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9tqng" in namespace "gc-504"
  I0218 18:55:58.481219 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9wqmt" in namespace "gc-504"
  I0218 18:55:58.538889 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b4492" in namespace "gc-504"
  I0218 18:55:58.609020 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b6v9d" in namespace "gc-504"
  I0218 18:55:58.639652 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bbh4r" in namespace "gc-504"
  I0218 18:55:58.680778 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqdwc" in namespace "gc-504"
  I0218 18:55:58.777754 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ddc5c" in namespace "gc-504"
  I0218 18:55:58.824501 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxv88" in namespace "gc-504"
  I0218 18:55:58.937328 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f4nwh" in namespace "gc-504"
  I0218 18:55:58.999668 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fc5s7" in namespace "gc-504"
  I0218 18:55:59.080754 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgmdf" in namespace "gc-504"
  I0218 18:55:59.190825 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fm76j" in namespace "gc-504"
  I0218 18:55:59.242859 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmx5k" in namespace "gc-504"
  I0218 18:55:59.318553 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fpmfb" in namespace "gc-504"
  I0218 18:55:59.409074 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gg55w" in namespace "gc-504"
  I0218 18:55:59.511292 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-grk8x" in namespace "gc-504"
  I0218 18:55:59.647505 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hl9vq" in namespace "gc-504"
  I0218 18:55:59.719733 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j6rhx" in namespace "gc-504"
  I0218 18:55:59.815746 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jbpwx" in namespace "gc-504"
  I0218 18:55:59.852485 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jfmsm" in namespace "gc-504"
  I0218 18:55:59.944025 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jjm2n" in namespace "gc-504"
  I0218 18:55:59.984536 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jkq4g" in namespace "gc-504"
  I0218 18:56:00.046399 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k2xxz" in namespace "gc-504"
  I0218 18:56:00.146290 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k48m2" in namespace "gc-504"
  I0218 18:56:00.267601 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k4n5r" in namespace "gc-504"
  I0218 18:56:00.306515 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kbgk9" in namespace "gc-504"
  I0218 18:56:00.433816 24 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kbhfd" in namespace "gc-504"
  I0218 18:56:00.465757 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-504" for this suite. @ 02/18/25 18:56:00.488
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.247 seconds]
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:55:56.638
  I0218 18:55:56.638831 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 18:55:56.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:55:56.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:55:56.684
  STEP: Creating configMap with name projected-configmap-test-volume-map-fed51995-2004-4a9c-afe1-43186dd50bb6 @ 02/18/25 18:55:56.698
  STEP: Creating a pod to test consume configMaps @ 02/18/25 18:55:56.714
  STEP: Saw pod success @ 02/18/25 18:56:00.787
  I0218 18:56:00.798205 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-configmaps-0263f0bf-85fe-4d45-b7f8-ee7efc5ddbc5 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:56:00.819
  I0218 18:56:00.857008 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3748" for this suite. @ 02/18/25 18:56:00.869
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [4.287 seconds]
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:00.894
  I0218 18:56:00.894864 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename containers @ 02/18/25 18:56:00.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:00.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:00.948
  STEP: Creating a pod to test override all @ 02/18/25 18:56:00.963
  STEP: Saw pod success @ 02/18/25 18:56:05.076
  I0218 18:56:05.085723 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod client-containers-cade2092-edfd-4144-8259-77a5fd84a78c container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 18:56:05.106
  I0218 18:56:05.141707 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8476" for this suite. @ 02/18/25 18:56:05.164
  << Timeline
------------------------------
SSSSSS
------------------------------
• [7.290 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:05.188
  I0218 18:56:05.188595 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-webhook @ 02/18/25 18:56:05.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:05.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:05.245
  STEP: Setting up server cert @ 02/18/25 18:56:05.265
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 02/18/25 18:56:05.458
  STEP: Deploying the custom resource conversion webhook pod @ 02/18/25 18:56:05.472
  STEP: Wait for the deployment to be ready @ 02/18/25 18:56:05.501
  I0218 18:56:05.520490 26 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:56:07.56
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:56:07.59
  I0218 18:56:08.590947 26 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0218 18:56:08.614196 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Creating a v1 custom resource @ 02/18/25 18:56:11.338
  STEP: Create a v2 custom resource @ 02/18/25 18:56:11.422
  STEP: List CRs in v1 @ 02/18/25 18:56:11.499
  STEP: List CRs in v2 @ 02/18/25 18:56:11.534
  I0218 18:56:12.389268 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3243" for this suite. @ 02/18/25 18:56:12.421
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [4.212 seconds]
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:832

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:12.488
  I0218 18:56:12.488845 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename job @ 02/18/25 18:56:12.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:12.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:12.561
  STEP: Creating a job @ 02/18/25 18:56:12.575
  STEP: Ensuring active pods == parallelism @ 02/18/25 18:56:12.629
  STEP: delete a job @ 02/18/25 18:56:14.671
  STEP: deleting Job.batch foo in namespace job-2015, will wait for the garbage collector to delete the pods @ 02/18/25 18:56:14.671
  I0218 18:56:14.744101 26 resources.go:139] Deleting Job.batch foo took: 14.132651ms
  I0218 18:56:14.944874 26 resources.go:163] Terminating Job.batch foo pods took: 200.769137ms
  STEP: Ensuring job was deleted @ 02/18/25 18:56:16.645
  I0218 18:56:16.659787 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2015" for this suite. @ 02/18/25 18:56:16.682
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.295 seconds]
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:16.721
  I0218 18:56:16.721323 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename csiinlinevolumes @ 02/18/25 18:56:16.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:16.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:16.773
  STEP: Creating two CSIDrivers @ 02/18/25 18:56:16.787
  STEP: Getting "inline-driver-b2f4ce2d-3e03-4967-a6ea-ec5460b3d890" & "inline-driver-7488414f-e12b-4e33-9633-a02d29078e4b" @ 02/18/25 18:56:16.828
  STEP: Patching the CSIDriver "inline-driver-7488414f-e12b-4e33-9633-a02d29078e4b" @ 02/18/25 18:56:16.848
  STEP: Updating the CSIDriver "inline-driver-7488414f-e12b-4e33-9633-a02d29078e4b" @ 02/18/25 18:56:16.862
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1889" @ 02/18/25 18:56:16.893
  STEP: Deleting CSIDriver "inline-driver-b2f4ce2d-3e03-4967-a6ea-ec5460b3d890" @ 02/18/25 18:56:16.907
  STEP: Confirm deletion of CSIDriver "inline-driver-b2f4ce2d-3e03-4967-a6ea-ec5460b3d890" @ 02/18/25 18:56:16.925
  STEP: Deleting CSIDriver "inline-driver-7488414f-e12b-4e33-9633-a02d29078e4b" via DeleteCollection @ 02/18/25 18:56:16.935
  STEP: Confirm deletion of CSIDriver "inline-driver-7488414f-e12b-4e33-9633-a02d29078e4b" @ 02/18/25 18:56:16.961
  I0218 18:56:16.973006 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1889" for this suite. @ 02/18/25 18:56:16.988
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.278 seconds]
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:17.032
  I0218 18:56:17.032050 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:56:17.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:17.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:17.081
  STEP: Creating a pod to test env composition @ 02/18/25 18:56:17.097
  STEP: Saw pod success @ 02/18/25 18:56:21.16
  I0218 18:56:21.169534 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod var-expansion-1cf15a5d-fc8a-42a8-aa21-bd440283ec30 container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:56:21.202
  I0218 18:56:21.249093 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9751" for this suite. @ 02/18/25 18:56:21.282
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [24.422 seconds]
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:21.354
  I0218 18:56:21.354872 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename subpath @ 02/18/25 18:56:21.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:21.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:21.408
  STEP: Setting up data @ 02/18/25 18:56:21.424
  STEP: Creating pod pod-subpath-test-secret-lnd8 @ 02/18/25 18:56:21.456
  STEP: Creating a pod to test atomic-volume-subpath @ 02/18/25 18:56:21.456
  STEP: Saw pod success @ 02/18/25 18:56:45.644
  I0218 18:56:45.655776 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-subpath-test-secret-lnd8 container test-container-subpath-secret-lnd8: <nil>
  STEP: delete the pod @ 02/18/25 18:56:45.684
  STEP: Deleting pod pod-subpath-test-secret-lnd8 @ 02/18/25 18:56:45.719
  I0218 18:56:45.719041 26 delete.go:62] Deleting pod "pod-subpath-test-secret-lnd8" in namespace "subpath-7948"
  I0218 18:56:45.735408 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7948" for this suite. @ 02/18/25 18:56:45.76
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.296 seconds]
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:45.793
  I0218 18:56:45.793856 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename deployment @ 02/18/25 18:56:45.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:45.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:45.843
  STEP: creating a Deployment @ 02/18/25 18:56:45.873
  I0218 18:56:45.873689 26 deployment.go:507] Creating simple deployment test-deployment-fhq5f
  I0218 18:56:45.918371 26 deployment.go:223] deployment "test-deployment-fhq5f" doesn't have the required revision set
  STEP: Getting /status @ 02/18/25 18:56:47.961
  I0218 18:56:47.974272 26 deployment.go:532] Deployment test-deployment-fhq5f has Conditions: [{Available True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fhq5f-6fb4c74686" has successfully progressed.}]
  STEP: updating Deployment Status @ 02/18/25 18:56:47.974
  I0218 18:56:47.997947 26 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 56, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 56, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.February, 18, 18, 56, 47, 0, time.Local), LastTransitionTime:time.Date(2025, time.February, 18, 18, 56, 45, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-fhq5f-6fb4c74686\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 02/18/25 18:56:47.997
  I0218 18:56:48.006506 26 deployment.go:579] Observed &Deployment event: ADDED
  I0218 18:56:48.006548 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fhq5f-6fb4c74686"}
  I0218 18:56:48.006662 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0218 18:56:48.006686 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fhq5f-6fb4c74686"}
  I0218 18:56:48.006703 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0218 18:56:48.006874 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0218 18:56:48.006898 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0218 18:56:48.006916 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fhq5f-6fb4c74686" is progressing.}
  I0218 18:56:48.007078 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0218 18:56:48.007109 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0218 18:56:48.007129 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fhq5f-6fb4c74686" has successfully progressed.}
  I0218 18:56:48.007264 26 deployment.go:579] Observed &Deployment event: MODIFIED
  I0218 18:56:48.007289 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0218 18:56:48.007299 26 deployment.go:575] Observed Deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fhq5f-6fb4c74686" has successfully progressed.}
  I0218 18:56:48.007311 26 deployment.go:572] Found Deployment test-deployment-fhq5f in namespace deployment-9962 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0218 18:56:48.007322 26 deployment.go:583] Deployment test-deployment-fhq5f has an updated status
  STEP: patching the Statefulset Status @ 02/18/25 18:56:48.007
  I0218 18:56:48.007347 26 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0218 18:56:48.021533 26 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 02/18/25 18:56:48.021
  I0218 18:56:48.029391 26 deployment.go:616] Observed &Deployment event: ADDED
  I0218 18:56:48.029632 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fhq5f-6fb4c74686"}
  I0218 18:56:48.029810 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0218 18:56:48.029957 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-fhq5f-6fb4c74686"}
  I0218 18:56:48.030006 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0218 18:56:48.030284 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0218 18:56:48.030328 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0218 18:56:48.030347 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:45 +0000 UTC 2025-02-18 18:56:45 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-fhq5f-6fb4c74686" is progressing.}
  I0218 18:56:48.030570 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0218 18:56:48.030605 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0218 18:56:48.030623 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fhq5f-6fb4c74686" has successfully progressed.}
  I0218 18:56:48.030774 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0218 18:56:48.030798 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0218 18:56:48.030814 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-02-18 18:56:47 +0000 UTC 2025-02-18 18:56:45 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-fhq5f-6fb4c74686" has successfully progressed.}
  I0218 18:56:48.030829 26 deployment.go:612] Observed deployment test-deployment-fhq5f in namespace deployment-9962 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0218 18:56:48.030971 26 deployment.go:616] Observed &Deployment event: MODIFIED
  I0218 18:56:48.031012 26 deployment.go:609] Found deployment test-deployment-fhq5f in namespace deployment-9962 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0218 18:56:48.031028 26 deployment.go:620] Deployment test-deployment-fhq5f has a patched status
  I0218 18:56:48.041947 26 deployment.go:633] Deployment "test-deployment-fhq5f":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-fhq5f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9962",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "667c57c0-1345-402a-afad-2e4db5e26102",
      ResourceVersion: (string) (len=6) "218405",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-fhq5f-6fb4c74686\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0218 18:56:48.052693 26 deployment.go:40] New ReplicaSet "test-deployment-fhq5f-6fb4c74686" of Deployment "test-deployment-fhq5f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-fhq5f-6fb4c74686",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9962",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6da3f452-f197-4717-b7c3-53e6d6144e53",
      ResourceVersion: (string) (len=6) "218401",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-fhq5f",
          UID: (types.UID) (len=36) "667c57c0-1345-402a-afad-2e4db5e26102",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 36 37  |k:{\"uid\":\"667|
              00000120  63 35 37 63 30 2d 31 33  34 35 2d 34 30 32 61 2d  |c57c0-1345-402a-|
              00000130  61 66 61 64 2d 32 65 34  64 62 35 65 32 36 31 30  |afad-2e4db5e2610|
              00000140  32 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |2\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0218 18:56:48.063515 26 deployment.go:68] Pod "test-deployment-fhq5f-6fb4c74686-4rxr5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-fhq5f-6fb4c74686-4rxr5",
      GenerateName: (string) (len=33) "test-deployment-fhq5f-6fb4c74686-",
      Namespace: (string) (len=15) "deployment-9962",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5736811-c9fe-4047-945b-d856014dcbeb",
      ResourceVersion: (string) (len=6) "218400",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6fb4c74686"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c9981186d6b6dcf95f7591f648bb6a093d892dd71b1dd494f99e5b75ad85d37e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "172.25.1.83/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "172.25.1.83/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-fhq5f-6fb4c74686",
          UID: (types.UID) (len=36) "6da3f452-f197-4717-b7c3-53e6d6144e53",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 64 61 33 66 34 35  32 2d 66 31 39 37 2d 34  |"6da3f452-f197-4|
              000000a0  37 31 37 2d 62 37 63 33  2d 35 33 65 36 64 36 31  |717-b7c3-53e6d61|
              000000b0  34 34 65 35 33 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |44e53\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501806,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 32 35 2e 31 2e 38  33 5c 22 7d 22 3a 7b 22  |2.25.1.83\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbdmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbdmw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=29) "admiring-kalam-9d8f4776-dp7t2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>)
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501807,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63875501805,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=8) "10.0.0.5",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=8) "10.0.0.5"
        }
      },
      PodIP: (string) (len=11) "172.25.1.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "172.25.1.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63875501805,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63875501806,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://745336814ca062c11e08b12daaf74cf5aeb990bee1e1cf82bde1f1268f5d5396",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tbdmw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0218 18:56:48.064496 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9962" for this suite. @ 02/18/25 18:56:48.075
  << Timeline
------------------------------
SSSSSS
------------------------------
• [4.261 seconds]
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:48.108
  I0218 18:56:48.108109 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 18:56:48.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:48.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:48.181
  STEP: Creating a pod to test emptydir volume type on node default medium @ 02/18/25 18:56:48.201
  STEP: Saw pod success @ 02/18/25 18:56:52.254
  I0218 18:56:52.266932 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-d7f95c75-ac51-436b-a78c-d4bfbe5fefc9 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 18:56:52.29
  I0218 18:56:52.327721 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2569" for this suite. @ 02/18/25 18:56:52.353
  << Timeline
------------------------------
SS
------------------------------
• [3.211 seconds]
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:52.372
  I0218 18:56:52.372706 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replication-controller @ 02/18/25 18:56:52.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:52.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:52.421
  STEP: creating a ReplicationController @ 02/18/25 18:56:52.451
  STEP: waiting for RC to be added @ 02/18/25 18:56:52.465
  STEP: waiting for available Replicas @ 02/18/25 18:56:52.466
  STEP: patching ReplicationController @ 02/18/25 18:56:53.699
  STEP: waiting for RC to be modified @ 02/18/25 18:56:53.733
  STEP: patching ReplicationController status @ 02/18/25 18:56:53.733
  STEP: waiting for RC to be modified @ 02/18/25 18:56:53.755
  STEP: waiting for available Replicas @ 02/18/25 18:56:53.756
  STEP: fetching ReplicationController status @ 02/18/25 18:56:53.771
  STEP: patching ReplicationController scale @ 02/18/25 18:56:53.786
  STEP: waiting for RC to be modified @ 02/18/25 18:56:53.812
  STEP: waiting for ReplicationController's scale to be the max amount @ 02/18/25 18:56:53.812
  STEP: fetching ReplicationController; ensuring that it's patched @ 02/18/25 18:56:55.44
  STEP: updating ReplicationController status @ 02/18/25 18:56:55.452
  STEP: waiting for RC to be modified @ 02/18/25 18:56:55.466
  STEP: listing all ReplicationControllers @ 02/18/25 18:56:55.466
  STEP: checking that ReplicationController has expected values @ 02/18/25 18:56:55.479
  STEP: deleting ReplicationControllers by collection @ 02/18/25 18:56:55.479
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 02/18/25 18:56:55.504
  E0218 18:56:55.544963      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:56:55.545243 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9277" for this suite. @ 02/18/25 18:56:55.565
  << Timeline
------------------------------
• [2.310 seconds]
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:55.584
  I0218 18:56:55.584978 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename dns @ 02/18/25 18:56:55.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:55.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:55.64
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 02/18/25 18:56:55.657
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 02/18/25 18:56:55.657
  STEP: creating a pod to probe DNS @ 02/18/25 18:56:55.657
  STEP: submitting the pod to kubernetes @ 02/18/25 18:56:55.657
  E0218 18:56:56.545672      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:56:57.546366      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 02/18/25 18:56:57.72
  STEP: looking for the results for each expected name from probers @ 02/18/25 18:56:57.729
  I0218 18:56:57.822321 26 dns_common.go:546] DNS probes using dns-6363/dns-test-a27127b0-1a86-4bf2-8a47-e382d85d3e2c succeeded

  STEP: deleting the pod @ 02/18/25 18:56:57.822
  I0218 18:56:57.858366 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6363" for this suite. @ 02/18/25 18:56:57.877
  << Timeline
------------------------------
• [11.393 seconds]
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:57.897
  I0218 18:56:57.897227 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename resourcequota @ 02/18/25 18:56:57.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:57.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:57.949
  STEP: Counting existing ResourceQuota @ 02/18/25 18:56:57.965
  E0218 18:56:58.546802      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:56:59.547573      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:00.548587      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:01.549204      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:02.549215      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 02/18/25 18:57:02.978
  STEP: Ensuring resource quota status is calculated @ 02/18/25 18:57:02.99
  E0218 18:57:03.550279      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:04.550706      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 02/18/25 18:57:05.005
  STEP: Creating a NodePort Service @ 02/18/25 18:57:05.049
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 02/18/25 18:57:05.108
  STEP: Ensuring resource quota status captures service creation @ 02/18/25 18:57:05.146
  E0218 18:57:05.551099      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:06.551572      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 02/18/25 18:57:07.159
  STEP: Ensuring resource quota status released usage @ 02/18/25 18:57:07.232
  E0218 18:57:07.552658      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:08.553193      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:09.249601 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7979" for this suite. @ 02/18/25 18:57:09.273
  << Timeline
------------------------------
SS
------------------------------
• [6.315 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:09.293
  I0218 18:57:09.293784 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename custom-resource-definition @ 02/18/25 18:57:09.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:09.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:09.346
  I0218 18:57:09.360731 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 18:57:09.553316      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:10.553932      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:11.554250      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:12.554616      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:13.555370      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:14.556184      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:15.556937      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:15.565149 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2317" for this suite. @ 02/18/25 18:57:15.591
  << Timeline
------------------------------
• [2.201 seconds]
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:15.61
  I0218 18:57:15.610567 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubelet-test @ 02/18/25 18:57:15.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:15.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:15.665
  E0218 18:57:16.557614      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:17.558310      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:17.769615 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9819" for this suite. @ 02/18/25 18:57:17.792
  << Timeline
------------------------------
SSS
------------------------------
• [4.192 seconds]
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:17.817
  I0218 18:57:17.817618 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename kubelet-test @ 02/18/25 18:57:17.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:17.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:17.864
  STEP: Waiting for pod completion @ 02/18/25 18:57:17.903
  E0218 18:57:18.559345      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:19.559958      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:20.560799      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:21.561723      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:21.974111 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-745" for this suite. @ 02/18/25 18:57:21.994
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [4.298 seconds]
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:22.02
  I0218 18:57:22.020028 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:57:22.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:22.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:22.078
  STEP: Creating a pod to test substitution in container's command @ 02/18/25 18:57:22.091
  E0218 18:57:22.562223      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:23.562578      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:24.563522      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:25.563755      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 18:57:26.141
  I0218 18:57:26.153650 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod var-expansion-e1b12d4a-c80d-4d7a-996a-5936e333ec6c container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 18:57:26.204
  I0218 18:57:26.270718 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1620" for this suite. @ 02/18/25 18:57:26.293
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.248 seconds]
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:26.337
  I0218 18:57:26.337454 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:57:26.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:26.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:26.411
  STEP: creating the pod @ 02/18/25 18:57:26.436
  STEP: submitting the pod to kubernetes @ 02/18/25 18:57:26.437
  STEP: verifying QOS class is set on the pod @ 02/18/25 18:57:26.493
  I0218 18:57:26.505639 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3778" for this suite. @ 02/18/25 18:57:26.531
  E0218 18:57:26.564739      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [9.986 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:26.599
  I0218 18:57:26.599817 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 18:57:26.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:26.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:26.7
  STEP: set up a multi version CRD @ 02/18/25 18:57:26.718
  I0218 18:57:26.719097 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 18:57:27.565824      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:28.566631      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:29.567552      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:30.567641      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 02/18/25 18:57:31.545
  E0218 18:57:31.568286      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the unserved version gets removed @ 02/18/25 18:57:31.609
  E0218 18:57:32.568727      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 02/18/25 18:57:32.897
  E0218 18:57:33.569368      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:34.569961      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:35.570791      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:36.527273 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4474" for this suite. @ 02/18/25 18:57:36.567
  E0218 18:57:36.574775      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  << Timeline
------------------------------
• [0.206 seconds]
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:36.587
  I0218 18:57:36.587625 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename csiinlinevolumes @ 02/18/25 18:57:36.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:36.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:36.639
  STEP: creating @ 02/18/25 18:57:36.654
  STEP: getting @ 02/18/25 18:57:36.694
  STEP: listing in namespace @ 02/18/25 18:57:36.704
  STEP: patching @ 02/18/25 18:57:36.718
  STEP: deleting @ 02/18/25 18:57:36.735
  I0218 18:57:36.762192 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9751" for this suite. @ 02/18/25 18:57:36.777
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.397 seconds]
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:36.81
  I0218 18:57:36.810295 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename endpointslice @ 02/18/25 18:57:36.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:36.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:36.852
  E0218 18:57:37.575852      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:38.576261      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 02/18/25 18:57:39.023
  STEP: referencing matching pods with named port @ 02/18/25 18:57:39.045
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 02/18/25 18:57:39.064
  STEP: recreating EndpointSlices after they've been deleted @ 02/18/25 18:57:39.085
  I0218 18:57:39.144051 26 endpointslice.go:938] EndpointSlice for Service endpointslice-9112/example-named-port not found
  E0218 18:57:39.577271      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:40.577718      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:41.157743 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9112" for this suite. @ 02/18/25 18:57:41.177
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.204 seconds]
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:41.241
  I0218 18:57:41.241180 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename aggregateddiscovery @ 02/18/25 18:57:41.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:41.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:41.283
  I0218 18:57:41.296562 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 18:57:41.578282      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:42.579377      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:43.579600      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:57:44.411201 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5617" for this suite. @ 02/18/25 18:57:44.43
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [17.159 seconds]
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:57:44.456
  I0218 18:57:44.456520 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pod-network-test @ 02/18/25 18:57:44.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:57:44.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:57:44.518
  STEP: Performing setup for networking test in namespace pod-network-test-8836 @ 02/18/25 18:57:44.54
  STEP: creating a selector @ 02/18/25 18:57:44.54
  STEP: Creating the service pods in kubernetes @ 02/18/25 18:57:44.54
  I0218 18:57:44.540935 26 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0218 18:57:44.580121      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:45.581060      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:46.581601      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:47.582721      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:48.582785      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:49.583843      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:50.584613      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:51.584637      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:52.585217      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:53.586286      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:54.587006      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:55.587542      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:56.587690      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:57.587733      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:57:58.588669      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 02/18/25 18:57:58.87
  E0218 18:57:59.589557      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:00.589822      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:00.918322 26 utils.go:803] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0218 18:58:00.918366 26 networking.go:42] Breadth first check of 172.25.3.198 on host 10.0.0.3...
  I0218 18:58:00.927197 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.1.90:9080/dial?request=hostname&protocol=udp&host=172.25.3.198&port=8081&tries=1'] Namespace:pod-network-test-8836 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:58:00.927237 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:58:00.927311 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8836/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.1.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.25.3.198%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:58:01.102908 26 utils.go:356] Waiting for responses: map[]
  I0218 18:58:01.102965 26 utils.go:360] reached 172.25.3.198 after 0/1 tries
  I0218 18:58:01.102979 26 networking.go:42] Breadth first check of 172.25.1.89 on host 10.0.0.5...
  I0218 18:58:01.113676 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.1.90:9080/dial?request=hostname&protocol=udp&host=172.25.1.89&port=8081&tries=1'] Namespace:pod-network-test-8836 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:58:01.113714 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:58:01.113810 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8836/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.1.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.25.1.89%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:58:01.265026 26 utils.go:356] Waiting for responses: map[]
  I0218 18:58:01.265067 26 utils.go:360] reached 172.25.1.89 after 0/1 tries
  I0218 18:58:01.265086 26 networking.go:42] Breadth first check of 172.25.0.230 on host 10.0.0.2...
  I0218 18:58:01.274609 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.1.90:9080/dial?request=hostname&protocol=udp&host=172.25.0.230&port=8081&tries=1'] Namespace:pod-network-test-8836 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:58:01.274643 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:58:01.274706 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8836/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.1.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.25.0.230%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:58:01.430874 26 utils.go:356] Waiting for responses: map[]
  I0218 18:58:01.430917 26 utils.go:360] reached 172.25.0.230 after 0/1 tries
  I0218 18:58:01.430936 26 networking.go:42] Breadth first check of 172.25.2.42 on host 10.0.0.4...
  I0218 18:58:01.440390 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.25.1.90:9080/dial?request=hostname&protocol=udp&host=172.25.2.42&port=8081&tries=1'] Namespace:pod-network-test-8836 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 18:58:01.440476 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 18:58:01.440565 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/pod-network-test-8836/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.25.1.90%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.25.2.42%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0218 18:58:01.576521 26 utils.go:356] Waiting for responses: map[]
  I0218 18:58:01.576565 26 utils.go:360] reached 172.25.2.42 after 0/1 tries
  I0218 18:58:01.576584 26 networking.go:53] Going to retry 0 out of 4 pods....
  I0218 18:58:01.577391 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0218 18:58:01.590782      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pod-network-test-8836" for this suite. @ 02/18/25 18:58:01.592
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.327 seconds]
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:01.633
  I0218 18:58:01.633326 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename pods @ 02/18/25 18:58:01.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:01.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:01.687
  STEP: creating a Pod with a static label @ 02/18/25 18:58:01.719
  STEP: watching for Pod to be ready @ 02/18/25 18:58:01.747
  I0218 18:58:01.753834 26 pods.go:945] observed Pod pod-test in namespace pods-5700 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0218 18:58:01.753939 26 pods.go:945] observed Pod pod-test in namespace pods-5700 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  }]
  I0218 18:58:01.781113 26 pods.go:945] observed Pod pod-test in namespace pods-5700 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  }]
  I0218 18:58:02.232627 26 pods.go:945] observed Pod pod-test in namespace pods-5700 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  }]
  E0218 18:58:02.590820      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:02.886606 26 pods.go:948] Found Pod pod-test in namespace pods-5700 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:02 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:02 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2025-02-18 18:58:01 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 02/18/25 18:58:02.9
  STEP: getting the Pod and ensuring that it's patched @ 02/18/25 18:58:02.923
  STEP: replacing the Pod's status Ready condition to False @ 02/18/25 18:58:02.934
  STEP: check the Pod again to ensure its Ready conditions are False @ 02/18/25 18:58:02.964
  STEP: deleting the Pod via a Collection with a LabelSelector @ 02/18/25 18:58:02.964
  STEP: watching for the Pod to be deleted @ 02/18/25 18:58:02.986
  I0218 18:58:02.993489 26 pods.go:1058] observed event type MODIFIED
  E0218 18:58:03.591833      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:04.592904      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:04.890042 26 pods.go:1058] observed event type MODIFIED
  I0218 18:58:05.137582 26 pods.go:1058] observed event type MODIFIED
  I0218 18:58:05.208587 26 pods.go:1058] observed event type MODIFIED
  E0218 18:58:05.593318      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:05.907080 26 pods.go:1058] observed event type MODIFIED
  I0218 18:58:05.921974 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5700" for this suite. @ 02/18/25 18:58:05.942
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [20.367 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1037

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:05.968
  I0218 18:58:05.968191 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 18:58:05.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:06.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:06.038
  STEP: Creating service test in namespace statefulset-7484 @ 02/18/25 18:58:06.053
  STEP: Creating statefulset ss in namespace statefulset-7484 @ 02/18/25 18:58:06.079
  I0218 18:58:06.105397 26 wait.go:40] Found 0 stateful pods, waiting for 1
  E0218 18:58:06.593471      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:07.593695      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:08.594395      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:09.595181      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:10.595628      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:11.595759      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:12.596558      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:13.596715      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:14.597651      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:15.598024      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:16.108207 26 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 02/18/25 18:58:16.128
  STEP: Getting /status @ 02/18/25 18:58:16.142
  I0218 18:58:16.153711 26 statefulset.go:1073] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 02/18/25 18:58:16.153
  I0218 18:58:16.176411 26 statefulset.go:1093] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 02/18/25 18:58:16.176
  I0218 18:58:16.183107 26 statefulset.go:1121] Observed &StatefulSet event: ADDED
  I0218 18:58:16.183163 26 statefulset.go:1114] Found Statefulset ss in namespace statefulset-7484 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0218 18:58:16.183175 26 statefulset.go:1125] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 02/18/25 18:58:16.183
  I0218 18:58:16.183192 26 statefulset.go:1129] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0218 18:58:16.200093 26 statefulset.go:1133] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 02/18/25 18:58:16.2
  I0218 18:58:16.206715 26 statefulset.go:1158] Observed &StatefulSet event: ADDED
  I0218 18:58:16.207226 26 statefulset.go:138] Deleting all statefulset in ns statefulset-7484
  I0218 18:58:16.216208 26 rest.go:152] Scaling statefulset ss to 0
  E0218 18:58:16.598685      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:17.599495      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:18.600268      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:19.600997      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:20.601826      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:21.602257      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:22.602797      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:23.602955      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:24.603476      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:25.603888      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:26.252164 26 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 18:58:26.262405 26 rest.go:90] Deleting statefulset ss
  I0218 18:58:26.297928 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7484" for this suite. @ 02/18/25 18:58:26.317
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [154.940 seconds]
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:56:00.552
  I0218 18:56:00.552617 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 18:56:00.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:56:00.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:56:00.604
  STEP: creating the pod with failed condition @ 02/18/25 18:56:00.62
  STEP: updating the pod @ 02/18/25 18:58:00.654
  I0218 18:58:01.185665 24 pod_client.go:173] Successfully updated pod "var-expansion-314f4865-44c5-4f53-a37d-a5bff2bd6104"
  STEP: waiting for pod running @ 02/18/25 18:58:01.185
  STEP: deleting the pod gracefully @ 02/18/25 18:58:03.209
  I0218 18:58:03.209161 24 delete.go:62] Deleting pod "var-expansion-314f4865-44c5-4f53-a37d-a5bff2bd6104" in namespace "var-expansion-9700"
  I0218 18:58:03.227945 24 delete.go:70] Wait up to 5m0s for pod "var-expansion-314f4865-44c5-4f53-a37d-a5bff2bd6104" to be fully deleted
  I0218 18:58:35.449723 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9700" for this suite. @ 02/18/25 18:58:35.474
  << Timeline
------------------------------
SSSSS
------------------------------
• [0.359 seconds]
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:35.498
  I0218 18:58:35.498156 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename volumeattachment @ 02/18/25 18:58:35.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:35.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:35.559
  STEP: Create VolumeAttachment "va-e2e-fxxkp" on node "admiring-kalam-9d8f4776-bw8qq" @ 02/18/25 18:58:35.586
  STEP: Get VolumeAttachment "va-e2e-fxxkp" on node "admiring-kalam-9d8f4776-bw8qq" @ 02/18/25 18:58:35.6
  STEP: Patch VolumeAttachment "va-e2e-fxxkp" on node "admiring-kalam-9d8f4776-bw8qq" @ 02/18/25 18:58:35.61
  STEP: List VolumeAttachments with "va-e2e-fxxkp=patched" label @ 02/18/25 18:58:35.623
  STEP: Delete VolumeAttachment "va-e2e-fxxkp" on node "admiring-kalam-9d8f4776-bw8qq" @ 02/18/25 18:58:35.634
  STEP: Confirm deletion of VolumeAttachment "va-e2e-fxxkp" on node "admiring-kalam-9d8f4776-bw8qq" @ 02/18/25 18:58:35.653
  STEP: Create VolumeAttachment "va-e2e-kgl4v" on node "admiring-kalam-9d8f4776-bw8qq" @ 02/18/25 18:58:35.683
  STEP: Update the VolumeAttachment "va-e2e-kgl4v" on node "admiring-kalam-9d8f4776-bw8qq" with label "va-e2e=updated" @ 02/18/25 18:58:35.694
  STEP: Create VolumeAttachment "va-e2e-g5z2h" on node "admiring-kalam-9d8f4776-dp7t2" @ 02/18/25 18:58:35.736
  STEP: Update the VolumeAttachment "va-e2e-g5z2h" on node "admiring-kalam-9d8f4776-dp7t2" with label "va-e2e=updated" @ 02/18/25 18:58:35.748
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 02/18/25 18:58:35.78
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 02/18/25 18:58:35.814
  I0218 18:58:35.824936 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2483" for this suite. @ 02/18/25 18:58:35.837
  << Timeline
------------------------------
SSSSSSSSSSSSSSS
------------------------------
• [0.118 seconds]
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:35.87
  I0218 18:58:35.870008 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename conformance-tests @ 02/18/25 18:58:35.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:35.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:35.923
  STEP: Getting node addresses @ 02/18/25 18:58:35.937
  I0218 18:58:35.937080 24 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0218 18:58:35.958984 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-6339" for this suite. @ 02/18/25 18:58:35.971
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [4.243 seconds]
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:35.998
  I0218 18:58:35.998129 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:58:35.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:36.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:36.045
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:58:36.059
  STEP: Saw pod success @ 02/18/25 18:58:40.116
  I0218 18:58:40.127554 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-d465d1f0-f77a-46b6-ac5f-a4d24e14863e container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:58:40.151
  I0218 18:58:40.191589 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2690" for this suite. @ 02/18/25 18:58:40.215
  << Timeline
------------------------------
SSS
------------------------------
• [14.313 seconds]
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:40.244
  I0218 18:58:40.244939 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename svc-latency @ 02/18/25 18:58:40.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:40.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:40.3
  I0218 18:58:40.317751 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-956 @ 02/18/25 18:58:40.318
  I0218 18:58:40.332541      24 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-956, replica count: 1
  I0218 18:58:41.383571      24 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:58:42.384181      24 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 18:58:42.511746 24 service_latency.go:356] Created: latency-svc-dwgsr
  I0218 18:58:42.526976 24 service_latency.go:363] Got endpoints: latency-svc-dwgsr [42.043078ms]
  I0218 18:58:42.553192 24 service_latency.go:356] Created: latency-svc-q7htj
  I0218 18:58:42.560695 24 service_latency.go:363] Got endpoints: latency-svc-q7htj [33.607299ms]
  I0218 18:58:42.562993 24 service_latency.go:356] Created: latency-svc-fldgk
  I0218 18:58:42.573328 24 service_latency.go:363] Got endpoints: latency-svc-fldgk [45.950563ms]
  I0218 18:58:42.579004 24 service_latency.go:356] Created: latency-svc-rqfqm
  I0218 18:58:42.594643 24 service_latency.go:363] Got endpoints: latency-svc-rqfqm [67.456448ms]
  I0218 18:58:42.605188 24 service_latency.go:356] Created: latency-svc-2rm4b
  I0218 18:58:42.609752 24 service_latency.go:356] Created: latency-svc-n4c88
  I0218 18:58:42.611939 24 service_latency.go:363] Got endpoints: latency-svc-2rm4b [84.54797ms]
  I0218 18:58:42.628280 24 service_latency.go:363] Got endpoints: latency-svc-n4c88 [101.08581ms]
  I0218 18:58:42.635646 24 service_latency.go:356] Created: latency-svc-k9crs
  I0218 18:58:42.649479 24 service_latency.go:363] Got endpoints: latency-svc-k9crs [122.171235ms]
  I0218 18:58:42.652779 24 service_latency.go:356] Created: latency-svc-l59ds
  I0218 18:58:42.670366 24 service_latency.go:356] Created: latency-svc-f24xq
  I0218 18:58:42.675097 24 service_latency.go:363] Got endpoints: latency-svc-l59ds [147.728112ms]
  I0218 18:58:42.677844 24 service_latency.go:363] Got endpoints: latency-svc-f24xq [150.337488ms]
  I0218 18:58:42.693020 24 service_latency.go:356] Created: latency-svc-xg76w
  I0218 18:58:42.702880 24 service_latency.go:363] Got endpoints: latency-svc-xg76w [175.256867ms]
  I0218 18:58:42.811138 24 service_latency.go:356] Created: latency-svc-wrwsg
  I0218 18:58:42.813211 24 service_latency.go:356] Created: latency-svc-9svw4
  I0218 18:58:42.815376 24 service_latency.go:356] Created: latency-svc-rtrwt
  I0218 18:58:42.815478 24 service_latency.go:356] Created: latency-svc-9b5dr
  I0218 18:58:42.815566 24 service_latency.go:356] Created: latency-svc-5tgmc
  I0218 18:58:42.815630 24 service_latency.go:356] Created: latency-svc-xltd8
  I0218 18:58:42.815639 24 service_latency.go:356] Created: latency-svc-dzjbs
  I0218 18:58:42.816359 24 service_latency.go:356] Created: latency-svc-jblwv
  I0218 18:58:42.816356 24 service_latency.go:356] Created: latency-svc-z9jml
  I0218 18:58:42.816500 24 service_latency.go:356] Created: latency-svc-c8fz6
  I0218 18:58:42.823128 24 service_latency.go:363] Got endpoints: latency-svc-wrwsg [262.363888ms]
  I0218 18:58:42.825660 24 service_latency.go:356] Created: latency-svc-8bsph
  I0218 18:58:42.825725 24 service_latency.go:356] Created: latency-svc-v57nn
  I0218 18:58:42.826178 24 service_latency.go:356] Created: latency-svc-qv8wg
  I0218 18:58:42.831146 24 service_latency.go:356] Created: latency-svc-7zngz
  I0218 18:58:42.831230 24 service_latency.go:356] Created: latency-svc-trttn
  I0218 18:58:42.837918 24 service_latency.go:363] Got endpoints: latency-svc-9svw4 [310.367693ms]
  I0218 18:58:42.843803 24 service_latency.go:363] Got endpoints: latency-svc-dzjbs [168.65588ms]
  I0218 18:58:42.848402 24 service_latency.go:363] Got endpoints: latency-svc-z9jml [320.912989ms]
  I0218 18:58:42.848476 24 service_latency.go:363] Got endpoints: latency-svc-9b5dr [236.503176ms]
  I0218 18:58:42.848612 24 service_latency.go:363] Got endpoints: latency-svc-5tgmc [320.988842ms]
  I0218 18:58:42.850579 24 service_latency.go:363] Got endpoints: latency-svc-rtrwt [322.923196ms]
  I0218 18:58:42.861798 24 service_latency.go:363] Got endpoints: latency-svc-xltd8 [233.465748ms]
  I0218 18:58:42.861914 24 service_latency.go:363] Got endpoints: latency-svc-v57nn [159.004915ms]
  I0218 18:58:42.867857 24 service_latency.go:356] Created: latency-svc-sxrx4
  I0218 18:58:42.876008 24 service_latency.go:363] Got endpoints: latency-svc-7zngz [348.793022ms]
  I0218 18:58:42.876071 24 service_latency.go:363] Got endpoints: latency-svc-trttn [348.474073ms]
  I0218 18:58:42.877193 24 service_latency.go:363] Got endpoints: latency-svc-qv8wg [303.830011ms]
  I0218 18:58:42.887015 24 service_latency.go:363] Got endpoints: latency-svc-8bsph [209.125467ms]
  I0218 18:58:42.887065 24 service_latency.go:356] Created: latency-svc-84hvd
  I0218 18:58:42.887132 24 service_latency.go:363] Got endpoints: latency-svc-jblwv [292.433127ms]
  I0218 18:58:42.888247 24 service_latency.go:363] Got endpoints: latency-svc-sxrx4 [65.080123ms]
  I0218 18:58:42.888315 24 service_latency.go:363] Got endpoints: latency-svc-c8fz6 [238.79096ms]
  I0218 18:58:42.892816 24 service_latency.go:363] Got endpoints: latency-svc-84hvd [54.864001ms]
  I0218 18:58:42.908776 24 service_latency.go:356] Created: latency-svc-l2qzq
  I0218 18:58:42.915034 24 service_latency.go:356] Created: latency-svc-8g7nl
  I0218 18:58:42.920954 24 service_latency.go:363] Got endpoints: latency-svc-8g7nl [72.2876ms]
  I0218 18:58:42.925552 24 service_latency.go:356] Created: latency-svc-nbx9p
  I0218 18:58:42.998506 24 service_latency.go:363] Got endpoints: latency-svc-nbx9p [150.003366ms]
  I0218 18:58:43.004690 24 service_latency.go:363] Got endpoints: latency-svc-l2qzq [156.202251ms]
  I0218 18:58:43.101210 24 service_latency.go:356] Created: latency-svc-65r4k
  I0218 18:58:43.141671 24 service_latency.go:363] Got endpoints: latency-svc-65r4k [297.827654ms]
  I0218 18:58:43.152937 24 service_latency.go:356] Created: latency-svc-zclcv
  I0218 18:58:43.158849 24 service_latency.go:363] Got endpoints: latency-svc-zclcv [308.241512ms]
  I0218 18:58:43.237721 24 service_latency.go:356] Created: latency-svc-nmgf4
  I0218 18:58:43.246157 24 service_latency.go:363] Got endpoints: latency-svc-nmgf4 [384.299851ms]
  I0218 18:58:43.287748 24 service_latency.go:356] Created: latency-svc-c9ttd
  I0218 18:58:43.317545 24 service_latency.go:363] Got endpoints: latency-svc-c9ttd [455.5803ms]
  I0218 18:58:43.392819 24 service_latency.go:356] Created: latency-svc-r2tm5
  I0218 18:58:43.414606 24 service_latency.go:363] Got endpoints: latency-svc-r2tm5 [538.50927ms]
  I0218 18:58:43.424315 24 service_latency.go:356] Created: latency-svc-cl8n8
  I0218 18:58:43.437468 24 service_latency.go:363] Got endpoints: latency-svc-cl8n8 [561.427986ms]
  I0218 18:58:43.471198 24 service_latency.go:356] Created: latency-svc-mxtxm
  I0218 18:58:43.543111 24 service_latency.go:363] Got endpoints: latency-svc-mxtxm [665.84021ms]
  I0218 18:58:43.560073 24 service_latency.go:356] Created: latency-svc-xdgcv
  I0218 18:58:43.590759 24 service_latency.go:363] Got endpoints: latency-svc-xdgcv [703.709273ms]
  I0218 18:58:43.623343 24 service_latency.go:356] Created: latency-svc-h2b82
  I0218 18:58:43.643201 24 service_latency.go:363] Got endpoints: latency-svc-h2b82 [754.922575ms]
  I0218 18:58:43.734984 24 service_latency.go:356] Created: latency-svc-wgsrb
  I0218 18:58:43.751259 24 service_latency.go:356] Created: latency-svc-gsrzj
  I0218 18:58:43.751302 24 service_latency.go:363] Got endpoints: latency-svc-wgsrb [864.134543ms]
  I0218 18:58:43.782301 24 service_latency.go:363] Got endpoints: latency-svc-gsrzj [893.950971ms]
  I0218 18:58:43.793482 24 service_latency.go:356] Created: latency-svc-hnmcl
  I0218 18:58:43.869582 24 service_latency.go:363] Got endpoints: latency-svc-hnmcl [976.720592ms]
  I0218 18:58:43.889372 24 service_latency.go:356] Created: latency-svc-tdpb9
  I0218 18:58:43.918884 24 service_latency.go:363] Got endpoints: latency-svc-tdpb9 [997.879847ms]
  I0218 18:58:43.928897 24 service_latency.go:356] Created: latency-svc-4qkrl
  I0218 18:58:44.006827 24 service_latency.go:363] Got endpoints: latency-svc-4qkrl [1.008246386s]
  I0218 18:58:44.028641 24 service_latency.go:356] Created: latency-svc-24qsn
  I0218 18:58:44.045767 24 service_latency.go:363] Got endpoints: latency-svc-24qsn [1.041020114s]
  I0218 18:58:44.070877 24 service_latency.go:356] Created: latency-svc-skh2r
  I0218 18:58:44.094322 24 service_latency.go:363] Got endpoints: latency-svc-skh2r [952.600172ms]
  I0218 18:58:44.180671 24 service_latency.go:356] Created: latency-svc-cpllj
  I0218 18:58:44.191377 24 service_latency.go:356] Created: latency-svc-72wdt
  I0218 18:58:44.199337 24 service_latency.go:363] Got endpoints: latency-svc-72wdt [953.130878ms]
  I0218 18:58:44.221758 24 service_latency.go:363] Got endpoints: latency-svc-cpllj [1.062855323s]
  I0218 18:58:44.240862 24 service_latency.go:356] Created: latency-svc-qc646
  I0218 18:58:44.320582 24 service_latency.go:363] Got endpoints: latency-svc-qc646 [1.00297858s]
  I0218 18:58:44.357014 24 service_latency.go:356] Created: latency-svc-xwmwj
  I0218 18:58:44.389711 24 service_latency.go:363] Got endpoints: latency-svc-xwmwj [975.057716ms]
  I0218 18:58:44.415149 24 service_latency.go:356] Created: latency-svc-pqq66
  I0218 18:58:44.415197 24 service_latency.go:363] Got endpoints: latency-svc-pqq66 [977.695135ms]
  I0218 18:58:44.480734 24 service_latency.go:356] Created: latency-svc-hfk7p
  I0218 18:58:44.500615 24 service_latency.go:363] Got endpoints: latency-svc-hfk7p [957.430792ms]
  I0218 18:58:44.525103 24 service_latency.go:356] Created: latency-svc-gb7lb
  I0218 18:58:44.552227 24 service_latency.go:363] Got endpoints: latency-svc-gb7lb [961.417264ms]
  I0218 18:58:44.566160 24 service_latency.go:356] Created: latency-svc-88mrq
  I0218 18:58:44.645500 24 service_latency.go:363] Got endpoints: latency-svc-88mrq [1.002238129s]
  I0218 18:58:44.647349 24 service_latency.go:356] Created: latency-svc-k8f69
  I0218 18:58:44.687034 24 service_latency.go:363] Got endpoints: latency-svc-k8f69 [935.66858ms]
  I0218 18:58:44.700911 24 service_latency.go:356] Created: latency-svc-vl94l
  I0218 18:58:44.731988 24 service_latency.go:363] Got endpoints: latency-svc-vl94l [949.636224ms]
  I0218 18:58:44.735646 24 service_latency.go:356] Created: latency-svc-5rq6p
  I0218 18:58:44.821843 24 service_latency.go:363] Got endpoints: latency-svc-5rq6p [952.206342ms]
  I0218 18:58:44.839574 24 service_latency.go:356] Created: latency-svc-k6vm6
  I0218 18:58:44.861635 24 service_latency.go:363] Got endpoints: latency-svc-k6vm6 [942.702598ms]
  I0218 18:58:44.885660 24 service_latency.go:356] Created: latency-svc-dhl2v
  I0218 18:58:44.894840 24 service_latency.go:363] Got endpoints: latency-svc-dhl2v [887.927301ms]
  I0218 18:58:44.911835 24 service_latency.go:356] Created: latency-svc-dcthw
  I0218 18:58:44.999250 24 service_latency.go:363] Got endpoints: latency-svc-dcthw [953.433262ms]
  I0218 18:58:45.007899 24 service_latency.go:356] Created: latency-svc-gczc4
  I0218 18:58:45.038256 24 service_latency.go:363] Got endpoints: latency-svc-gczc4 [943.879943ms]
  I0218 18:58:45.072405 24 service_latency.go:356] Created: latency-svc-6lndk
  I0218 18:58:45.157902 24 service_latency.go:363] Got endpoints: latency-svc-6lndk [936.08188ms]
  I0218 18:58:45.185007 24 service_latency.go:356] Created: latency-svc-m4g8m
  I0218 18:58:45.214993 24 service_latency.go:363] Got endpoints: latency-svc-m4g8m [894.349948ms]
  I0218 18:58:45.262639 24 service_latency.go:356] Created: latency-svc-nlhc7
  I0218 18:58:45.325864 24 service_latency.go:363] Got endpoints: latency-svc-nlhc7 [936.103001ms]
  I0218 18:58:45.325905 24 service_latency.go:356] Created: latency-svc-c4d44
  I0218 18:58:45.335812 24 service_latency.go:363] Got endpoints: latency-svc-c4d44 [920.592443ms]
  I0218 18:58:45.368922 24 service_latency.go:356] Created: latency-svc-d4fz5
  I0218 18:58:45.398077 24 service_latency.go:356] Created: latency-svc-ktksq
  I0218 18:58:45.463103 24 service_latency.go:363] Got endpoints: latency-svc-d4fz5 [962.431666ms]
  I0218 18:58:45.479207 24 service_latency.go:363] Got endpoints: latency-svc-ktksq [926.931858ms]
  I0218 18:58:45.502256 24 service_latency.go:356] Created: latency-svc-fdk5p
  I0218 18:58:45.541976 24 service_latency.go:356] Created: latency-svc-jkmkp
  I0218 18:58:45.565325 24 service_latency.go:363] Got endpoints: latency-svc-fdk5p [919.794175ms]
  I0218 18:58:45.592320 24 service_latency.go:363] Got endpoints: latency-svc-jkmkp [905.225161ms]
  I0218 18:58:45.620501 24 service_latency.go:356] Created: latency-svc-zzn8p
  I0218 18:58:45.688142 24 service_latency.go:363] Got endpoints: latency-svc-zzn8p [956.079202ms]
  I0218 18:58:45.718901 24 service_latency.go:356] Created: latency-svc-vdt9z
  I0218 18:58:45.742931 24 service_latency.go:363] Got endpoints: latency-svc-vdt9z [921.035307ms]
  I0218 18:58:45.759838 24 service_latency.go:356] Created: latency-svc-66vsk
  I0218 18:58:45.774232 24 service_latency.go:363] Got endpoints: latency-svc-66vsk [912.5612ms]
  I0218 18:58:45.861082 24 service_latency.go:356] Created: latency-svc-8z7vl
  I0218 18:58:45.893325 24 service_latency.go:363] Got endpoints: latency-svc-8z7vl [998.443292ms]
  I0218 18:58:45.903368 24 service_latency.go:356] Created: latency-svc-rchcf
  I0218 18:58:45.912181 24 service_latency.go:356] Created: latency-svc-zcw52
  I0218 18:58:45.981711 24 service_latency.go:363] Got endpoints: latency-svc-zcw52 [982.391491ms]
  I0218 18:58:45.981756 24 service_latency.go:363] Got endpoints: latency-svc-rchcf [1.782380743s]
  I0218 18:58:46.020896 24 service_latency.go:356] Created: latency-svc-956qz
  I0218 18:58:46.053988 24 service_latency.go:363] Got endpoints: latency-svc-956qz [1.015665571s]
  I0218 18:58:46.056888 24 service_latency.go:356] Created: latency-svc-fqrl4
  I0218 18:58:46.088226 24 service_latency.go:363] Got endpoints: latency-svc-fqrl4 [930.254675ms]
  I0218 18:58:46.169137 24 service_latency.go:356] Created: latency-svc-4w7jk
  I0218 18:58:46.182803 24 service_latency.go:363] Got endpoints: latency-svc-4w7jk [967.759473ms]
  I0218 18:58:46.206668 24 service_latency.go:356] Created: latency-svc-sh76j
  I0218 18:58:46.310491 24 service_latency.go:363] Got endpoints: latency-svc-sh76j [984.577102ms]
  I0218 18:58:46.310497 24 service_latency.go:356] Created: latency-svc-6nhsh
  I0218 18:58:46.357802 24 service_latency.go:363] Got endpoints: latency-svc-6nhsh [1.021938194s]
  I0218 18:58:46.359708 24 service_latency.go:356] Created: latency-svc-rmxb2
  I0218 18:58:46.372733 24 service_latency.go:363] Got endpoints: latency-svc-rmxb2 [909.573746ms]
  I0218 18:58:46.463216 24 service_latency.go:356] Created: latency-svc-l8szg
  I0218 18:58:46.510700 24 service_latency.go:363] Got endpoints: latency-svc-l8szg [1.031454856s]
  I0218 18:58:46.512614 24 service_latency.go:356] Created: latency-svc-lzfnh
  I0218 18:58:46.535052 24 service_latency.go:363] Got endpoints: latency-svc-lzfnh [969.68354ms]
  I0218 18:58:46.557954 24 service_latency.go:356] Created: latency-svc-mgdkk
  I0218 18:58:46.634720 24 service_latency.go:363] Got endpoints: latency-svc-mgdkk [1.042342807s]
  I0218 18:58:46.655365 24 service_latency.go:356] Created: latency-svc-mpt48
  I0218 18:58:46.676628 24 service_latency.go:363] Got endpoints: latency-svc-mpt48 [988.421841ms]
  I0218 18:58:46.694964 24 service_latency.go:356] Created: latency-svc-78dxp
  I0218 18:58:46.712578 24 service_latency.go:363] Got endpoints: latency-svc-78dxp [969.596269ms]
  I0218 18:58:46.816504 24 service_latency.go:356] Created: latency-svc-rqg5b
  I0218 18:58:46.816589 24 service_latency.go:363] Got endpoints: latency-svc-rqg5b [1.04231861s]
  I0218 18:58:46.874415 24 service_latency.go:356] Created: latency-svc-xlkn9
  I0218 18:58:46.925729 24 service_latency.go:363] Got endpoints: latency-svc-xlkn9 [1.032333605s]
  I0218 18:58:47.006193 24 service_latency.go:356] Created: latency-svc-wz6qw
  I0218 18:58:47.081732 24 service_latency.go:363] Got endpoints: latency-svc-wz6qw [1.099971516s]
  I0218 18:58:47.180317 24 service_latency.go:356] Created: latency-svc-8x4pc
  I0218 18:58:47.180363 24 service_latency.go:363] Got endpoints: latency-svc-8x4pc [1.198586428s]
  I0218 18:58:47.302573 24 service_latency.go:356] Created: latency-svc-gvgmc
  I0218 18:58:47.313142 24 service_latency.go:356] Created: latency-svc-d9hs9
  I0218 18:58:47.343190 24 service_latency.go:363] Got endpoints: latency-svc-gvgmc [1.289140763s]
  I0218 18:58:47.358099 24 service_latency.go:363] Got endpoints: latency-svc-d9hs9 [1.269816201s]
  I0218 18:58:47.395563 24 service_latency.go:356] Created: latency-svc-zh4pl
  I0218 18:58:47.428718 24 service_latency.go:363] Got endpoints: latency-svc-zh4pl [1.245863812s]
  I0218 18:58:47.478234 24 service_latency.go:356] Created: latency-svc-nq29l
  I0218 18:58:47.517359 24 service_latency.go:363] Got endpoints: latency-svc-nq29l [1.206792343s]
  I0218 18:58:47.591986 24 service_latency.go:356] Created: latency-svc-5wt2z
  I0218 18:58:47.592044 24 service_latency.go:363] Got endpoints: latency-svc-5wt2z [1.234141019s]
  I0218 18:58:47.639487 24 service_latency.go:356] Created: latency-svc-229r7
  I0218 18:58:47.669927 24 service_latency.go:363] Got endpoints: latency-svc-229r7 [1.297141571s]
  I0218 18:58:47.672553 24 service_latency.go:356] Created: latency-svc-wl67g
  I0218 18:58:47.685649 24 service_latency.go:363] Got endpoints: latency-svc-wl67g [1.174885949s]
  I0218 18:58:47.766914 24 service_latency.go:356] Created: latency-svc-tcwzs
  I0218 18:58:47.781004 24 service_latency.go:363] Got endpoints: latency-svc-tcwzs [1.245903542s]
  I0218 18:58:47.811381 24 service_latency.go:356] Created: latency-svc-m5xqp
  I0218 18:58:47.821931 24 service_latency.go:363] Got endpoints: latency-svc-m5xqp [1.187156964s]
  I0218 18:58:47.911620 24 service_latency.go:356] Created: latency-svc-rhcsf
  I0218 18:58:47.926561 24 service_latency.go:363] Got endpoints: latency-svc-rhcsf [1.24987304s]
  I0218 18:58:47.935368 24 service_latency.go:356] Created: latency-svc-xl5f2
  I0218 18:58:48.023144 24 service_latency.go:363] Got endpoints: latency-svc-xl5f2 [1.310501832s]
  I0218 18:58:48.063876 24 service_latency.go:356] Created: latency-svc-944r7
  I0218 18:58:48.063922 24 service_latency.go:363] Got endpoints: latency-svc-944r7 [1.247311617s]
  I0218 18:58:48.078545 24 service_latency.go:356] Created: latency-svc-x87gg
  I0218 18:58:48.103246 24 service_latency.go:363] Got endpoints: latency-svc-x87gg [1.177450738s]
  I0218 18:58:48.173952 24 service_latency.go:356] Created: latency-svc-2bt25
  I0218 18:58:48.204179 24 service_latency.go:356] Created: latency-svc-hbd6l
  I0218 18:58:48.205733 24 service_latency.go:363] Got endpoints: latency-svc-2bt25 [1.123958246s]
  I0218 18:58:48.229951 24 service_latency.go:363] Got endpoints: latency-svc-hbd6l [1.049568812s]
  I0218 18:58:48.263303 24 service_latency.go:356] Created: latency-svc-bt7bn
  I0218 18:58:48.336799 24 service_latency.go:356] Created: latency-svc-bn2cx
  I0218 18:58:48.336827 24 service_latency.go:363] Got endpoints: latency-svc-bt7bn [993.588997ms]
  I0218 18:58:48.365291 24 service_latency.go:363] Got endpoints: latency-svc-bn2cx [1.00713731s]
  I0218 18:58:48.414712 24 service_latency.go:356] Created: latency-svc-lzzql
  I0218 18:58:48.502892 24 service_latency.go:356] Created: latency-svc-cwj9l
  I0218 18:58:48.503220 24 service_latency.go:363] Got endpoints: latency-svc-lzzql [1.074443504s]
  I0218 18:58:48.533815 24 service_latency.go:363] Got endpoints: latency-svc-cwj9l [1.016397398s]
  I0218 18:58:48.557787 24 service_latency.go:356] Created: latency-svc-rw759
  I0218 18:58:48.581609 24 service_latency.go:363] Got endpoints: latency-svc-rw759 [989.541011ms]
  I0218 18:58:48.590189 24 service_latency.go:356] Created: latency-svc-xrfk7
  I0218 18:58:48.645520 24 service_latency.go:363] Got endpoints: latency-svc-xrfk7 [975.516824ms]
  I0218 18:58:48.686198 24 service_latency.go:356] Created: latency-svc-jj7jl
  I0218 18:58:48.716992 24 service_latency.go:363] Got endpoints: latency-svc-jj7jl [1.031303309s]
  I0218 18:58:48.728199 24 service_latency.go:356] Created: latency-svc-zkhlc
  I0218 18:58:48.790283 24 service_latency.go:363] Got endpoints: latency-svc-zkhlc [1.009235078s]
  I0218 18:58:48.822070 24 service_latency.go:356] Created: latency-svc-qph56
  I0218 18:58:48.822115 24 service_latency.go:363] Got endpoints: latency-svc-qph56 [1.000134462s]
  I0218 18:58:48.866839 24 service_latency.go:356] Created: latency-svc-kwg48
  I0218 18:58:48.881512 24 service_latency.go:363] Got endpoints: latency-svc-kwg48 [954.890157ms]
  I0218 18:58:48.913200 24 service_latency.go:356] Created: latency-svc-w9bz2
  I0218 18:58:48.970545 24 service_latency.go:363] Got endpoints: latency-svc-w9bz2 [947.316461ms]
  I0218 18:58:49.016360 24 service_latency.go:356] Created: latency-svc-pcrnf
  I0218 18:58:49.046585 24 service_latency.go:363] Got endpoints: latency-svc-pcrnf [982.63719ms]
  I0218 18:58:49.064107 24 service_latency.go:356] Created: latency-svc-dpfqt
  I0218 18:58:49.097684 24 service_latency.go:363] Got endpoints: latency-svc-dpfqt [994.38412ms]
  I0218 18:58:49.159802 24 service_latency.go:356] Created: latency-svc-rt5pg
  I0218 18:58:49.199136 24 service_latency.go:363] Got endpoints: latency-svc-rt5pg [993.344389ms]
  I0218 18:58:49.208601 24 service_latency.go:356] Created: latency-svc-x7gs6
  I0218 18:58:49.310329 24 service_latency.go:363] Got endpoints: latency-svc-x7gs6 [1.080336659s]
  I0218 18:58:49.330064 24 service_latency.go:356] Created: latency-svc-sp8vk
  I0218 18:58:49.373152 24 service_latency.go:363] Got endpoints: latency-svc-sp8vk [1.036286227s]
  I0218 18:58:49.374298 24 service_latency.go:356] Created: latency-svc-lrjx7
  I0218 18:58:49.461826 24 service_latency.go:363] Got endpoints: latency-svc-lrjx7 [1.096490032s]
  I0218 18:58:49.489964 24 service_latency.go:356] Created: latency-svc-np2dn
  I0218 18:58:49.501214 24 service_latency.go:363] Got endpoints: latency-svc-np2dn [997.937093ms]
  I0218 18:58:49.541170 24 service_latency.go:356] Created: latency-svc-ztwp2
  I0218 18:58:49.623475 24 service_latency.go:363] Got endpoints: latency-svc-ztwp2 [1.089595666s]
  I0218 18:58:49.646317 24 service_latency.go:356] Created: latency-svc-tsfgs
  I0218 18:58:49.656364 24 service_latency.go:356] Created: latency-svc-tkjnd
  I0218 18:58:49.676827 24 service_latency.go:363] Got endpoints: latency-svc-tkjnd [1.031225082s]
  I0218 18:58:49.695563 24 service_latency.go:363] Got endpoints: latency-svc-tsfgs [1.113817748s]
  I0218 18:58:49.773654 24 service_latency.go:356] Created: latency-svc-9h4mc
  I0218 18:58:49.796899 24 service_latency.go:363] Got endpoints: latency-svc-9h4mc [1.079833024s]
  I0218 18:58:49.828027 24 service_latency.go:356] Created: latency-svc-6rdtj
  I0218 18:58:49.840829 24 service_latency.go:356] Created: latency-svc-hjkst
  I0218 18:58:49.846547 24 service_latency.go:363] Got endpoints: latency-svc-6rdtj [1.05617037s]
  I0218 18:58:49.925239 24 service_latency.go:363] Got endpoints: latency-svc-hjkst [1.103097678s]
  I0218 18:58:49.949008 24 service_latency.go:356] Created: latency-svc-r2wwv
  I0218 18:58:49.966027 24 service_latency.go:363] Got endpoints: latency-svc-r2wwv [1.084457884s]
  I0218 18:58:49.983082 24 service_latency.go:356] Created: latency-svc-92n8q
  I0218 18:58:50.015993 24 service_latency.go:356] Created: latency-svc-pzm2m
  I0218 18:58:50.020911 24 service_latency.go:363] Got endpoints: latency-svc-92n8q [1.050306179s]
  I0218 18:58:50.110679 24 service_latency.go:363] Got endpoints: latency-svc-pzm2m [1.064041975s]
  I0218 18:58:50.145574 24 service_latency.go:356] Created: latency-svc-gn2f9
  I0218 18:58:50.160758 24 service_latency.go:363] Got endpoints: latency-svc-gn2f9 [1.063000341s]
  I0218 18:58:50.177495 24 service_latency.go:356] Created: latency-svc-npt4h
  I0218 18:58:50.261586 24 service_latency.go:363] Got endpoints: latency-svc-npt4h [1.062397796s]
  I0218 18:58:50.272835 24 service_latency.go:356] Created: latency-svc-dxdpk
  I0218 18:58:50.293073 24 service_latency.go:363] Got endpoints: latency-svc-dxdpk [982.693545ms]
  I0218 18:58:50.328723 24 service_latency.go:356] Created: latency-svc-ndj2d
  I0218 18:58:50.427860 24 service_latency.go:356] Created: latency-svc-thz6n
  I0218 18:58:50.428115 24 service_latency.go:363] Got endpoints: latency-svc-ndj2d [1.054901336s]
  I0218 18:58:50.472115 24 service_latency.go:356] Created: latency-svc-zxlkg
  I0218 18:58:50.476913 24 service_latency.go:363] Got endpoints: latency-svc-thz6n [1.01503903s]
  I0218 18:58:50.485068 24 service_latency.go:363] Got endpoints: latency-svc-zxlkg [983.806014ms]
  I0218 18:58:50.793071 24 service_latency.go:356] Created: latency-svc-f4q7n
  I0218 18:58:50.793177 24 service_latency.go:356] Created: latency-svc-lf826
  I0218 18:58:50.862725 24 service_latency.go:356] Created: latency-svc-jqx24
  I0218 18:58:50.888997 24 service_latency.go:356] Created: latency-svc-892d9
  I0218 18:58:50.889485 24 service_latency.go:356] Created: latency-svc-j62hb
  I0218 18:58:50.909229 24 service_latency.go:363] Got endpoints: latency-svc-lf826 [432.271307ms]
  I0218 18:58:50.909282 24 service_latency.go:363] Got endpoints: latency-svc-f4q7n [616.156543ms]
  I0218 18:58:50.926003 24 service_latency.go:356] Created: latency-svc-mthnk
  I0218 18:58:50.929728 24 service_latency.go:356] Created: latency-svc-bktxs
  I0218 18:58:50.929743 24 service_latency.go:356] Created: latency-svc-qr9wz
  I0218 18:58:50.929731 24 service_latency.go:356] Created: latency-svc-tcwqk
  I0218 18:58:50.929891 24 service_latency.go:356] Created: latency-svc-njp7m
  I0218 18:58:50.937106 24 service_latency.go:356] Created: latency-svc-xqck7
  I0218 18:58:50.939053 24 service_latency.go:356] Created: latency-svc-btzs9
  I0218 18:58:50.939117 24 service_latency.go:356] Created: latency-svc-8k2z5
  I0218 18:58:50.939117 24 service_latency.go:356] Created: latency-svc-9tqh8
  I0218 18:58:50.939131 24 service_latency.go:356] Created: latency-svc-fmcmg
  I0218 18:58:50.950286 24 service_latency.go:363] Got endpoints: latency-svc-jqx24 [1.254660457s]
  I0218 18:58:50.956000 24 service_latency.go:363] Got endpoints: latency-svc-892d9 [1.030709739s]
  I0218 18:58:51.062052 24 service_latency.go:363] Got endpoints: latency-svc-8k2z5 [1.265079492s]
  I0218 18:58:51.062165 24 service_latency.go:363] Got endpoints: latency-svc-j62hb [1.096092366s]
  I0218 18:58:51.087082 24 service_latency.go:363] Got endpoints: latency-svc-fmcmg [1.410194754s]
  I0218 18:58:51.102363 24 service_latency.go:363] Got endpoints: latency-svc-xqck7 [674.192724ms]
  I0218 18:58:51.119474 24 service_latency.go:363] Got endpoints: latency-svc-mthnk [634.375195ms]
  I0218 18:58:51.119505 24 service_latency.go:363] Got endpoints: latency-svc-qr9wz [857.850159ms]
  I0218 18:58:51.119573 24 service_latency.go:363] Got endpoints: latency-svc-tcwqk [1.496011937s]
  I0218 18:58:51.141952 24 service_latency.go:363] Got endpoints: latency-svc-njp7m [1.031210869s]
  I0218 18:58:51.257252 24 service_latency.go:363] Got endpoints: latency-svc-9tqh8 [1.23628036s]
  I0218 18:58:51.257282 24 service_latency.go:363] Got endpoints: latency-svc-bktxs [1.410666651s]
  I0218 18:58:51.276361 24 service_latency.go:363] Got endpoints: latency-svc-btzs9 [1.115544189s]
  I0218 18:58:51.305998 24 service_latency.go:356] Created: latency-svc-bqlnw
  I0218 18:58:51.331330 24 service_latency.go:356] Created: latency-svc-9mls4
  I0218 18:58:51.344155 24 service_latency.go:363] Got endpoints: latency-svc-bqlnw [434.74561ms]
  I0218 18:58:51.430308 24 service_latency.go:363] Got endpoints: latency-svc-9mls4 [520.976475ms]
  I0218 18:58:51.456631 24 service_latency.go:356] Created: latency-svc-thn4r
  I0218 18:58:51.468993 24 service_latency.go:363] Got endpoints: latency-svc-thn4r [518.649173ms]
  I0218 18:58:51.520023 24 service_latency.go:356] Created: latency-svc-zkbvr
  I0218 18:58:51.583193 24 service_latency.go:363] Got endpoints: latency-svc-zkbvr [627.12231ms]
  I0218 18:58:51.593518 24 service_latency.go:356] Created: latency-svc-hsn9k
  I0218 18:58:51.620782 24 service_latency.go:363] Got endpoints: latency-svc-hsn9k [558.593301ms]
  I0218 18:58:51.641815 24 service_latency.go:356] Created: latency-svc-8vt4b
  I0218 18:58:51.726272 24 service_latency.go:363] Got endpoints: latency-svc-8vt4b [664.158555ms]
  I0218 18:58:51.753728 24 service_latency.go:356] Created: latency-svc-czlc9
  I0218 18:58:51.769862 24 service_latency.go:363] Got endpoints: latency-svc-czlc9 [682.723717ms]
  I0218 18:58:51.792160 24 service_latency.go:356] Created: latency-svc-q67k8
  I0218 18:58:51.813126 24 service_latency.go:363] Got endpoints: latency-svc-q67k8 [710.721798ms]
  I0218 18:58:51.874839 24 service_latency.go:356] Created: latency-svc-frmtn
  I0218 18:58:51.902833 24 service_latency.go:363] Got endpoints: latency-svc-frmtn [783.302217ms]
  I0218 18:58:51.926984 24 service_latency.go:356] Created: latency-svc-k657q
  I0218 18:58:51.953820 24 service_latency.go:363] Got endpoints: latency-svc-k657q [834.287967ms]
  I0218 18:58:52.022748 24 service_latency.go:356] Created: latency-svc-gkksj
  I0218 18:58:52.045988 24 service_latency.go:363] Got endpoints: latency-svc-gkksj [926.350516ms]
  I0218 18:58:52.082391 24 service_latency.go:356] Created: latency-svc-mtr5t
  I0218 18:58:52.090894 24 service_latency.go:356] Created: latency-svc-9pkqj
  I0218 18:58:52.094048 24 service_latency.go:363] Got endpoints: latency-svc-mtr5t [952.041703ms]
  I0218 18:58:52.181068 24 service_latency.go:363] Got endpoints: latency-svc-9pkqj [923.658575ms]
  I0218 18:58:52.191481 24 service_latency.go:356] Created: latency-svc-lfjbn
  I0218 18:58:52.229119 24 service_latency.go:363] Got endpoints: latency-svc-lfjbn [971.81667ms]
  I0218 18:58:52.241962 24 service_latency.go:356] Created: latency-svc-mgrhx
  I0218 18:58:52.262748 24 service_latency.go:363] Got endpoints: latency-svc-mgrhx [986.332036ms]
  I0218 18:58:52.345648 24 service_latency.go:356] Created: latency-svc-6xbgd
  I0218 18:58:52.366655 24 service_latency.go:363] Got endpoints: latency-svc-6xbgd [1.022438153s]
  I0218 18:58:52.392518 24 service_latency.go:356] Created: latency-svc-v8qm8
  I0218 18:58:52.428917 24 service_latency.go:363] Got endpoints: latency-svc-v8qm8 [998.519698ms]
  I0218 18:58:52.432473 24 service_latency.go:356] Created: latency-svc-j4trz
  I0218 18:58:52.529358 24 service_latency.go:363] Got endpoints: latency-svc-j4trz [1.060304233s]
  I0218 18:58:52.529644 24 service_latency.go:356] Created: latency-svc-4bwrn
  I0218 18:58:52.546182 24 service_latency.go:363] Got endpoints: latency-svc-4bwrn [962.927211ms]
  I0218 18:58:52.568382 24 service_latency.go:356] Created: latency-svc-6gh6r
  I0218 18:58:52.652319 24 service_latency.go:363] Got endpoints: latency-svc-6gh6r [1.031492053s]
  I0218 18:58:52.657026 24 service_latency.go:356] Created: latency-svc-pzd92
  I0218 18:58:52.677057 24 service_latency.go:363] Got endpoints: latency-svc-pzd92 [950.73437ms]
  I0218 18:58:52.716687 24 service_latency.go:356] Created: latency-svc-77dgh
  I0218 18:58:52.735589 24 service_latency.go:363] Got endpoints: latency-svc-77dgh [965.672209ms]
  I0218 18:58:52.752948 24 service_latency.go:356] Created: latency-svc-f9swz
  I0218 18:58:52.816874 24 service_latency.go:356] Created: latency-svc-sj4p5
  I0218 18:58:52.853638 24 service_latency.go:363] Got endpoints: latency-svc-sj4p5 [950.739848ms]
  I0218 18:58:52.853675 24 service_latency.go:363] Got endpoints: latency-svc-f9swz [1.040474162s]
  I0218 18:58:52.891576 24 service_latency.go:356] Created: latency-svc-lmfkg
  I0218 18:58:52.966075 24 service_latency.go:363] Got endpoints: latency-svc-lmfkg [1.012192127s]
  I0218 18:58:52.990678 24 service_latency.go:356] Created: latency-svc-8jg2w
  I0218 18:58:52.999650 24 service_latency.go:363] Got endpoints: latency-svc-8jg2w [953.613171ms]
  I0218 18:58:53.026240 24 service_latency.go:356] Created: latency-svc-5d8ph
  I0218 18:58:53.047867 24 service_latency.go:363] Got endpoints: latency-svc-5d8ph [953.800973ms]
  I0218 18:58:53.076739 24 service_latency.go:356] Created: latency-svc-ksxdw
  I0218 18:58:53.161053 24 service_latency.go:356] Created: latency-svc-ct7pn
  I0218 18:58:53.161320 24 service_latency.go:363] Got endpoints: latency-svc-ksxdw [980.19886ms]
  I0218 18:58:53.189039 24 service_latency.go:363] Got endpoints: latency-svc-ct7pn [959.878514ms]
  I0218 18:58:53.209670 24 service_latency.go:356] Created: latency-svc-dm7p4
  I0218 18:58:53.262284 24 service_latency.go:363] Got endpoints: latency-svc-dm7p4 [999.485156ms]
  I0218 18:58:53.325608 24 service_latency.go:356] Created: latency-svc-wrpg8
  I0218 18:58:53.348479 24 service_latency.go:363] Got endpoints: latency-svc-wrpg8 [981.763729ms]
  I0218 18:58:53.382488 24 service_latency.go:356] Created: latency-svc-fswbp
  I0218 18:58:53.433761 24 service_latency.go:356] Created: latency-svc-5rq2c
  I0218 18:58:53.470712 24 service_latency.go:363] Got endpoints: latency-svc-fswbp [1.041735356s]
  I0218 18:58:53.477339 24 service_latency.go:363] Got endpoints: latency-svc-5rq2c [947.938534ms]
  I0218 18:58:53.572974 24 service_latency.go:356] Created: latency-svc-d24fx
  I0218 18:58:53.592028 24 service_latency.go:363] Got endpoints: latency-svc-d24fx [1.045764281s]
  I0218 18:58:53.609962 24 service_latency.go:356] Created: latency-svc-zfr8t
  I0218 18:58:53.671041 24 service_latency.go:356] Created: latency-svc-gb258
  I0218 18:58:53.681578 24 service_latency.go:363] Got endpoints: latency-svc-zfr8t [1.02919899s]
  I0218 18:58:53.717030 24 service_latency.go:363] Got endpoints: latency-svc-gb258 [1.039929315s]
  I0218 18:58:53.743591 24 service_latency.go:356] Created: latency-svc-zwvpp
  I0218 18:58:53.778385 24 service_latency.go:363] Got endpoints: latency-svc-zwvpp [1.042748145s]
  I0218 18:58:53.778522 24 service_latency.go:356] Created: latency-svc-rr5tq
  I0218 18:58:53.838388 24 service_latency.go:363] Got endpoints: latency-svc-rr5tq [984.708147ms]
  I0218 18:58:53.865242 24 service_latency.go:356] Created: latency-svc-fwn96
  I0218 18:58:53.877037 24 service_latency.go:363] Got endpoints: latency-svc-fwn96 [1.023306767s]
  I0218 18:58:53.922412 24 service_latency.go:356] Created: latency-svc-vj9j8
  I0218 18:58:53.943952 24 service_latency.go:356] Created: latency-svc-6qz85
  I0218 18:58:54.023386 24 service_latency.go:363] Got endpoints: latency-svc-vj9j8 [1.02368808s]
  I0218 18:58:54.031779 24 service_latency.go:363] Got endpoints: latency-svc-6qz85 [1.065652911s]
  I0218 18:58:54.049477 24 service_latency.go:356] Created: latency-svc-k9flq
  I0218 18:58:54.083943 24 service_latency.go:363] Got endpoints: latency-svc-k9flq [1.036031955s]
  I0218 18:58:54.088825 24 service_latency.go:356] Created: latency-svc-75h6h
  I0218 18:58:54.175172 24 service_latency.go:363] Got endpoints: latency-svc-75h6h [1.013822593s]
  I0218 18:58:54.194484 24 service_latency.go:356] Created: latency-svc-hvlhm
  I0218 18:58:54.216713 24 service_latency.go:356] Created: latency-svc-n4b8z
  I0218 18:58:54.221978 24 service_latency.go:363] Got endpoints: latency-svc-hvlhm [1.032893425s]
  I0218 18:58:54.229013 24 service_latency.go:363] Got endpoints: latency-svc-n4b8z [966.677626ms]
  I0218 18:58:54.337587 24 service_latency.go:356] Created: latency-svc-7jtdf
  I0218 18:58:54.349964 24 service_latency.go:363] Got endpoints: latency-svc-7jtdf [1.001405929s]
  I0218 18:58:54.376794 24 service_latency.go:356] Created: latency-svc-g8ht7
  I0218 18:58:54.413698 24 service_latency.go:363] Got endpoints: latency-svc-g8ht7 [942.937848ms]
  I0218 18:58:54.464850 24 service_latency.go:356] Created: latency-svc-qdtqv
  I0218 18:58:54.490415 24 service_latency.go:363] Got endpoints: latency-svc-qdtqv [1.013036643s]
  I0218 18:58:54.490684 24 service_latency.go:114] Latencies: [33.607299ms 45.950563ms 54.864001ms 65.080123ms 67.456448ms 72.2876ms 84.54797ms 101.08581ms 122.171235ms 147.728112ms 150.003366ms 150.337488ms 156.202251ms 159.004915ms 168.65588ms 175.256867ms 209.125467ms 233.465748ms 236.503176ms 238.79096ms 262.363888ms 292.433127ms 297.827654ms 303.830011ms 308.241512ms 310.367693ms 320.912989ms 320.988842ms 322.923196ms 348.474073ms 348.793022ms 384.299851ms 432.271307ms 434.74561ms 455.5803ms 518.649173ms 520.976475ms 538.50927ms 558.593301ms 561.427986ms 616.156543ms 627.12231ms 634.375195ms 664.158555ms 665.84021ms 674.192724ms 682.723717ms 703.709273ms 710.721798ms 754.922575ms 783.302217ms 834.287967ms 857.850159ms 864.134543ms 887.927301ms 893.950971ms 894.349948ms 905.225161ms 909.573746ms 912.5612ms 919.794175ms 920.592443ms 921.035307ms 923.658575ms 926.350516ms 926.931858ms 930.254675ms 935.66858ms 936.08188ms 936.103001ms 942.702598ms 942.937848ms 943.879943ms 947.316461ms 947.938534ms 949.636224ms 950.73437ms 950.739848ms 952.041703ms 952.206342ms 952.600172ms 953.130878ms 953.433262ms 953.613171ms 953.800973ms 954.890157ms 956.079202ms 957.430792ms 959.878514ms 961.417264ms 962.431666ms 962.927211ms 965.672209ms 966.677626ms 967.759473ms 969.596269ms 969.68354ms 971.81667ms 975.057716ms 975.516824ms 976.720592ms 977.695135ms 980.19886ms 981.763729ms 982.391491ms 982.63719ms 982.693545ms 983.806014ms 984.577102ms 984.708147ms 986.332036ms 988.421841ms 989.541011ms 993.344389ms 993.588997ms 994.38412ms 997.879847ms 997.937093ms 998.443292ms 998.519698ms 999.485156ms 1.000134462s 1.001405929s 1.002238129s 1.00297858s 1.00713731s 1.008246386s 1.009235078s 1.012192127s 1.013036643s 1.013822593s 1.01503903s 1.015665571s 1.016397398s 1.021938194s 1.022438153s 1.023306767s 1.02368808s 1.02919899s 1.030709739s 1.031210869s 1.031225082s 1.031303309s 1.031454856s 1.031492053s 1.032333605s 1.032893425s 1.036031955s 1.036286227s 1.039929315s 1.040474162s 1.041020114s 1.041735356s 1.04231861s 1.042342807s 1.042748145s 1.045764281s 1.049568812s 1.050306179s 1.054901336s 1.05617037s 1.060304233s 1.062397796s 1.062855323s 1.063000341s 1.064041975s 1.065652911s 1.074443504s 1.079833024s 1.080336659s 1.084457884s 1.089595666s 1.096092366s 1.096490032s 1.099971516s 1.103097678s 1.113817748s 1.115544189s 1.123958246s 1.174885949s 1.177450738s 1.187156964s 1.198586428s 1.206792343s 1.234141019s 1.23628036s 1.245863812s 1.245903542s 1.247311617s 1.24987304s 1.254660457s 1.265079492s 1.269816201s 1.289140763s 1.297141571s 1.310501832s 1.410194754s 1.410666651s 1.496011937s 1.782380743s]
  I0218 18:58:54.490702 24 service_latency.go:118] 50 %ile: 976.720592ms
  I0218 18:58:54.490714 24 service_latency.go:119] 90 %ile: 1.177450738s
  I0218 18:58:54.490726 24 service_latency.go:120] 99 %ile: 1.496011937s
  I0218 18:58:54.490735 24 service_latency.go:121] Total sample count: 200
  I0218 18:58:54.491680 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-956" for this suite. @ 02/18/25 18:58:54.527
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.314 seconds]
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:54.568
  I0218 18:58:54.568742 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename secrets @ 02/18/25 18:58:54.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:54.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:54.636
  I0218 18:58:54.849077 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4205" for this suite. @ 02/18/25 18:58:54.862
  << Timeline
------------------------------
SSSSSSSSSSSSS
------------------------------
• [0.156 seconds]
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:54.894
  I0218 18:58:54.894575 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename podtemplate @ 02/18/25 18:58:54.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:54.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:54.96
  STEP: Create a pod template @ 02/18/25 18:58:54.975
  STEP: Replace a pod template @ 02/18/25 18:58:54.991
  I0218 18:58:55.016796 24 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0218 18:58:55.017680 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6346" for this suite. @ 02/18/25 18:58:55.035
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
• [4.016 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:55.065
  I0218 18:58:55.065363 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename webhook @ 02/18/25 18:58:55.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:55.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:55.119
  STEP: Setting up server cert @ 02/18/25 18:58:55.221
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 18:58:55.551
  STEP: Deploying the webhook pod @ 02/18/25 18:58:55.574
  STEP: Wait for the deployment to be ready @ 02/18/25 18:58:55.602
  I0218 18:58:55.629799 24 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 02/18/25 18:58:57.664
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 18:58:57.692
  I0218 18:58:58.693635 24 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 02/18/25 18:58:58.718
  STEP: create a namespace for the webhook @ 02/18/25 18:58:58.78
  STEP: create a configmap should be unconditionally rejected by the webhook @ 02/18/25 18:58:58.814
  I0218 18:58:58.980270 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7364" for this suite. @ 02/18/25 18:58:59.007
  STEP: Destroying namespace "webhook-markers-9005" for this suite. @ 02/18/25 18:58:59.034
  STEP: Destroying namespace "fail-closed-namespace-9048" for this suite. @ 02/18/25 18:58:59.053
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.136 seconds]
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:59.099
  I0218 18:58:59.099831 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:58:59.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:59.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:59.159
  STEP: Creating the pod @ 02/18/25 18:58:59.175
  I0218 18:59:01.941300 24 pod_client.go:173] Successfully updated pod "labelsupdate21ad9f3f-2699-4d62-941a-85e5235af9bf"
  I0218 18:59:04.060970 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7753" for this suite. @ 02/18/25 18:59:04.105
  << Timeline
------------------------------
S
------------------------------
• [4.851 seconds]
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:59:04.237
  I0218 18:59:04.237965 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename downward-api @ 02/18/25 18:59:04.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:59:04.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:59:04.426
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 18:59:04.441
  STEP: Saw pod success @ 02/18/25 18:59:08.792
  I0218 18:59:08.802315 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod downwardapi-volume-e8fd9175-9736-44e7-a230-24f39002d50b container client-container: <nil>
  STEP: delete the pod @ 02/18/25 18:59:08.836
  I0218 18:59:08.950602 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3769" for this suite. @ 02/18/25 18:59:09.026
  << Timeline
------------------------------
SSSSSSSSSSSS
------------------------------
• [0.289 seconds]
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1830

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:59:09.099
  I0218 18:59:09.099508 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename kubectl @ 02/18/25 18:59:09.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:59:09.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:59:09.218
  STEP: starting the proxy server @ 02/18/25 18:59:09.236
  I0218 18:59:09.236790 24 util.go:590] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3612362775 --namespace=kubectl-1262 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 02/18/25 18:59:09.319
  I0218 18:59:09.345638 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0218 18:59:09.350266 24 kubectl.go:2226] kubectl proxy stderr: W0218 18:59:09.318320    1196 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0218 18:59:09.350250 24 kubectl.go:2221] kubectl proxy stdout: Starting to serve on 127.0.0.1:38309

  STEP: Destroying namespace "kubectl-1262" for this suite. @ 02/18/25 18:59:09.363
  << Timeline
------------------------------
SS
------------------------------
• [52.398 seconds]
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:59:09.391
  I0218 18:59:09.391885 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename cronjob @ 02/18/25 18:59:09.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:59:09.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:59:09.559
  STEP: Creating a ForbidConcurrent cronjob @ 02/18/25 18:59:09.575
  STEP: Ensuring a job is scheduled @ 02/18/25 18:59:09.633
  STEP: Ensuring exactly one is scheduled @ 02/18/25 19:00:01.648
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 02/18/25 19:00:01.665
  STEP: Ensuring no more jobs are scheduled @ 02/18/25 19:00:01.681
  STEP: Removing cronjob @ 02/18/25 19:00:01.695
  I0218 19:00:01.717817 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9758" for this suite. @ 02/18/25 19:00:01.757
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.378 seconds]
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:01.809
  I0218 19:00:01.809351 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pods @ 02/18/25 19:00:01.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:01.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:01.883
  STEP: Create set of pods @ 02/18/25 19:00:01.91
  I0218 19:00:01.949126 24 pods.go:871] created test-pod-1
  I0218 19:00:01.988288 24 pods.go:871] created test-pod-2
  I0218 19:00:02.010559 24 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 02/18/25 19:00:02.01
  STEP: waiting for all pods to be deleted @ 02/18/25 19:00:04.131
  I0218 19:00:04.155627 24 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0218 19:00:05.145608 24 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0218 19:00:06.142650 24 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  I0218 19:00:07.145932 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-563" for this suite. @ 02/18/25 19:00:07.17
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.268 seconds]
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:678

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:07.196
  I0218 19:00:07.196525 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 19:00:07.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:07.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:07.287
  STEP: creating a ServiceAccount @ 02/18/25 19:00:07.308
  STEP: watching for the ServiceAccount to be added @ 02/18/25 19:00:07.341
  STEP: patching the ServiceAccount @ 02/18/25 19:00:07.351
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 02/18/25 19:00:07.367
  STEP: deleting the ServiceAccount @ 02/18/25 19:00:07.38
  I0218 19:00:07.419644 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9052" for this suite. @ 02/18/25 19:00:07.438
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.146 seconds]
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:07.497
  I0218 19:00:07.497900 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename aggregateddiscovery @ 02/18/25 19:00:07.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:07.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:07.568
  I0218 19:00:07.608186 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-538" for this suite. @ 02/18/25 19:00:07.626
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [3.096 seconds]
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:07.65
  I0218 19:00:07.650811 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename svcaccounts @ 02/18/25 19:00:07.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:07.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:07.719
  STEP: reading a file in the container @ 02/18/25 19:00:09.851
  I0218 19:00:09.851829 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7224 pod-service-account-34dd9b6a-6e1f-4af8-a7f1-f3417cdd94e8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 02/18/25 19:00:10.135
  I0218 19:00:10.135728 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7224 pod-service-account-34dd9b6a-6e1f-4af8-a7f1-f3417cdd94e8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 02/18/25 19:00:10.416
  I0218 19:00:10.416946 24 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7224 pod-service-account-34dd9b6a-6e1f-4af8-a7f1-f3417cdd94e8 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0218 19:00:10.693900 24 service_accounts.go:120] Got root ca configmap in namespace "svcaccounts-7224"
  I0218 19:00:10.703001 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7224" for this suite. @ 02/18/25 19:00:10.725
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.846 seconds]
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:10.754
  I0218 19:00:10.754854 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename gc @ 02/18/25 19:00:10.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:10.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:10.832
  STEP: create the deployment @ 02/18/25 19:00:10.859
  W0218 19:00:10.887940      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 02/18/25 19:00:10.888
  STEP: delete the deployment @ 02/18/25 19:00:10.905
  STEP: wait for all rs to be garbage collected @ 02/18/25 19:00:10.923
  STEP: expected 0 rs, got 1 rs @ 02/18/25 19:00:10.96
  STEP: expected 0 pods, got 2 pods @ 02/18/25 19:00:10.983
  STEP: Gathering metrics @ 02/18/25 19:00:11.463
  W0218 19:00:11.541536      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0218 19:00:11.541562 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0218 19:00:11.542352 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1693" for this suite. @ 02/18/25 19:00:11.566
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.941 seconds]
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:11.619
  I0218 19:00:11.619008 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename field-validation @ 02/18/25 19:00:11.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:11.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:11.7
  I0218 19:00:11.718026 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  W0218 19:00:13.882105      24 warnings.go:70] unknown field "alpha"
  W0218 19:00:13.882123      24 warnings.go:70] unknown field "beta"
  W0218 19:00:13.882128      24 warnings.go:70] unknown field "delta"
  W0218 19:00:13.882139      24 warnings.go:70] unknown field "epsilon"
  W0218 19:00:13.882143      24 warnings.go:70] unknown field "gamma"
  I0218 19:00:14.518891 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-770" for this suite. @ 02/18/25 19:00:14.542
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [10.217 seconds]
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:14.586
  I0218 19:00:14.586587 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename gc @ 02/18/25 19:00:14.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:14.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:14.643
  STEP: create the rc @ 02/18/25 19:00:14.665
  W0218 19:00:14.679552      24 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 02/18/25 19:00:19.695
  STEP: wait for all pods to be garbage collected @ 02/18/25 19:00:19.715
  STEP: Gathering metrics @ 02/18/25 19:00:24.738
  W0218 19:00:24.763827      24 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0218 19:00:24.763852 24 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0218 19:00:24.764823 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-942" for this suite. @ 02/18/25 19:00:24.78
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.575 seconds]
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:24.824
  I0218 19:00:24.824630 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename dns @ 02/18/25 19:00:24.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:24.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:24.879
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 02/18/25 19:00:24.897
  I0218 19:00:24.937409 24 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4388  d8a0cff8-f72f-4ce8-8470-a3ddc4f98498 222667 0 2025-02-18 19:00:24 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-02-18 19:00:24 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4xw6p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.53,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4xw6p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 02/18/25 19:00:26.972
  I0218 19:00:26.972080 24 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4388 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 19:00:26.972105 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 19:00:26.972165 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/dns-4388/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 02/18/25 19:00:27.145
  I0218 19:00:27.145992 24 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4388 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 19:00:27.146026 24 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 19:00:27.146114 24 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/dns-4388/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0218 19:00:27.319196 24 dns.go:450] Deleting pod test-dns-nameservers...
  I0218 19:00:27.359569 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4388" for this suite. @ 02/18/25 19:00:27.381
  << Timeline
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
• [21.469 seconds]
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:27.413
  I0218 19:00:27.413379 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename chunking @ 02/18/25 19:00:27.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:27.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:27.472
  STEP: creating a large number of resources @ 02/18/25 19:00:27.49
  STEP: retrieving those results in paged fashion several times @ 02/18/25 19:00:45.13
  I0218 19:00:45.178317 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0218 19:00:45.225820 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0218 19:00:45.280467 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0218 19:00:45.328093 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0218 19:00:45.376015 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0218 19:00:45.427017 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0218 19:00:45.479033 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0218 19:00:45.525699 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0218 19:00:45.584642 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0218 19:00:45.627403 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0218 19:00:45.686510 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0218 19:00:45.738226 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0218 19:00:45.779701 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0218 19:00:45.828420 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0218 19:00:45.878191 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0218 19:00:45.927674 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0218 19:00:45.975478 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0218 19:00:46.027324 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0218 19:00:46.077731 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0218 19:00:46.131644 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0218 19:00:46.178213 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0218 19:00:46.228494 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0218 19:00:46.276293 24 chunking.go:98] Retrieved 17/17 results with rv 223194 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMTk0LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0218 19:00:46.332370 24 chunking.go:98] Retrieved 9/17 results with rv 223194 and continue 
  I0218 19:00:46.380859 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0218 19:00:46.427357 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0218 19:00:46.478683 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0218 19:00:46.530396 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0218 19:00:46.578067 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0218 19:00:46.634153 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0218 19:00:46.676910 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0218 19:00:46.726234 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0218 19:00:46.776754 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0218 19:00:46.827796 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0218 19:00:46.876034 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0218 19:00:46.927765 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0218 19:00:46.978388 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0218 19:00:47.025952 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0218 19:00:47.078577 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0218 19:00:47.130394 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0218 19:00:47.176048 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0218 19:00:47.228295 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0218 19:00:47.281027 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0218 19:00:47.324084 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0218 19:00:47.377355 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0218 19:00:47.426722 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0218 19:00:47.475683 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0218 19:00:47.534966 24 chunking.go:98] Retrieved 9/17 results with rv 223202 and continue 
  I0218 19:00:47.576181 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0218 19:00:47.633315 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0218 19:00:47.683276 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0218 19:00:47.726447 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0218 19:00:47.774586 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0218 19:00:47.826948 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0218 19:00:47.876367 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0218 19:00:47.929031 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0218 19:00:47.981983 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0218 19:00:48.028281 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0218 19:00:48.075849 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0218 19:00:48.126844 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0218 19:00:48.176310 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0218 19:00:48.228173 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0218 19:00:48.275561 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0218 19:00:48.327532 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0218 19:00:48.374925 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0218 19:00:48.428537 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0218 19:00:48.478660 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0218 19:00:48.526081 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0218 19:00:48.577801 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0218 19:00:48.627408 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0218 19:00:48.676017 24 chunking.go:98] Retrieved 17/17 results with rv 223202 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjIzMjAyLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0218 19:00:48.727773 24 chunking.go:98] Retrieved 9/17 results with rv 223202 and continue 
  STEP: retrieving those results all at once @ 02/18/25 19:00:48.727
  I0218 19:00:48.790786 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6431" for this suite. @ 02/18/25 19:00:48.827
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [0.281 seconds]
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:48.895
  I0218 19:00:48.895990 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename csi-storageclass @ 02/18/25 19:00:48.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:48.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:48.945
  STEP: Creating a StorageClass @ 02/18/25 19:00:48.965
  STEP: Get StorageClass "e2e-zdbrj" @ 02/18/25 19:00:48.979
  STEP: Patching the StorageClass "e2e-zdbrj" @ 02/18/25 19:00:48.988
  STEP: Delete StorageClass "e2e-zdbrj" @ 02/18/25 19:00:49.003
  STEP: Confirm deletion of StorageClass "e2e-zdbrj" @ 02/18/25 19:00:49.021
  STEP: Create a replacement StorageClass @ 02/18/25 19:00:49.034
  STEP: Updating StorageClass "e2e-v2-b7spj" @ 02/18/25 19:00:49.048
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-b7spj=updated" @ 02/18/25 19:00:49.074
  STEP: Deleting StorageClass "e2e-v2-b7spj" via DeleteCollection @ 02/18/25 19:00:49.086
  STEP: Confirm deletion of StorageClass "e2e-v2-b7spj" @ 02/18/25 19:00:49.109
  I0218 19:00:49.130140 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-3501" for this suite. @ 02/18/25 19:00:49.151
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [145.527 seconds]
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 18:58:26.35
  I0218 18:58:26.350647 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename container-probe @ 02/18/25 18:58:26.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 18:58:26.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 18:58:26.396
  STEP: Creating pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417 @ 02/18/25 18:58:26.411
  E0218 18:58:26.604821      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:27.605389      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 02/18/25 18:58:28.46
  I0218 18:58:28.470780 26 container_probe.go:1749] Initial restart count of pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b is 0
  I0218 18:58:28.482078 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:28.605359      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:29.606174      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:30.494217 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:30.606387      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:31.606874      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:32.505060 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:32.607296      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:33.607783      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:34.518055 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:34.608350      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:35.608800      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:36.528007 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:36.609238      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:37.609643      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:38.539889 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:38.610095      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:39.610837      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:40.549375 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:40.611618      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:41.611961      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:42.568919 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:42.612063      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:43.613171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:44.614178      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:44.647191 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:45.614621      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:46.614997      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:46.658765 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:47.615995      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:48.616410      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:48.669243 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  I0218 18:58:48.669291 26 container_probe.go:1763] Restart count of pod container-probe-5417/liveness-096d88e0-ea22-4bfd-8561-224326c7c49b is now 1 (20.198474338s elapsed)
  E0218 18:58:49.617393      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:50.617697      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:50.700909 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:51.618469      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:52.618803      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:52.720855 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:53.619616      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:54.620409      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:54.739820 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:55.621341      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:56.621681      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:56.750241 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:57.622077      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:58:58.622608      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:58:58.762798 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:58:59.623806      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:00.624698      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:00.850345 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:01.624876      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:02.626830      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:02.867183 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:03.627734      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:04.628721      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:04.893383 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:05.629813      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:06.630660      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:06.986027 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:07.631513      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:08.632055      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:09.031723 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  I0218 18:59:09.031764 26 container_probe.go:1763] Restart count of pod container-probe-5417/liveness-096d88e0-ea22-4bfd-8561-224326c7c49b is now 2 (40.560947259s elapsed)
  E0218 18:59:09.632350      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:10.632686      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:11.062965 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:11.633367      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:12.633518      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:13.073715 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:13.635061      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:14.635954      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:15.098401 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:15.636850      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:16.636915      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:17.119884 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:17.637110      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:18.638003      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:19.137715 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:19.639041      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:20.639465      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:21.149980 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:21.640186      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:22.640623      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:23.162662 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:23.640730      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:24.641593      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:25.175606 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:25.641843      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:26.642408      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:27.187947 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  I0218 18:59:27.187993 26 container_probe.go:1763] Restart count of pod container-probe-5417/liveness-096d88e0-ea22-4bfd-8561-224326c7c49b is now 3 (58.717176129s elapsed)
  E0218 18:59:27.643653      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:28.643864      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:29.202535 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:29.643951      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:30.644181      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:31.215613 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:31.645121      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:32.645651      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:33.227999 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:33.646662      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:34.647465      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:35.239632 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:35.648109      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:36.648542      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:37.252240 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:37.648404      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:38.648732      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:39.264216 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:39.649766      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:40.650185      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:41.276463 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:41.651005      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:42.651632      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:43.289238 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:43.651693      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:44.652385      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:45.301651 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:45.653165      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:46.653736      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:47.316362 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  I0218 18:59:47.316408 26 container_probe.go:1763] Restart count of pod container-probe-5417/liveness-096d88e0-ea22-4bfd-8561-224326c7c49b is now 4 (1m18.845590491s elapsed)
  E0218 18:59:47.654854      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:48.654946      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:49.326379 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:49.655057      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:50.655281      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:51.341109 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:51.655821      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:52.656267      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:53.356080 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:53.657053      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:54.657921      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:55.369321 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:55.658383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:56.658977      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:57.381946 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:57.660031      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 18:59:58.660611      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 18:59:59.392257 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 18:59:59.661145      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:00.661585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:01.406418 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:01.661711      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:02.662455      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:03.421950 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:03.662981      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:04.663652      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:05.433321 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:05.664413      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:06.665078      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:07.449873 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:07.665808      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:08.666257      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:09.465239 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:09.667307      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:10.667668      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:11.478623 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:11.668367      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:12.669064      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:13.510053 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:13.670174      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:14.670989      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:15.524720 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:15.671599      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:16.672144      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:17.534783 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:17.672678      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:18.673307      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:19.546623 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:19.673693      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:20.674465      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:21.561230 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:21.675094      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:22.675537      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:23.573013 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:23.676014      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:24.676854      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:25.589308 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:25.677249      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:26.677301      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:27.603918 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:27.677746      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:28.678243      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:29.619775 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:29.678706      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:30.679113      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:31.631741 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:31.679677      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:32.680251      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:33.660799 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:33.681054      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:34.681741      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:35.673140 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:35.682235      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:36.682738      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:37.683514      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:37.695929 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:38.684102      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:39.684679      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:39.709016 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:40.685144      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:41.686231      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:41.725260 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:42.687337      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:43.688021      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:43.741887 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:44.688524      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:45.689114      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:45.753952 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:46.689256      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:47.689655      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:47.764699 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:48.690004      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:49.690815      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:49.785668 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  E0218 19:00:50.691800      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:51.692415      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:51.803103 26 container_probe.go:1759] Get pod liveness-096d88e0-ea22-4bfd-8561-224326c7c49b in namespace container-probe-5417
  I0218 19:00:51.803151 26 container_probe.go:1763] Restart count of pod container-probe-5417/liveness-096d88e0-ea22-4bfd-8561-224326c7c49b is now 5 (2m23.332333933s elapsed)
  STEP: deleting the pod @ 02/18/25 19:00:51.803
  I0218 19:00:51.833940 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5417" for this suite. @ 02/18/25 19:00:51.86
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.619 seconds]
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:49.211
  I0218 19:00:49.211585 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename pv @ 02/18/25 19:00:49.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:49.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:49.263
  STEP: Creating initial PV and PVC @ 02/18/25 19:00:49.28
  I0218 19:00:49.280849 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5762" @ 02/18/25 19:00:49.319
  STEP: Listing PVCs in namespace "pv-5762" @ 02/18/25 19:00:49.332
  STEP: Patching the PV "pv-5762-zkw6c" @ 02/18/25 19:00:49.35
  STEP: Patching the PVC "pvc-n7xc4" @ 02/18/25 19:00:49.364
  STEP: Getting PV "pv-5762-zkw6c" @ 02/18/25 19:00:49.381
  STEP: Getting PVC "pvc-n7xc4" @ 02/18/25 19:00:49.393
  STEP: Deleting PVC "pvc-n7xc4" @ 02/18/25 19:00:49.409
  STEP: Confirm deletion of PVC "pvc-n7xc4" @ 02/18/25 19:00:49.426
  STEP: Deleting PV "pv-5762-zkw6c" @ 02/18/25 19:00:51.451
  STEP: Confirm deletion of PV "pv-5762-zkw6c" @ 02/18/25 19:00:51.47
  STEP: Recreating another PV & PVC @ 02/18/25 19:00:53.493
  I0218 19:00:53.493565 24 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5762-zbwjz" @ 02/18/25 19:00:53.524
  STEP: Updating the PVC "pvc-4nsr2" @ 02/18/25 19:00:53.588
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-4nsr2=updated" @ 02/18/25 19:00:53.614
  STEP: Deleting PVC "pvc-4nsr2" via DeleteCollection @ 02/18/25 19:00:53.628
  STEP: Confirm deletion of PVC "pvc-4nsr2" @ 02/18/25 19:00:53.65
  STEP: Deleting PV "pv-5762-zbwjz" via DeleteCollection @ 02/18/25 19:00:55.679
  STEP: Confirm deletion of PV "pv-5762-zbwjz" @ 02/18/25 19:00:55.716
  I0218 19:00:55.733666 24 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0218 19:00:55.733704 24 pv.go:205] Deleting PersistentVolumeClaim "pvc-4nsr2"
  I0218 19:00:55.751956 24 pv.go:193] Deleting PersistentVolume "pv-5762-zbwjz"
  I0218 19:00:55.763659 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5762" for this suite. @ 02/18/25 19:00:55.788
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [4.366 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:51.891
  I0218 19:00:51.891945 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename configmap @ 02/18/25 19:00:51.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:51.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:51.953
  STEP: Creating configMap with name configmap-test-volume-7fbdfb63-8f8f-447e-aea1-638daa5cb3cd @ 02/18/25 19:00:51.97
  STEP: Creating a pod to test consume configMaps @ 02/18/25 19:00:51.982
  E0218 19:00:52.693314      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:53.693690      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:54.694271      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:55.694542      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:00:56.061
  I0218 19:00:56.071081 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-configmaps-08526b8a-f731-4ae8-a537-c9e618d77f08 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 19:00:56.106
  I0218 19:00:56.173122 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1539" for this suite. @ 02/18/25 19:00:56.194
  << Timeline
------------------------------
SSSSS
------------------------------
• [4.495 seconds]
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:55.84
  I0218 19:00:55.840038 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename configmap @ 02/18/25 19:00:55.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:55.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:55.903
  STEP: Creating configMap with name configmap-test-volume-map-3b8e2d3d-d5f4-4cb7-adbd-04b84d6ec0bb @ 02/18/25 19:00:55.922
  STEP: Creating a pod to test consume configMaps @ 02/18/25 19:00:55.936
  STEP: Saw pod success @ 02/18/25 19:01:00.039
  I0218 19:01:00.060215 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-configmaps-9a3825c0-4915-4835-bb90-2e042614f648 container agnhost-container: <nil>
  STEP: delete the pod @ 02/18/25 19:01:00.096
  I0218 19:01:00.255371 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1728" for this suite. @ 02/18/25 19:01:00.283
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [7.561 seconds]
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:00:56.264
  I0218 19:00:56.265002 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename services @ 02/18/25 19:00:56.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:00:56.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:00:56.426
  STEP: creating service nodeport-test with type=NodePort in namespace services-5678 @ 02/18/25 19:00:56.445
  STEP: creating replication controller nodeport-test in namespace services-5678 @ 02/18/25 19:00:56.494
  I0218 19:00:56.526940      26 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-5678, replica count: 2
  E0218 19:00:56.695489      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:57.696564      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:00:58.697217      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:00:59.577962      26 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0218 19:00:59.577985 26 resource.go:361] Creating new exec pod
  E0218 19:00:59.697254      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:00.697501      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:01.697891      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:02.690371 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5678 exec execpodds5hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0218 19:01:02.698072      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:03.016044 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.240.19.117) 80 port [tcp/http] succeeded!\n"
  I0218 19:01:03.016088 26 builder.go:147] stdout: "nodeport-test-5vrxd"
  I0218 19:01:03.016187 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5678 exec execpodds5hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.240.19.117 80'
  I0218 19:01:03.291797 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.240.19.117 80\nConnection to 10.240.19.117 80 port [tcp/http] succeeded!\n"
  I0218 19:01:03.291846 26 builder.go:147] stdout: "nodeport-test-gstcm"
  I0218 19:01:03.291982 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5678 exec execpodds5hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.4 30298'
  I0218 19:01:03.555390 26 builder.go:146] stderr: "+ nc -v -t -w 2 10.0.0.4 30298\n+ echo hostName\nConnection to 10.0.0.4 30298 port [tcp/*] succeeded!\n"
  I0218 19:01:03.555475 26 builder.go:147] stdout: "nodeport-test-gstcm"
  I0218 19:01:03.555614 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=services-5678 exec execpodds5hr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.0.0.5 30298'
  E0218 19:01:03.698547      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:03.789723 26 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.0.0.5 30298\nConnection to 10.0.0.5 30298 port [tcp/*] succeeded!\n"
  I0218 19:01:03.789808 26 builder.go:147] stdout: "nodeport-test-gstcm"
  I0218 19:01:03.790413 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5678" for this suite. @ 02/18/25 19:01:03.81
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.209 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:03.833
  I0218 19:01:03.833907 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename sysctl @ 02/18/25 19:01:03.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:03.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:03.884
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 02/18/25 19:01:03.9
  STEP: Watching for error events or started pod @ 02/18/25 19:01:03.929
  E0218 19:01:04.699149      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:05.699353      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 02/18/25 19:01:05.943
  E0218 19:01:06.699931      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:07.700298      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 02/18/25 19:01:07.976
  STEP: Getting logs from the pod @ 02/18/25 19:01:07.976
  STEP: Checking that the sysctl is actually updated @ 02/18/25 19:01:07.998
  I0218 19:01:07.999530 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2215" for this suite. @ 02/18/25 19:01:08.026
  << Timeline
------------------------------
SSSSS
------------------------------
• [14.649 seconds]
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:799

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:00.349
  I0218 19:01:00.349161 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename statefulset @ 02/18/25 19:01:00.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:00.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:00.486
  STEP: Creating service test in namespace statefulset-2824 @ 02/18/25 19:01:00.506
  STEP: Looking for a node to schedule stateful set and pod @ 02/18/25 19:01:00.523
  STEP: Creating pod with conflicting port in namespace statefulset-2824 @ 02/18/25 19:01:00.541
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2824 @ 02/18/25 19:01:00.624
  STEP: Creating statefulset with conflicting port in namespace statefulset-2824 @ 02/18/25 19:01:02.654
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2824 @ 02/18/25 19:01:02.672
  I0218 19:01:02.711030 24 statefulset.go:872] Observed stateful pod in namespace: statefulset-2824, name: ss-0, uid: 7b6db90f-3de2-4309-b050-bf43afa65b0e, status phase: Pending. Waiting for statefulset controller to delete.
  I0218 19:01:02.749012 24 statefulset.go:872] Observed stateful pod in namespace: statefulset-2824, name: ss-0, uid: 7b6db90f-3de2-4309-b050-bf43afa65b0e, status phase: Failed. Waiting for statefulset controller to delete.
  I0218 19:01:02.763984 24 statefulset.go:872] Observed stateful pod in namespace: statefulset-2824, name: ss-0, uid: 7b6db90f-3de2-4309-b050-bf43afa65b0e, status phase: Failed. Waiting for statefulset controller to delete.
  I0218 19:01:02.772268 24 statefulset.go:866] Observed delete event for stateful pod ss-0 in namespace statefulset-2824
  STEP: Removing pod with conflicting port in namespace statefulset-2824 @ 02/18/25 19:01:02.772
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2824 and will be in running state @ 02/18/25 19:01:02.809
  I0218 19:01:04.847360 24 statefulset.go:138] Deleting all statefulset in ns statefulset-2824
  I0218 19:01:04.858663 24 rest.go:152] Scaling statefulset ss to 0
  I0218 19:01:14.895587 24 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0218 19:01:14.906572 24 rest.go:90] Deleting statefulset ss
  I0218 19:01:14.948572 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2824" for this suite. @ 02/18/25 19:01:14.979
  << Timeline
------------------------------
SSSS
------------------------------
• [9.311 seconds]
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:08.049
  I0218 19:01:08.049060 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename prestop @ 02/18/25 19:01:08.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:08.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:08.107
  STEP: Creating server pod server in namespace prestop-9642 @ 02/18/25 19:01:08.123
  STEP: Waiting for pods to come up. @ 02/18/25 19:01:08.143
  E0218 19:01:08.701235      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:09.701535      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9642 @ 02/18/25 19:01:10.198
  E0218 19:01:10.702127      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:11.702660      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 02/18/25 19:01:12.243
  E0218 19:01:12.703728      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:13.704199      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:14.705049      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:15.705548      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:16.706142      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:17.296761 26 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 02/18/25 19:01:17.297
  I0218 19:01:17.325803 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9642" for this suite. @ 02/18/25 19:01:17.342
  << Timeline
------------------------------
SS
------------------------------
• [4.284 seconds]
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:15.003
  I0218 19:01:15.003249 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename projected @ 02/18/25 19:01:15.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:15.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:15.068
  STEP: Creating a pod to test downward API volume plugin @ 02/18/25 19:01:15.085
  STEP: Saw pod success @ 02/18/25 19:01:19.144
  I0218 19:01:19.160082 24 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod downwardapi-volume-a8ae5835-186d-4329-9d53-c19da2aecd9b container client-container: <nil>
  STEP: delete the pod @ 02/18/25 19:01:19.185
  I0218 19:01:19.230916 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5777" for this suite. @ 02/18/25 19:01:19.259
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [9.205 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:19.314
  I0218 19:01:19.314644 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 19:01:19.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:19.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:19.376
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 02/18/25 19:01:19.398
  I0218 19:01:19.398887 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  I0218 19:01:20.880573 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  I0218 19:01:28.417420 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-143" for this suite. @ 02/18/25 19:01:28.48
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [18.505 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:17.363
  I0218 19:01:17.363992 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 19:01:17.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:17.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:17.424
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 02/18/25 19:01:17.439
  I0218 19:01:17.439780 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 19:01:17.706707      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:18.706990      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:19.707673      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:20.707856      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:21.708762      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:22.709263      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:23.709797      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:24.710536      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:25.711482      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 02/18/25 19:01:26.531
  I0218 19:01:26.531793 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 19:01:26.712549      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:27.713093      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:28.409784 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 19:01:28.713473      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:29.713643      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:30.713845      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:31.714324      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:32.714823      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:33.715173      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:34.716216      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:35.716376      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:35.809341 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-286" for this suite. @ 02/18/25 19:01:35.851
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.140 seconds]
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:35.891
  I0218 19:01:35.891921 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 19:01:35.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:35.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:35.96
  STEP: Creating projection with secret that has name secret-emptykey-test-4e5da1fc-56f1-4c27-bae0-9e9248d2cf71 @ 02/18/25 19:01:35.98
  I0218 19:01:35.990940 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6955" for this suite. @ 02/18/25 19:01:36.013
  << Timeline
------------------------------
SS
------------------------------
• [4.300 seconds]
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:36.035
  I0218 19:01:36.035491 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename emptydir @ 02/18/25 19:01:36.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:36.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:36.094
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 02/18/25 19:01:36.112
  E0218 19:01:36.716685      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:37.717203      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:38.717659      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:39.718490      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:01:40.184
  I0218 19:01:40.201091 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-dce3716d-55b5-49b8-8843-e8a18bc90f41 container test-container: <nil>
  STEP: delete the pod @ 02/18/25 19:01:40.235
  I0218 19:01:40.280240 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6885" for this suite. @ 02/18/25 19:01:40.314
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.536 seconds]
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:40.351
  I0218 19:01:40.351905 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename limitrange @ 02/18/25 19:01:40.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:40.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:40.422
  STEP: Creating a LimitRange @ 02/18/25 19:01:40.444
  STEP: Setting up watch @ 02/18/25 19:01:40.444
  STEP: Submitting a LimitRange @ 02/18/25 19:01:40.561
  STEP: Verifying LimitRange creation was observed @ 02/18/25 19:01:40.578
  STEP: Fetching the LimitRange to ensure it has proper values @ 02/18/25 19:01:40.578
  I0218 19:01:40.592089 26 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0218 19:01:40.592134 26 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 02/18/25 19:01:40.592
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 02/18/25 19:01:40.616
  I0218 19:01:40.634684 26 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0218 19:01:40.634738 26 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 02/18/25 19:01:40.634
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 02/18/25 19:01:40.653
  I0218 19:01:40.691841 26 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0218 19:01:40.691878 26 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 02/18/25 19:01:40.691
  STEP: Failing to create a Pod with more than max resources @ 02/18/25 19:01:40.7
  STEP: Updating a LimitRange @ 02/18/25 19:01:40.71
  E0218 19:01:40.719312      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Verifying LimitRange updating is effective @ 02/18/25 19:01:40.731
  E0218 19:01:41.720237      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:42.720553      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 02/18/25 19:01:42.743
  STEP: Failing to create a Pod with more than max resources @ 02/18/25 19:01:42.758
  STEP: Deleting a LimitRange @ 02/18/25 19:01:42.771
  STEP: Verifying the LimitRange was deleted @ 02/18/25 19:01:42.795
  E0218 19:01:43.721156      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:44.721881      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:45.721915      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:46.722531      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:47.722940      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:47.815577 26 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 02/18/25 19:01:47.815
  I0218 19:01:47.837064 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-289" for this suite. @ 02/18/25 19:01:47.867
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.820 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:47.912
  I0218 19:01:47.912148 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename certificates @ 02/18/25 19:01:47.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:47.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:47.981
  STEP: getting /apis @ 02/18/25 19:01:48.341
  STEP: getting /apis/certificates.k8s.io @ 02/18/25 19:01:48.362
  STEP: getting /apis/certificates.k8s.io/v1 @ 02/18/25 19:01:48.368
  STEP: creating @ 02/18/25 19:01:48.382
  STEP: getting @ 02/18/25 19:01:48.429
  STEP: listing @ 02/18/25 19:01:48.443
  STEP: watching @ 02/18/25 19:01:48.457
  I0218 19:01:48.457309 26 certificates.go:316] starting watch
  STEP: patching @ 02/18/25 19:01:48.467
  STEP: updating @ 02/18/25 19:01:48.48
  I0218 19:01:48.509712 26 certificates.go:332] waiting for watch events with expected annotations
  I0218 19:01:48.509779 26 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 02/18/25 19:01:48.509
  STEP: patching /approval @ 02/18/25 19:01:48.524
  STEP: updating /approval @ 02/18/25 19:01:48.537
  STEP: getting /status @ 02/18/25 19:01:48.555
  STEP: patching /status @ 02/18/25 19:01:48.568
  STEP: updating /status @ 02/18/25 19:01:48.586
  STEP: deleting @ 02/18/25 19:01:48.603
  STEP: deleting a collection @ 02/18/25 19:01:48.645
  I0218 19:01:48.695601 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-5872" for this suite. @ 02/18/25 19:01:48.715
  E0218 19:01:48.723323      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.329 seconds]
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:48.749
  I0218 19:01:48.749832 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename var-expansion @ 02/18/25 19:01:48.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:48.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:48.807
  STEP: Creating a pod to test substitution in container's args @ 02/18/25 19:01:48.825
  E0218 19:01:49.724382      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:50.725100      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:51.726090      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:52.726174      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:01:52.911
  I0218 19:01:52.939977 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod var-expansion-7e00d630-be4c-4587-9df0-1d1bf9a4e4cb container dapi-container: <nil>
  STEP: delete the pod @ 02/18/25 19:01:52.964
  I0218 19:01:53.014582 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8614" for this suite. @ 02/18/25 19:01:53.048
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.930 seconds]
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:53.094
  I0218 19:01:53.094475 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename watch @ 02/18/25 19:01:53.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:53.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:53.17
  STEP: getting a starting resourceVersion @ 02/18/25 19:01:53.192
  STEP: starting a background goroutine to produce watch events @ 02/18/25 19:01:53.203
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 02/18/25 19:01:53.203
  E0218 19:01:53.727291      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:54.727673      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:55.728112      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:01:55.921211 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5298" for this suite. @ 02/18/25 19:01:55.965
  << Timeline
------------------------------
• [6.342 seconds]
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:56.026
  I0218 19:01:56.026998 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 19:01:56.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:56.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:56.093
  STEP: Creating secret with name secret-test-map-ccd74b77-62da-4aea-8ece-bf866e00d247 @ 02/18/25 19:01:56.11
  STEP: Creating a pod to test consume secrets @ 02/18/25 19:01:56.123
  E0218 19:01:56.728644      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:57.729376      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:58.729555      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:01:59.730339      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:00.730837      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:01.731647      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:02:02.219
  I0218 19:02:02.235074 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-secrets-b4447a40-8e36-4446-9f20-3a81936e8434 container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 19:02:02.275
  I0218 19:02:02.319232 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8378" for this suite. @ 02/18/25 19:02:02.345
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.972 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:02:02.388
  I0218 19:02:02.388215 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 19:02:02.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:02:02.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:02:02.446
  STEP: Setting up server cert @ 02/18/25 19:02:02.519
  E0218 19:02:02.732041      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 19:02:02.931
  STEP: Deploying the webhook pod @ 02/18/25 19:02:02.952
  STEP: Wait for the deployment to be ready @ 02/18/25 19:02:02.982
  I0218 19:02:03.009716 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0218 19:02:03.732702      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:04.732924      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 02/18/25 19:02:05.053
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 19:02:05.08
  E0218 19:02:05.733327      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:02:06.080684 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 02/18/25 19:02:06.107
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 02/18/25 19:02:06.115
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 02/18/25 19:02:06.115
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 02/18/25 19:02:06.115
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 02/18/25 19:02:06.123
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 02/18/25 19:02:06.123
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 02/18/25 19:02:06.136
  I0218 19:02:06.277521 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-474" for this suite. @ 02/18/25 19:02:06.313
  STEP: Destroying namespace "webhook-markers-5124" for this suite. @ 02/18/25 19:02:06.335
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [46.305 seconds]
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:02:06.373
  I0218 19:02:06.373349 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename init-container @ 02/18/25 19:02:06.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:02:06.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:02:06.43
  STEP: creating the pod @ 02/18/25 19:02:06.453
  I0218 19:02:06.453902 26 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0218 19:02:06.734475      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:07.735232      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:08.736248      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:09.737075      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:10.737481      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:11.738044      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:12.738419      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:13.738999      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:14.739841      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:15.740295      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:16.740902      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:17.741150      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:18.742049      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:19.742862      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:20.743718      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:21.744219      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:22.744538      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:23.745213      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:24.746362      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:25.746460      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:26.746535      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:27.747171      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:28.747718      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:29.748471      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:30.749038      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:31.749552      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:32.750237      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:33.750767      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:34.751816      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:35.752320      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:36.753207      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:37.753802      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:38.754563      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:39.755383      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:40.755809      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:41.756193      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:42.756720      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:43.757404      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:44.758307      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:45.758784      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:46.758840      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:47.759247      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:48.759863      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:49.760937      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:50.761620      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:51.762298      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:02:52.624603 26 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-68a2c916-df22-4a10-827b-2ea55945ab2b", GenerateName:"", Namespace:"init-container-3867", SelfLink:"", UID:"ea9ff423-ce1d-4db9-b729-1aedbd796ee0", ResourceVersion:"225426", Generation:0, CreationTimestamp:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"453884547"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"e307e96be3194c2e6ab002df83453e3e04899faffa4cff4dc22f22039a11242c", "cni.projectcalico.org/podIP":"172.25.1.103/32", "cni.projectcalico.org/podIPs":"172.25.1.103/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00428ac30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00428ac60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.February, 18, 19, 2, 52, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00428ac90), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-ms74p", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000791f00), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ms74p", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ms74p", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ms74p", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004531520), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"admiring-kalam-9d8f4776-dp7t2", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0055375f0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0045315b0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0045315d0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0045315d8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0045315dc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000ce4320), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.February, 18, 19, 2, 7, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.0.0.5", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.0.0.5"}}, PodIP:"172.25.1.103", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.25.1.103"}}, StartTime:time.Date(2025, time.February, 18, 19, 2, 6, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0042a1420)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0042a1490)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://571f5b125bf6da19d16ac144c3c8f2936f249ef8bb5bcf61462256a55dc8acaf", Started:(*bool)(0xc00453175a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-ms74p", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000ce4340)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000791f60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00453176d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-ms74p", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000ce4350)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000791f40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc00453169c), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-ms74p", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000ce4330)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0218 19:02:52.625637 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3867" for this suite. @ 02/18/25 19:02:52.657
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.709 seconds]
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:02:52.699
  I0218 19:02:52.699347 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename init-container @ 02/18/25 19:02:52.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:02:52.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:02:52.762
  E0218 19:02:52.762760      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: creating the pod @ 02/18/25 19:02:52.781
  I0218 19:02:52.781499 26 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E0218 19:02:53.763324      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:54.764051      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:55.764538      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:02:56.342599 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3088" for this suite. @ 02/18/25 19:02:56.381
  << Timeline
------------------------------
S
------------------------------
• [2.321 seconds]
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:02:56.412
  I0218 19:02:56.412870 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename projected @ 02/18/25 19:02:56.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:02:56.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:02:56.486
  STEP: Creating projection with secret that has name projected-secret-test-38bf43d8-ff83-4be7-b1a6-9ff2e1cb4189 @ 02/18/25 19:02:56.51
  STEP: Creating a pod to test consume secrets @ 02/18/25 19:02:56.526
  E0218 19:02:56.765373      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:02:57.766057      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:02:58.59
  I0218 19:02:58.603910 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dzdlc pod pod-projected-secrets-dc9b1afe-0529-43fc-93fe-9ba12a0b3d7f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 19:02:58.634
  I0218 19:02:58.688529 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8872" for this suite. @ 02/18/25 19:02:58.716
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.122 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:02:58.783
  I0218 19:02:58.783657 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 19:02:58.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:02:58.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:02:58.84
  STEP: Setting up server cert @ 02/18/25 19:02:58.926
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 19:02:59.156
  STEP: Deploying the webhook pod @ 02/18/25 19:02:59.181
  STEP: Wait for the deployment to be ready @ 02/18/25 19:02:59.219
  I0218 19:02:59.258655 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0218 19:02:59.766928      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:00.767420      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 02/18/25 19:03:01.3
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 19:03:01.33
  E0218 19:03:01.768222      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:02.331478 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0218 19:03:02.367703 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 19:03:02.768367      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5087-crds.webhook.example.com via the AdmissionRegistration API @ 02/18/25 19:03:02.949
  STEP: Creating a custom resource that should be mutated by the webhook @ 02/18/25 19:03:03.024
  E0218 19:03:03.769303      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:04.770068      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:05.770609      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:05.841947 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8115" for this suite. @ 02/18/25 19:03:05.867
  STEP: Destroying namespace "webhook-markers-7246" for this suite. @ 02/18/25 19:03:05.885
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.411 seconds]
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:05.932
  I0218 19:03:05.932479 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 19:03:05.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:05.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:05.995
  STEP: Creating secret with name secret-test-22b30836-ffba-4802-80e3-4db3e59887fa @ 02/18/25 19:03:06.078
  STEP: Creating a pod to test consume secrets @ 02/18/25 19:03:06.092
  E0218 19:03:06.771050      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:07.771520      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:08.771702      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:09.772336      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:03:10.18
  I0218 19:03:10.198509 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-secrets-9b2d92af-b0e6-47bf-bbdd-678b60dd277e container secret-volume-test: <nil>
  STEP: delete the pod @ 02/18/25 19:03:10.225
  I0218 19:03:10.271660 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8374" for this suite. @ 02/18/25 19:03:10.297
  STEP: Destroying namespace "secret-namespace-1172" for this suite. @ 02/18/25 19:03:10.318
  << Timeline
------------------------------
SSSSSSSSSS
------------------------------
• [0.419 seconds]
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:10.352
  I0218 19:03:10.352985 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename endpointslice @ 02/18/25 19:03:10.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:10.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:10.432
  STEP: getting /apis @ 02/18/25 19:03:10.453
  STEP: getting /apis/discovery.k8s.io @ 02/18/25 19:03:10.473
  STEP: getting /apis/discovery.k8s.iov1 @ 02/18/25 19:03:10.481
  STEP: creating @ 02/18/25 19:03:10.489
  STEP: getting @ 02/18/25 19:03:10.53
  STEP: listing @ 02/18/25 19:03:10.541
  STEP: watching @ 02/18/25 19:03:10.554
  I0218 19:03:10.554995 26 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 02/18/25 19:03:10.562
  STEP: cluster-wide watching @ 02/18/25 19:03:10.579
  I0218 19:03:10.579218 26 endpointslice.go:459] starting watch
  STEP: patching @ 02/18/25 19:03:10.594
  STEP: updating @ 02/18/25 19:03:10.613
  I0218 19:03:10.639402 26 endpointslice.go:482] waiting for watch events with expected annotations
  I0218 19:03:10.639491 26 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 02/18/25 19:03:10.639
  STEP: deleting a collection @ 02/18/25 19:03:10.687
  I0218 19:03:10.732842 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3278" for this suite. @ 02/18/25 19:03:10.751
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [15.966 seconds]
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:10.811
  I0218 19:03:10.811631 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename hostport @ 02/18/25 19:03:10.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:10.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:10.869
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 02/18/25 19:03:10.906
  E0218 19:03:11.773479      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:12.774074      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.0.0.3 on the node which pod1 resides and expect scheduled @ 02/18/25 19:03:12.963
  E0218 19:03:13.774793      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:14.775597      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:15.776162      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:16.776614      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.0.0.3 but use UDP protocol on the node which pod2 resides @ 02/18/25 19:03:17.024
  E0218 19:03:17.777959      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:18.778550      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:19.779180      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:20.779818      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 02/18/25 19:03:21.138
  I0218 19:03:21.138200 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.0.0.3 http://127.0.0.1:54323/hostname] Namespace:hostport-6187 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 19:03:21.138293 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 19:03:21.138365 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/hostport-6187/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.0.0.3+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.0.3, port: 54323 @ 02/18/25 19:03:21.334
  I0218 19:03:21.334049 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.0.0.3:54323/hostname] Namespace:hostport-6187 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 19:03:21.334073 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 19:03:21.334167 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/hostport-6187/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.0.0.3%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.0.0.3, port: 54323 UDP @ 02/18/25 19:03:21.501
  I0218 19:03:21.502054 26 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.0.0.3 54323] Namespace:hostport-6187 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0218 19:03:21.502078 26 exec_util.go:64] ExecWithOptions: Clientset creation
  I0218 19:03:21.502579 26 exec_util.go:80] ExecWithOptions: execute(POST https://10.240.16.1:443/api/v1/namespaces/hostport-6187/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.0.0.3+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0218 19:03:21.779872      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:22.780403      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:23.780585      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:24.781394      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:25.782129      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:26.735334 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6187" for this suite. @ 02/18/25 19:03:26.758
  << Timeline
------------------------------
SSSS
------------------------------
• [3.920 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:26.783
  I0218 19:03:26.783265 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 19:03:26.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:26.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:26.86
  STEP: Setting up server cert @ 02/18/25 19:03:26.939
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 19:03:27.209
  STEP: Deploying the webhook pod @ 02/18/25 19:03:27.228
  STEP: Wait for the deployment to be ready @ 02/18/25 19:03:27.273
  I0218 19:03:27.318934 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0218 19:03:27.783331      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:28.783495      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 02/18/25 19:03:29.355
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 19:03:29.388
  E0218 19:03:29.784605      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:30.388786 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 02/18/25 19:03:30.414
  STEP: verifying the mutating webhook match conditions @ 02/18/25 19:03:30.431
  STEP: updating the mutating webhook match conditions @ 02/18/25 19:03:30.446
  STEP: verifying the mutating webhook match conditions @ 02/18/25 19:03:30.469
  I0218 19:03:30.613093 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1600" for this suite. @ 02/18/25 19:03:30.661
  STEP: Destroying namespace "webhook-markers-7493" for this suite. @ 02/18/25 19:03:30.683
  << Timeline
------------------------------
SSSS
------------------------------
• [14.177 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:30.709
  I0218 19:03:30.709030 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename webhook @ 02/18/25 19:03:30.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:30.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:30.773
  E0218 19:03:30.785308      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 02/18/25 19:03:30.85
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 02/18/25 19:03:31.063
  STEP: Deploying the webhook pod @ 02/18/25 19:03:31.111
  STEP: Wait for the deployment to be ready @ 02/18/25 19:03:31.149
  I0218 19:03:31.187832 26 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0218 19:03:31.786313      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:32.786588      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 02/18/25 19:03:33.23
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 19:03:33.254
  E0218 19:03:33.787533      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:34.255015 26 util.go:423] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 02/18/25 19:03:34.278
  STEP: create a pod that should be denied by the webhook @ 02/18/25 19:03:34.342
  STEP: create a pod that causes the webhook to hang @ 02/18/25 19:03:34.383
  E0218 19:03:34.787600      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:35.788027      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:36.788565      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:37.788906      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:38.789667      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:39.790511      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:40.791138      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:41.792101      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:42.792739      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:43.793298      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 02/18/25 19:03:44.41
  STEP: create a configmap that should be admitted by the webhook @ 02/18/25 19:03:44.449
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 02/18/25 19:03:44.492
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 02/18/25 19:03:44.525
  STEP: create a namespace that bypass the webhook @ 02/18/25 19:03:44.55
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 02/18/25 19:03:44.593
  I0218 19:03:44.790214 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0218 19:03:44.793531      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-5497" for this suite. @ 02/18/25 19:03:44.818
  STEP: Destroying namespace "webhook-markers-409" for this suite. @ 02/18/25 19:03:44.843
  STEP: Destroying namespace "exempted-namespace-9790" for this suite. @ 02/18/25 19:03:44.866
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [1.253 seconds]
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:44.901
  I0218 19:03:44.901154 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename replication-controller @ 02/18/25 19:03:44.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:44.94
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:44.955
  I0218 19:03:44.973347 26 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 02/18/25 19:03:45
  STEP: Checking rc "condition-test" has the desired failure condition set @ 02/18/25 19:03:45.018
  E0218 19:03:45.794500      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 02/18/25 19:03:46.052
  I0218 19:03:46.090082 26 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 02/18/25 19:03:46.09
  I0218 19:03:46.102481 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2590" for this suite. @ 02/18/25 19:03:46.13
  << Timeline
------------------------------
SSSSSSSSS
------------------------------
• [0.477 seconds]
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:46.162
  I0218 19:03:46.162818 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename discovery @ 02/18/25 19:03:46.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:46.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:46.225
  STEP: Setting up server cert @ 02/18/25 19:03:46.253
  STEP: Requesting APIResourceList from "/api/v1" @ 02/18/25 19:03:46.449
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 02/18/25 19:03:46.464
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 02/18/25 19:03:46.477
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 02/18/25 19:03:46.485
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 02/18/25 19:03:46.493
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 02/18/25 19:03:46.5
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 02/18/25 19:03:46.508
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 02/18/25 19:03:46.515
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 02/18/25 19:03:46.523
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 02/18/25 19:03:46.53
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 02/18/25 19:03:46.537
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 02/18/25 19:03:46.544
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 02/18/25 19:03:46.551
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 02/18/25 19:03:46.558
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 02/18/25 19:03:46.565
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 02/18/25 19:03:46.572
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 02/18/25 19:03:46.579
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 02/18/25 19:03:46.588
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 02/18/25 19:03:46.595
  I0218 19:03:46.603799 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6578" for this suite. @ 02/18/25 19:03:46.616
  << Timeline
------------------------------
SS
------------------------------
• [4.241 seconds]
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:46.643
  I0218 19:03:46.643417 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename security-context-test @ 02/18/25 19:03:46.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:46.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:46.717
  E0218 19:03:46.795483      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:47.796615      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:48.797653      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:49.798564      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:50.799002      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:50.841419 26 security_context.go:538] Got logs for pod "busybox-privileged-false-c609f590-3195-4490-b107-8134931c98eb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0218 19:03:50.842386 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5374" for this suite. @ 02/18/25 19:03:50.867
  << Timeline
------------------------------
SSS
------------------------------
• [6.582 seconds]
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:50.89
  I0218 19:03:50.890678 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename disruption @ 02/18/25 19:03:50.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:50.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:50.987
  STEP: Creating a pdb that targets all three pods in a test replica set @ 02/18/25 19:03:51.004
  STEP: Waiting for the pdb to be processed @ 02/18/25 19:03:51.018
  E0218 19:03:51.799202      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:52.799676      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 02/18/25 19:03:53.044
  STEP: Waiting for all pods to be running @ 02/18/25 19:03:53.044
  I0218 19:03:53.059475 26 disruption.go:680] pods: 0 < 3
  E0218 19:03:53.800551      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:54.801410      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 02/18/25 19:03:55.063
  STEP: Updating the pdb to allow a pod to be evicted @ 02/18/25 19:03:55.096
  STEP: Waiting for the pdb to be processed @ 02/18/25 19:03:55.123
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 02/18/25 19:03:55.138
  STEP: Waiting for all pods to be running @ 02/18/25 19:03:55.138
  STEP: Waiting for the pdb to observed all healthy pods @ 02/18/25 19:03:55.153
  STEP: Patching the pdb to disallow a pod to be evicted @ 02/18/25 19:03:55.218
  STEP: Waiting for the pdb to be processed @ 02/18/25 19:03:55.251
  E0218 19:03:55.801487      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:56.802524      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 02/18/25 19:03:57.267
  STEP: locating a running pod @ 02/18/25 19:03:57.288
  STEP: Deleting the pdb to allow a pod to be evicted @ 02/18/25 19:03:57.321
  STEP: Waiting for the pdb to be deleted @ 02/18/25 19:03:57.336
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 02/18/25 19:03:57.35
  STEP: Waiting for all pods to be running @ 02/18/25 19:03:57.35
  I0218 19:03:57.419485 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8508" for this suite. @ 02/18/25 19:03:57.445
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.048 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:03:57.511
  I0218 19:03:57.511014 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-publish-openapi @ 02/18/25 19:03:57.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:03:57.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:03:57.569
  I0218 19:03:57.589643 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 19:03:57.803375      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:03:58.803523      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 02/18/25 19:03:59.396
  I0218 19:03:59.396148 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 create -f -'
  I0218 19:03:59.614758 26 builder.go:146] stderr: ""
  I0218 19:03:59.614828 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2877-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0218 19:03:59.614910 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 delete e2e-test-crd-publish-openapi-2877-crds test-foo'
  I0218 19:03:59.774645 26 builder.go:146] stderr: ""
  I0218 19:03:59.774688 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2877-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0218 19:03:59.774777 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 apply -f -'
  E0218 19:03:59.804209      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:03:59.931584 26 builder.go:146] stderr: ""
  I0218 19:03:59.931625 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2877-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0218 19:03:59.931672 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 delete e2e-test-crd-publish-openapi-2877-crds test-foo'
  I0218 19:04:00.092121 26 builder.go:146] stderr: ""
  I0218 19:04:00.092182 26 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2877-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 02/18/25 19:04:00.092
  I0218 19:04:00.092282 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 create -f -'
  I0218 19:04:00.222743 26 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 02/18/25 19:04:00.222
  I0218 19:04:00.222835 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 create -f -'
  I0218 19:04:00.348792 26 builder.go:135] rc: 1
  I0218 19:04:00.348905 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 apply -f -'
  I0218 19:04:00.500584 26 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 02/18/25 19:04:00.5
  I0218 19:04:00.500732 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 create -f -'
  I0218 19:04:00.631133 26 builder.go:135] rc: 1
  I0218 19:04:00.631244 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 --namespace=crd-publish-openapi-2215 apply -f -'
  I0218 19:04:00.781519 26 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 02/18/25 19:04:00.781
  I0218 19:04:00.781679 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 explain e2e-test-crd-publish-openapi-2877-crds'
  E0218 19:04:00.805214      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:04:00.903553 26 builder.go:146] stderr: ""
  I0218 19:04:00.903645 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2877-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 02/18/25 19:04:00.903
  I0218 19:04:00.904042 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 explain e2e-test-crd-publish-openapi-2877-crds.metadata'
  I0218 19:04:01.039764 26 builder.go:146] stderr: ""
  I0218 19:04:01.039999 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2877-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0218 19:04:01.040259 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 explain e2e-test-crd-publish-openapi-2877-crds.spec'
  I0218 19:04:01.165219 26 builder.go:146] stderr: ""
  I0218 19:04:01.165290 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2877-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0218 19:04:01.165491 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 explain e2e-test-crd-publish-openapi-2877-crds.spec.bars'
  I0218 19:04:01.277861 26 builder.go:146] stderr: ""
  I0218 19:04:01.277934 26 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2877-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 02/18/25 19:04:01.278
  I0218 19:04:01.278306 26 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-654078432 --namespace=crd-publish-openapi-2215 explain e2e-test-crd-publish-openapi-2877-crds.spec.bars2'
  I0218 19:04:01.398414 26 builder.go:135] rc: 1
  E0218 19:04:01.806203      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:04:02.806784      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:04:03.503692 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2215" for this suite. @ 02/18/25 19:04:03.542
  << Timeline
------------------------------
SSSSSSSS
------------------------------
• [7.642 seconds]
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:04:03.567
  I0218 19:04:03.567095 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename crd-selectable-fields @ 02/18/25 19:04:03.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:04:03.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:04:03.646
  STEP: Setting up server cert @ 02/18/25 19:04:03.662
  E0218 19:04:03.807690      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 02/18/25 19:04:04.118
  STEP: Deploying the custom resource conversion webhook pod @ 02/18/25 19:04:04.139
  STEP: Wait for the deployment to be ready @ 02/18/25 19:04:04.171
  I0218 19:04:04.204639 26 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0218 19:04:04.808847      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:04:05.809400      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 02/18/25 19:04:06.242
  STEP: Verifying the service has paired with the endpoint @ 02/18/25 19:04:06.296
  E0218 19:04:06.809526      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:04:07.297549 26 util.go:423] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 02/18/25 19:04:07.319
  I0218 19:04:07.319961 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  E0218 19:04:07.809652      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Creating a custom resource conversion webhook @ 02/18/25 19:04:07.858
  E0218 19:04:08.810198      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:04:09.811192      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Watching with field selectors @ 02/18/25 19:04:10.02
  STEP: Registering informers with field selectors @ 02/18/25 19:04:10.067
  STEP: Creating custom resources @ 02/18/25 19:04:10.067
  STEP: Listing v2 custom resources with field selector host=host1 @ 02/18/25 19:04:10.206
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 02/18/25 19:04:10.243
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 02/18/25 19:04:10.278
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 02/18/25 19:04:10.288
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 02/18/25 19:04:10.31
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 02/18/25 19:04:10.316
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 02/18/25 19:04:10.316
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 02/18/25 19:04:10.316
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 02/18/25 19:04:10.316
  STEP: Deleting one custom resources to ensure that deletions are observed @ 02/18/25 19:04:10.316
  STEP: Updating one custom resources to ensure that deletions are observed @ 02/18/25 19:04:10.386
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 02/18/25 19:04:10.445
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 02/18/25 19:04:10.473
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 02/18/25 19:04:10.502
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 02/18/25 19:04:10.508
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 02/18/25 19:04:10.508
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 02/18/25 19:04:10.508
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 02/18/25 19:04:10.508
  E0218 19:04:10.811928      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  I0218 19:04:11.162623 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-3938" for this suite. @ 02/18/25 19:04:11.186
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
• [0.217 seconds]
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:04:11.223
  I0218 19:04:11.223768 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename podtemplate @ 02/18/25 19:04:11.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:04:11.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:04:11.271
  STEP: Create set of pod templates @ 02/18/25 19:04:11.286
  I0218 19:04:11.302093 26 podtemplates.go:143] created test-podtemplate-1
  I0218 19:04:11.317507 26 podtemplates.go:143] created test-podtemplate-2
  I0218 19:04:11.331027 26 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 02/18/25 19:04:11.331
  STEP: delete collection of pod templates @ 02/18/25 19:04:11.344
  I0218 19:04:11.344384 26 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 02/18/25 19:04:11.39
  I0218 19:04:11.390645 26 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0218 19:04:11.402177 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9996" for this suite. @ 02/18/25 19:04:11.423
  << Timeline
------------------------------
SSSSSSS
------------------------------
• [4.292 seconds]
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:04:11.448
  I0218 19:04:11.448128 26 util.go:502] >>> kubeConfig: /tmp/kubeconfig-654078432
  STEP: Building a namespace api object, basename secrets @ 02/18/25 19:04:11.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:04:11.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:04:11.499
  STEP: creating secret secrets-4729/secret-test-94cf4793-1fd6-41c1-9748-93aad9ab08d4 @ 02/18/25 19:04:11.516
  STEP: Creating a pod to test consume secrets @ 02/18/25 19:04:11.53
  E0218 19:04:11.812378      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:04:12.812748      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:04:13.813163      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  E0218 19:04:14.813990      26 retrywatcher.go:160] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 02/18/25 19:04:15.595
  I0218 19:04:15.605300 26 output.go:207] Trying to get logs from node admiring-kalam-9d8f4776-dp7t2 pod pod-configmaps-866a7ff9-5a95-4fb1-94ed-c06fe29f4657 container env-test: <nil>
  STEP: delete the pod @ 02/18/25 19:04:15.649
  I0218 19:04:15.694796 26 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4729" for this suite. @ 02/18/25 19:04:15.725
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] PASSED [0.000 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
------------------------------
• [377.988 seconds]
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:01:28.541
  I0218 19:01:28.541726 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename chunking @ 02/18/25 19:01:28.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:01:28.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:01:28.602
  STEP: creating a large number of resources @ 02/18/25 19:01:28.617
  STEP: retrieving the first page @ 02/18/25 19:01:46.28
  I0218 19:01:46.314986 24 chunking.go:163] Retrieved 40/40 results with rv 224830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 02/18/25 19:01:46.315
  I0218 19:02:06.335528 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:02:26.337704 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:02:46.335989 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:03:06.348221 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:03:26.336022 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:03:46.335782 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:04:06.341610 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:04:26.332761 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:04:46.336937 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:05:06.332783 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:05:26.348538 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:05:46.335359 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:06:06.342400 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:06:26.335422 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:06:46.333534 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:07:06.334233 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:07:26.334981 24 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI0ODMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  I0218 19:07:46.329506 24 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0218 19:07:46.329534 24 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 02/18/25 19:07:46.329
  STEP: retrieving all remaining pages @ 02/18/25 19:07:46.353
  I0218 19:07:46.369612 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  I0218 19:07:46.387591 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  I0218 19:07:46.409929 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  I0218 19:07:46.422247 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  I0218 19:07:46.437319 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  I0218 19:07:46.459369 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  I0218 19:07:46.475467 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI3NDM4LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  I0218 19:07:46.488480 24 chunking.go:221] Retrieved 40/40 results with rv 227438 and continue 
  I0218 19:07:46.489490 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8156" for this suite. @ 02/18/25 19:07:46.502
  << Timeline
------------------------------
• [135.526 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:07:46.532
  I0218 19:07:46.532774 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename taint-single-pod @ 02/18/25 19:07:46.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:07:46.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:07:46.586
  I0218 19:07:46.600927 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:08:46.601813 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0218 19:08:46.615366 24 taints.go:144] Starting informer...
  STEP: Starting pod... @ 02/18/25 19:08:46.615
  I0218 19:08:46.864120 24 taints.go:294] Pod is running on admiring-kalam-9d8f4776-dp7t2. Tainting Node
  STEP: Trying to apply a taint on the Node @ 02/18/25 19:08:46.864
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 02/18/25 19:08:46.898
  STEP: Waiting short time to make sure Pod is queued for deletion @ 02/18/25 19:08:46.92
  I0218 19:08:46.920931 24 taints.go:313] Pod wasn't evicted. Proceeding
  I0218 19:08:46.920949 24 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 02/18/25 19:08:46.982
  STEP: Waiting some time to make sure that toleration time passed. @ 02/18/25 19:08:46.993
  I0218 19:10:01.994654 24 taints.go:329] Pod wasn't evicted. Test successful
  I0218 19:10:01.996142 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6818" for this suite. @ 02/18/25 19:10:02.032
  << Timeline
------------------------------
• [5.427 seconds]
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:10:02.059
  I0218 19:10:02.059859 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:10:02.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:10:02.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:10:02.123
  STEP: Creating simple DaemonSet "daemon-set" @ 02/18/25 19:10:02.278
  STEP: Check that daemon pods launch on every node of the cluster. @ 02/18/25 19:10:02.294
  I0218 19:10:02.324906 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:10:02.324932 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:10:03.333820 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:10:03.333854 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:10:04.330660 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:10:04.330704 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 02/18/25 19:10:04.343
  I0218 19:10:04.367200 24 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 02/18/25 19:10:04.367
  I0218 19:10:04.400503 24 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 02/18/25 19:10:04.4
  I0218 19:10:04.407784 24 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0218 19:10:04.407995 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.408129 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.408471 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.408659 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.408785 24 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.408825 24 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-1993 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0218 19:10:04.408844 24 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 02/18/25 19:10:04.408
  STEP: watching for the daemon set status to be patched @ 02/18/25 19:10:04.426
  I0218 19:10:04.433945 24 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0218 19:10:04.434109 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.434243 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.434559 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.434753 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.434963 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.435011 24 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-1993 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0218 19:10:04.435162 24 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0218 19:10:04.435195 24 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-1993 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0218 19:10:04.435205 24 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 02/18/25 19:10:04.445
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1993, will wait for the garbage collector to delete the pods @ 02/18/25 19:10:04.445
  I0218 19:10:04.524226 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.567344ms
  I0218 19:10:04.624662 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.433952ms
  I0218 19:10:07.334796 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:10:07.334832 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0218 19:10:07.351555 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"228479"},"items":null}

  I0218 19:10:07.365882 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"228479"},"items":null}

  I0218 19:10:07.440357 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1993" for this suite. @ 02/18/25 19:10:07.456
  << Timeline
------------------------------
SSSSSSSSSSS
------------------------------
• [0.241 seconds]
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:10:07.494
  I0218 19:10:07.494769 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename namespaces @ 02/18/25 19:10:07.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:10:07.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:10:07.564
  STEP: Creating namespace "e2e-ns-c9g2d" @ 02/18/25 19:10:07.578
  I0218 19:10:07.623411 24 namespace.go:411] Namespace "e2e-ns-c9g2d-1277" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-c9g2d-1277" @ 02/18/25 19:10:07.623
  I0218 19:10:07.649651 24 namespace.go:434] Namespace "e2e-ns-c9g2d-1277" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-c9g2d-1277" @ 02/18/25 19:10:07.649
  I0218 19:10:07.677364 24 namespace.go:463] Namespace "e2e-ns-c9g2d-1277" has []v1.FinalizerName{"kubernetes"}
  I0218 19:10:07.678346 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2070" for this suite. @ 02/18/25 19:10:07.699
  STEP: Destroying namespace "e2e-ns-c9g2d-1277" for this suite. @ 02/18/25 19:10:07.715
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [60.676 seconds]
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:934

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:10:07.746
  I0218 19:10:07.746975 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption @ 02/18/25 19:10:07.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:10:07.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:10:07.808
  I0218 19:10:07.890857 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:11:07.913119 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 02/18/25 19:11:07.926
  I0218 19:11:07.926203 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption-path @ 02/18/25 19:11:07.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:11:07.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:11:07.98
  I0218 19:11:08.045006 24 preemption.go:940] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0218 19:11:08.058012 24 preemption.go:946] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 02/18/25 19:11:08.221
  STEP: Removing a custom resource @ 02/18/25 19:11:08.248
  STEP: Removing a custom resource @ 02/18/25 19:11:08.279
  STEP: Removing a custom resource @ 02/18/25 19:11:08.312
  I0218 19:11:08.347959 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2479" for this suite. @ 02/18/25 19:11:08.369
  I0218 19:11:08.390833 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8419" for this suite. @ 02/18/25 19:11:08.405
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
• [69.136 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:214

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:11:08.432
  I0218 19:11:08.432807 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption @ 02/18/25 19:11:08.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:11:08.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:11:08.486
  I0218 19:11:08.547583 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:12:08.578699 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 02/18/25 19:12:08.591
  STEP: Adding a custom resource @ 02/18/25 19:12:08.591
  I0218 19:12:08.669652 24 preemption.go:255] Created pod: pod0-0-sched-preemption-low-priority
  I0218 19:12:08.697740 24 preemption.go:255] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 02/18/25 19:12:08.697
  I0218 19:12:08.762929 24 preemption.go:255] Created pod: pod1-0-sched-preemption-medium-priority
  I0218 19:12:08.799192 24 preemption.go:255] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 02/18/25 19:12:08.799
  I0218 19:12:08.857044 24 preemption.go:255] Created pod: pod2-0-sched-preemption-medium-priority
  I0218 19:12:08.889557 24 preemption.go:255] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 02/18/25 19:12:08.889
  I0218 19:12:08.936093 24 preemption.go:255] Created pod: pod3-0-sched-preemption-medium-priority
  I0218 19:12:08.956081 24 preemption.go:255] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 02/18/25 19:12:08.956
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 02/18/25 19:12:13.095
  STEP: Removing a custom resource @ 02/18/25 19:12:17.373
  STEP: Removing a custom resource @ 02/18/25 19:12:17.42
  STEP: Removing a custom resource @ 02/18/25 19:12:17.46
  STEP: Removing a custom resource @ 02/18/25 19:12:17.493
  I0218 19:12:17.527348 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-156" for this suite. @ 02/18/25 19:12:17.549
  << Timeline
------------------------------
SSSS
------------------------------
• [8.536 seconds]
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:12:17.572
  I0218 19:12:17.572780 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:12:17.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:12:17.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:12:17.626
  STEP: Creating simple DaemonSet "daemon-set" @ 02/18/25 19:12:17.718
  STEP: Check that daemon pods launch on every node of the cluster. @ 02/18/25 19:12:17.734
  I0218 19:12:17.761835 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:12:17.761862 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:12:18.771751 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0218 19:12:18.771781 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:12:19.775533 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:12:19.775569 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 02/18/25 19:12:19.786
  I0218 19:12:19.850245 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0218 19:12:19.850277 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:12:20.855194 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0218 19:12:20.855228 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:12:21.869538 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0218 19:12:21.869574 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:12:22.861774 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0218 19:12:22.861810 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:12:23.858987 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:12:23.859013 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 02/18/25 19:12:23.88
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3071, will wait for the garbage collector to delete the pods @ 02/18/25 19:12:23.88
  I0218 19:12:23.962650 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.282411ms
  I0218 19:12:24.063626 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.972289ms
  I0218 19:12:25.977341 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:12:25.977377 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0218 19:12:25.990044 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"229385"},"items":null}

  I0218 19:12:25.999661 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"229385"},"items":null}

  I0218 19:12:26.073481 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3071" for this suite. @ 02/18/25 19:12:26.09
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.305 seconds]
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:12:26.127
  I0218 19:12:26.127033 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename namespaces @ 02/18/25 19:12:26.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:12:26.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:12:26.263
  STEP: creating a Namespace @ 02/18/25 19:12:26.28
  STEP: patching the Namespace @ 02/18/25 19:12:26.327
  STEP: get the Namespace and ensuring it has the label @ 02/18/25 19:12:26.359
  I0218 19:12:26.371603 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9074" for this suite. @ 02/18/25 19:12:26.389
  STEP: Destroying namespace "nspatchtest-b72cb8ba-531f-4751-b0b2-943c09da9dc1-9412" for this suite. @ 02/18/25 19:12:26.41
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [88.418 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:12:26.447
  I0218 19:12:26.447312 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename taint-multiple-pods @ 02/18/25 19:12:26.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:12:26.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:12:26.515
  I0218 19:12:26.531843 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:13:26.532836 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0218 19:13:26.546465 24 taints.go:144] Starting informer...
  STEP: Starting pods... @ 02/18/25 19:13:26.546
  I0218 19:13:26.814952 24 taints.go:463] Pod1 is running on admiring-kalam-9d8f4776-dzdlc. Tainting Node
  I0218 19:13:29.083203 24 taints.go:471] Pod2 is running on admiring-kalam-9d8f4776-dzdlc. Tainting Node
  STEP: Trying to apply a taint on the Node @ 02/18/25 19:13:29.083
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 02/18/25 19:13:29.116
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 02/18/25 19:13:29.128
  I0218 19:13:34.721337 24 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I0218 19:13:54.778359 24 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 02/18/25 19:13:54.82
  I0218 19:13:54.833201 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3937" for this suite. @ 02/18/25 19:13:54.849
  << Timeline
------------------------------
• [65.057 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:469

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:13:54.867
  I0218 19:13:54.867303 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption @ 02/18/25 19:13:54.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:13:54.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:13:54.919
  I0218 19:13:54.982823 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:14:55.006849 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 02/18/25 19:14:55.02
  STEP: Adding a custom resource @ 02/18/25 19:14:55.02
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 02/18/25 19:14:55.043
  I0218 19:14:55.066899 24 preemption.go:503] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 02/18/25 19:14:55.066
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 02/18/25 19:14:57.096
  I0218 19:14:57.112385 24 preemption.go:521] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 02/18/25 19:14:57.112
  STEP: Verifying the pod has the pod disruption condition @ 02/18/25 19:14:59.135
  I0218 19:14:59.148319 24 pod_client.go:383] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I0218 19:14:59.688074 24 pod_client.go:173] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 02/18/25 19:14:59.746
  STEP: Removing a custom resource @ 02/18/25 19:14:59.783
  STEP: Removing a custom resource @ 02/18/25 19:14:59.824
  STEP: Removing a custom resource @ 02/18/25 19:14:59.852
  I0218 19:14:59.884241 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5235" for this suite. @ 02/18/25 19:14:59.906
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [13.838 seconds]
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:14:59.951
  I0218 19:14:59.951378 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:14:59.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:14:59.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:15:00.008
  I0218 19:15:00.125738 24 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 02/18/25 19:15:00.143
  I0218 19:15:00.171104 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:00.171142 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:15:01.185061 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:15:01.185095 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:15:02.180253 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:15:02.180280 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 02/18/25 19:15:02.246
  STEP: Check that daemon pods images are updated. @ 02/18/25 19:15:02.301
  I0218 19:15:02.316174 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:02.316201 24 daemon_set.go:1193] Wrong image for pod: daemon-set-ghs2g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:02.316210 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x54gv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:02.316217 24 daemon_set.go:1193] Wrong image for pod: daemon-set-zgd2r. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:03.322924 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:03.322955 24 daemon_set.go:1193] Wrong image for pod: daemon-set-ghs2g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:03.322965 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x54gv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:04.334769 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:04.334804 24 daemon_set.go:1198] Pod daemon-set-clsz4 is not available
  I0218 19:15:04.334813 24 daemon_set.go:1193] Wrong image for pod: daemon-set-ghs2g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:04.334821 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x54gv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:05.336055 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:05.336103 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x54gv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:06.325984 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:06.326014 24 daemon_set.go:1198] Pod daemon-set-slwkr is not available
  I0218 19:15:06.326044 24 daemon_set.go:1193] Wrong image for pod: daemon-set-x54gv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:07.321715 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:08.319545 24 daemon_set.go:1193] Wrong image for pod: daemon-set-562v4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.53, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0218 19:15:08.319581 24 daemon_set.go:1198] Pod daemon-set-p6dqf is not available
  I0218 19:15:10.316897 24 daemon_set.go:1198] Pod daemon-set-j9p48 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 02/18/25 19:15:10.335
  I0218 19:15:10.370775 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0218 19:15:10.370807 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:15:11.382170 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:15:11.382219 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 02/18/25 19:15:11.45
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9061, will wait for the garbage collector to delete the pods @ 02/18/25 19:15:11.45
  I0218 19:15:11.529209 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.835305ms
  I0218 19:15:11.729657 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.442253ms
  I0218 19:15:13.642253 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:13.642299 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0218 19:15:13.653373 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"230366"},"items":null}

  I0218 19:15:13.669216 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"230366"},"items":null}

  I0218 19:15:13.760873 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9061" for this suite. @ 02/18/25 19:15:13.774
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [6.446 seconds]
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:15:13.846
  I0218 19:15:13.846208 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:15:13.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:15:13.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:15:13.9
  STEP: Creating a simple DaemonSet "daemon-set" @ 02/18/25 19:15:14.007
  STEP: Check that daemon pods launch on every node of the cluster. @ 02/18/25 19:15:14.028
  I0218 19:15:14.052502 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:14.052545 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:15:15.060404 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:15:15.060478 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:15:16.066675 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:15:16.066719 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 02/18/25 19:15:16.078
  I0218 19:15:16.151114 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0218 19:15:16.151137 24 fixtures.go:131] Node admiring-kalam-9d8f4776-qvphf is running 0 daemon pod, expected 1
  I0218 19:15:17.146268 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:15:17.146294 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 02/18/25 19:15:17.146
  STEP: Deleting DaemonSet "daemon-set" @ 02/18/25 19:15:17.169
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9455, will wait for the garbage collector to delete the pods @ 02/18/25 19:15:17.169
  I0218 19:15:17.246663 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.055624ms
  I0218 19:15:17.347037 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.355213ms
  I0218 19:15:20.157967 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:20.158005 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0218 19:15:20.167973 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"230547"},"items":null}

  I0218 19:15:20.177718 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"230547"},"items":null}

  I0218 19:15:20.258586 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9455" for this suite. @ 02/18/25 19:15:20.272
  << Timeline
------------------------------
S
------------------------------
• [22.092 seconds]
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:15:20.295
  I0218 19:15:20.295041 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename emptydir-wrapper @ 02/18/25 19:15:20.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:15:20.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:15:20.354
  STEP: Creating 50 configmaps @ 02/18/25 19:15:20.372
  STEP: Creating RC which spawns configmap-volume pods @ 02/18/25 19:15:21.133
  I0218 19:15:21.165753 24 resource.go:87] Pod name wrapped-volume-race-bd6d8ccf-8106-432e-9952-fe03704e1e46: Found 0 pods out of 5
  I0218 19:15:26.219616 24 resource.go:87] Pod name wrapped-volume-race-bd6d8ccf-8106-432e-9952-fe03704e1e46: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 02/18/25 19:15:26.219
  STEP: Creating RC which spawns configmap-volume pods @ 02/18/25 19:15:26.303
  I0218 19:15:26.374568 24 resource.go:87] Pod name wrapped-volume-race-c2f90252-b3b3-4c91-a5fc-51831831ef21: Found 0 pods out of 5
  I0218 19:15:31.406494 24 resource.go:87] Pod name wrapped-volume-race-c2f90252-b3b3-4c91-a5fc-51831831ef21: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 02/18/25 19:15:31.406
  STEP: Creating RC which spawns configmap-volume pods @ 02/18/25 19:15:31.483
  I0218 19:15:31.546068 24 resource.go:87] Pod name wrapped-volume-race-26f2b17c-cecf-4098-87c2-e84dfba4086f: Found 0 pods out of 5
  I0218 19:15:36.579736 24 resource.go:87] Pod name wrapped-volume-race-26f2b17c-cecf-4098-87c2-e84dfba4086f: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 02/18/25 19:15:36.579
  STEP: deleting ReplicationController wrapped-volume-race-26f2b17c-cecf-4098-87c2-e84dfba4086f in namespace emptydir-wrapper-4478, will wait for the garbage collector to delete the pods @ 02/18/25 19:15:36.645
  I0218 19:15:36.725263 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-26f2b17c-cecf-4098-87c2-e84dfba4086f took: 16.099231ms
  I0218 19:15:36.826230 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-26f2b17c-cecf-4098-87c2-e84dfba4086f pods took: 100.964677ms
  STEP: deleting ReplicationController wrapped-volume-race-c2f90252-b3b3-4c91-a5fc-51831831ef21 in namespace emptydir-wrapper-4478, will wait for the garbage collector to delete the pods @ 02/18/25 19:15:38.327
  I0218 19:15:38.416388 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-c2f90252-b3b3-4c91-a5fc-51831831ef21 took: 25.801603ms
  I0218 19:15:38.516881 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-c2f90252-b3b3-4c91-a5fc-51831831ef21 pods took: 100.487291ms
  STEP: deleting ReplicationController wrapped-volume-race-bd6d8ccf-8106-432e-9952-fe03704e1e46 in namespace emptydir-wrapper-4478, will wait for the garbage collector to delete the pods @ 02/18/25 19:15:39.618
  I0218 19:15:39.700210 24 resources.go:139] Deleting ReplicationController wrapped-volume-race-bd6d8ccf-8106-432e-9952-fe03704e1e46 took: 17.584532ms
  I0218 19:15:39.801112 24 resources.go:163] Terminating ReplicationController wrapped-volume-race-bd6d8ccf-8106-432e-9952-fe03704e1e46 pods took: 100.900721ms
  STEP: Cleaning up the configMaps @ 02/18/25 19:15:41.402
  I0218 19:15:42.352212 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4478" for this suite. @ 02/18/25 19:15:42.367
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [14.342 seconds]
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:15:42.42
  I0218 19:15:42.420515 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename namespaces @ 02/18/25 19:15:42.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:15:42.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:15:42.472
  STEP: Creating a test namespace @ 02/18/25 19:15:42.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:15:42.545
  STEP: Creating a pod in the namespace @ 02/18/25 19:15:42.562
  STEP: Waiting for the pod to have running status @ 02/18/25 19:15:42.583
  STEP: Deleting the namespace @ 02/18/25 19:15:44.61
  STEP: Waiting for the namespace to be removed. @ 02/18/25 19:15:44.631
  STEP: Recreating the namespace @ 02/18/25 19:15:56.641
  STEP: Verifying there are no pods in the namespace @ 02/18/25 19:15:56.678
  I0218 19:15:56.691613 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6864" for this suite. @ 02/18/25 19:15:56.718
  STEP: Destroying namespace "nsdeletetest-414" for this suite. @ 02/18/25 19:15:56.736
  I0218 19:15:56.746606 24 framework.go:370] Namespace nsdeletetest-414 was already deleted
  STEP: Destroying namespace "nsdeletetest-3878" for this suite. @ 02/18/25 19:15:56.746
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.819 seconds]
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:15:56.797
  I0218 19:15:56.797965 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:15:56.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:15:56.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:15:56.854
  I0218 19:15:56.957792 24 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 02/18/25 19:15:56.97
  I0218 19:15:56.983577 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:56.983609 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 02/18/25 19:15:56.983
  I0218 19:15:57.058926 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:57.058961 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:15:58.049320 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:15:58.049354 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:15:59.048360 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:15:59.048395 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 02/18/25 19:15:59.059
  I0218 19:15:59.100772 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:15:59.100818 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0218 19:16:00.103185 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:16:00.103231 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 02/18/25 19:16:00.103
  I0218 19:16:00.144866 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:16:00.144902 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:16:01.147181 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:16:01.147214 24 fixtures.go:131] Node admiring-kalam-9d8f4776-dp7t2 is running 0 daemon pod, expected 1
  I0218 19:16:02.143705 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:16:02.143740 24 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 02/18/25 19:16:02.169
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8809, will wait for the garbage collector to delete the pods @ 02/18/25 19:16:02.169
  I0218 19:16:02.253834 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.294579ms
  I0218 19:16:02.354387 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.549985ms
  I0218 19:16:04.464810 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:16:04.464844 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0218 19:16:04.476117 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"231411"},"items":null}

  I0218 19:16:04.490341 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"231411"},"items":null}

  I0218 19:16:04.584786 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8809" for this suite. @ 02/18/25 19:16:04.597
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [304.470 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:16:04.632
  I0218 19:16:04.632713 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-pred @ 02/18/25 19:16:04.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:16:04.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:16:04.682
  I0218 19:16:04.698634 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0218 19:16:04.722670 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0218 19:16:04.734418 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-bw8qq before test
  I0218 19:16:04.753597 24 predicates.go:957] e2e-conformance-test from conformance started at 2025-02-18 18:23:07 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.753624 24 predicates.go:959] 	Container conformance-container ready: true, restart count 0
  I0218 19:16:04.753632 24 predicates.go:959] 	Container output-container ready: true, restart count 0
  I0218 19:16:04.753640 24 predicates.go:957] canal-pjv2d from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.753646 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:16:04.753651 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:16:04.753657 24 predicates.go:957] envoy-agent-qqggb from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.753662 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:16:04.753666 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:16:04.753672 24 predicates.go:957] hcloud-csi-node-9v5nh from kube-system started at 2025-02-18 14:38:09 +0000 UTC (3 container statuses recorded)
  I0218 19:16:04.753677 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:16:04.753682 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:16:04.753689 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:16:04.753694 24 predicates.go:957] kube-proxy-7jqlc from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.753699 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:16:04.753704 24 predicates.go:957] node-local-dns-txbgn from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.753708 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:16:04.753715 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dp7t2 before test
  I0218 19:16:04.770647 24 predicates.go:957] canal-4pjrc from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.770668 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:16:04.770675 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:16:04.770719 24 predicates.go:957] envoy-agent-8zr84 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.770725 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:16:04.770731 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:16:04.770738 24 predicates.go:957] hcloud-csi-node-xmg4j from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:16:04.770743 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:16:04.770749 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:16:04.770754 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:16:04.770759 24 predicates.go:957] kube-proxy-r5hhd from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.770764 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:16:04.770769 24 predicates.go:957] node-local-dns-j6zp9 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.770773 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:16:04.770779 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dzdlc before test
  I0218 19:16:04.790024 24 predicates.go:957] canal-k5hdp from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.790064 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:16:04.790071 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:16:04.790080 24 predicates.go:957] envoy-agent-47nm9 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.790085 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:16:04.790090 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:16:04.790096 24 predicates.go:957] hcloud-csi-node-njgf6 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (3 container statuses recorded)
  I0218 19:16:04.790101 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:16:04.790106 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:16:04.790111 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:16:04.790116 24 predicates.go:957] kube-proxy-g6w79 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.790121 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:16:04.790127 24 predicates.go:957] node-local-dns-6flf8 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.790131 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:16:04.790137 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-qvphf before test
  I0218 19:16:04.809705 24 predicates.go:957] calico-kube-controllers-776c584756-6ljhp from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809738 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0218 19:16:04.809751 24 predicates.go:957] canal-k7jmz from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.809760 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:16:04.809767 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:16:04.809777 24 predicates.go:957] coredns-6f84685c69-f5l5j from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809785 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:16:04.809800 24 predicates.go:957] coredns-6f84685c69-jnt8h from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809809 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:16:04.809816 24 predicates.go:957] envoy-agent-mtdqj from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:16:04.809820 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:16:04.809825 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:16:04.809830 24 predicates.go:957] hcloud-csi-controller-58497d4b88-4qwtc from kube-system started at 2025-02-18 14:38:29 +0000 UTC (5 container statuses recorded)
  I0218 19:16:04.809835 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0218 19:16:04.809840 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0218 19:16:04.809845 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0218 19:16:04.809849 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:16:04.809854 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:16:04.809860 24 predicates.go:957] hcloud-csi-node-rz8p6 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:16:04.809865 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:16:04.809869 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:16:04.809874 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:16:04.809878 24 predicates.go:957] konnectivity-agent-69d96bd65-lfwdq from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809883 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:16:04.809888 24 predicates.go:957] konnectivity-agent-69d96bd65-tmvh5 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809893 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:16:04.809901 24 predicates.go:957] kube-proxy-9khcg from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809906 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:16:04.809911 24 predicates.go:957] metrics-server-98f8d75b6-6wxtx from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809915 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:16:04.809923 24 predicates.go:957] metrics-server-98f8d75b6-m68l8 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809927 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:16:04.809935 24 predicates.go:957] node-local-dns-2qvpq from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:16:04.809940 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 02/18/25 19:16:04.81
  STEP: Explicitly delete pod here to free the resource it takes. @ 02/18/25 19:16:06.862
  STEP: Trying to apply a random label on the found node. @ 02/18/25 19:16:06.904
  STEP: verifying the node has the label kubernetes.io/e2e-c6b32ebf-767c-435f-8ace-9ac21fac38ed 95 @ 02/18/25 19:16:06.927
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 02/18/25 19:16:06.937
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.0.0.5 on the node which pod4 resides and expect not scheduled @ 02/18/25 19:16:08.975
  STEP: removing the label kubernetes.io/e2e-c6b32ebf-767c-435f-8ace-9ac21fac38ed off the node admiring-kalam-9d8f4776-dp7t2 @ 02/18/25 19:21:08.994
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c6b32ebf-767c-435f-8ace-9ac21fac38ed @ 02/18/25 19:21:09.034
  I0218 19:21:09.059163 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1629" for this suite. @ 02/18/25 19:21:09.079
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [77.980 seconds]
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:746

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:21:09.116
  I0218 19:21:09.116042 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption @ 02/18/25 19:21:09.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:21:09.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:21:09.164
  I0218 19:21:09.221518 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:22:09.248368 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 02/18/25 19:22:09.262
  I0218 19:22:09.262530 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption-path @ 02/18/25 19:22:09.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:22:09.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:22:09.328
  STEP: Finding an available node @ 02/18/25 19:22:09.343
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 02/18/25 19:22:09.343
  STEP: Explicitly delete pod here to free the resource it takes. @ 02/18/25 19:22:11.405
  I0218 19:22:11.434537 24 preemption.go:709] found a healthy node: admiring-kalam-9d8f4776-dp7t2
  STEP: Adding a custom resource @ 02/18/25 19:22:11.453
  I0218 19:22:17.651142 24 preemption.go:828] pods created so far: [1 1 1]
  I0218 19:22:17.651172 24 preemption.go:829] length of pods created so far: 3
  I0218 19:22:19.681952 24 preemption.go:846] pods created so far: [2 2 1]
  STEP: Removing a custom resource @ 02/18/25 19:22:26.683
  STEP: Removing a custom resource @ 02/18/25 19:22:26.854
  STEP: Removing a custom resource @ 02/18/25 19:22:26.89
  STEP: Removing a custom resource @ 02/18/25 19:22:26.925
  STEP: Removing a custom resource @ 02/18/25 19:22:26.959
  I0218 19:22:26.994758 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3905" for this suite. @ 02/18/25 19:22:27.029
  I0218 19:22:27.050038 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7676" for this suite. @ 02/18/25 19:22:27.067
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [9.871 seconds]
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:22:27.111
  I0218 19:22:27.111192 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:22:27.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:22:27.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:22:27.182
  I0218 19:22:27.323287 24 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0218 19:22:27.346781 24 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0218 19:22:27.378369 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:22:27.378402 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:22:28.412048 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:22:28.412075 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:22:29.379988 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:22:29.380019 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0218 19:22:29.380034 24 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0218 19:22:29.402067 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0218 19:22:31.448559 24 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0218 19:22:31.474554 24 daemon_set.go:102] Updating DaemonSet daemon-set
  I0218 19:22:31.474595 24 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0218 19:22:31.490364 24 daemon_set.go:1193] Wrong image for pod: daemon-set-46q7l. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0218 19:22:31.490388 24 daemon_set.go:1198] Pod daemon-set-46q7l is not available
  I0218 19:22:34.500397 24 daemon_set.go:1198] Pod daemon-set-76l48 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 02/18/25 19:22:34.55
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1366, will wait for the garbage collector to delete the pods @ 02/18/25 19:22:34.55
  I0218 19:22:34.644623 24 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 27.236155ms
  I0218 19:22:34.744836 24 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.209343ms
  I0218 19:22:36.856542 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:22:36.856577 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0218 19:22:36.867367 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"233241"},"items":null}

  I0218 19:22:36.878741 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"233241"},"items":null}

  I0218 19:22:36.947932 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1366" for this suite. @ 02/18/25 19:22:36.963
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [1.310 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:22:36.995
  I0218 19:22:36.995030 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-pred @ 02/18/25 19:22:36.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:22:37.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:22:37.045
  I0218 19:22:37.063226 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0218 19:22:37.091373 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0218 19:22:37.102528 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-bw8qq before test
  I0218 19:22:37.124674 24 predicates.go:957] e2e-conformance-test from conformance started at 2025-02-18 18:23:07 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.124702 24 predicates.go:959] 	Container conformance-container ready: true, restart count 0
  I0218 19:22:37.124710 24 predicates.go:959] 	Container output-container ready: true, restart count 0
  I0218 19:22:37.124723 24 predicates.go:957] canal-pjv2d from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.124734 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:22:37.124745 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:22:37.124755 24 predicates.go:957] envoy-agent-qqggb from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.124764 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:22:37.124773 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:22:37.124783 24 predicates.go:957] hcloud-csi-node-9v5nh from kube-system started at 2025-02-18 14:38:09 +0000 UTC (3 container statuses recorded)
  I0218 19:22:37.124788 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:22:37.124793 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:22:37.124798 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:22:37.124803 24 predicates.go:957] kube-proxy-7jqlc from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.124808 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:22:37.124814 24 predicates.go:957] node-local-dns-txbgn from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.124818 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:22:37.124824 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dp7t2 before test
  I0218 19:22:37.139963 24 predicates.go:957] canal-4pjrc from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.139989 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:22:37.139996 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:22:37.140004 24 predicates.go:957] envoy-agent-8zr84 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.140010 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:22:37.140014 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:22:37.140021 24 predicates.go:957] hcloud-csi-node-xmg4j from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:22:37.140025 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:22:37.140030 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:22:37.140034 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:22:37.140041 24 predicates.go:957] kube-proxy-r5hhd from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.140046 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:22:37.140052 24 predicates.go:957] node-local-dns-j6zp9 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.140056 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:22:37.140062 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dzdlc before test
  I0218 19:22:37.160143 24 predicates.go:957] canal-k5hdp from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.160175 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:22:37.160187 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:22:37.160198 24 predicates.go:957] envoy-agent-47nm9 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.160204 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:22:37.160208 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:22:37.160214 24 predicates.go:957] hcloud-csi-node-njgf6 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (3 container statuses recorded)
  I0218 19:22:37.160219 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:22:37.160226 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:22:37.160230 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:22:37.160236 24 predicates.go:957] kube-proxy-g6w79 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.160244 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:22:37.160254 24 predicates.go:957] node-local-dns-6flf8 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.160285 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:22:37.160295 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-qvphf before test
  I0218 19:22:37.188235 24 predicates.go:957] calico-kube-controllers-776c584756-6ljhp from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188280 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0218 19:22:37.188289 24 predicates.go:957] canal-k7jmz from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.188295 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:22:37.188302 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:22:37.188312 24 predicates.go:957] coredns-6f84685c69-f5l5j from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188320 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:22:37.188329 24 predicates.go:957] coredns-6f84685c69-jnt8h from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188338 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:22:37.188349 24 predicates.go:957] envoy-agent-mtdqj from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:22:37.188357 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:22:37.188365 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:22:37.188374 24 predicates.go:957] hcloud-csi-controller-58497d4b88-4qwtc from kube-system started at 2025-02-18 14:38:29 +0000 UTC (5 container statuses recorded)
  I0218 19:22:37.188379 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0218 19:22:37.188383 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0218 19:22:37.188388 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0218 19:22:37.188394 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:22:37.188398 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:22:37.188405 24 predicates.go:957] hcloud-csi-node-rz8p6 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:22:37.188409 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:22:37.188414 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:22:37.188418 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:22:37.188466 24 predicates.go:957] konnectivity-agent-69d96bd65-lfwdq from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188475 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:22:37.188485 24 predicates.go:957] konnectivity-agent-69d96bd65-tmvh5 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188492 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:22:37.188498 24 predicates.go:957] kube-proxy-9khcg from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188503 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:22:37.188508 24 predicates.go:957] metrics-server-98f8d75b6-6wxtx from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188513 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:22:37.188518 24 predicates.go:957] metrics-server-98f8d75b6-m68l8 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188523 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:22:37.188528 24 predicates.go:957] node-local-dns-2qvpq from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:22:37.188533 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 02/18/25 19:22:37.188
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.182563cb9ef793bd], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 02/18/25 19:22:37.263
  I0218 19:22:38.263545 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5767" for this suite. @ 02/18/25 19:22:38.288
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [5.840 seconds]
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:22:38.325
  I0218 19:22:38.325246 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename controllerrevisions @ 02/18/25 19:22:38.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:22:38.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:22:38.379
  STEP: Creating DaemonSet "e2e-dpklv-daemon-set" @ 02/18/25 19:22:38.493
  STEP: Check that daemon pods launch on every node of the cluster. @ 02/18/25 19:22:38.509
  I0218 19:22:38.555896 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dpklv-daemon-set: 0
  I0218 19:22:38.555937 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:22:39.554284 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dpklv-daemon-set: 0
  I0218 19:22:39.554324 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:22:40.548733 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dpklv-daemon-set: 4
  I0218 19:22:40.548773 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-dpklv-daemon-set
  STEP: Confirm DaemonSet "e2e-dpklv-daemon-set" successfully created with "daemonset-name=e2e-dpklv-daemon-set" label @ 02/18/25 19:22:40.559
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-dpklv-daemon-set" @ 02/18/25 19:22:40.581
  I0218 19:22:40.598766 24 controller_revision.go:162] Located ControllerRevision: "e2e-dpklv-daemon-set-7755fdc889"
  STEP: Patching ControllerRevision "e2e-dpklv-daemon-set-7755fdc889" @ 02/18/25 19:22:40.615
  I0218 19:22:40.644195 24 controller_revision.go:173] e2e-dpklv-daemon-set-7755fdc889 has been patched
  STEP: Create a new ControllerRevision @ 02/18/25 19:22:40.644
  I0218 19:22:40.660414 24 controller_revision.go:191] Created ControllerRevision: e2e-dpklv-daemon-set-6987bc889
  STEP: Confirm that there are two ControllerRevisions @ 02/18/25 19:22:40.66
  I0218 19:22:40.660523 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0218 19:22:40.672762 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-dpklv-daemon-set-7755fdc889" @ 02/18/25 19:22:40.672
  STEP: Confirm that there is only one ControllerRevision @ 02/18/25 19:22:40.69
  I0218 19:22:40.690825 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0218 19:22:40.700707 24 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-dpklv-daemon-set-6987bc889" @ 02/18/25 19:22:40.714
  I0218 19:22:40.739676 24 controller_revision.go:220] e2e-dpklv-daemon-set-6987bc889 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 02/18/25 19:22:40.739
  W0218 19:22:40.753475      24 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 02/18/25 19:22:40.753
  I0218 19:22:40.753600 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0218 19:22:41.754519 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0218 19:22:41.765194 24 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-dpklv-daemon-set-6987bc889=updated" @ 02/18/25 19:22:41.765
  STEP: Confirm that there is only one ControllerRevision @ 02/18/25 19:22:41.785
  I0218 19:22:41.785128 24 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0218 19:22:41.798987 24 controller_revision.go:265] Found 1 ControllerRevisions
  I0218 19:22:41.809317 24 controller_revision.go:246] ControllerRevision "e2e-dpklv-daemon-set-f47f6f5c6" has revision 3
  STEP: Deleting DaemonSet "e2e-dpklv-daemon-set" @ 02/18/25 19:22:41.821
  STEP: deleting DaemonSet.extensions e2e-dpklv-daemon-set in namespace controllerrevisions-2349, will wait for the garbage collector to delete the pods @ 02/18/25 19:22:41.821
  I0218 19:22:41.902233 24 resources.go:139] Deleting DaemonSet.extensions e2e-dpklv-daemon-set took: 19.941657ms
  I0218 19:22:42.002884 24 resources.go:163] Terminating DaemonSet.extensions e2e-dpklv-daemon-set pods took: 100.646159ms
  I0218 19:22:44.016675 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-dpklv-daemon-set: 0
  I0218 19:22:44.016718 24 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-dpklv-daemon-set
  I0218 19:22:44.033636 24 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"233420"},"items":null}

  I0218 19:22:44.043690 24 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"233420"},"items":null}

  I0218 19:22:44.116963 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2349" for this suite. @ 02/18/25 19:22:44.128
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [0.166 seconds]
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:22:44.177
  I0218 19:22:44.177259 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename namespaces @ 02/18/25 19:22:44.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:22:44.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:22:44.225
  STEP: Read namespace status @ 02/18/25 19:22:44.24
  I0218 19:22:44.267191 24 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 02/18/25 19:22:44.267
  I0218 19:22:44.283940 24 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 02/18/25 19:22:44.283
  I0218 19:22:44.310397 24 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0218 19:22:44.311304 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3362" for this suite. @ 02/18/25 19:22:44.325
  << Timeline
------------------------------
SSSSSSSSSSSSSS
------------------------------
• [69.013 seconds]
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:124

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:22:44.351
  I0218 19:22:44.351075 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-preemption @ 02/18/25 19:22:44.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:22:44.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:22:44.402
  I0218 19:22:44.474345 24 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0218 19:23:44.508217 24 util.go:396] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 02/18/25 19:23:44.519
  STEP: Adding a custom resource @ 02/18/25 19:23:44.519
  I0218 19:23:44.575662 24 preemption.go:168] Created pod: pod0-0-sched-preemption-low-priority
  I0218 19:23:44.594571 24 preemption.go:168] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 02/18/25 19:23:44.594
  I0218 19:23:44.647682 24 preemption.go:168] Created pod: pod1-0-sched-preemption-medium-priority
  I0218 19:23:44.669114 24 preemption.go:168] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 02/18/25 19:23:44.669
  I0218 19:23:44.716847 24 preemption.go:168] Created pod: pod2-0-sched-preemption-medium-priority
  I0218 19:23:44.738029 24 preemption.go:168] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 02/18/25 19:23:44.738
  I0218 19:23:44.791525 24 preemption.go:168] Created pod: pod3-0-sched-preemption-medium-priority
  I0218 19:23:44.808062 24 preemption.go:168] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 02/18/25 19:23:44.808
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 02/18/25 19:23:48.943
  STEP: Removing a custom resource @ 02/18/25 19:23:53.169
  STEP: Removing a custom resource @ 02/18/25 19:23:53.217
  STEP: Removing a custom resource @ 02/18/25 19:23:53.254
  STEP: Removing a custom resource @ 02/18/25 19:23:53.294
  I0218 19:23:53.326629 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7901" for this suite. @ 02/18/25 19:23:53.344
  << Timeline
------------------------------
S
------------------------------
• [0.140 seconds]
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:23:53.368
  I0218 19:23:53.368203 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename namespaces @ 02/18/25 19:23:53.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:23:53.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:23:53.429
  STEP: Updating Namespace "namespaces-4826" @ 02/18/25 19:23:53.444
  I0218 19:23:53.474262 24 namespace.go:389] Namespace "namespaces-4826" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"150a1882-3794-4f04-9826-916de9fe882b", "kubernetes.io/metadata.name":"namespaces-4826", "namespaces-4826":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0218 19:23:53.475192 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4826" for this suite. @ 02/18/25 19:23:53.489
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [2.443 seconds]
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:23:53.521
  I0218 19:23:53.521153 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename daemonsets @ 02/18/25 19:23:53.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:23:53.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:23:53.578
  STEP: Creating simple DaemonSet "daemon-set" @ 02/18/25 19:23:53.678
  STEP: Check that daemon pods launch on every node of the cluster. @ 02/18/25 19:23:53.694
  I0218 19:23:53.725836 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0218 19:23:53.725868 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:23:54.731067 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0218 19:23:54.731101 24 fixtures.go:131] Node admiring-kalam-9d8f4776-bw8qq is running 0 daemon pod, expected 1
  I0218 19:23:55.731605 24 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0218 19:23:55.731639 24 fixtures.go:136] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 02/18/25 19:23:55.741
  STEP: DeleteCollection of the DaemonSets @ 02/18/25 19:23:55.754
  STEP: Verify that ReplicaSets have been deleted @ 02/18/25 19:23:55.774
  I0218 19:23:55.828534 24 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"233919"},"items":null}

  I0218 19:23:55.844157 24 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"233919"},"items":[{"metadata":{"name":"daemon-set-852mv","generateName":"daemon-set-","namespace":"daemonsets-1122","uid":"43fdcf3c-2766-4829-9036-ae74ecc57d5b","resourceVersion":"233919","creationTimestamp":"2025-02-18T19:23:53Z","deletionTimestamp":"2025-02-18T19:24:25Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a4035494973e5f1e8b0af749a9a879dac7f5d72f177710c41a88b716f7e9d108","cni.projectcalico.org/podIP":"172.25.0.18/32","cni.projectcalico.org/podIPs":"172.25.0.18/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a1a6df27-7cba-4368-bb4c-70229e149e2a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1a6df27-7cba-4368-bb4c-70229e149e2a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.25.0.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6j7zt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6j7zt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"admiring-kalam-9d8f4776-dzdlc","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["admiring-kalam-9d8f4776-dzdlc"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:55Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"}],"hostIP":"10.0.0.2","hostIPs":[{"ip":"10.0.0.2"}],"podIP":"172.25.0.18","podIPs":[{"ip":"172.25.0.18"}],"startTime":"2025-02-18T19:23:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-02-18T19:23:54Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f43dfd576bc6d4493a7d20997418c880232c0055622f389b52273d3208413a84","started":true,"volumeMounts":[{"name":"kube-api-access-6j7zt","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dxb4s","generateName":"daemon-set-","namespace":"daemonsets-1122","uid":"955cd0d0-271d-490c-80c9-57daef2423a0","resourceVersion":"233918","creationTimestamp":"2025-02-18T19:23:53Z","deletionTimestamp":"2025-02-18T19:24:25Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"bee62115f66b038a151bd3330362a35ce36b38179c430a1ccd6f1c290295eda8","cni.projectcalico.org/podIP":"172.25.2.65/32","cni.projectcalico.org/podIPs":"172.25.2.65/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a1a6df27-7cba-4368-bb4c-70229e149e2a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1a6df27-7cba-4368-bb4c-70229e149e2a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.25.2.65\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gv8qk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gv8qk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"admiring-kalam-9d8f4776-qvphf","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["admiring-kalam-9d8f4776-qvphf"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"}],"hostIP":"10.0.0.4","hostIPs":[{"ip":"10.0.0.4"}],"podIP":"172.25.2.65","podIPs":[{"ip":"172.25.2.65"}],"startTime":"2025-02-18T19:23:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-02-18T19:23:54Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://30cce24280e7b2e72c9fbb973fdcd86d07a4efc4c9b171c51cda37d1ff72a9ed","started":true,"volumeMounts":[{"name":"kube-api-access-gv8qk","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qll8w","generateName":"daemon-set-","namespace":"daemonsets-1122","uid":"7524a1c1-6685-48e2-9739-49c46d745a50","resourceVersion":"233915","creationTimestamp":"2025-02-18T19:23:53Z","deletionTimestamp":"2025-02-18T19:24:25Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"df7edb84848176202270256bb552358090738417ead07875ac33432bf567f883","cni.projectcalico.org/podIP":"172.25.3.223/32","cni.projectcalico.org/podIPs":"172.25.3.223/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a1a6df27-7cba-4368-bb4c-70229e149e2a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1a6df27-7cba-4368-bb4c-70229e149e2a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.25.3.223\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xbl4z","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xbl4z","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"admiring-kalam-9d8f4776-bw8qq","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["admiring-kalam-9d8f4776-bw8qq"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"}],"hostIP":"10.0.0.3","hostIPs":[{"ip":"10.0.0.3"}],"podIP":"172.25.3.223","podIPs":[{"ip":"172.25.3.223"}],"startTime":"2025-02-18T19:23:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-02-18T19:23:54Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://29612bc9298e37b2f8b6cdfd6f8cb84563e9d49a14361beec6f2506b2f61da02","started":true,"volumeMounts":[{"name":"kube-api-access-xbl4z","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rnngf","generateName":"daemon-set-","namespace":"daemonsets-1122","uid":"1ecaf4e3-57ed-4c6f-816d-7b6fc778537f","resourceVersion":"233916","creationTimestamp":"2025-02-18T19:23:53Z","deletionTimestamp":"2025-02-18T19:24:25Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"9f4489974","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"740e9295ef605dd3ca5cc65bb89b566eac566ce7d872aa0183517bede7fb8dd0","cni.projectcalico.org/podIP":"172.25.1.137/32","cni.projectcalico.org/podIPs":"172.25.1.137/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a1a6df27-7cba-4368-bb4c-70229e149e2a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a1a6df27-7cba-4368-bb4c-70229e149e2a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-02-18T19:23:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.25.1.137\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-xfpzf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-xfpzf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"admiring-kalam-9d8f4776-dp7t2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["admiring-kalam-9d8f4776-dp7t2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:55Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:55Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2025-02-18T19:23:53Z"}],"hostIP":"10.0.0.5","hostIPs":[{"ip":"10.0.0.5"}],"podIP":"172.25.1.137","podIPs":[{"ip":"172.25.1.137"}],"startTime":"2025-02-18T19:23:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-02-18T19:23:55Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://c18997a0d94c5b07149a9743556c1862ef9858997ae88084ca4a657da53e7856","started":true,"volumeMounts":[{"name":"kube-api-access-xfpzf","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0218 19:23:55.912799 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1122" for this suite. @ 02/18/25 19:23:55.939
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [4.507 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:23:55.983
  I0218 19:23:55.983281 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-pred @ 02/18/25 19:23:55.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:23:56.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:23:56.03
  I0218 19:23:56.047771 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0218 19:23:56.074407 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0218 19:23:56.086933 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-bw8qq before test
  I0218 19:23:56.113579 24 predicates.go:957] e2e-conformance-test from conformance started at 2025-02-18 18:23:07 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.113615 24 predicates.go:959] 	Container conformance-container ready: true, restart count 0
  I0218 19:23:56.113627 24 predicates.go:959] 	Container output-container ready: true, restart count 0
  I0218 19:23:56.113636 24 predicates.go:957] daemon-set-qll8w from daemonsets-1122 started at 2025-02-18 19:23:53 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.113641 24 predicates.go:959] 	Container app ready: true, restart count 0
  I0218 19:23:56.113648 24 predicates.go:957] canal-pjv2d from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.113653 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:23:56.113657 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:23:56.113663 24 predicates.go:957] envoy-agent-qqggb from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.113671 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:23:56.113680 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:23:56.113689 24 predicates.go:957] hcloud-csi-node-9v5nh from kube-system started at 2025-02-18 14:38:09 +0000 UTC (3 container statuses recorded)
  I0218 19:23:56.113701 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:23:56.113709 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:23:56.113717 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:23:56.113726 24 predicates.go:957] kube-proxy-7jqlc from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.113735 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:23:56.113744 24 predicates.go:957] node-local-dns-txbgn from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.113748 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:23:56.113755 24 predicates.go:957] pod0-1-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.113760 24 predicates.go:959] 	Container pod0-1-sched-preemption-medium-priority ready: true, restart count 0
  I0218 19:23:56.113765 24 predicates.go:957] preemptor-pod from sched-preemption-7901 started at 2025-02-18 19:23:50 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.113771 24 predicates.go:959] 	Container preemptor-pod ready: true, restart count 0
  I0218 19:23:56.113777 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dp7t2 before test
  I0218 19:23:56.132292 24 predicates.go:957] daemon-set-rnngf from daemonsets-1122 started at 2025-02-18 19:23:53 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.132334 24 predicates.go:959] 	Container app ready: true, restart count 0
  I0218 19:23:56.132349 24 predicates.go:957] canal-4pjrc from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.132359 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:23:56.132368 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:23:56.132379 24 predicates.go:957] envoy-agent-8zr84 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.132387 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:23:56.132395 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:23:56.132403 24 predicates.go:957] hcloud-csi-node-xmg4j from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:23:56.132411 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:23:56.132420 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:23:56.132465 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:23:56.132475 24 predicates.go:957] kube-proxy-r5hhd from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.132485 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:23:56.132495 24 predicates.go:957] node-local-dns-j6zp9 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.132503 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:23:56.132514 24 predicates.go:957] pod1-0-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.132521 24 predicates.go:959] 	Container pod1-0-sched-preemption-medium-priority ready: true, restart count 0
  I0218 19:23:56.132531 24 predicates.go:957] pod1-1-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.132538 24 predicates.go:959] 	Container pod1-1-sched-preemption-medium-priority ready: true, restart count 0
  I0218 19:23:56.132548 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dzdlc before test
  I0218 19:23:56.155542 24 predicates.go:957] daemon-set-852mv from daemonsets-1122 started at 2025-02-18 19:23:53 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.155565 24 predicates.go:959] 	Container app ready: true, restart count 0
  I0218 19:23:56.155574 24 predicates.go:957] canal-k5hdp from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.155580 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:23:56.155584 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:23:56.155591 24 predicates.go:957] envoy-agent-47nm9 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.155596 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:23:56.155602 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:23:56.155607 24 predicates.go:957] hcloud-csi-node-njgf6 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (3 container statuses recorded)
  I0218 19:23:56.155612 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:23:56.155617 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:23:56.155621 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:23:56.155626 24 predicates.go:957] kube-proxy-g6w79 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.155631 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:23:56.155638 24 predicates.go:957] node-local-dns-6flf8 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.155643 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:23:56.155649 24 predicates.go:957] pod2-0-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.155653 24 predicates.go:959] 	Container pod2-0-sched-preemption-medium-priority ready: true, restart count 0
  I0218 19:23:56.155659 24 predicates.go:957] pod2-1-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.155663 24 predicates.go:959] 	Container pod2-1-sched-preemption-medium-priority ready: true, restart count 0
  I0218 19:23:56.155669 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-qvphf before test
  I0218 19:23:56.182951 24 predicates.go:957] daemon-set-dxb4s from daemonsets-1122 started at 2025-02-18 19:23:53 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.182986 24 predicates.go:959] 	Container app ready: true, restart count 0
  I0218 19:23:56.183000 24 predicates.go:957] calico-kube-controllers-776c584756-6ljhp from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183009 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0218 19:23:56.183021 24 predicates.go:957] canal-k7jmz from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.183030 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:23:56.183037 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:23:56.183048 24 predicates.go:957] coredns-6f84685c69-f5l5j from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183056 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:23:56.183067 24 predicates.go:957] coredns-6f84685c69-jnt8h from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183075 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:23:56.183082 24 predicates.go:957] envoy-agent-mtdqj from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:23:56.183086 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:23:56.183091 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:23:56.183096 24 predicates.go:957] hcloud-csi-controller-58497d4b88-4qwtc from kube-system started at 2025-02-18 14:38:29 +0000 UTC (5 container statuses recorded)
  I0218 19:23:56.183101 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0218 19:23:56.183106 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0218 19:23:56.183110 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0218 19:23:56.183113 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:23:56.183120 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:23:56.183125 24 predicates.go:957] hcloud-csi-node-rz8p6 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:23:56.183130 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:23:56.183134 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:23:56.183138 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:23:56.183143 24 predicates.go:957] konnectivity-agent-69d96bd65-lfwdq from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183148 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:23:56.183153 24 predicates.go:957] konnectivity-agent-69d96bd65-tmvh5 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183158 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:23:56.183163 24 predicates.go:957] kube-proxy-9khcg from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183168 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:23:56.183173 24 predicates.go:957] metrics-server-98f8d75b6-6wxtx from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183179 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:23:56.183184 24 predicates.go:957] metrics-server-98f8d75b6-m68l8 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183189 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:23:56.183194 24 predicates.go:957] node-local-dns-2qvpq from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183199 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:23:56.183205 24 predicates.go:957] pod3-0-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183210 24 predicates.go:959] 	Container pod3-0-sched-preemption-medium-priority ready: true, restart count 0
  I0218 19:23:56.183215 24 predicates.go:957] pod3-1-sched-preemption-medium-priority from sched-preemption-7901 started at 2025-02-18 19:23:44 +0000 UTC (1 container statuses recorded)
  I0218 19:23:56.183220 24 predicates.go:959] 	Container pod3-1-sched-preemption-medium-priority ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 02/18/25 19:23:56.183
  STEP: Explicitly delete pod here to free the resource it takes. @ 02/18/25 19:23:58.262
  STEP: Trying to apply a random label on the found node. @ 02/18/25 19:23:58.29
  STEP: verifying the node has the label kubernetes.io/e2e-120c921e-e094-49cb-a5e7-17af2d3f0a08 42 @ 02/18/25 19:23:58.318
  STEP: Trying to relaunch the pod, now with labels. @ 02/18/25 19:23:58.333
  STEP: removing the label kubernetes.io/e2e-120c921e-e094-49cb-a5e7-17af2d3f0a08 off the node admiring-kalam-9d8f4776-dzdlc @ 02/18/25 19:24:00.397
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-120c921e-e094-49cb-a5e7-17af2d3f0a08 @ 02/18/25 19:24:00.435
  I0218 19:24:00.453372 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2039" for this suite. @ 02/18/25 19:24:00.473
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [7.338 seconds]
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:24:00.517
  I0218 19:24:00.517041 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename namespaces @ 02/18/25 19:24:00.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:24:00.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:24:00.573
  STEP: Creating a test namespace @ 02/18/25 19:24:00.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:24:00.625
  STEP: Creating a service in the namespace @ 02/18/25 19:24:00.641
  STEP: Deleting the namespace @ 02/18/25 19:24:00.669
  STEP: Waiting for the namespace to be removed. @ 02/18/25 19:24:00.691
  STEP: Recreating the namespace @ 02/18/25 19:24:07.71
  STEP: Verifying there is no service in the namespace @ 02/18/25 19:24:07.751
  I0218 19:24:07.762128 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8165" for this suite. @ 02/18/25 19:24:07.808
  STEP: Destroying namespace "nsdeletetest-455" for this suite. @ 02/18/25 19:24:07.826
  I0218 19:24:07.839023 24 framework.go:370] Namespace nsdeletetest-455 was already deleted
  STEP: Destroying namespace "nsdeletetest-1812" for this suite. @ 02/18/25 19:24:07.839
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
• [3.929 seconds]
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332

  Timeline >>
  STEP: Creating a kubernetes client @ 02/18/25 19:24:07.893
  I0218 19:24:07.893767 24 util.go:502] >>> kubeConfig: /tmp/kubeconfig-3612362775
  STEP: Building a namespace api object, basename sched-pred @ 02/18/25 19:24:07.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 02/18/25 19:24:07.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 02/18/25 19:24:07.946
  I0218 19:24:07.961493 24 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0218 19:24:07.994695 24 util.go:396] Waiting for terminating namespaces to be deleted...
  I0218 19:24:08.010841 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-bw8qq before test
  I0218 19:24:08.033919 24 predicates.go:957] e2e-conformance-test from conformance started at 2025-02-18 18:23:07 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.033949 24 predicates.go:959] 	Container conformance-container ready: true, restart count 0
  I0218 19:24:08.033956 24 predicates.go:959] 	Container output-container ready: true, restart count 0
  I0218 19:24:08.033966 24 predicates.go:957] canal-pjv2d from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.033972 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:24:08.033977 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:24:08.033983 24 predicates.go:957] envoy-agent-qqggb from kube-system started at 2025-02-18 14:38:09 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.033987 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:24:08.033992 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:24:08.034024 24 predicates.go:957] hcloud-csi-node-9v5nh from kube-system started at 2025-02-18 14:38:09 +0000 UTC (3 container statuses recorded)
  I0218 19:24:08.034029 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:24:08.034034 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:24:08.034038 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:24:08.034043 24 predicates.go:957] kube-proxy-7jqlc from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.034047 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:24:08.034053 24 predicates.go:957] node-local-dns-txbgn from kube-system started at 2025-02-18 14:38:09 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.034057 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:24:08.034063 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dp7t2 before test
  I0218 19:24:08.054934 24 predicates.go:957] canal-4pjrc from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.054957 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:24:08.054964 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:24:08.054971 24 predicates.go:957] envoy-agent-8zr84 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.054976 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:24:08.054981 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:24:08.054987 24 predicates.go:957] hcloud-csi-node-xmg4j from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:24:08.054992 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:24:08.054998 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:24:08.055003 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:24:08.055010 24 predicates.go:957] kube-proxy-r5hhd from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.055015 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:24:08.055020 24 predicates.go:957] node-local-dns-j6zp9 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.055025 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:24:08.055030 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-dzdlc before test
  I0218 19:24:08.070816 24 predicates.go:957] canal-k5hdp from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.070842 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:24:08.070850 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:24:08.070858 24 predicates.go:957] envoy-agent-47nm9 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.070864 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:24:08.070869 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:24:08.070875 24 predicates.go:957] hcloud-csi-node-njgf6 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (3 container statuses recorded)
  I0218 19:24:08.070880 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:24:08.070884 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:24:08.070890 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:24:08.070895 24 predicates.go:957] kube-proxy-g6w79 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.070900 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:24:08.070905 24 predicates.go:957] node-local-dns-6flf8 from kube-system started at 2025-02-18 14:38:01 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.070910 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  I0218 19:24:08.070916 24 predicates.go:119] 
  Logging pods the apiserver thinks is on node admiring-kalam-9d8f4776-qvphf before test
  I0218 19:24:08.099865 24 predicates.go:957] calico-kube-controllers-776c584756-6ljhp from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.099894 24 predicates.go:959] 	Container calico-kube-controllers ready: true, restart count 0
  I0218 19:24:08.099909 24 predicates.go:957] canal-k7jmz from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.099918 24 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I0218 19:24:08.099927 24 predicates.go:959] 	Container kube-flannel ready: true, restart count 0
  I0218 19:24:08.099934 24 predicates.go:957] coredns-6f84685c69-f5l5j from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.099939 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:24:08.099944 24 predicates.go:957] coredns-6f84685c69-jnt8h from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.099949 24 predicates.go:959] 	Container coredns ready: true, restart count 0
  I0218 19:24:08.099954 24 predicates.go:957] envoy-agent-mtdqj from kube-system started at 2025-02-18 14:38:08 +0000 UTC (2 container statuses recorded)
  I0218 19:24:08.099958 24 predicates.go:959] 	Container assign-address ready: true, restart count 0
  I0218 19:24:08.099963 24 predicates.go:959] 	Container envoy-agent ready: true, restart count 0
  I0218 19:24:08.099969 24 predicates.go:957] hcloud-csi-controller-58497d4b88-4qwtc from kube-system started at 2025-02-18 14:38:29 +0000 UTC (5 container statuses recorded)
  I0218 19:24:08.099974 24 predicates.go:959] 	Container csi-attacher ready: true, restart count 0
  I0218 19:24:08.099978 24 predicates.go:959] 	Container csi-provisioner ready: true, restart count 0
  I0218 19:24:08.099982 24 predicates.go:959] 	Container csi-resizer ready: true, restart count 0
  I0218 19:24:08.099986 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:24:08.099990 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:24:08.099995 24 predicates.go:957] hcloud-csi-node-rz8p6 from kube-system started at 2025-02-18 14:38:08 +0000 UTC (3 container statuses recorded)
  I0218 19:24:08.099999 24 predicates.go:959] 	Container csi-node-driver-registrar ready: true, restart count 0
  I0218 19:24:08.100004 24 predicates.go:959] 	Container hcloud-csi-driver ready: true, restart count 0
  I0218 19:24:08.100008 24 predicates.go:959] 	Container liveness-probe ready: true, restart count 0
  I0218 19:24:08.100017 24 predicates.go:957] konnectivity-agent-69d96bd65-lfwdq from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.100023 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:24:08.100028 24 predicates.go:957] konnectivity-agent-69d96bd65-tmvh5 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.100033 24 predicates.go:959] 	Container konnectivity-agent ready: true, restart count 0
  I0218 19:24:08.100038 24 predicates.go:957] kube-proxy-9khcg from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.100042 24 predicates.go:959] 	Container kube-proxy ready: true, restart count 0
  I0218 19:24:08.100047 24 predicates.go:957] metrics-server-98f8d75b6-6wxtx from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.100053 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:24:08.100059 24 predicates.go:957] metrics-server-98f8d75b6-m68l8 from kube-system started at 2025-02-18 14:38:29 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.100063 24 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I0218 19:24:08.100068 24 predicates.go:957] node-local-dns-2qvpq from kube-system started at 2025-02-18 14:38:08 +0000 UTC (1 container statuses recorded)
  I0218 19:24:08.100074 24 predicates.go:959] 	Container node-cache ready: true, restart count 0
  STEP: verifying the node has the label node admiring-kalam-9d8f4776-bw8qq @ 02/18/25 19:24:08.147
  STEP: verifying the node has the label node admiring-kalam-9d8f4776-dp7t2 @ 02/18/25 19:24:08.183
  STEP: verifying the node has the label node admiring-kalam-9d8f4776-dzdlc @ 02/18/25 19:24:08.249
  STEP: verifying the node has the label node admiring-kalam-9d8f4776-qvphf @ 02/18/25 19:24:08.284
  I0218 19:24:08.326780 24 predicates.go:372] Pod e2e-conformance-test requesting resource cpu=0m on Node admiring-kalam-9d8f4776-bw8qq
  I0218 19:24:08.326810 24 predicates.go:372] Pod calico-kube-controllers-776c584756-6ljhp requesting resource cpu=0m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326820 24 predicates.go:372] Pod canal-4pjrc requesting resource cpu=250m on Node admiring-kalam-9d8f4776-dp7t2
  I0218 19:24:08.326827 24 predicates.go:372] Pod canal-k5hdp requesting resource cpu=250m on Node admiring-kalam-9d8f4776-dzdlc
  I0218 19:24:08.326833 24 predicates.go:372] Pod canal-k7jmz requesting resource cpu=250m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326839 24 predicates.go:372] Pod canal-pjv2d requesting resource cpu=250m on Node admiring-kalam-9d8f4776-bw8qq
  I0218 19:24:08.326845 24 predicates.go:372] Pod coredns-6f84685c69-f5l5j requesting resource cpu=50m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326850 24 predicates.go:372] Pod coredns-6f84685c69-jnt8h requesting resource cpu=50m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326856 24 predicates.go:372] Pod envoy-agent-47nm9 requesting resource cpu=100m on Node admiring-kalam-9d8f4776-dzdlc
  I0218 19:24:08.326862 24 predicates.go:372] Pod envoy-agent-8zr84 requesting resource cpu=100m on Node admiring-kalam-9d8f4776-dp7t2
  I0218 19:24:08.326867 24 predicates.go:372] Pod envoy-agent-mtdqj requesting resource cpu=100m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326873 24 predicates.go:372] Pod envoy-agent-qqggb requesting resource cpu=100m on Node admiring-kalam-9d8f4776-bw8qq
  I0218 19:24:08.326881 24 predicates.go:372] Pod hcloud-csi-controller-58497d4b88-4qwtc requesting resource cpu=0m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326887 24 predicates.go:372] Pod hcloud-csi-node-9v5nh requesting resource cpu=0m on Node admiring-kalam-9d8f4776-bw8qq
  I0218 19:24:08.326892 24 predicates.go:372] Pod hcloud-csi-node-njgf6 requesting resource cpu=0m on Node admiring-kalam-9d8f4776-dzdlc
  I0218 19:24:08.326899 24 predicates.go:372] Pod hcloud-csi-node-rz8p6 requesting resource cpu=0m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326905 24 predicates.go:372] Pod hcloud-csi-node-xmg4j requesting resource cpu=0m on Node admiring-kalam-9d8f4776-dp7t2
  I0218 19:24:08.326911 24 predicates.go:372] Pod konnectivity-agent-69d96bd65-lfwdq requesting resource cpu=10m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326916 24 predicates.go:372] Pod konnectivity-agent-69d96bd65-tmvh5 requesting resource cpu=10m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326922 24 predicates.go:372] Pod kube-proxy-7jqlc requesting resource cpu=75m on Node admiring-kalam-9d8f4776-bw8qq
  I0218 19:24:08.326928 24 predicates.go:372] Pod kube-proxy-9khcg requesting resource cpu=75m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326934 24 predicates.go:372] Pod kube-proxy-g6w79 requesting resource cpu=75m on Node admiring-kalam-9d8f4776-dzdlc
  I0218 19:24:08.326938 24 predicates.go:372] Pod kube-proxy-r5hhd requesting resource cpu=75m on Node admiring-kalam-9d8f4776-dp7t2
  I0218 19:24:08.326943 24 predicates.go:372] Pod metrics-server-98f8d75b6-6wxtx requesting resource cpu=100m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326948 24 predicates.go:372] Pod metrics-server-98f8d75b6-m68l8 requesting resource cpu=100m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326953 24 predicates.go:372] Pod node-local-dns-2qvpq requesting resource cpu=0m on Node admiring-kalam-9d8f4776-qvphf
  I0218 19:24:08.326959 24 predicates.go:372] Pod node-local-dns-6flf8 requesting resource cpu=0m on Node admiring-kalam-9d8f4776-dzdlc
  I0218 19:24:08.326963 24 predicates.go:372] Pod node-local-dns-j6zp9 requesting resource cpu=0m on Node admiring-kalam-9d8f4776-dp7t2
  I0218 19:24:08.326968 24 predicates.go:372] Pod node-local-dns-txbgn requesting resource cpu=0m on Node admiring-kalam-9d8f4776-bw8qq
  STEP: Starting Pods to consume most of the cluster CPU. @ 02/18/25 19:24:08.326
  I0218 19:24:08.326983 24 predicates.go:382] Creating a pod which consumes cpu=2222m on Node admiring-kalam-9d8f4776-bw8qq
  I0218 19:24:08.353043 24 predicates.go:382] Creating a pod which consumes cpu=2222m on Node admiring-kalam-9d8f4776-dp7t2
  I0218 19:24:08.371939 24 predicates.go:382] Creating a pod which consumes cpu=2222m on Node admiring-kalam-9d8f4776-dzdlc
  I0218 19:24:08.391165 24 predicates.go:382] Creating a pod which consumes cpu=1998m on Node admiring-kalam-9d8f4776-qvphf
  STEP: Creating another pod that requires unavailable amount of CPU. @ 02/18/25 19:24:10.475
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57.182563e0d5d1d135], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7390/filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57 to admiring-kalam-9d8f4776-bw8qq] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57.182563e0fc0841a9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57.182563e0fcf08522], Reason = [Created], Message = [Created container: filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57.182563e1019221a9], Reason = [Started], Message = [Started container filler-pod-2924a743-5976-4f2f-8504-ec8996fa0f57] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91.182563e0d9cca6ab], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7390/filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91 to admiring-kalam-9d8f4776-qvphf] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91.182563e0ff4423ac], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91.182563e0ffea3cd8], Reason = [Created], Message = [Created container: filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91.182563e1052cb40e], Reason = [Started], Message = [Started container filler-pod-498cb5e7-8522-4a22-a5d2-903d3b960a91] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9.182563e0d6fa4aed], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7390/filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9 to admiring-kalam-9d8f4776-dp7t2] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9.182563e0fba512c2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9.182563e0fc44c769], Reason = [Created], Message = [Created container: filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9.182563e100b8cdfa], Reason = [Started], Message = [Started container filler-pod-7f73cf1c-74c1-40ca-b5c0-4cb869f8b2a9] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e.182563e0d854c2f9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7390/filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e to admiring-kalam-9d8f4776-dzdlc] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e.182563e0fc86e9bf], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e.182563e0fd2bbb97], Reason = [Created], Message = [Created container: filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e.182563e101bae9b0], Reason = [Started], Message = [Started container filler-pod-f1cacc94-61d9-4f6c-be52-28968907ec6e] @ 02/18/25 19:24:10.493
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.182563e15601af5c], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 02/18/25 19:24:10.523
  STEP: removing the label node off the node admiring-kalam-9d8f4776-bw8qq @ 02/18/25 19:24:11.536
  STEP: verifying the node doesn't have the label node @ 02/18/25 19:24:11.577
  STEP: removing the label node off the node admiring-kalam-9d8f4776-dp7t2 @ 02/18/25 19:24:11.596
  STEP: verifying the node doesn't have the label node @ 02/18/25 19:24:11.639
  STEP: removing the label node off the node admiring-kalam-9d8f4776-dzdlc @ 02/18/25 19:24:11.656
  STEP: verifying the node doesn't have the label node @ 02/18/25 19:24:11.71
  STEP: removing the label node off the node admiring-kalam-9d8f4776-qvphf @ 02/18/25 19:24:11.725
  STEP: verifying the node doesn't have the label node @ 02/18/25 19:24:11.763
  I0218 19:24:11.776975 24 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7390" for this suite. @ 02/18/25 19:24:11.804
  << Timeline
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] PASSED [0.001 seconds]
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80

  Timeline >>
  I0218 19:24:11.838592 24 suites.go:34] Running AfterSuite actions on node 1
  I0218 19:24:11.838627 24 util.go:612] Skipping dumping logs from cluster
  << Timeline
------------------------------
[ReportAfterSuite] PASSED [0.063 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
------------------------------
[ReportAfterSuite] PASSED [0.067 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:615
------------------------------

Ran 411 of 6622 Specs in 3662.636 seconds
SUCCESS! -- 411 Passed | 0 Failed | 2 Flaked | 0 Pending | 6211 Skipped


Ginkgo ran 1 suite in 1h1m3.550550888s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--flakeAttempts is deprecated, use --flake-attempts instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.21.0[0m

